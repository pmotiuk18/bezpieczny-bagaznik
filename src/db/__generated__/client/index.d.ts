
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model Session
 * 
 */
export type Session = $Result.DefaultSelection<Prisma.$SessionPayload>
/**
 * Model Account
 * 
 */
export type Account = $Result.DefaultSelection<Prisma.$AccountPayload>
/**
 * Model Verification
 * 
 */
export type Verification = $Result.DefaultSelection<Prisma.$VerificationPayload>
/**
 * Model Member
 * 
 */
export type Member = $Result.DefaultSelection<Prisma.$MemberPayload>
/**
 * Model Invitation
 * 
 */
export type Invitation = $Result.DefaultSelection<Prisma.$InvitationPayload>
/**
 * Model Organization
 * 
 */
export type Organization = $Result.DefaultSelection<Prisma.$OrganizationPayload>
/**
 * Model OpeningTimes
 * 
 */
export type OpeningTimes = $Result.DefaultSelection<Prisma.$OpeningTimesPayload>
/**
 * Model ClosingTimes
 * 
 */
export type ClosingTimes = $Result.DefaultSelection<Prisma.$ClosingTimesPayload>
/**
 * Model OrganizationConfiguration
 * 
 */
export type OrganizationConfiguration = $Result.DefaultSelection<Prisma.$OrganizationConfigurationPayload>
/**
 * Model Address
 * 
 */
export type Address = $Result.DefaultSelection<Prisma.$AddressPayload>
/**
 * Model LegalEntity
 * 
 */
export type LegalEntity = $Result.DefaultSelection<Prisma.$LegalEntityPayload>
/**
 * Model File
 * 
 */
export type File = $Result.DefaultSelection<Prisma.$FilePayload>
/**
 * Model Manufacturer
 * 
 */
export type Manufacturer = $Result.DefaultSelection<Prisma.$ManufacturerPayload>
/**
 * Model ManufacturerTranslation
 * 
 */
export type ManufacturerTranslation = $Result.DefaultSelection<Prisma.$ManufacturerTranslationPayload>
/**
 * Model ProductCategory
 * 
 */
export type ProductCategory = $Result.DefaultSelection<Prisma.$ProductCategoryPayload>
/**
 * Model ProductCategoryTranslation
 * 
 */
export type ProductCategoryTranslation = $Result.DefaultSelection<Prisma.$ProductCategoryTranslationPayload>
/**
 * Model Product
 * 
 */
export type Product = $Result.DefaultSelection<Prisma.$ProductPayload>
/**
 * Model ProductSnapshot
 * 
 */
export type ProductSnapshot = $Result.DefaultSelection<Prisma.$ProductSnapshotPayload>
/**
 * Model ProductTranslation
 * 
 */
export type ProductTranslation = $Result.DefaultSelection<Prisma.$ProductTranslationPayload>
/**
 * Model ModifierGroup
 * 
 */
export type ModifierGroup = $Result.DefaultSelection<Prisma.$ModifierGroupPayload>
/**
 * Model ModifierGroupTranslation
 * 
 */
export type ModifierGroupTranslation = $Result.DefaultSelection<Prisma.$ModifierGroupTranslationPayload>
/**
 * Model Modifier
 * 
 */
export type Modifier = $Result.DefaultSelection<Prisma.$ModifierPayload>
/**
 * Model Order
 * 
 */
export type Order = $Result.DefaultSelection<Prisma.$OrderPayload>
/**
 * Model OrderItem
 * 
 */
export type OrderItem = $Result.DefaultSelection<Prisma.$OrderItemPayload>
/**
 * Model OrderItemTranslation
 * 
 */
export type OrderItemTranslation = $Result.DefaultSelection<Prisma.$OrderItemTranslationPayload>
/**
 * Model Payment
 * 
 */
export type Payment = $Result.DefaultSelection<Prisma.$PaymentPayload>
/**
 * Model PaymentSession
 * 
 */
export type PaymentSession = $Result.DefaultSelection<Prisma.$PaymentSessionPayload>
/**
 * Model Campaign
 * 
 */
export type Campaign = $Result.DefaultSelection<Prisma.$CampaignPayload>
/**
 * Model ShippingMethod
 * 
 */
export type ShippingMethod = $Result.DefaultSelection<Prisma.$ShippingMethodPayload>
/**
 * Model ShippingZone
 * 
 */
export type ShippingZone = $Result.DefaultSelection<Prisma.$ShippingZonePayload>
/**
 * Model Reservation
 * 
 */
export type Reservation = $Result.DefaultSelection<Prisma.$ReservationPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const FileUploadStatus: {
  pending: 'pending',
  completed: 'completed',
  failed: 'failed'
};

export type FileUploadStatus = (typeof FileUploadStatus)[keyof typeof FileUploadStatus]


export const Locale: {
  af: 'af',
  sq: 'sq',
  ar_dz: 'ar_dz',
  ar_bh: 'ar_bh',
  ar_eg: 'ar_eg',
  ar_iq: 'ar_iq',
  ar_jo: 'ar_jo',
  ar_kw: 'ar_kw',
  ar_lb: 'ar_lb',
  ar_ly: 'ar_ly',
  ar_ma: 'ar_ma',
  ar_om: 'ar_om',
  ar_qa: 'ar_qa',
  ar_sa: 'ar_sa',
  ar_sy: 'ar_sy',
  ar_tn: 'ar_tn',
  ar_ae: 'ar_ae',
  ar_ye: 'ar_ye',
  eu: 'eu',
  be: 'be',
  bg: 'bg',
  ca: 'ca',
  zh_hk: 'zh_hk',
  zh_cn: 'zh_cn',
  zh_sg: 'zh_sg',
  zh_tw: 'zh_tw',
  hr: 'hr',
  cs: 'cs',
  da: 'da',
  nl_be: 'nl_be',
  nl: 'nl',
  en: 'en',
  en_au: 'en_au',
  en_bz: 'en_bz',
  en_ca: 'en_ca',
  en_ie: 'en_ie',
  en_jm: 'en_jm',
  en_nz: 'en_nz',
  en_za: 'en_za',
  en_tt: 'en_tt',
  en_gb: 'en_gb',
  en_us: 'en_us',
  et: 'et',
  fo: 'fo',
  fa: 'fa',
  fi: 'fi',
  fr_be: 'fr_be',
  fr_ca: 'fr_ca',
  fr_lu: 'fr_lu',
  fr: 'fr',
  fr_ch: 'fr_ch',
  gd: 'gd',
  de_at: 'de_at',
  de_li: 'de_li',
  de_lu: 'de_lu',
  de: 'de',
  de_ch: 'de_ch',
  el: 'el',
  he: 'he',
  hi: 'hi',
  hu: 'hu',
  is: 'is',
  id: 'id',
  ga: 'ga',
  it: 'it',
  it_ch: 'it_ch',
  ja: 'ja',
  ko: 'ko',
  ku: 'ku',
  lv: 'lv',
  lt: 'lt',
  mk: 'mk',
  ml: 'ml',
  ms: 'ms',
  mt: 'mt',
  no: 'no',
  nb: 'nb',
  nn: 'nn',
  pl: 'pl',
  pt_br: 'pt_br',
  pt: 'pt',
  pa: 'pa',
  rm: 'rm',
  ro: 'ro',
  ro_md: 'ro_md',
  ru: 'ru',
  ru_md: 'ru_md',
  sr: 'sr',
  sk: 'sk',
  sl: 'sl',
  sb: 'sb',
  es_ar: 'es_ar',
  es_bo: 'es_bo',
  es_cl: 'es_cl',
  es_co: 'es_co',
  es_cr: 'es_cr',
  es_do: 'es_do',
  es_ec: 'es_ec',
  es_sv: 'es_sv',
  es_gt: 'es_gt',
  es_hn: 'es_hn',
  es_mx: 'es_mx',
  es: 'es',
  sv: 'sv',
  sv_fi: 'sv_fi',
  th: 'th',
  tr: 'tr',
  uk: 'uk',
  ur: 'ur',
  vi: 'vi',
  cy: 'cy',
  ji: 'ji',
  zu: 'zu'
};

export type Locale = (typeof Locale)[keyof typeof Locale]


export const Currency: {
  USD: 'USD',
  EUR: 'EUR',
  GBP: 'GBP',
  JPY: 'JPY',
  AUD: 'AUD',
  CAD: 'CAD',
  CHF: 'CHF',
  CNY: 'CNY',
  SEK: 'SEK',
  NZD: 'NZD',
  MXN: 'MXN',
  SGD: 'SGD',
  HKD: 'HKD',
  NOK: 'NOK',
  KRW: 'KRW',
  TRY: 'TRY',
  RUB: 'RUB',
  INR: 'INR',
  BRL: 'BRL',
  ZAR: 'ZAR',
  DKK: 'DKK',
  PLN: 'PLN',
  THB: 'THB',
  IDR: 'IDR',
  HUF: 'HUF',
  CZK: 'CZK',
  ILS: 'ILS',
  PHP: 'PHP',
  AED: 'AED',
  COP: 'COP',
  SAR: 'SAR',
  MYR: 'MYR',
  RON: 'RON'
};

export type Currency = (typeof Currency)[keyof typeof Currency]


export const OrderFulfilmentMethod: {
  delivery: 'delivery',
  pickup: 'pickup'
};

export type OrderFulfilmentMethod = (typeof OrderFulfilmentMethod)[keyof typeof OrderFulfilmentMethod]


export const OrderStatus: {
  draft: 'draft',
  pending: 'pending',
  confirmed: 'confirmed',
  completed: 'completed',
  cancelled: 'cancelled'
};

export type OrderStatus = (typeof OrderStatus)[keyof typeof OrderStatus]


export const PaymentStatus: {
  pending: 'pending',
  succeeded: 'succeeded',
  refunded: 'refunded',
  failed: 'failed',
  canceled: 'canceled'
};

export type PaymentStatus = (typeof PaymentStatus)[keyof typeof PaymentStatus]


export const PaymentProvider: {
  stripe: 'stripe',
  revolut: 'revolut',
  payu: 'payu',
  not_applicable: 'not_applicable'
};

export type PaymentProvider = (typeof PaymentProvider)[keyof typeof PaymentProvider]


export const PaymentMethod: {
  card: 'card',
  blik: 'blik',
  paypal: 'paypal',
  bank_transfer: 'bank_transfer',
  cash_on_delivery: 'cash_on_delivery'
};

export type PaymentMethod = (typeof PaymentMethod)[keyof typeof PaymentMethod]


export const CampaignType: {
  discount: 'discount',
  promotion: 'promotion'
};

export type CampaignType = (typeof CampaignType)[keyof typeof CampaignType]

}

export type FileUploadStatus = $Enums.FileUploadStatus

export const FileUploadStatus: typeof $Enums.FileUploadStatus

export type Locale = $Enums.Locale

export const Locale: typeof $Enums.Locale

export type Currency = $Enums.Currency

export const Currency: typeof $Enums.Currency

export type OrderFulfilmentMethod = $Enums.OrderFulfilmentMethod

export const OrderFulfilmentMethod: typeof $Enums.OrderFulfilmentMethod

export type OrderStatus = $Enums.OrderStatus

export const OrderStatus: typeof $Enums.OrderStatus

export type PaymentStatus = $Enums.PaymentStatus

export const PaymentStatus: typeof $Enums.PaymentStatus

export type PaymentProvider = $Enums.PaymentProvider

export const PaymentProvider: typeof $Enums.PaymentProvider

export type PaymentMethod = $Enums.PaymentMethod

export const PaymentMethod: typeof $Enums.PaymentMethod

export type CampaignType = $Enums.CampaignType

export const CampaignType: typeof $Enums.CampaignType

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Users
 * const users = await prisma.user.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Users
   * const users = await prisma.user.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.session`: Exposes CRUD operations for the **Session** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sessions
    * const sessions = await prisma.session.findMany()
    * ```
    */
  get session(): Prisma.SessionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.account`: Exposes CRUD operations for the **Account** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Accounts
    * const accounts = await prisma.account.findMany()
    * ```
    */
  get account(): Prisma.AccountDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.verification`: Exposes CRUD operations for the **Verification** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Verifications
    * const verifications = await prisma.verification.findMany()
    * ```
    */
  get verification(): Prisma.VerificationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.member`: Exposes CRUD operations for the **Member** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Members
    * const members = await prisma.member.findMany()
    * ```
    */
  get member(): Prisma.MemberDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.invitation`: Exposes CRUD operations for the **Invitation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Invitations
    * const invitations = await prisma.invitation.findMany()
    * ```
    */
  get invitation(): Prisma.InvitationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.organization`: Exposes CRUD operations for the **Organization** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Organizations
    * const organizations = await prisma.organization.findMany()
    * ```
    */
  get organization(): Prisma.OrganizationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.openingTimes`: Exposes CRUD operations for the **OpeningTimes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OpeningTimes
    * const openingTimes = await prisma.openingTimes.findMany()
    * ```
    */
  get openingTimes(): Prisma.OpeningTimesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.closingTimes`: Exposes CRUD operations for the **ClosingTimes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ClosingTimes
    * const closingTimes = await prisma.closingTimes.findMany()
    * ```
    */
  get closingTimes(): Prisma.ClosingTimesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.organizationConfiguration`: Exposes CRUD operations for the **OrganizationConfiguration** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrganizationConfigurations
    * const organizationConfigurations = await prisma.organizationConfiguration.findMany()
    * ```
    */
  get organizationConfiguration(): Prisma.OrganizationConfigurationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.address`: Exposes CRUD operations for the **Address** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Addresses
    * const addresses = await prisma.address.findMany()
    * ```
    */
  get address(): Prisma.AddressDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.legalEntity`: Exposes CRUD operations for the **LegalEntity** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LegalEntities
    * const legalEntities = await prisma.legalEntity.findMany()
    * ```
    */
  get legalEntity(): Prisma.LegalEntityDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.file`: Exposes CRUD operations for the **File** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Files
    * const files = await prisma.file.findMany()
    * ```
    */
  get file(): Prisma.FileDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.manufacturer`: Exposes CRUD operations for the **Manufacturer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Manufacturers
    * const manufacturers = await prisma.manufacturer.findMany()
    * ```
    */
  get manufacturer(): Prisma.ManufacturerDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.manufacturerTranslation`: Exposes CRUD operations for the **ManufacturerTranslation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ManufacturerTranslations
    * const manufacturerTranslations = await prisma.manufacturerTranslation.findMany()
    * ```
    */
  get manufacturerTranslation(): Prisma.ManufacturerTranslationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productCategory`: Exposes CRUD operations for the **ProductCategory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductCategories
    * const productCategories = await prisma.productCategory.findMany()
    * ```
    */
  get productCategory(): Prisma.ProductCategoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productCategoryTranslation`: Exposes CRUD operations for the **ProductCategoryTranslation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductCategoryTranslations
    * const productCategoryTranslations = await prisma.productCategoryTranslation.findMany()
    * ```
    */
  get productCategoryTranslation(): Prisma.ProductCategoryTranslationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.product`: Exposes CRUD operations for the **Product** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products
    * const products = await prisma.product.findMany()
    * ```
    */
  get product(): Prisma.ProductDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productSnapshot`: Exposes CRUD operations for the **ProductSnapshot** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductSnapshots
    * const productSnapshots = await prisma.productSnapshot.findMany()
    * ```
    */
  get productSnapshot(): Prisma.ProductSnapshotDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productTranslation`: Exposes CRUD operations for the **ProductTranslation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductTranslations
    * const productTranslations = await prisma.productTranslation.findMany()
    * ```
    */
  get productTranslation(): Prisma.ProductTranslationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.modifierGroup`: Exposes CRUD operations for the **ModifierGroup** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ModifierGroups
    * const modifierGroups = await prisma.modifierGroup.findMany()
    * ```
    */
  get modifierGroup(): Prisma.ModifierGroupDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.modifierGroupTranslation`: Exposes CRUD operations for the **ModifierGroupTranslation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ModifierGroupTranslations
    * const modifierGroupTranslations = await prisma.modifierGroupTranslation.findMany()
    * ```
    */
  get modifierGroupTranslation(): Prisma.ModifierGroupTranslationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.modifier`: Exposes CRUD operations for the **Modifier** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Modifiers
    * const modifiers = await prisma.modifier.findMany()
    * ```
    */
  get modifier(): Prisma.ModifierDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.order`: Exposes CRUD operations for the **Order** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Orders
    * const orders = await prisma.order.findMany()
    * ```
    */
  get order(): Prisma.OrderDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orderItem`: Exposes CRUD operations for the **OrderItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrderItems
    * const orderItems = await prisma.orderItem.findMany()
    * ```
    */
  get orderItem(): Prisma.OrderItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orderItemTranslation`: Exposes CRUD operations for the **OrderItemTranslation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrderItemTranslations
    * const orderItemTranslations = await prisma.orderItemTranslation.findMany()
    * ```
    */
  get orderItemTranslation(): Prisma.OrderItemTranslationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.payment`: Exposes CRUD operations for the **Payment** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Payments
    * const payments = await prisma.payment.findMany()
    * ```
    */
  get payment(): Prisma.PaymentDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.paymentSession`: Exposes CRUD operations for the **PaymentSession** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PaymentSessions
    * const paymentSessions = await prisma.paymentSession.findMany()
    * ```
    */
  get paymentSession(): Prisma.PaymentSessionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.campaign`: Exposes CRUD operations for the **Campaign** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Campaigns
    * const campaigns = await prisma.campaign.findMany()
    * ```
    */
  get campaign(): Prisma.CampaignDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.shippingMethod`: Exposes CRUD operations for the **ShippingMethod** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ShippingMethods
    * const shippingMethods = await prisma.shippingMethod.findMany()
    * ```
    */
  get shippingMethod(): Prisma.ShippingMethodDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.shippingZone`: Exposes CRUD operations for the **ShippingZone** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ShippingZones
    * const shippingZones = await prisma.shippingZone.findMany()
    * ```
    */
  get shippingZone(): Prisma.ShippingZoneDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.reservation`: Exposes CRUD operations for the **Reservation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reservations
    * const reservations = await prisma.reservation.findMany()
    * ```
    */
  get reservation(): Prisma.ReservationDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.9.0
   * Query Engine version: 81e4af48011447c3cc503a190e86995b66d2a28e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    User: 'User',
    Session: 'Session',
    Account: 'Account',
    Verification: 'Verification',
    Member: 'Member',
    Invitation: 'Invitation',
    Organization: 'Organization',
    OpeningTimes: 'OpeningTimes',
    ClosingTimes: 'ClosingTimes',
    OrganizationConfiguration: 'OrganizationConfiguration',
    Address: 'Address',
    LegalEntity: 'LegalEntity',
    File: 'File',
    Manufacturer: 'Manufacturer',
    ManufacturerTranslation: 'ManufacturerTranslation',
    ProductCategory: 'ProductCategory',
    ProductCategoryTranslation: 'ProductCategoryTranslation',
    Product: 'Product',
    ProductSnapshot: 'ProductSnapshot',
    ProductTranslation: 'ProductTranslation',
    ModifierGroup: 'ModifierGroup',
    ModifierGroupTranslation: 'ModifierGroupTranslation',
    Modifier: 'Modifier',
    Order: 'Order',
    OrderItem: 'OrderItem',
    OrderItemTranslation: 'OrderItemTranslation',
    Payment: 'Payment',
    PaymentSession: 'PaymentSession',
    Campaign: 'Campaign',
    ShippingMethod: 'ShippingMethod',
    ShippingZone: 'ShippingZone',
    Reservation: 'Reservation'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "user" | "session" | "account" | "verification" | "member" | "invitation" | "organization" | "openingTimes" | "closingTimes" | "organizationConfiguration" | "address" | "legalEntity" | "file" | "manufacturer" | "manufacturerTranslation" | "productCategory" | "productCategoryTranslation" | "product" | "productSnapshot" | "productTranslation" | "modifierGroup" | "modifierGroupTranslation" | "modifier" | "order" | "orderItem" | "orderItemTranslation" | "payment" | "paymentSession" | "campaign" | "shippingMethod" | "shippingZone" | "reservation"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      Session: {
        payload: Prisma.$SessionPayload<ExtArgs>
        fields: Prisma.SessionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SessionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SessionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findFirst: {
            args: Prisma.SessionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SessionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findMany: {
            args: Prisma.SessionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          create: {
            args: Prisma.SessionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          createMany: {
            args: Prisma.SessionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SessionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          delete: {
            args: Prisma.SessionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          update: {
            args: Prisma.SessionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          deleteMany: {
            args: Prisma.SessionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SessionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SessionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          upsert: {
            args: Prisma.SessionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          aggregate: {
            args: Prisma.SessionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSession>
          }
          groupBy: {
            args: Prisma.SessionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SessionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SessionCountArgs<ExtArgs>
            result: $Utils.Optional<SessionCountAggregateOutputType> | number
          }
        }
      }
      Account: {
        payload: Prisma.$AccountPayload<ExtArgs>
        fields: Prisma.AccountFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AccountFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AccountFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findFirst: {
            args: Prisma.AccountFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AccountFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findMany: {
            args: Prisma.AccountFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          create: {
            args: Prisma.AccountCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          createMany: {
            args: Prisma.AccountCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AccountCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          delete: {
            args: Prisma.AccountDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          update: {
            args: Prisma.AccountUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          deleteMany: {
            args: Prisma.AccountDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AccountUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AccountUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          upsert: {
            args: Prisma.AccountUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          aggregate: {
            args: Prisma.AccountAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAccount>
          }
          groupBy: {
            args: Prisma.AccountGroupByArgs<ExtArgs>
            result: $Utils.Optional<AccountGroupByOutputType>[]
          }
          count: {
            args: Prisma.AccountCountArgs<ExtArgs>
            result: $Utils.Optional<AccountCountAggregateOutputType> | number
          }
        }
      }
      Verification: {
        payload: Prisma.$VerificationPayload<ExtArgs>
        fields: Prisma.VerificationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VerificationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VerificationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPayload>
          }
          findFirst: {
            args: Prisma.VerificationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VerificationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPayload>
          }
          findMany: {
            args: Prisma.VerificationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPayload>[]
          }
          create: {
            args: Prisma.VerificationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPayload>
          }
          createMany: {
            args: Prisma.VerificationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VerificationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPayload>[]
          }
          delete: {
            args: Prisma.VerificationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPayload>
          }
          update: {
            args: Prisma.VerificationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPayload>
          }
          deleteMany: {
            args: Prisma.VerificationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VerificationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VerificationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPayload>[]
          }
          upsert: {
            args: Prisma.VerificationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationPayload>
          }
          aggregate: {
            args: Prisma.VerificationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVerification>
          }
          groupBy: {
            args: Prisma.VerificationGroupByArgs<ExtArgs>
            result: $Utils.Optional<VerificationGroupByOutputType>[]
          }
          count: {
            args: Prisma.VerificationCountArgs<ExtArgs>
            result: $Utils.Optional<VerificationCountAggregateOutputType> | number
          }
        }
      }
      Member: {
        payload: Prisma.$MemberPayload<ExtArgs>
        fields: Prisma.MemberFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MemberFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MemberPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MemberFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MemberPayload>
          }
          findFirst: {
            args: Prisma.MemberFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MemberPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MemberFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MemberPayload>
          }
          findMany: {
            args: Prisma.MemberFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MemberPayload>[]
          }
          create: {
            args: Prisma.MemberCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MemberPayload>
          }
          createMany: {
            args: Prisma.MemberCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MemberCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MemberPayload>[]
          }
          delete: {
            args: Prisma.MemberDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MemberPayload>
          }
          update: {
            args: Prisma.MemberUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MemberPayload>
          }
          deleteMany: {
            args: Prisma.MemberDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MemberUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.MemberUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MemberPayload>[]
          }
          upsert: {
            args: Prisma.MemberUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MemberPayload>
          }
          aggregate: {
            args: Prisma.MemberAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMember>
          }
          groupBy: {
            args: Prisma.MemberGroupByArgs<ExtArgs>
            result: $Utils.Optional<MemberGroupByOutputType>[]
          }
          count: {
            args: Prisma.MemberCountArgs<ExtArgs>
            result: $Utils.Optional<MemberCountAggregateOutputType> | number
          }
        }
      }
      Invitation: {
        payload: Prisma.$InvitationPayload<ExtArgs>
        fields: Prisma.InvitationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.InvitationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.InvitationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>
          }
          findFirst: {
            args: Prisma.InvitationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.InvitationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>
          }
          findMany: {
            args: Prisma.InvitationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>[]
          }
          create: {
            args: Prisma.InvitationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>
          }
          createMany: {
            args: Prisma.InvitationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.InvitationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>[]
          }
          delete: {
            args: Prisma.InvitationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>
          }
          update: {
            args: Prisma.InvitationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>
          }
          deleteMany: {
            args: Prisma.InvitationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.InvitationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.InvitationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>[]
          }
          upsert: {
            args: Prisma.InvitationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$InvitationPayload>
          }
          aggregate: {
            args: Prisma.InvitationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInvitation>
          }
          groupBy: {
            args: Prisma.InvitationGroupByArgs<ExtArgs>
            result: $Utils.Optional<InvitationGroupByOutputType>[]
          }
          count: {
            args: Prisma.InvitationCountArgs<ExtArgs>
            result: $Utils.Optional<InvitationCountAggregateOutputType> | number
          }
        }
      }
      Organization: {
        payload: Prisma.$OrganizationPayload<ExtArgs>
        fields: Prisma.OrganizationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrganizationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrganizationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>
          }
          findFirst: {
            args: Prisma.OrganizationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrganizationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>
          }
          findMany: {
            args: Prisma.OrganizationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>[]
          }
          create: {
            args: Prisma.OrganizationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>
          }
          createMany: {
            args: Prisma.OrganizationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrganizationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>[]
          }
          delete: {
            args: Prisma.OrganizationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>
          }
          update: {
            args: Prisma.OrganizationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>
          }
          deleteMany: {
            args: Prisma.OrganizationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrganizationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrganizationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>[]
          }
          upsert: {
            args: Prisma.OrganizationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationPayload>
          }
          aggregate: {
            args: Prisma.OrganizationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrganization>
          }
          groupBy: {
            args: Prisma.OrganizationGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrganizationGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrganizationCountArgs<ExtArgs>
            result: $Utils.Optional<OrganizationCountAggregateOutputType> | number
          }
        }
      }
      OpeningTimes: {
        payload: Prisma.$OpeningTimesPayload<ExtArgs>
        fields: Prisma.OpeningTimesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OpeningTimesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpeningTimesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OpeningTimesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpeningTimesPayload>
          }
          findFirst: {
            args: Prisma.OpeningTimesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpeningTimesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OpeningTimesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpeningTimesPayload>
          }
          findMany: {
            args: Prisma.OpeningTimesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpeningTimesPayload>[]
          }
          create: {
            args: Prisma.OpeningTimesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpeningTimesPayload>
          }
          createMany: {
            args: Prisma.OpeningTimesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OpeningTimesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpeningTimesPayload>[]
          }
          delete: {
            args: Prisma.OpeningTimesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpeningTimesPayload>
          }
          update: {
            args: Prisma.OpeningTimesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpeningTimesPayload>
          }
          deleteMany: {
            args: Prisma.OpeningTimesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OpeningTimesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OpeningTimesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpeningTimesPayload>[]
          }
          upsert: {
            args: Prisma.OpeningTimesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OpeningTimesPayload>
          }
          aggregate: {
            args: Prisma.OpeningTimesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOpeningTimes>
          }
          groupBy: {
            args: Prisma.OpeningTimesGroupByArgs<ExtArgs>
            result: $Utils.Optional<OpeningTimesGroupByOutputType>[]
          }
          count: {
            args: Prisma.OpeningTimesCountArgs<ExtArgs>
            result: $Utils.Optional<OpeningTimesCountAggregateOutputType> | number
          }
        }
      }
      ClosingTimes: {
        payload: Prisma.$ClosingTimesPayload<ExtArgs>
        fields: Prisma.ClosingTimesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ClosingTimesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClosingTimesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ClosingTimesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClosingTimesPayload>
          }
          findFirst: {
            args: Prisma.ClosingTimesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClosingTimesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ClosingTimesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClosingTimesPayload>
          }
          findMany: {
            args: Prisma.ClosingTimesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClosingTimesPayload>[]
          }
          create: {
            args: Prisma.ClosingTimesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClosingTimesPayload>
          }
          createMany: {
            args: Prisma.ClosingTimesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ClosingTimesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClosingTimesPayload>[]
          }
          delete: {
            args: Prisma.ClosingTimesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClosingTimesPayload>
          }
          update: {
            args: Prisma.ClosingTimesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClosingTimesPayload>
          }
          deleteMany: {
            args: Prisma.ClosingTimesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ClosingTimesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ClosingTimesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClosingTimesPayload>[]
          }
          upsert: {
            args: Prisma.ClosingTimesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ClosingTimesPayload>
          }
          aggregate: {
            args: Prisma.ClosingTimesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateClosingTimes>
          }
          groupBy: {
            args: Prisma.ClosingTimesGroupByArgs<ExtArgs>
            result: $Utils.Optional<ClosingTimesGroupByOutputType>[]
          }
          count: {
            args: Prisma.ClosingTimesCountArgs<ExtArgs>
            result: $Utils.Optional<ClosingTimesCountAggregateOutputType> | number
          }
        }
      }
      OrganizationConfiguration: {
        payload: Prisma.$OrganizationConfigurationPayload<ExtArgs>
        fields: Prisma.OrganizationConfigurationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrganizationConfigurationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationConfigurationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrganizationConfigurationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationConfigurationPayload>
          }
          findFirst: {
            args: Prisma.OrganizationConfigurationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationConfigurationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrganizationConfigurationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationConfigurationPayload>
          }
          findMany: {
            args: Prisma.OrganizationConfigurationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationConfigurationPayload>[]
          }
          create: {
            args: Prisma.OrganizationConfigurationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationConfigurationPayload>
          }
          createMany: {
            args: Prisma.OrganizationConfigurationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrganizationConfigurationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationConfigurationPayload>[]
          }
          delete: {
            args: Prisma.OrganizationConfigurationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationConfigurationPayload>
          }
          update: {
            args: Prisma.OrganizationConfigurationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationConfigurationPayload>
          }
          deleteMany: {
            args: Prisma.OrganizationConfigurationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrganizationConfigurationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrganizationConfigurationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationConfigurationPayload>[]
          }
          upsert: {
            args: Prisma.OrganizationConfigurationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrganizationConfigurationPayload>
          }
          aggregate: {
            args: Prisma.OrganizationConfigurationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrganizationConfiguration>
          }
          groupBy: {
            args: Prisma.OrganizationConfigurationGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrganizationConfigurationGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrganizationConfigurationCountArgs<ExtArgs>
            result: $Utils.Optional<OrganizationConfigurationCountAggregateOutputType> | number
          }
        }
      }
      Address: {
        payload: Prisma.$AddressPayload<ExtArgs>
        fields: Prisma.AddressFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AddressFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AddressFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>
          }
          findFirst: {
            args: Prisma.AddressFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AddressFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>
          }
          findMany: {
            args: Prisma.AddressFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>[]
          }
          create: {
            args: Prisma.AddressCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>
          }
          createMany: {
            args: Prisma.AddressCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AddressCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>[]
          }
          delete: {
            args: Prisma.AddressDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>
          }
          update: {
            args: Prisma.AddressUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>
          }
          deleteMany: {
            args: Prisma.AddressDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AddressUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AddressUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>[]
          }
          upsert: {
            args: Prisma.AddressUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>
          }
          aggregate: {
            args: Prisma.AddressAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAddress>
          }
          groupBy: {
            args: Prisma.AddressGroupByArgs<ExtArgs>
            result: $Utils.Optional<AddressGroupByOutputType>[]
          }
          count: {
            args: Prisma.AddressCountArgs<ExtArgs>
            result: $Utils.Optional<AddressCountAggregateOutputType> | number
          }
        }
      }
      LegalEntity: {
        payload: Prisma.$LegalEntityPayload<ExtArgs>
        fields: Prisma.LegalEntityFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LegalEntityFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LegalEntityPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LegalEntityFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LegalEntityPayload>
          }
          findFirst: {
            args: Prisma.LegalEntityFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LegalEntityPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LegalEntityFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LegalEntityPayload>
          }
          findMany: {
            args: Prisma.LegalEntityFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LegalEntityPayload>[]
          }
          create: {
            args: Prisma.LegalEntityCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LegalEntityPayload>
          }
          createMany: {
            args: Prisma.LegalEntityCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LegalEntityCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LegalEntityPayload>[]
          }
          delete: {
            args: Prisma.LegalEntityDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LegalEntityPayload>
          }
          update: {
            args: Prisma.LegalEntityUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LegalEntityPayload>
          }
          deleteMany: {
            args: Prisma.LegalEntityDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LegalEntityUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LegalEntityUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LegalEntityPayload>[]
          }
          upsert: {
            args: Prisma.LegalEntityUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LegalEntityPayload>
          }
          aggregate: {
            args: Prisma.LegalEntityAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLegalEntity>
          }
          groupBy: {
            args: Prisma.LegalEntityGroupByArgs<ExtArgs>
            result: $Utils.Optional<LegalEntityGroupByOutputType>[]
          }
          count: {
            args: Prisma.LegalEntityCountArgs<ExtArgs>
            result: $Utils.Optional<LegalEntityCountAggregateOutputType> | number
          }
        }
      }
      File: {
        payload: Prisma.$FilePayload<ExtArgs>
        fields: Prisma.FileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload>
          }
          findFirst: {
            args: Prisma.FileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload>
          }
          findMany: {
            args: Prisma.FileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload>[]
          }
          create: {
            args: Prisma.FileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload>
          }
          createMany: {
            args: Prisma.FileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FileCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload>[]
          }
          delete: {
            args: Prisma.FileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload>
          }
          update: {
            args: Prisma.FileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload>
          }
          deleteMany: {
            args: Prisma.FileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FileUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload>[]
          }
          upsert: {
            args: Prisma.FileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FilePayload>
          }
          aggregate: {
            args: Prisma.FileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFile>
          }
          groupBy: {
            args: Prisma.FileGroupByArgs<ExtArgs>
            result: $Utils.Optional<FileGroupByOutputType>[]
          }
          count: {
            args: Prisma.FileCountArgs<ExtArgs>
            result: $Utils.Optional<FileCountAggregateOutputType> | number
          }
        }
      }
      Manufacturer: {
        payload: Prisma.$ManufacturerPayload<ExtArgs>
        fields: Prisma.ManufacturerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ManufacturerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManufacturerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ManufacturerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManufacturerPayload>
          }
          findFirst: {
            args: Prisma.ManufacturerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManufacturerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ManufacturerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManufacturerPayload>
          }
          findMany: {
            args: Prisma.ManufacturerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManufacturerPayload>[]
          }
          create: {
            args: Prisma.ManufacturerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManufacturerPayload>
          }
          createMany: {
            args: Prisma.ManufacturerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ManufacturerCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManufacturerPayload>[]
          }
          delete: {
            args: Prisma.ManufacturerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManufacturerPayload>
          }
          update: {
            args: Prisma.ManufacturerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManufacturerPayload>
          }
          deleteMany: {
            args: Prisma.ManufacturerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ManufacturerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ManufacturerUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManufacturerPayload>[]
          }
          upsert: {
            args: Prisma.ManufacturerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManufacturerPayload>
          }
          aggregate: {
            args: Prisma.ManufacturerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateManufacturer>
          }
          groupBy: {
            args: Prisma.ManufacturerGroupByArgs<ExtArgs>
            result: $Utils.Optional<ManufacturerGroupByOutputType>[]
          }
          count: {
            args: Prisma.ManufacturerCountArgs<ExtArgs>
            result: $Utils.Optional<ManufacturerCountAggregateOutputType> | number
          }
        }
      }
      ManufacturerTranslation: {
        payload: Prisma.$ManufacturerTranslationPayload<ExtArgs>
        fields: Prisma.ManufacturerTranslationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ManufacturerTranslationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManufacturerTranslationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ManufacturerTranslationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManufacturerTranslationPayload>
          }
          findFirst: {
            args: Prisma.ManufacturerTranslationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManufacturerTranslationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ManufacturerTranslationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManufacturerTranslationPayload>
          }
          findMany: {
            args: Prisma.ManufacturerTranslationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManufacturerTranslationPayload>[]
          }
          create: {
            args: Prisma.ManufacturerTranslationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManufacturerTranslationPayload>
          }
          createMany: {
            args: Prisma.ManufacturerTranslationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ManufacturerTranslationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManufacturerTranslationPayload>[]
          }
          delete: {
            args: Prisma.ManufacturerTranslationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManufacturerTranslationPayload>
          }
          update: {
            args: Prisma.ManufacturerTranslationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManufacturerTranslationPayload>
          }
          deleteMany: {
            args: Prisma.ManufacturerTranslationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ManufacturerTranslationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ManufacturerTranslationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManufacturerTranslationPayload>[]
          }
          upsert: {
            args: Prisma.ManufacturerTranslationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ManufacturerTranslationPayload>
          }
          aggregate: {
            args: Prisma.ManufacturerTranslationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateManufacturerTranslation>
          }
          groupBy: {
            args: Prisma.ManufacturerTranslationGroupByArgs<ExtArgs>
            result: $Utils.Optional<ManufacturerTranslationGroupByOutputType>[]
          }
          count: {
            args: Prisma.ManufacturerTranslationCountArgs<ExtArgs>
            result: $Utils.Optional<ManufacturerTranslationCountAggregateOutputType> | number
          }
        }
      }
      ProductCategory: {
        payload: Prisma.$ProductCategoryPayload<ExtArgs>
        fields: Prisma.ProductCategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductCategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductCategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>
          }
          findFirst: {
            args: Prisma.ProductCategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductCategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>
          }
          findMany: {
            args: Prisma.ProductCategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>[]
          }
          create: {
            args: Prisma.ProductCategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>
          }
          createMany: {
            args: Prisma.ProductCategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductCategoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>[]
          }
          delete: {
            args: Prisma.ProductCategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>
          }
          update: {
            args: Prisma.ProductCategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>
          }
          deleteMany: {
            args: Prisma.ProductCategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductCategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductCategoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>[]
          }
          upsert: {
            args: Prisma.ProductCategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>
          }
          aggregate: {
            args: Prisma.ProductCategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductCategory>
          }
          groupBy: {
            args: Prisma.ProductCategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductCategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductCategoryCountArgs<ExtArgs>
            result: $Utils.Optional<ProductCategoryCountAggregateOutputType> | number
          }
        }
      }
      ProductCategoryTranslation: {
        payload: Prisma.$ProductCategoryTranslationPayload<ExtArgs>
        fields: Prisma.ProductCategoryTranslationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductCategoryTranslationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryTranslationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductCategoryTranslationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryTranslationPayload>
          }
          findFirst: {
            args: Prisma.ProductCategoryTranslationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryTranslationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductCategoryTranslationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryTranslationPayload>
          }
          findMany: {
            args: Prisma.ProductCategoryTranslationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryTranslationPayload>[]
          }
          create: {
            args: Prisma.ProductCategoryTranslationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryTranslationPayload>
          }
          createMany: {
            args: Prisma.ProductCategoryTranslationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductCategoryTranslationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryTranslationPayload>[]
          }
          delete: {
            args: Prisma.ProductCategoryTranslationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryTranslationPayload>
          }
          update: {
            args: Prisma.ProductCategoryTranslationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryTranslationPayload>
          }
          deleteMany: {
            args: Prisma.ProductCategoryTranslationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductCategoryTranslationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductCategoryTranslationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryTranslationPayload>[]
          }
          upsert: {
            args: Prisma.ProductCategoryTranslationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryTranslationPayload>
          }
          aggregate: {
            args: Prisma.ProductCategoryTranslationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductCategoryTranslation>
          }
          groupBy: {
            args: Prisma.ProductCategoryTranslationGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductCategoryTranslationGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductCategoryTranslationCountArgs<ExtArgs>
            result: $Utils.Optional<ProductCategoryTranslationCountAggregateOutputType> | number
          }
        }
      }
      Product: {
        payload: Prisma.$ProductPayload<ExtArgs>
        fields: Prisma.ProductFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findFirst: {
            args: Prisma.ProductFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findMany: {
            args: Prisma.ProductFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          create: {
            args: Prisma.ProductCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          createMany: {
            args: Prisma.ProductCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          delete: {
            args: Prisma.ProductDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          update: {
            args: Prisma.ProductUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          deleteMany: {
            args: Prisma.ProductDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          upsert: {
            args: Prisma.ProductUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          aggregate: {
            args: Prisma.ProductAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct>
          }
          groupBy: {
            args: Prisma.ProductGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductCountArgs<ExtArgs>
            result: $Utils.Optional<ProductCountAggregateOutputType> | number
          }
        }
      }
      ProductSnapshot: {
        payload: Prisma.$ProductSnapshotPayload<ExtArgs>
        fields: Prisma.ProductSnapshotFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductSnapshotFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSnapshotPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductSnapshotFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSnapshotPayload>
          }
          findFirst: {
            args: Prisma.ProductSnapshotFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSnapshotPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductSnapshotFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSnapshotPayload>
          }
          findMany: {
            args: Prisma.ProductSnapshotFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSnapshotPayload>[]
          }
          create: {
            args: Prisma.ProductSnapshotCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSnapshotPayload>
          }
          createMany: {
            args: Prisma.ProductSnapshotCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductSnapshotCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSnapshotPayload>[]
          }
          delete: {
            args: Prisma.ProductSnapshotDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSnapshotPayload>
          }
          update: {
            args: Prisma.ProductSnapshotUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSnapshotPayload>
          }
          deleteMany: {
            args: Prisma.ProductSnapshotDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductSnapshotUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductSnapshotUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSnapshotPayload>[]
          }
          upsert: {
            args: Prisma.ProductSnapshotUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductSnapshotPayload>
          }
          aggregate: {
            args: Prisma.ProductSnapshotAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductSnapshot>
          }
          groupBy: {
            args: Prisma.ProductSnapshotGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductSnapshotGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductSnapshotCountArgs<ExtArgs>
            result: $Utils.Optional<ProductSnapshotCountAggregateOutputType> | number
          }
        }
      }
      ProductTranslation: {
        payload: Prisma.$ProductTranslationPayload<ExtArgs>
        fields: Prisma.ProductTranslationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductTranslationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductTranslationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>
          }
          findFirst: {
            args: Prisma.ProductTranslationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductTranslationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>
          }
          findMany: {
            args: Prisma.ProductTranslationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>[]
          }
          create: {
            args: Prisma.ProductTranslationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>
          }
          createMany: {
            args: Prisma.ProductTranslationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductTranslationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>[]
          }
          delete: {
            args: Prisma.ProductTranslationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>
          }
          update: {
            args: Prisma.ProductTranslationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>
          }
          deleteMany: {
            args: Prisma.ProductTranslationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductTranslationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductTranslationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>[]
          }
          upsert: {
            args: Prisma.ProductTranslationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductTranslationPayload>
          }
          aggregate: {
            args: Prisma.ProductTranslationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductTranslation>
          }
          groupBy: {
            args: Prisma.ProductTranslationGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductTranslationGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductTranslationCountArgs<ExtArgs>
            result: $Utils.Optional<ProductTranslationCountAggregateOutputType> | number
          }
        }
      }
      ModifierGroup: {
        payload: Prisma.$ModifierGroupPayload<ExtArgs>
        fields: Prisma.ModifierGroupFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ModifierGroupFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierGroupPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ModifierGroupFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierGroupPayload>
          }
          findFirst: {
            args: Prisma.ModifierGroupFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierGroupPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ModifierGroupFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierGroupPayload>
          }
          findMany: {
            args: Prisma.ModifierGroupFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierGroupPayload>[]
          }
          create: {
            args: Prisma.ModifierGroupCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierGroupPayload>
          }
          createMany: {
            args: Prisma.ModifierGroupCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ModifierGroupCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierGroupPayload>[]
          }
          delete: {
            args: Prisma.ModifierGroupDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierGroupPayload>
          }
          update: {
            args: Prisma.ModifierGroupUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierGroupPayload>
          }
          deleteMany: {
            args: Prisma.ModifierGroupDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ModifierGroupUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ModifierGroupUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierGroupPayload>[]
          }
          upsert: {
            args: Prisma.ModifierGroupUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierGroupPayload>
          }
          aggregate: {
            args: Prisma.ModifierGroupAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateModifierGroup>
          }
          groupBy: {
            args: Prisma.ModifierGroupGroupByArgs<ExtArgs>
            result: $Utils.Optional<ModifierGroupGroupByOutputType>[]
          }
          count: {
            args: Prisma.ModifierGroupCountArgs<ExtArgs>
            result: $Utils.Optional<ModifierGroupCountAggregateOutputType> | number
          }
        }
      }
      ModifierGroupTranslation: {
        payload: Prisma.$ModifierGroupTranslationPayload<ExtArgs>
        fields: Prisma.ModifierGroupTranslationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ModifierGroupTranslationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierGroupTranslationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ModifierGroupTranslationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierGroupTranslationPayload>
          }
          findFirst: {
            args: Prisma.ModifierGroupTranslationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierGroupTranslationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ModifierGroupTranslationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierGroupTranslationPayload>
          }
          findMany: {
            args: Prisma.ModifierGroupTranslationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierGroupTranslationPayload>[]
          }
          create: {
            args: Prisma.ModifierGroupTranslationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierGroupTranslationPayload>
          }
          createMany: {
            args: Prisma.ModifierGroupTranslationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ModifierGroupTranslationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierGroupTranslationPayload>[]
          }
          delete: {
            args: Prisma.ModifierGroupTranslationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierGroupTranslationPayload>
          }
          update: {
            args: Prisma.ModifierGroupTranslationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierGroupTranslationPayload>
          }
          deleteMany: {
            args: Prisma.ModifierGroupTranslationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ModifierGroupTranslationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ModifierGroupTranslationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierGroupTranslationPayload>[]
          }
          upsert: {
            args: Prisma.ModifierGroupTranslationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierGroupTranslationPayload>
          }
          aggregate: {
            args: Prisma.ModifierGroupTranslationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateModifierGroupTranslation>
          }
          groupBy: {
            args: Prisma.ModifierGroupTranslationGroupByArgs<ExtArgs>
            result: $Utils.Optional<ModifierGroupTranslationGroupByOutputType>[]
          }
          count: {
            args: Prisma.ModifierGroupTranslationCountArgs<ExtArgs>
            result: $Utils.Optional<ModifierGroupTranslationCountAggregateOutputType> | number
          }
        }
      }
      Modifier: {
        payload: Prisma.$ModifierPayload<ExtArgs>
        fields: Prisma.ModifierFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ModifierFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ModifierFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierPayload>
          }
          findFirst: {
            args: Prisma.ModifierFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ModifierFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierPayload>
          }
          findMany: {
            args: Prisma.ModifierFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierPayload>[]
          }
          create: {
            args: Prisma.ModifierCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierPayload>
          }
          createMany: {
            args: Prisma.ModifierCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ModifierCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierPayload>[]
          }
          delete: {
            args: Prisma.ModifierDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierPayload>
          }
          update: {
            args: Prisma.ModifierUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierPayload>
          }
          deleteMany: {
            args: Prisma.ModifierDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ModifierUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ModifierUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierPayload>[]
          }
          upsert: {
            args: Prisma.ModifierUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ModifierPayload>
          }
          aggregate: {
            args: Prisma.ModifierAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateModifier>
          }
          groupBy: {
            args: Prisma.ModifierGroupByArgs<ExtArgs>
            result: $Utils.Optional<ModifierGroupByOutputType>[]
          }
          count: {
            args: Prisma.ModifierCountArgs<ExtArgs>
            result: $Utils.Optional<ModifierCountAggregateOutputType> | number
          }
        }
      }
      Order: {
        payload: Prisma.$OrderPayload<ExtArgs>
        fields: Prisma.OrderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findFirst: {
            args: Prisma.OrderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findMany: {
            args: Prisma.OrderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          create: {
            args: Prisma.OrderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          createMany: {
            args: Prisma.OrderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          delete: {
            args: Prisma.OrderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          update: {
            args: Prisma.OrderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          deleteMany: {
            args: Prisma.OrderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrderUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          upsert: {
            args: Prisma.OrderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          aggregate: {
            args: Prisma.OrderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrder>
          }
          groupBy: {
            args: Prisma.OrderGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderCountArgs<ExtArgs>
            result: $Utils.Optional<OrderCountAggregateOutputType> | number
          }
        }
      }
      OrderItem: {
        payload: Prisma.$OrderItemPayload<ExtArgs>
        fields: Prisma.OrderItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          findFirst: {
            args: Prisma.OrderItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          findMany: {
            args: Prisma.OrderItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>[]
          }
          create: {
            args: Prisma.OrderItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          createMany: {
            args: Prisma.OrderItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>[]
          }
          delete: {
            args: Prisma.OrderItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          update: {
            args: Prisma.OrderItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          deleteMany: {
            args: Prisma.OrderItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrderItemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>[]
          }
          upsert: {
            args: Prisma.OrderItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          aggregate: {
            args: Prisma.OrderItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrderItem>
          }
          groupBy: {
            args: Prisma.OrderItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderItemCountArgs<ExtArgs>
            result: $Utils.Optional<OrderItemCountAggregateOutputType> | number
          }
        }
      }
      OrderItemTranslation: {
        payload: Prisma.$OrderItemTranslationPayload<ExtArgs>
        fields: Prisma.OrderItemTranslationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderItemTranslationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemTranslationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderItemTranslationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemTranslationPayload>
          }
          findFirst: {
            args: Prisma.OrderItemTranslationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemTranslationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderItemTranslationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemTranslationPayload>
          }
          findMany: {
            args: Prisma.OrderItemTranslationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemTranslationPayload>[]
          }
          create: {
            args: Prisma.OrderItemTranslationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemTranslationPayload>
          }
          createMany: {
            args: Prisma.OrderItemTranslationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderItemTranslationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemTranslationPayload>[]
          }
          delete: {
            args: Prisma.OrderItemTranslationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemTranslationPayload>
          }
          update: {
            args: Prisma.OrderItemTranslationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemTranslationPayload>
          }
          deleteMany: {
            args: Prisma.OrderItemTranslationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderItemTranslationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrderItemTranslationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemTranslationPayload>[]
          }
          upsert: {
            args: Prisma.OrderItemTranslationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemTranslationPayload>
          }
          aggregate: {
            args: Prisma.OrderItemTranslationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrderItemTranslation>
          }
          groupBy: {
            args: Prisma.OrderItemTranslationGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderItemTranslationGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderItemTranslationCountArgs<ExtArgs>
            result: $Utils.Optional<OrderItemTranslationCountAggregateOutputType> | number
          }
        }
      }
      Payment: {
        payload: Prisma.$PaymentPayload<ExtArgs>
        fields: Prisma.PaymentFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findFirst: {
            args: Prisma.PaymentFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          findMany: {
            args: Prisma.PaymentFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          create: {
            args: Prisma.PaymentCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          createMany: {
            args: Prisma.PaymentCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          delete: {
            args: Prisma.PaymentDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          update: {
            args: Prisma.PaymentUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          deleteMany: {
            args: Prisma.PaymentDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PaymentUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>[]
          }
          upsert: {
            args: Prisma.PaymentUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentPayload>
          }
          aggregate: {
            args: Prisma.PaymentAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePayment>
          }
          groupBy: {
            args: Prisma.PaymentGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentCountAggregateOutputType> | number
          }
        }
      }
      PaymentSession: {
        payload: Prisma.$PaymentSessionPayload<ExtArgs>
        fields: Prisma.PaymentSessionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentSessionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentSessionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentSessionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentSessionPayload>
          }
          findFirst: {
            args: Prisma.PaymentSessionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentSessionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentSessionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentSessionPayload>
          }
          findMany: {
            args: Prisma.PaymentSessionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentSessionPayload>[]
          }
          create: {
            args: Prisma.PaymentSessionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentSessionPayload>
          }
          createMany: {
            args: Prisma.PaymentSessionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PaymentSessionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentSessionPayload>[]
          }
          delete: {
            args: Prisma.PaymentSessionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentSessionPayload>
          }
          update: {
            args: Prisma.PaymentSessionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentSessionPayload>
          }
          deleteMany: {
            args: Prisma.PaymentSessionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentSessionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.PaymentSessionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentSessionPayload>[]
          }
          upsert: {
            args: Prisma.PaymentSessionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentSessionPayload>
          }
          aggregate: {
            args: Prisma.PaymentSessionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePaymentSession>
          }
          groupBy: {
            args: Prisma.PaymentSessionGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentSessionGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentSessionCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentSessionCountAggregateOutputType> | number
          }
        }
      }
      Campaign: {
        payload: Prisma.$CampaignPayload<ExtArgs>
        fields: Prisma.CampaignFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CampaignFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampaignPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CampaignFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampaignPayload>
          }
          findFirst: {
            args: Prisma.CampaignFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampaignPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CampaignFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampaignPayload>
          }
          findMany: {
            args: Prisma.CampaignFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampaignPayload>[]
          }
          create: {
            args: Prisma.CampaignCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampaignPayload>
          }
          createMany: {
            args: Prisma.CampaignCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CampaignCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampaignPayload>[]
          }
          delete: {
            args: Prisma.CampaignDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampaignPayload>
          }
          update: {
            args: Prisma.CampaignUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampaignPayload>
          }
          deleteMany: {
            args: Prisma.CampaignDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CampaignUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CampaignUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampaignPayload>[]
          }
          upsert: {
            args: Prisma.CampaignUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CampaignPayload>
          }
          aggregate: {
            args: Prisma.CampaignAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCampaign>
          }
          groupBy: {
            args: Prisma.CampaignGroupByArgs<ExtArgs>
            result: $Utils.Optional<CampaignGroupByOutputType>[]
          }
          count: {
            args: Prisma.CampaignCountArgs<ExtArgs>
            result: $Utils.Optional<CampaignCountAggregateOutputType> | number
          }
        }
      }
      ShippingMethod: {
        payload: Prisma.$ShippingMethodPayload<ExtArgs>
        fields: Prisma.ShippingMethodFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ShippingMethodFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingMethodPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ShippingMethodFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingMethodPayload>
          }
          findFirst: {
            args: Prisma.ShippingMethodFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingMethodPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ShippingMethodFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingMethodPayload>
          }
          findMany: {
            args: Prisma.ShippingMethodFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingMethodPayload>[]
          }
          create: {
            args: Prisma.ShippingMethodCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingMethodPayload>
          }
          createMany: {
            args: Prisma.ShippingMethodCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ShippingMethodCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingMethodPayload>[]
          }
          delete: {
            args: Prisma.ShippingMethodDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingMethodPayload>
          }
          update: {
            args: Prisma.ShippingMethodUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingMethodPayload>
          }
          deleteMany: {
            args: Prisma.ShippingMethodDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ShippingMethodUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ShippingMethodUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingMethodPayload>[]
          }
          upsert: {
            args: Prisma.ShippingMethodUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingMethodPayload>
          }
          aggregate: {
            args: Prisma.ShippingMethodAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateShippingMethod>
          }
          groupBy: {
            args: Prisma.ShippingMethodGroupByArgs<ExtArgs>
            result: $Utils.Optional<ShippingMethodGroupByOutputType>[]
          }
          count: {
            args: Prisma.ShippingMethodCountArgs<ExtArgs>
            result: $Utils.Optional<ShippingMethodCountAggregateOutputType> | number
          }
        }
      }
      ShippingZone: {
        payload: Prisma.$ShippingZonePayload<ExtArgs>
        fields: Prisma.ShippingZoneFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ShippingZoneFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingZonePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ShippingZoneFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingZonePayload>
          }
          findFirst: {
            args: Prisma.ShippingZoneFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingZonePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ShippingZoneFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingZonePayload>
          }
          findMany: {
            args: Prisma.ShippingZoneFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingZonePayload>[]
          }
          create: {
            args: Prisma.ShippingZoneCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingZonePayload>
          }
          createMany: {
            args: Prisma.ShippingZoneCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ShippingZoneCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingZonePayload>[]
          }
          delete: {
            args: Prisma.ShippingZoneDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingZonePayload>
          }
          update: {
            args: Prisma.ShippingZoneUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingZonePayload>
          }
          deleteMany: {
            args: Prisma.ShippingZoneDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ShippingZoneUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ShippingZoneUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingZonePayload>[]
          }
          upsert: {
            args: Prisma.ShippingZoneUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingZonePayload>
          }
          aggregate: {
            args: Prisma.ShippingZoneAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateShippingZone>
          }
          groupBy: {
            args: Prisma.ShippingZoneGroupByArgs<ExtArgs>
            result: $Utils.Optional<ShippingZoneGroupByOutputType>[]
          }
          count: {
            args: Prisma.ShippingZoneCountArgs<ExtArgs>
            result: $Utils.Optional<ShippingZoneCountAggregateOutputType> | number
          }
        }
      }
      Reservation: {
        payload: Prisma.$ReservationPayload<ExtArgs>
        fields: Prisma.ReservationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReservationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReservationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>
          }
          findFirst: {
            args: Prisma.ReservationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReservationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>
          }
          findMany: {
            args: Prisma.ReservationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>[]
          }
          create: {
            args: Prisma.ReservationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>
          }
          createMany: {
            args: Prisma.ReservationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ReservationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>[]
          }
          delete: {
            args: Prisma.ReservationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>
          }
          update: {
            args: Prisma.ReservationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>
          }
          deleteMany: {
            args: Prisma.ReservationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReservationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ReservationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>[]
          }
          upsert: {
            args: Prisma.ReservationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReservationPayload>
          }
          aggregate: {
            args: Prisma.ReservationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReservation>
          }
          groupBy: {
            args: Prisma.ReservationGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReservationGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReservationCountArgs<ExtArgs>
            result: $Utils.Optional<ReservationCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Instance of a Driver Adapter, e.g., like one provided by `@prisma/adapter-planetscale`
     */
    adapter?: runtime.SqlDriverAdapterFactory | null
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    user?: UserOmit
    session?: SessionOmit
    account?: AccountOmit
    verification?: VerificationOmit
    member?: MemberOmit
    invitation?: InvitationOmit
    organization?: OrganizationOmit
    openingTimes?: OpeningTimesOmit
    closingTimes?: ClosingTimesOmit
    organizationConfiguration?: OrganizationConfigurationOmit
    address?: AddressOmit
    legalEntity?: LegalEntityOmit
    file?: FileOmit
    manufacturer?: ManufacturerOmit
    manufacturerTranslation?: ManufacturerTranslationOmit
    productCategory?: ProductCategoryOmit
    productCategoryTranslation?: ProductCategoryTranslationOmit
    product?: ProductOmit
    productSnapshot?: ProductSnapshotOmit
    productTranslation?: ProductTranslationOmit
    modifierGroup?: ModifierGroupOmit
    modifierGroupTranslation?: ModifierGroupTranslationOmit
    modifier?: ModifierOmit
    order?: OrderOmit
    orderItem?: OrderItemOmit
    orderItemTranslation?: OrderItemTranslationOmit
    payment?: PaymentOmit
    paymentSession?: PaymentSessionOmit
    campaign?: CampaignOmit
    shippingMethod?: ShippingMethodOmit
    shippingZone?: ShippingZoneOmit
    reservation?: ReservationOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    sessions: number
    accounts: number
    members: number
    invitations: number
    shippingAddresses: number
    orders: number
    reservations: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sessions?: boolean | UserCountOutputTypeCountSessionsArgs
    accounts?: boolean | UserCountOutputTypeCountAccountsArgs
    members?: boolean | UserCountOutputTypeCountMembersArgs
    invitations?: boolean | UserCountOutputTypeCountInvitationsArgs
    shippingAddresses?: boolean | UserCountOutputTypeCountShippingAddressesArgs
    orders?: boolean | UserCountOutputTypeCountOrdersArgs
    reservations?: boolean | UserCountOutputTypeCountReservationsArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountAccountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountMembersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MemberWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountInvitationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvitationWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountShippingAddressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AddressWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountReservationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservationWhereInput
  }


  /**
   * Count Type OrganizationCountOutputType
   */

  export type OrganizationCountOutputType = {
    files: number
    members: number
    invitations: number
    orders: number
    campaigns: number
    shippingMethods: number
    manufacturers: number
    productCategories: number
    products: number
    reservations: number
  }

  export type OrganizationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    files?: boolean | OrganizationCountOutputTypeCountFilesArgs
    members?: boolean | OrganizationCountOutputTypeCountMembersArgs
    invitations?: boolean | OrganizationCountOutputTypeCountInvitationsArgs
    orders?: boolean | OrganizationCountOutputTypeCountOrdersArgs
    campaigns?: boolean | OrganizationCountOutputTypeCountCampaignsArgs
    shippingMethods?: boolean | OrganizationCountOutputTypeCountShippingMethodsArgs
    manufacturers?: boolean | OrganizationCountOutputTypeCountManufacturersArgs
    productCategories?: boolean | OrganizationCountOutputTypeCountProductCategoriesArgs
    products?: boolean | OrganizationCountOutputTypeCountProductsArgs
    reservations?: boolean | OrganizationCountOutputTypeCountReservationsArgs
  }

  // Custom InputTypes
  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationCountOutputType
     */
    select?: OrganizationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountFilesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FileWhereInput
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountMembersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MemberWhereInput
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountInvitationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvitationWhereInput
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountCampaignsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CampaignWhereInput
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountShippingMethodsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShippingMethodWhereInput
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountManufacturersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ManufacturerWhereInput
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountProductCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductCategoryWhereInput
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * OrganizationCountOutputType without action
   */
  export type OrganizationCountOutputTypeCountReservationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservationWhereInput
  }


  /**
   * Count Type OrganizationConfigurationCountOutputType
   */

  export type OrganizationConfigurationCountOutputType = {
    organizations: number
  }

  export type OrganizationConfigurationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organizations?: boolean | OrganizationConfigurationCountOutputTypeCountOrganizationsArgs
  }

  // Custom InputTypes
  /**
   * OrganizationConfigurationCountOutputType without action
   */
  export type OrganizationConfigurationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationConfigurationCountOutputType
     */
    select?: OrganizationConfigurationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrganizationConfigurationCountOutputType without action
   */
  export type OrganizationConfigurationCountOutputTypeCountOrganizationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrganizationWhereInput
  }


  /**
   * Count Type AddressCountOutputType
   */

  export type AddressCountOutputType = {
    LegalEntity: number
    organizations: number
    users: number
    orders: number
  }

  export type AddressCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    LegalEntity?: boolean | AddressCountOutputTypeCountLegalEntityArgs
    organizations?: boolean | AddressCountOutputTypeCountOrganizationsArgs
    users?: boolean | AddressCountOutputTypeCountUsersArgs
    orders?: boolean | AddressCountOutputTypeCountOrdersArgs
  }

  // Custom InputTypes
  /**
   * AddressCountOutputType without action
   */
  export type AddressCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AddressCountOutputType
     */
    select?: AddressCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AddressCountOutputType without action
   */
  export type AddressCountOutputTypeCountLegalEntityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LegalEntityWhereInput
  }

  /**
   * AddressCountOutputType without action
   */
  export type AddressCountOutputTypeCountOrganizationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrganizationWhereInput
  }

  /**
   * AddressCountOutputType without action
   */
  export type AddressCountOutputTypeCountUsersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
  }

  /**
   * AddressCountOutputType without action
   */
  export type AddressCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }


  /**
   * Count Type LegalEntityCountOutputType
   */

  export type LegalEntityCountOutputType = {
    organizations: number
  }

  export type LegalEntityCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organizations?: boolean | LegalEntityCountOutputTypeCountOrganizationsArgs
  }

  // Custom InputTypes
  /**
   * LegalEntityCountOutputType without action
   */
  export type LegalEntityCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalEntityCountOutputType
     */
    select?: LegalEntityCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * LegalEntityCountOutputType without action
   */
  export type LegalEntityCountOutputTypeCountOrganizationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrganizationWhereInput
  }


  /**
   * Count Type FileCountOutputType
   */

  export type FileCountOutputType = {
    productImages: number
    modifierImages: number
    orderItemImages: number
  }

  export type FileCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productImages?: boolean | FileCountOutputTypeCountProductImagesArgs
    modifierImages?: boolean | FileCountOutputTypeCountModifierImagesArgs
    orderItemImages?: boolean | FileCountOutputTypeCountOrderItemImagesArgs
  }

  // Custom InputTypes
  /**
   * FileCountOutputType without action
   */
  export type FileCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FileCountOutputType
     */
    select?: FileCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * FileCountOutputType without action
   */
  export type FileCountOutputTypeCountProductImagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * FileCountOutputType without action
   */
  export type FileCountOutputTypeCountModifierImagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ModifierWhereInput
  }

  /**
   * FileCountOutputType without action
   */
  export type FileCountOutputTypeCountOrderItemImagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemWhereInput
  }


  /**
   * Count Type ManufacturerCountOutputType
   */

  export type ManufacturerCountOutputType = {
    products: number
    translations: number
  }

  export type ManufacturerCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | ManufacturerCountOutputTypeCountProductsArgs
    translations?: boolean | ManufacturerCountOutputTypeCountTranslationsArgs
  }

  // Custom InputTypes
  /**
   * ManufacturerCountOutputType without action
   */
  export type ManufacturerCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManufacturerCountOutputType
     */
    select?: ManufacturerCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ManufacturerCountOutputType without action
   */
  export type ManufacturerCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * ManufacturerCountOutputType without action
   */
  export type ManufacturerCountOutputTypeCountTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ManufacturerTranslationWhereInput
  }


  /**
   * Count Type ProductCategoryCountOutputType
   */

  export type ProductCategoryCountOutputType = {
    translations: number
    products: number
  }

  export type ProductCategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    translations?: boolean | ProductCategoryCountOutputTypeCountTranslationsArgs
    products?: boolean | ProductCategoryCountOutputTypeCountProductsArgs
  }

  // Custom InputTypes
  /**
   * ProductCategoryCountOutputType without action
   */
  export type ProductCategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategoryCountOutputType
     */
    select?: ProductCategoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductCategoryCountOutputType without action
   */
  export type ProductCategoryCountOutputTypeCountTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductCategoryTranslationWhereInput
  }

  /**
   * ProductCategoryCountOutputType without action
   */
  export type ProductCategoryCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }


  /**
   * Count Type ProductCountOutputType
   */

  export type ProductCountOutputType = {
    images: number
    categories: number
    modifierGroups: number
    translations: number
    snapshots: number
  }

  export type ProductCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    images?: boolean | ProductCountOutputTypeCountImagesArgs
    categories?: boolean | ProductCountOutputTypeCountCategoriesArgs
    modifierGroups?: boolean | ProductCountOutputTypeCountModifierGroupsArgs
    translations?: boolean | ProductCountOutputTypeCountTranslationsArgs
    snapshots?: boolean | ProductCountOutputTypeCountSnapshotsArgs
  }

  // Custom InputTypes
  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCountOutputType
     */
    select?: ProductCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountImagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FileWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductCategoryWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountModifierGroupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ModifierGroupWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductTranslationWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountSnapshotsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductSnapshotWhereInput
  }


  /**
   * Count Type ProductSnapshotCountOutputType
   */

  export type ProductSnapshotCountOutputType = {
    orderItems: number
  }

  export type ProductSnapshotCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orderItems?: boolean | ProductSnapshotCountOutputTypeCountOrderItemsArgs
  }

  // Custom InputTypes
  /**
   * ProductSnapshotCountOutputType without action
   */
  export type ProductSnapshotCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSnapshotCountOutputType
     */
    select?: ProductSnapshotCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductSnapshotCountOutputType without action
   */
  export type ProductSnapshotCountOutputTypeCountOrderItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemWhereInput
  }


  /**
   * Count Type ModifierGroupCountOutputType
   */

  export type ModifierGroupCountOutputType = {
    modifiers: number
    products: number
    translations: number
  }

  export type ModifierGroupCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    modifiers?: boolean | ModifierGroupCountOutputTypeCountModifiersArgs
    products?: boolean | ModifierGroupCountOutputTypeCountProductsArgs
    translations?: boolean | ModifierGroupCountOutputTypeCountTranslationsArgs
  }

  // Custom InputTypes
  /**
   * ModifierGroupCountOutputType without action
   */
  export type ModifierGroupCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroupCountOutputType
     */
    select?: ModifierGroupCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ModifierGroupCountOutputType without action
   */
  export type ModifierGroupCountOutputTypeCountModifiersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ModifierWhereInput
  }

  /**
   * ModifierGroupCountOutputType without action
   */
  export type ModifierGroupCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * ModifierGroupCountOutputType without action
   */
  export type ModifierGroupCountOutputTypeCountTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ModifierGroupTranslationWhereInput
  }


  /**
   * Count Type ModifierCountOutputType
   */

  export type ModifierCountOutputType = {
    images: number
  }

  export type ModifierCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    images?: boolean | ModifierCountOutputTypeCountImagesArgs
  }

  // Custom InputTypes
  /**
   * ModifierCountOutputType without action
   */
  export type ModifierCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierCountOutputType
     */
    select?: ModifierCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ModifierCountOutputType without action
   */
  export type ModifierCountOutputTypeCountImagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FileWhereInput
  }


  /**
   * Count Type OrderCountOutputType
   */

  export type OrderCountOutputType = {
    items: number
  }

  export type OrderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | OrderCountOutputTypeCountItemsArgs
  }

  // Custom InputTypes
  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCountOutputType
     */
    select?: OrderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemWhereInput
  }


  /**
   * Count Type OrderItemCountOutputType
   */

  export type OrderItemCountOutputType = {
    translations: number
  }

  export type OrderItemCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    translations?: boolean | OrderItemCountOutputTypeCountTranslationsArgs
  }

  // Custom InputTypes
  /**
   * OrderItemCountOutputType without action
   */
  export type OrderItemCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemCountOutputType
     */
    select?: OrderItemCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrderItemCountOutputType without action
   */
  export type OrderItemCountOutputTypeCountTranslationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemTranslationWhereInput
  }


  /**
   * Count Type PaymentCountOutputType
   */

  export type PaymentCountOutputType = {
    sessions: number
  }

  export type PaymentCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sessions?: boolean | PaymentCountOutputTypeCountSessionsArgs
  }

  // Custom InputTypes
  /**
   * PaymentCountOutputType without action
   */
  export type PaymentCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentCountOutputType
     */
    select?: PaymentCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PaymentCountOutputType without action
   */
  export type PaymentCountOutputTypeCountSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentSessionWhereInput
  }


  /**
   * Count Type ShippingMethodCountOutputType
   */

  export type ShippingMethodCountOutputType = {
    shippingZones: number
    orders: number
  }

  export type ShippingMethodCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    shippingZones?: boolean | ShippingMethodCountOutputTypeCountShippingZonesArgs
    orders?: boolean | ShippingMethodCountOutputTypeCountOrdersArgs
  }

  // Custom InputTypes
  /**
   * ShippingMethodCountOutputType without action
   */
  export type ShippingMethodCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingMethodCountOutputType
     */
    select?: ShippingMethodCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ShippingMethodCountOutputType without action
   */
  export type ShippingMethodCountOutputTypeCountShippingZonesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShippingZoneWhereInput
  }

  /**
   * ShippingMethodCountOutputType without action
   */
  export type ShippingMethodCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }


  /**
   * Models
   */

  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    name: string | null
    firstname: string | null
    lastname: string | null
    email: string | null
    emailVerified: boolean | null
    image: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    name: string | null
    firstname: string | null
    lastname: string | null
    email: string | null
    emailVerified: boolean | null
    image: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    name: number
    firstname: number
    lastname: number
    email: number
    emailVerified: number
    image: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    name?: true
    firstname?: true
    lastname?: true
    email?: true
    emailVerified?: true
    image?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    name?: true
    firstname?: true
    lastname?: true
    email?: true
    emailVerified?: true
    image?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    name?: true
    firstname?: true
    lastname?: true
    email?: true
    emailVerified?: true
    image?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    name: string
    firstname: string
    lastname: string
    email: string
    emailVerified: boolean
    image: string | null
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    firstname?: boolean
    lastname?: boolean
    email?: boolean
    emailVerified?: boolean
    image?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    accounts?: boolean | User$accountsArgs<ExtArgs>
    members?: boolean | User$membersArgs<ExtArgs>
    invitations?: boolean | User$invitationsArgs<ExtArgs>
    shippingAddresses?: boolean | User$shippingAddressesArgs<ExtArgs>
    orders?: boolean | User$ordersArgs<ExtArgs>
    reservations?: boolean | User$reservationsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    firstname?: boolean
    lastname?: boolean
    email?: boolean
    emailVerified?: boolean
    image?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    firstname?: boolean
    lastname?: boolean
    email?: boolean
    emailVerified?: boolean
    image?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    name?: boolean
    firstname?: boolean
    lastname?: boolean
    email?: boolean
    emailVerified?: boolean
    image?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "firstname" | "lastname" | "email" | "emailVerified" | "image" | "createdAt" | "updatedAt", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sessions?: boolean | User$sessionsArgs<ExtArgs>
    accounts?: boolean | User$accountsArgs<ExtArgs>
    members?: boolean | User$membersArgs<ExtArgs>
    invitations?: boolean | User$invitationsArgs<ExtArgs>
    shippingAddresses?: boolean | User$shippingAddressesArgs<ExtArgs>
    orders?: boolean | User$ordersArgs<ExtArgs>
    reservations?: boolean | User$reservationsArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      sessions: Prisma.$SessionPayload<ExtArgs>[]
      accounts: Prisma.$AccountPayload<ExtArgs>[]
      members: Prisma.$MemberPayload<ExtArgs>[]
      invitations: Prisma.$InvitationPayload<ExtArgs>[]
      shippingAddresses: Prisma.$AddressPayload<ExtArgs>[]
      orders: Prisma.$OrderPayload<ExtArgs>[]
      reservations: Prisma.$ReservationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      firstname: string
      lastname: string
      email: string
      emailVerified: boolean
      image: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sessions<T extends User$sessionsArgs<ExtArgs> = {}>(args?: Subset<T, User$sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    accounts<T extends User$accountsArgs<ExtArgs> = {}>(args?: Subset<T, User$accountsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    members<T extends User$membersArgs<ExtArgs> = {}>(args?: Subset<T, User$membersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    invitations<T extends User$invitationsArgs<ExtArgs> = {}>(args?: Subset<T, User$invitationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    shippingAddresses<T extends User$shippingAddressesArgs<ExtArgs> = {}>(args?: Subset<T, User$shippingAddressesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    orders<T extends User$ordersArgs<ExtArgs> = {}>(args?: Subset<T, User$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reservations<T extends User$reservationsArgs<ExtArgs> = {}>(args?: Subset<T, User$reservationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly name: FieldRef<"User", 'String'>
    readonly firstname: FieldRef<"User", 'String'>
    readonly lastname: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly emailVerified: FieldRef<"User", 'Boolean'>
    readonly image: FieldRef<"User", 'String'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.sessions
   */
  export type User$sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    cursor?: SessionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * User.accounts
   */
  export type User$accountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    cursor?: AccountWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * User.members
   */
  export type User$membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
    where?: MemberWhereInput
    orderBy?: MemberOrderByWithRelationInput | MemberOrderByWithRelationInput[]
    cursor?: MemberWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MemberScalarFieldEnum | MemberScalarFieldEnum[]
  }

  /**
   * User.invitations
   */
  export type User$invitationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    where?: InvitationWhereInput
    orderBy?: InvitationOrderByWithRelationInput | InvitationOrderByWithRelationInput[]
    cursor?: InvitationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvitationScalarFieldEnum | InvitationScalarFieldEnum[]
  }

  /**
   * User.shippingAddresses
   */
  export type User$shippingAddressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    where?: AddressWhereInput
    orderBy?: AddressOrderByWithRelationInput | AddressOrderByWithRelationInput[]
    cursor?: AddressWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AddressScalarFieldEnum | AddressScalarFieldEnum[]
  }

  /**
   * User.orders
   */
  export type User$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * User.reservations
   */
  export type User$reservationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    where?: ReservationWhereInput
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    cursor?: ReservationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model Session
   */

  export type AggregateSession = {
    _count: SessionCountAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  export type SessionMinAggregateOutputType = {
    id: string | null
    expiresAt: Date | null
    token: string | null
    createdAt: Date | null
    updatedAt: Date | null
    ipAddress: string | null
    userAgent: string | null
    userId: string | null
    activeOrganizationId: string | null
  }

  export type SessionMaxAggregateOutputType = {
    id: string | null
    expiresAt: Date | null
    token: string | null
    createdAt: Date | null
    updatedAt: Date | null
    ipAddress: string | null
    userAgent: string | null
    userId: string | null
    activeOrganizationId: string | null
  }

  export type SessionCountAggregateOutputType = {
    id: number
    expiresAt: number
    token: number
    createdAt: number
    updatedAt: number
    ipAddress: number
    userAgent: number
    userId: number
    activeOrganizationId: number
    _all: number
  }


  export type SessionMinAggregateInputType = {
    id?: true
    expiresAt?: true
    token?: true
    createdAt?: true
    updatedAt?: true
    ipAddress?: true
    userAgent?: true
    userId?: true
    activeOrganizationId?: true
  }

  export type SessionMaxAggregateInputType = {
    id?: true
    expiresAt?: true
    token?: true
    createdAt?: true
    updatedAt?: true
    ipAddress?: true
    userAgent?: true
    userId?: true
    activeOrganizationId?: true
  }

  export type SessionCountAggregateInputType = {
    id?: true
    expiresAt?: true
    token?: true
    createdAt?: true
    updatedAt?: true
    ipAddress?: true
    userAgent?: true
    userId?: true
    activeOrganizationId?: true
    _all?: true
  }

  export type SessionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Session to aggregate.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sessions
    **/
    _count?: true | SessionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SessionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SessionMaxAggregateInputType
  }

  export type GetSessionAggregateType<T extends SessionAggregateArgs> = {
        [P in keyof T & keyof AggregateSession]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSession[P]>
      : GetScalarType<T[P], AggregateSession[P]>
  }




  export type SessionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithAggregationInput | SessionOrderByWithAggregationInput[]
    by: SessionScalarFieldEnum[] | SessionScalarFieldEnum
    having?: SessionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SessionCountAggregateInputType | true
    _min?: SessionMinAggregateInputType
    _max?: SessionMaxAggregateInputType
  }

  export type SessionGroupByOutputType = {
    id: string
    expiresAt: Date
    token: string
    createdAt: Date
    updatedAt: Date
    ipAddress: string | null
    userAgent: string | null
    userId: string
    activeOrganizationId: string | null
    _count: SessionCountAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  type GetSessionGroupByPayload<T extends SessionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SessionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SessionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SessionGroupByOutputType[P]>
            : GetScalarType<T[P], SessionGroupByOutputType[P]>
        }
      >
    >


  export type SessionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    expiresAt?: boolean
    token?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    userId?: boolean
    activeOrganizationId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    expiresAt?: boolean
    token?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    userId?: boolean
    activeOrganizationId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    expiresAt?: boolean
    token?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    userId?: boolean
    activeOrganizationId?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectScalar = {
    id?: boolean
    expiresAt?: boolean
    token?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    ipAddress?: boolean
    userAgent?: boolean
    userId?: boolean
    activeOrganizationId?: boolean
  }

  export type SessionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "expiresAt" | "token" | "createdAt" | "updatedAt" | "ipAddress" | "userAgent" | "userId" | "activeOrganizationId", ExtArgs["result"]["session"]>
  export type SessionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SessionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type SessionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $SessionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Session"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      expiresAt: Date
      token: string
      createdAt: Date
      updatedAt: Date
      ipAddress: string | null
      userAgent: string | null
      userId: string
      activeOrganizationId: string | null
    }, ExtArgs["result"]["session"]>
    composites: {}
  }

  type SessionGetPayload<S extends boolean | null | undefined | SessionDefaultArgs> = $Result.GetResult<Prisma.$SessionPayload, S>

  type SessionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SessionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SessionCountAggregateInputType | true
    }

  export interface SessionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Session'], meta: { name: 'Session' } }
    /**
     * Find zero or one Session that matches the filter.
     * @param {SessionFindUniqueArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SessionFindUniqueArgs>(args: SelectSubset<T, SessionFindUniqueArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Session that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SessionFindUniqueOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SessionFindUniqueOrThrowArgs>(args: SelectSubset<T, SessionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SessionFindFirstArgs>(args?: SelectSubset<T, SessionFindFirstArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SessionFindFirstOrThrowArgs>(args?: SelectSubset<T, SessionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sessions
     * const sessions = await prisma.session.findMany()
     * 
     * // Get first 10 Sessions
     * const sessions = await prisma.session.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sessionWithIdOnly = await prisma.session.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SessionFindManyArgs>(args?: SelectSubset<T, SessionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Session.
     * @param {SessionCreateArgs} args - Arguments to create a Session.
     * @example
     * // Create one Session
     * const Session = await prisma.session.create({
     *   data: {
     *     // ... data to create a Session
     *   }
     * })
     * 
     */
    create<T extends SessionCreateArgs>(args: SelectSubset<T, SessionCreateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sessions.
     * @param {SessionCreateManyArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SessionCreateManyArgs>(args?: SelectSubset<T, SessionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sessions and returns the data saved in the database.
     * @param {SessionCreateManyAndReturnArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sessions and only return the `id`
     * const sessionWithIdOnly = await prisma.session.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SessionCreateManyAndReturnArgs>(args?: SelectSubset<T, SessionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Session.
     * @param {SessionDeleteArgs} args - Arguments to delete one Session.
     * @example
     * // Delete one Session
     * const Session = await prisma.session.delete({
     *   where: {
     *     // ... filter to delete one Session
     *   }
     * })
     * 
     */
    delete<T extends SessionDeleteArgs>(args: SelectSubset<T, SessionDeleteArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Session.
     * @param {SessionUpdateArgs} args - Arguments to update one Session.
     * @example
     * // Update one Session
     * const session = await prisma.session.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SessionUpdateArgs>(args: SelectSubset<T, SessionUpdateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sessions.
     * @param {SessionDeleteManyArgs} args - Arguments to filter Sessions to delete.
     * @example
     * // Delete a few Sessions
     * const { count } = await prisma.session.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SessionDeleteManyArgs>(args?: SelectSubset<T, SessionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SessionUpdateManyArgs>(args: SelectSubset<T, SessionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions and returns the data updated in the database.
     * @param {SessionUpdateManyAndReturnArgs} args - Arguments to update many Sessions.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sessions and only return the `id`
     * const sessionWithIdOnly = await prisma.session.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SessionUpdateManyAndReturnArgs>(args: SelectSubset<T, SessionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Session.
     * @param {SessionUpsertArgs} args - Arguments to update or create a Session.
     * @example
     * // Update or create a Session
     * const session = await prisma.session.upsert({
     *   create: {
     *     // ... data to create a Session
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Session we want to update
     *   }
     * })
     */
    upsert<T extends SessionUpsertArgs>(args: SelectSubset<T, SessionUpsertArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionCountArgs} args - Arguments to filter Sessions to count.
     * @example
     * // Count the number of Sessions
     * const count = await prisma.session.count({
     *   where: {
     *     // ... the filter for the Sessions we want to count
     *   }
     * })
    **/
    count<T extends SessionCountArgs>(
      args?: Subset<T, SessionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SessionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SessionAggregateArgs>(args: Subset<T, SessionAggregateArgs>): Prisma.PrismaPromise<GetSessionAggregateType<T>>

    /**
     * Group by Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SessionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SessionGroupByArgs['orderBy'] }
        : { orderBy?: SessionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SessionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSessionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Session model
   */
  readonly fields: SessionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Session.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SessionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Session model
   */
  interface SessionFieldRefs {
    readonly id: FieldRef<"Session", 'String'>
    readonly expiresAt: FieldRef<"Session", 'DateTime'>
    readonly token: FieldRef<"Session", 'String'>
    readonly createdAt: FieldRef<"Session", 'DateTime'>
    readonly updatedAt: FieldRef<"Session", 'DateTime'>
    readonly ipAddress: FieldRef<"Session", 'String'>
    readonly userAgent: FieldRef<"Session", 'String'>
    readonly userId: FieldRef<"Session", 'String'>
    readonly activeOrganizationId: FieldRef<"Session", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Session findUnique
   */
  export type SessionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findUniqueOrThrow
   */
  export type SessionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findFirst
   */
  export type SessionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findFirstOrThrow
   */
  export type SessionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findMany
   */
  export type SessionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Sessions to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session create
   */
  export type SessionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to create a Session.
     */
    data: XOR<SessionCreateInput, SessionUncheckedCreateInput>
  }

  /**
   * Session createMany
   */
  export type SessionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Session createManyAndReturn
   */
  export type SessionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Session update
   */
  export type SessionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to update a Session.
     */
    data: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
    /**
     * Choose, which Session to update.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session updateMany
   */
  export type SessionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to update.
     */
    limit?: number
  }

  /**
   * Session updateManyAndReturn
   */
  export type SessionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Session upsert
   */
  export type SessionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The filter to search for the Session to update in case it exists.
     */
    where: SessionWhereUniqueInput
    /**
     * In case the Session found by the `where` argument doesn't exist, create a new Session with this data.
     */
    create: XOR<SessionCreateInput, SessionUncheckedCreateInput>
    /**
     * In case the Session was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
  }

  /**
   * Session delete
   */
  export type SessionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter which Session to delete.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session deleteMany
   */
  export type SessionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sessions to delete
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to delete.
     */
    limit?: number
  }

  /**
   * Session without action
   */
  export type SessionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
  }


  /**
   * Model Account
   */

  export type AggregateAccount = {
    _count: AccountCountAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  export type AccountMinAggregateOutputType = {
    id: string | null
    accountId: string | null
    providerId: string | null
    userId: string | null
    accessToken: string | null
    refreshToken: string | null
    idToken: string | null
    accessTokenExpiresAt: Date | null
    refreshTokenExpiresAt: Date | null
    scope: string | null
    password: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AccountMaxAggregateOutputType = {
    id: string | null
    accountId: string | null
    providerId: string | null
    userId: string | null
    accessToken: string | null
    refreshToken: string | null
    idToken: string | null
    accessTokenExpiresAt: Date | null
    refreshTokenExpiresAt: Date | null
    scope: string | null
    password: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AccountCountAggregateOutputType = {
    id: number
    accountId: number
    providerId: number
    userId: number
    accessToken: number
    refreshToken: number
    idToken: number
    accessTokenExpiresAt: number
    refreshTokenExpiresAt: number
    scope: number
    password: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AccountMinAggregateInputType = {
    id?: true
    accountId?: true
    providerId?: true
    userId?: true
    accessToken?: true
    refreshToken?: true
    idToken?: true
    accessTokenExpiresAt?: true
    refreshTokenExpiresAt?: true
    scope?: true
    password?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AccountMaxAggregateInputType = {
    id?: true
    accountId?: true
    providerId?: true
    userId?: true
    accessToken?: true
    refreshToken?: true
    idToken?: true
    accessTokenExpiresAt?: true
    refreshTokenExpiresAt?: true
    scope?: true
    password?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AccountCountAggregateInputType = {
    id?: true
    accountId?: true
    providerId?: true
    userId?: true
    accessToken?: true
    refreshToken?: true
    idToken?: true
    accessTokenExpiresAt?: true
    refreshTokenExpiresAt?: true
    scope?: true
    password?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AccountAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Account to aggregate.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Accounts
    **/
    _count?: true | AccountCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AccountMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AccountMaxAggregateInputType
  }

  export type GetAccountAggregateType<T extends AccountAggregateArgs> = {
        [P in keyof T & keyof AggregateAccount]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccount[P]>
      : GetScalarType<T[P], AggregateAccount[P]>
  }




  export type AccountGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithAggregationInput | AccountOrderByWithAggregationInput[]
    by: AccountScalarFieldEnum[] | AccountScalarFieldEnum
    having?: AccountScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AccountCountAggregateInputType | true
    _min?: AccountMinAggregateInputType
    _max?: AccountMaxAggregateInputType
  }

  export type AccountGroupByOutputType = {
    id: string
    accountId: string
    providerId: string
    userId: string
    accessToken: string | null
    refreshToken: string | null
    idToken: string | null
    accessTokenExpiresAt: Date | null
    refreshTokenExpiresAt: Date | null
    scope: string | null
    password: string | null
    createdAt: Date
    updatedAt: Date
    _count: AccountCountAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  type GetAccountGroupByPayload<T extends AccountGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AccountGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AccountGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AccountGroupByOutputType[P]>
            : GetScalarType<T[P], AccountGroupByOutputType[P]>
        }
      >
    >


  export type AccountSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    accountId?: boolean
    providerId?: boolean
    userId?: boolean
    accessToken?: boolean
    refreshToken?: boolean
    idToken?: boolean
    accessTokenExpiresAt?: boolean
    refreshTokenExpiresAt?: boolean
    scope?: boolean
    password?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    accountId?: boolean
    providerId?: boolean
    userId?: boolean
    accessToken?: boolean
    refreshToken?: boolean
    idToken?: boolean
    accessTokenExpiresAt?: boolean
    refreshTokenExpiresAt?: boolean
    scope?: boolean
    password?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    accountId?: boolean
    providerId?: boolean
    userId?: boolean
    accessToken?: boolean
    refreshToken?: boolean
    idToken?: boolean
    accessTokenExpiresAt?: boolean
    refreshTokenExpiresAt?: boolean
    scope?: boolean
    password?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectScalar = {
    id?: boolean
    accountId?: boolean
    providerId?: boolean
    userId?: boolean
    accessToken?: boolean
    refreshToken?: boolean
    idToken?: boolean
    accessTokenExpiresAt?: boolean
    refreshTokenExpiresAt?: boolean
    scope?: boolean
    password?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AccountOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "accountId" | "providerId" | "userId" | "accessToken" | "refreshToken" | "idToken" | "accessTokenExpiresAt" | "refreshTokenExpiresAt" | "scope" | "password" | "createdAt" | "updatedAt", ExtArgs["result"]["account"]>
  export type AccountInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AccountIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type AccountIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $AccountPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Account"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      accountId: string
      providerId: string
      userId: string
      accessToken: string | null
      refreshToken: string | null
      idToken: string | null
      accessTokenExpiresAt: Date | null
      refreshTokenExpiresAt: Date | null
      scope: string | null
      password: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["account"]>
    composites: {}
  }

  type AccountGetPayload<S extends boolean | null | undefined | AccountDefaultArgs> = $Result.GetResult<Prisma.$AccountPayload, S>

  type AccountCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AccountFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AccountCountAggregateInputType | true
    }

  export interface AccountDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Account'], meta: { name: 'Account' } }
    /**
     * Find zero or one Account that matches the filter.
     * @param {AccountFindUniqueArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AccountFindUniqueArgs>(args: SelectSubset<T, AccountFindUniqueArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Account that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AccountFindUniqueOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AccountFindUniqueOrThrowArgs>(args: SelectSubset<T, AccountFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Account that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AccountFindFirstArgs>(args?: SelectSubset<T, AccountFindFirstArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Account that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AccountFindFirstOrThrowArgs>(args?: SelectSubset<T, AccountFindFirstOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Accounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Accounts
     * const accounts = await prisma.account.findMany()
     * 
     * // Get first 10 Accounts
     * const accounts = await prisma.account.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const accountWithIdOnly = await prisma.account.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AccountFindManyArgs>(args?: SelectSubset<T, AccountFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Account.
     * @param {AccountCreateArgs} args - Arguments to create a Account.
     * @example
     * // Create one Account
     * const Account = await prisma.account.create({
     *   data: {
     *     // ... data to create a Account
     *   }
     * })
     * 
     */
    create<T extends AccountCreateArgs>(args: SelectSubset<T, AccountCreateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Accounts.
     * @param {AccountCreateManyArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AccountCreateManyArgs>(args?: SelectSubset<T, AccountCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Accounts and returns the data saved in the database.
     * @param {AccountCreateManyAndReturnArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Accounts and only return the `id`
     * const accountWithIdOnly = await prisma.account.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AccountCreateManyAndReturnArgs>(args?: SelectSubset<T, AccountCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Account.
     * @param {AccountDeleteArgs} args - Arguments to delete one Account.
     * @example
     * // Delete one Account
     * const Account = await prisma.account.delete({
     *   where: {
     *     // ... filter to delete one Account
     *   }
     * })
     * 
     */
    delete<T extends AccountDeleteArgs>(args: SelectSubset<T, AccountDeleteArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Account.
     * @param {AccountUpdateArgs} args - Arguments to update one Account.
     * @example
     * // Update one Account
     * const account = await prisma.account.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AccountUpdateArgs>(args: SelectSubset<T, AccountUpdateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Accounts.
     * @param {AccountDeleteManyArgs} args - Arguments to filter Accounts to delete.
     * @example
     * // Delete a few Accounts
     * const { count } = await prisma.account.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AccountDeleteManyArgs>(args?: SelectSubset<T, AccountDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Accounts
     * const account = await prisma.account.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AccountUpdateManyArgs>(args: SelectSubset<T, AccountUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts and returns the data updated in the database.
     * @param {AccountUpdateManyAndReturnArgs} args - Arguments to update many Accounts.
     * @example
     * // Update many Accounts
     * const account = await prisma.account.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Accounts and only return the `id`
     * const accountWithIdOnly = await prisma.account.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AccountUpdateManyAndReturnArgs>(args: SelectSubset<T, AccountUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Account.
     * @param {AccountUpsertArgs} args - Arguments to update or create a Account.
     * @example
     * // Update or create a Account
     * const account = await prisma.account.upsert({
     *   create: {
     *     // ... data to create a Account
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Account we want to update
     *   }
     * })
     */
    upsert<T extends AccountUpsertArgs>(args: SelectSubset<T, AccountUpsertArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountCountArgs} args - Arguments to filter Accounts to count.
     * @example
     * // Count the number of Accounts
     * const count = await prisma.account.count({
     *   where: {
     *     // ... the filter for the Accounts we want to count
     *   }
     * })
    **/
    count<T extends AccountCountArgs>(
      args?: Subset<T, AccountCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AccountCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AccountAggregateArgs>(args: Subset<T, AccountAggregateArgs>): Prisma.PrismaPromise<GetAccountAggregateType<T>>

    /**
     * Group by Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AccountGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AccountGroupByArgs['orderBy'] }
        : { orderBy?: AccountGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AccountGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccountGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Account model
   */
  readonly fields: AccountFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Account.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AccountClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Account model
   */
  interface AccountFieldRefs {
    readonly id: FieldRef<"Account", 'String'>
    readonly accountId: FieldRef<"Account", 'String'>
    readonly providerId: FieldRef<"Account", 'String'>
    readonly userId: FieldRef<"Account", 'String'>
    readonly accessToken: FieldRef<"Account", 'String'>
    readonly refreshToken: FieldRef<"Account", 'String'>
    readonly idToken: FieldRef<"Account", 'String'>
    readonly accessTokenExpiresAt: FieldRef<"Account", 'DateTime'>
    readonly refreshTokenExpiresAt: FieldRef<"Account", 'DateTime'>
    readonly scope: FieldRef<"Account", 'String'>
    readonly password: FieldRef<"Account", 'String'>
    readonly createdAt: FieldRef<"Account", 'DateTime'>
    readonly updatedAt: FieldRef<"Account", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Account findUnique
   */
  export type AccountFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findUniqueOrThrow
   */
  export type AccountFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findFirst
   */
  export type AccountFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findFirstOrThrow
   */
  export type AccountFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findMany
   */
  export type AccountFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Accounts to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account create
   */
  export type AccountCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The data needed to create a Account.
     */
    data: XOR<AccountCreateInput, AccountUncheckedCreateInput>
  }

  /**
   * Account createMany
   */
  export type AccountCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Account createManyAndReturn
   */
  export type AccountCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Account update
   */
  export type AccountUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The data needed to update a Account.
     */
    data: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
    /**
     * Choose, which Account to update.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account updateMany
   */
  export type AccountUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Accounts.
     */
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to update.
     */
    limit?: number
  }

  /**
   * Account updateManyAndReturn
   */
  export type AccountUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The data used to update Accounts.
     */
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Account upsert
   */
  export type AccountUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The filter to search for the Account to update in case it exists.
     */
    where: AccountWhereUniqueInput
    /**
     * In case the Account found by the `where` argument doesn't exist, create a new Account with this data.
     */
    create: XOR<AccountCreateInput, AccountUncheckedCreateInput>
    /**
     * In case the Account was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
  }

  /**
   * Account delete
   */
  export type AccountDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter which Account to delete.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account deleteMany
   */
  export type AccountDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Accounts to delete
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to delete.
     */
    limit?: number
  }

  /**
   * Account without action
   */
  export type AccountDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
  }


  /**
   * Model Verification
   */

  export type AggregateVerification = {
    _count: VerificationCountAggregateOutputType | null
    _min: VerificationMinAggregateOutputType | null
    _max: VerificationMaxAggregateOutputType | null
  }

  export type VerificationMinAggregateOutputType = {
    id: string | null
    identifier: string | null
    value: string | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type VerificationMaxAggregateOutputType = {
    id: string | null
    identifier: string | null
    value: string | null
    expiresAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type VerificationCountAggregateOutputType = {
    id: number
    identifier: number
    value: number
    expiresAt: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type VerificationMinAggregateInputType = {
    id?: true
    identifier?: true
    value?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type VerificationMaxAggregateInputType = {
    id?: true
    identifier?: true
    value?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
  }

  export type VerificationCountAggregateInputType = {
    id?: true
    identifier?: true
    value?: true
    expiresAt?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type VerificationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Verification to aggregate.
     */
    where?: VerificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Verifications to fetch.
     */
    orderBy?: VerificationOrderByWithRelationInput | VerificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VerificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Verifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Verifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Verifications
    **/
    _count?: true | VerificationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VerificationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VerificationMaxAggregateInputType
  }

  export type GetVerificationAggregateType<T extends VerificationAggregateArgs> = {
        [P in keyof T & keyof AggregateVerification]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVerification[P]>
      : GetScalarType<T[P], AggregateVerification[P]>
  }




  export type VerificationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VerificationWhereInput
    orderBy?: VerificationOrderByWithAggregationInput | VerificationOrderByWithAggregationInput[]
    by: VerificationScalarFieldEnum[] | VerificationScalarFieldEnum
    having?: VerificationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VerificationCountAggregateInputType | true
    _min?: VerificationMinAggregateInputType
    _max?: VerificationMaxAggregateInputType
  }

  export type VerificationGroupByOutputType = {
    id: string
    identifier: string
    value: string
    expiresAt: Date
    createdAt: Date | null
    updatedAt: Date | null
    _count: VerificationCountAggregateOutputType | null
    _min: VerificationMinAggregateOutputType | null
    _max: VerificationMaxAggregateOutputType | null
  }

  type GetVerificationGroupByPayload<T extends VerificationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VerificationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VerificationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VerificationGroupByOutputType[P]>
            : GetScalarType<T[P], VerificationGroupByOutputType[P]>
        }
      >
    >


  export type VerificationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    identifier?: boolean
    value?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["verification"]>

  export type VerificationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    identifier?: boolean
    value?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["verification"]>

  export type VerificationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    identifier?: boolean
    value?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["verification"]>

  export type VerificationSelectScalar = {
    id?: boolean
    identifier?: boolean
    value?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type VerificationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "identifier" | "value" | "expiresAt" | "createdAt" | "updatedAt", ExtArgs["result"]["verification"]>

  export type $VerificationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Verification"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      identifier: string
      value: string
      expiresAt: Date
      createdAt: Date | null
      updatedAt: Date | null
    }, ExtArgs["result"]["verification"]>
    composites: {}
  }

  type VerificationGetPayload<S extends boolean | null | undefined | VerificationDefaultArgs> = $Result.GetResult<Prisma.$VerificationPayload, S>

  type VerificationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VerificationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VerificationCountAggregateInputType | true
    }

  export interface VerificationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Verification'], meta: { name: 'Verification' } }
    /**
     * Find zero or one Verification that matches the filter.
     * @param {VerificationFindUniqueArgs} args - Arguments to find a Verification
     * @example
     * // Get one Verification
     * const verification = await prisma.verification.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VerificationFindUniqueArgs>(args: SelectSubset<T, VerificationFindUniqueArgs<ExtArgs>>): Prisma__VerificationClient<$Result.GetResult<Prisma.$VerificationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Verification that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VerificationFindUniqueOrThrowArgs} args - Arguments to find a Verification
     * @example
     * // Get one Verification
     * const verification = await prisma.verification.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VerificationFindUniqueOrThrowArgs>(args: SelectSubset<T, VerificationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VerificationClient<$Result.GetResult<Prisma.$VerificationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Verification that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationFindFirstArgs} args - Arguments to find a Verification
     * @example
     * // Get one Verification
     * const verification = await prisma.verification.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VerificationFindFirstArgs>(args?: SelectSubset<T, VerificationFindFirstArgs<ExtArgs>>): Prisma__VerificationClient<$Result.GetResult<Prisma.$VerificationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Verification that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationFindFirstOrThrowArgs} args - Arguments to find a Verification
     * @example
     * // Get one Verification
     * const verification = await prisma.verification.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VerificationFindFirstOrThrowArgs>(args?: SelectSubset<T, VerificationFindFirstOrThrowArgs<ExtArgs>>): Prisma__VerificationClient<$Result.GetResult<Prisma.$VerificationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Verifications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Verifications
     * const verifications = await prisma.verification.findMany()
     * 
     * // Get first 10 Verifications
     * const verifications = await prisma.verification.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const verificationWithIdOnly = await prisma.verification.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VerificationFindManyArgs>(args?: SelectSubset<T, VerificationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Verification.
     * @param {VerificationCreateArgs} args - Arguments to create a Verification.
     * @example
     * // Create one Verification
     * const Verification = await prisma.verification.create({
     *   data: {
     *     // ... data to create a Verification
     *   }
     * })
     * 
     */
    create<T extends VerificationCreateArgs>(args: SelectSubset<T, VerificationCreateArgs<ExtArgs>>): Prisma__VerificationClient<$Result.GetResult<Prisma.$VerificationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Verifications.
     * @param {VerificationCreateManyArgs} args - Arguments to create many Verifications.
     * @example
     * // Create many Verifications
     * const verification = await prisma.verification.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VerificationCreateManyArgs>(args?: SelectSubset<T, VerificationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Verifications and returns the data saved in the database.
     * @param {VerificationCreateManyAndReturnArgs} args - Arguments to create many Verifications.
     * @example
     * // Create many Verifications
     * const verification = await prisma.verification.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Verifications and only return the `id`
     * const verificationWithIdOnly = await prisma.verification.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VerificationCreateManyAndReturnArgs>(args?: SelectSubset<T, VerificationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Verification.
     * @param {VerificationDeleteArgs} args - Arguments to delete one Verification.
     * @example
     * // Delete one Verification
     * const Verification = await prisma.verification.delete({
     *   where: {
     *     // ... filter to delete one Verification
     *   }
     * })
     * 
     */
    delete<T extends VerificationDeleteArgs>(args: SelectSubset<T, VerificationDeleteArgs<ExtArgs>>): Prisma__VerificationClient<$Result.GetResult<Prisma.$VerificationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Verification.
     * @param {VerificationUpdateArgs} args - Arguments to update one Verification.
     * @example
     * // Update one Verification
     * const verification = await prisma.verification.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VerificationUpdateArgs>(args: SelectSubset<T, VerificationUpdateArgs<ExtArgs>>): Prisma__VerificationClient<$Result.GetResult<Prisma.$VerificationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Verifications.
     * @param {VerificationDeleteManyArgs} args - Arguments to filter Verifications to delete.
     * @example
     * // Delete a few Verifications
     * const { count } = await prisma.verification.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VerificationDeleteManyArgs>(args?: SelectSubset<T, VerificationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Verifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Verifications
     * const verification = await prisma.verification.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VerificationUpdateManyArgs>(args: SelectSubset<T, VerificationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Verifications and returns the data updated in the database.
     * @param {VerificationUpdateManyAndReturnArgs} args - Arguments to update many Verifications.
     * @example
     * // Update many Verifications
     * const verification = await prisma.verification.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Verifications and only return the `id`
     * const verificationWithIdOnly = await prisma.verification.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VerificationUpdateManyAndReturnArgs>(args: SelectSubset<T, VerificationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Verification.
     * @param {VerificationUpsertArgs} args - Arguments to update or create a Verification.
     * @example
     * // Update or create a Verification
     * const verification = await prisma.verification.upsert({
     *   create: {
     *     // ... data to create a Verification
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Verification we want to update
     *   }
     * })
     */
    upsert<T extends VerificationUpsertArgs>(args: SelectSubset<T, VerificationUpsertArgs<ExtArgs>>): Prisma__VerificationClient<$Result.GetResult<Prisma.$VerificationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Verifications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationCountArgs} args - Arguments to filter Verifications to count.
     * @example
     * // Count the number of Verifications
     * const count = await prisma.verification.count({
     *   where: {
     *     // ... the filter for the Verifications we want to count
     *   }
     * })
    **/
    count<T extends VerificationCountArgs>(
      args?: Subset<T, VerificationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VerificationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Verification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VerificationAggregateArgs>(args: Subset<T, VerificationAggregateArgs>): Prisma.PrismaPromise<GetVerificationAggregateType<T>>

    /**
     * Group by Verification.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VerificationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VerificationGroupByArgs['orderBy'] }
        : { orderBy?: VerificationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VerificationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVerificationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Verification model
   */
  readonly fields: VerificationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Verification.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VerificationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Verification model
   */
  interface VerificationFieldRefs {
    readonly id: FieldRef<"Verification", 'String'>
    readonly identifier: FieldRef<"Verification", 'String'>
    readonly value: FieldRef<"Verification", 'String'>
    readonly expiresAt: FieldRef<"Verification", 'DateTime'>
    readonly createdAt: FieldRef<"Verification", 'DateTime'>
    readonly updatedAt: FieldRef<"Verification", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Verification findUnique
   */
  export type VerificationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verification
     */
    select?: VerificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Verification
     */
    omit?: VerificationOmit<ExtArgs> | null
    /**
     * Filter, which Verification to fetch.
     */
    where: VerificationWhereUniqueInput
  }

  /**
   * Verification findUniqueOrThrow
   */
  export type VerificationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verification
     */
    select?: VerificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Verification
     */
    omit?: VerificationOmit<ExtArgs> | null
    /**
     * Filter, which Verification to fetch.
     */
    where: VerificationWhereUniqueInput
  }

  /**
   * Verification findFirst
   */
  export type VerificationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verification
     */
    select?: VerificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Verification
     */
    omit?: VerificationOmit<ExtArgs> | null
    /**
     * Filter, which Verification to fetch.
     */
    where?: VerificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Verifications to fetch.
     */
    orderBy?: VerificationOrderByWithRelationInput | VerificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Verifications.
     */
    cursor?: VerificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Verifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Verifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Verifications.
     */
    distinct?: VerificationScalarFieldEnum | VerificationScalarFieldEnum[]
  }

  /**
   * Verification findFirstOrThrow
   */
  export type VerificationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verification
     */
    select?: VerificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Verification
     */
    omit?: VerificationOmit<ExtArgs> | null
    /**
     * Filter, which Verification to fetch.
     */
    where?: VerificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Verifications to fetch.
     */
    orderBy?: VerificationOrderByWithRelationInput | VerificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Verifications.
     */
    cursor?: VerificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Verifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Verifications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Verifications.
     */
    distinct?: VerificationScalarFieldEnum | VerificationScalarFieldEnum[]
  }

  /**
   * Verification findMany
   */
  export type VerificationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verification
     */
    select?: VerificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Verification
     */
    omit?: VerificationOmit<ExtArgs> | null
    /**
     * Filter, which Verifications to fetch.
     */
    where?: VerificationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Verifications to fetch.
     */
    orderBy?: VerificationOrderByWithRelationInput | VerificationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Verifications.
     */
    cursor?: VerificationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Verifications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Verifications.
     */
    skip?: number
    distinct?: VerificationScalarFieldEnum | VerificationScalarFieldEnum[]
  }

  /**
   * Verification create
   */
  export type VerificationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verification
     */
    select?: VerificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Verification
     */
    omit?: VerificationOmit<ExtArgs> | null
    /**
     * The data needed to create a Verification.
     */
    data: XOR<VerificationCreateInput, VerificationUncheckedCreateInput>
  }

  /**
   * Verification createMany
   */
  export type VerificationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Verifications.
     */
    data: VerificationCreateManyInput | VerificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Verification createManyAndReturn
   */
  export type VerificationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verification
     */
    select?: VerificationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Verification
     */
    omit?: VerificationOmit<ExtArgs> | null
    /**
     * The data used to create many Verifications.
     */
    data: VerificationCreateManyInput | VerificationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Verification update
   */
  export type VerificationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verification
     */
    select?: VerificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Verification
     */
    omit?: VerificationOmit<ExtArgs> | null
    /**
     * The data needed to update a Verification.
     */
    data: XOR<VerificationUpdateInput, VerificationUncheckedUpdateInput>
    /**
     * Choose, which Verification to update.
     */
    where: VerificationWhereUniqueInput
  }

  /**
   * Verification updateMany
   */
  export type VerificationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Verifications.
     */
    data: XOR<VerificationUpdateManyMutationInput, VerificationUncheckedUpdateManyInput>
    /**
     * Filter which Verifications to update
     */
    where?: VerificationWhereInput
    /**
     * Limit how many Verifications to update.
     */
    limit?: number
  }

  /**
   * Verification updateManyAndReturn
   */
  export type VerificationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verification
     */
    select?: VerificationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Verification
     */
    omit?: VerificationOmit<ExtArgs> | null
    /**
     * The data used to update Verifications.
     */
    data: XOR<VerificationUpdateManyMutationInput, VerificationUncheckedUpdateManyInput>
    /**
     * Filter which Verifications to update
     */
    where?: VerificationWhereInput
    /**
     * Limit how many Verifications to update.
     */
    limit?: number
  }

  /**
   * Verification upsert
   */
  export type VerificationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verification
     */
    select?: VerificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Verification
     */
    omit?: VerificationOmit<ExtArgs> | null
    /**
     * The filter to search for the Verification to update in case it exists.
     */
    where: VerificationWhereUniqueInput
    /**
     * In case the Verification found by the `where` argument doesn't exist, create a new Verification with this data.
     */
    create: XOR<VerificationCreateInput, VerificationUncheckedCreateInput>
    /**
     * In case the Verification was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VerificationUpdateInput, VerificationUncheckedUpdateInput>
  }

  /**
   * Verification delete
   */
  export type VerificationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verification
     */
    select?: VerificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Verification
     */
    omit?: VerificationOmit<ExtArgs> | null
    /**
     * Filter which Verification to delete.
     */
    where: VerificationWhereUniqueInput
  }

  /**
   * Verification deleteMany
   */
  export type VerificationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Verifications to delete
     */
    where?: VerificationWhereInput
    /**
     * Limit how many Verifications to delete.
     */
    limit?: number
  }

  /**
   * Verification without action
   */
  export type VerificationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Verification
     */
    select?: VerificationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Verification
     */
    omit?: VerificationOmit<ExtArgs> | null
  }


  /**
   * Model Member
   */

  export type AggregateMember = {
    _count: MemberCountAggregateOutputType | null
    _min: MemberMinAggregateOutputType | null
    _max: MemberMaxAggregateOutputType | null
  }

  export type MemberMinAggregateOutputType = {
    id: string | null
    organizationId: string | null
    userId: string | null
    role: string | null
    createdAt: Date | null
  }

  export type MemberMaxAggregateOutputType = {
    id: string | null
    organizationId: string | null
    userId: string | null
    role: string | null
    createdAt: Date | null
  }

  export type MemberCountAggregateOutputType = {
    id: number
    organizationId: number
    userId: number
    role: number
    createdAt: number
    _all: number
  }


  export type MemberMinAggregateInputType = {
    id?: true
    organizationId?: true
    userId?: true
    role?: true
    createdAt?: true
  }

  export type MemberMaxAggregateInputType = {
    id?: true
    organizationId?: true
    userId?: true
    role?: true
    createdAt?: true
  }

  export type MemberCountAggregateInputType = {
    id?: true
    organizationId?: true
    userId?: true
    role?: true
    createdAt?: true
    _all?: true
  }

  export type MemberAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Member to aggregate.
     */
    where?: MemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Members to fetch.
     */
    orderBy?: MemberOrderByWithRelationInput | MemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Members
    **/
    _count?: true | MemberCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MemberMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MemberMaxAggregateInputType
  }

  export type GetMemberAggregateType<T extends MemberAggregateArgs> = {
        [P in keyof T & keyof AggregateMember]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMember[P]>
      : GetScalarType<T[P], AggregateMember[P]>
  }




  export type MemberGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MemberWhereInput
    orderBy?: MemberOrderByWithAggregationInput | MemberOrderByWithAggregationInput[]
    by: MemberScalarFieldEnum[] | MemberScalarFieldEnum
    having?: MemberScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MemberCountAggregateInputType | true
    _min?: MemberMinAggregateInputType
    _max?: MemberMaxAggregateInputType
  }

  export type MemberGroupByOutputType = {
    id: string
    organizationId: string
    userId: string
    role: string
    createdAt: Date
    _count: MemberCountAggregateOutputType | null
    _min: MemberMinAggregateOutputType | null
    _max: MemberMaxAggregateOutputType | null
  }

  type GetMemberGroupByPayload<T extends MemberGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MemberGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MemberGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MemberGroupByOutputType[P]>
            : GetScalarType<T[P], MemberGroupByOutputType[P]>
        }
      >
    >


  export type MemberSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    userId?: boolean
    role?: boolean
    createdAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["member"]>

  export type MemberSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    userId?: boolean
    role?: boolean
    createdAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["member"]>

  export type MemberSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    userId?: boolean
    role?: boolean
    createdAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["member"]>

  export type MemberSelectScalar = {
    id?: boolean
    organizationId?: boolean
    userId?: boolean
    role?: boolean
    createdAt?: boolean
  }

  export type MemberOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "organizationId" | "userId" | "role" | "createdAt", ExtArgs["result"]["member"]>
  export type MemberInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type MemberIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type MemberIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $MemberPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Member"
    objects: {
      organization: Prisma.$OrganizationPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      organizationId: string
      userId: string
      role: string
      createdAt: Date
    }, ExtArgs["result"]["member"]>
    composites: {}
  }

  type MemberGetPayload<S extends boolean | null | undefined | MemberDefaultArgs> = $Result.GetResult<Prisma.$MemberPayload, S>

  type MemberCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<MemberFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: MemberCountAggregateInputType | true
    }

  export interface MemberDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Member'], meta: { name: 'Member' } }
    /**
     * Find zero or one Member that matches the filter.
     * @param {MemberFindUniqueArgs} args - Arguments to find a Member
     * @example
     * // Get one Member
     * const member = await prisma.member.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MemberFindUniqueArgs>(args: SelectSubset<T, MemberFindUniqueArgs<ExtArgs>>): Prisma__MemberClient<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Member that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {MemberFindUniqueOrThrowArgs} args - Arguments to find a Member
     * @example
     * // Get one Member
     * const member = await prisma.member.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MemberFindUniqueOrThrowArgs>(args: SelectSubset<T, MemberFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MemberClient<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Member that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MemberFindFirstArgs} args - Arguments to find a Member
     * @example
     * // Get one Member
     * const member = await prisma.member.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MemberFindFirstArgs>(args?: SelectSubset<T, MemberFindFirstArgs<ExtArgs>>): Prisma__MemberClient<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Member that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MemberFindFirstOrThrowArgs} args - Arguments to find a Member
     * @example
     * // Get one Member
     * const member = await prisma.member.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MemberFindFirstOrThrowArgs>(args?: SelectSubset<T, MemberFindFirstOrThrowArgs<ExtArgs>>): Prisma__MemberClient<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Members that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MemberFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Members
     * const members = await prisma.member.findMany()
     * 
     * // Get first 10 Members
     * const members = await prisma.member.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const memberWithIdOnly = await prisma.member.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MemberFindManyArgs>(args?: SelectSubset<T, MemberFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Member.
     * @param {MemberCreateArgs} args - Arguments to create a Member.
     * @example
     * // Create one Member
     * const Member = await prisma.member.create({
     *   data: {
     *     // ... data to create a Member
     *   }
     * })
     * 
     */
    create<T extends MemberCreateArgs>(args: SelectSubset<T, MemberCreateArgs<ExtArgs>>): Prisma__MemberClient<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Members.
     * @param {MemberCreateManyArgs} args - Arguments to create many Members.
     * @example
     * // Create many Members
     * const member = await prisma.member.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MemberCreateManyArgs>(args?: SelectSubset<T, MemberCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Members and returns the data saved in the database.
     * @param {MemberCreateManyAndReturnArgs} args - Arguments to create many Members.
     * @example
     * // Create many Members
     * const member = await prisma.member.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Members and only return the `id`
     * const memberWithIdOnly = await prisma.member.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends MemberCreateManyAndReturnArgs>(args?: SelectSubset<T, MemberCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Member.
     * @param {MemberDeleteArgs} args - Arguments to delete one Member.
     * @example
     * // Delete one Member
     * const Member = await prisma.member.delete({
     *   where: {
     *     // ... filter to delete one Member
     *   }
     * })
     * 
     */
    delete<T extends MemberDeleteArgs>(args: SelectSubset<T, MemberDeleteArgs<ExtArgs>>): Prisma__MemberClient<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Member.
     * @param {MemberUpdateArgs} args - Arguments to update one Member.
     * @example
     * // Update one Member
     * const member = await prisma.member.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MemberUpdateArgs>(args: SelectSubset<T, MemberUpdateArgs<ExtArgs>>): Prisma__MemberClient<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Members.
     * @param {MemberDeleteManyArgs} args - Arguments to filter Members to delete.
     * @example
     * // Delete a few Members
     * const { count } = await prisma.member.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MemberDeleteManyArgs>(args?: SelectSubset<T, MemberDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MemberUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Members
     * const member = await prisma.member.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MemberUpdateManyArgs>(args: SelectSubset<T, MemberUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Members and returns the data updated in the database.
     * @param {MemberUpdateManyAndReturnArgs} args - Arguments to update many Members.
     * @example
     * // Update many Members
     * const member = await prisma.member.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Members and only return the `id`
     * const memberWithIdOnly = await prisma.member.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends MemberUpdateManyAndReturnArgs>(args: SelectSubset<T, MemberUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Member.
     * @param {MemberUpsertArgs} args - Arguments to update or create a Member.
     * @example
     * // Update or create a Member
     * const member = await prisma.member.upsert({
     *   create: {
     *     // ... data to create a Member
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Member we want to update
     *   }
     * })
     */
    upsert<T extends MemberUpsertArgs>(args: SelectSubset<T, MemberUpsertArgs<ExtArgs>>): Prisma__MemberClient<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Members.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MemberCountArgs} args - Arguments to filter Members to count.
     * @example
     * // Count the number of Members
     * const count = await prisma.member.count({
     *   where: {
     *     // ... the filter for the Members we want to count
     *   }
     * })
    **/
    count<T extends MemberCountArgs>(
      args?: Subset<T, MemberCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MemberCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Member.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MemberAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MemberAggregateArgs>(args: Subset<T, MemberAggregateArgs>): Prisma.PrismaPromise<GetMemberAggregateType<T>>

    /**
     * Group by Member.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MemberGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MemberGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MemberGroupByArgs['orderBy'] }
        : { orderBy?: MemberGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MemberGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMemberGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Member model
   */
  readonly fields: MemberFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Member.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MemberClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organization<T extends OrganizationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationDefaultArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Member model
   */
  interface MemberFieldRefs {
    readonly id: FieldRef<"Member", 'String'>
    readonly organizationId: FieldRef<"Member", 'String'>
    readonly userId: FieldRef<"Member", 'String'>
    readonly role: FieldRef<"Member", 'String'>
    readonly createdAt: FieldRef<"Member", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Member findUnique
   */
  export type MemberFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
    /**
     * Filter, which Member to fetch.
     */
    where: MemberWhereUniqueInput
  }

  /**
   * Member findUniqueOrThrow
   */
  export type MemberFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
    /**
     * Filter, which Member to fetch.
     */
    where: MemberWhereUniqueInput
  }

  /**
   * Member findFirst
   */
  export type MemberFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
    /**
     * Filter, which Member to fetch.
     */
    where?: MemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Members to fetch.
     */
    orderBy?: MemberOrderByWithRelationInput | MemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Members.
     */
    cursor?: MemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Members.
     */
    distinct?: MemberScalarFieldEnum | MemberScalarFieldEnum[]
  }

  /**
   * Member findFirstOrThrow
   */
  export type MemberFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
    /**
     * Filter, which Member to fetch.
     */
    where?: MemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Members to fetch.
     */
    orderBy?: MemberOrderByWithRelationInput | MemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Members.
     */
    cursor?: MemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Members.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Members.
     */
    distinct?: MemberScalarFieldEnum | MemberScalarFieldEnum[]
  }

  /**
   * Member findMany
   */
  export type MemberFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
    /**
     * Filter, which Members to fetch.
     */
    where?: MemberWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Members to fetch.
     */
    orderBy?: MemberOrderByWithRelationInput | MemberOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Members.
     */
    cursor?: MemberWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Members from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Members.
     */
    skip?: number
    distinct?: MemberScalarFieldEnum | MemberScalarFieldEnum[]
  }

  /**
   * Member create
   */
  export type MemberCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
    /**
     * The data needed to create a Member.
     */
    data: XOR<MemberCreateInput, MemberUncheckedCreateInput>
  }

  /**
   * Member createMany
   */
  export type MemberCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Members.
     */
    data: MemberCreateManyInput | MemberCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Member createManyAndReturn
   */
  export type MemberCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * The data used to create many Members.
     */
    data: MemberCreateManyInput | MemberCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Member update
   */
  export type MemberUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
    /**
     * The data needed to update a Member.
     */
    data: XOR<MemberUpdateInput, MemberUncheckedUpdateInput>
    /**
     * Choose, which Member to update.
     */
    where: MemberWhereUniqueInput
  }

  /**
   * Member updateMany
   */
  export type MemberUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Members.
     */
    data: XOR<MemberUpdateManyMutationInput, MemberUncheckedUpdateManyInput>
    /**
     * Filter which Members to update
     */
    where?: MemberWhereInput
    /**
     * Limit how many Members to update.
     */
    limit?: number
  }

  /**
   * Member updateManyAndReturn
   */
  export type MemberUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * The data used to update Members.
     */
    data: XOR<MemberUpdateManyMutationInput, MemberUncheckedUpdateManyInput>
    /**
     * Filter which Members to update
     */
    where?: MemberWhereInput
    /**
     * Limit how many Members to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Member upsert
   */
  export type MemberUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
    /**
     * The filter to search for the Member to update in case it exists.
     */
    where: MemberWhereUniqueInput
    /**
     * In case the Member found by the `where` argument doesn't exist, create a new Member with this data.
     */
    create: XOR<MemberCreateInput, MemberUncheckedCreateInput>
    /**
     * In case the Member was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MemberUpdateInput, MemberUncheckedUpdateInput>
  }

  /**
   * Member delete
   */
  export type MemberDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
    /**
     * Filter which Member to delete.
     */
    where: MemberWhereUniqueInput
  }

  /**
   * Member deleteMany
   */
  export type MemberDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Members to delete
     */
    where?: MemberWhereInput
    /**
     * Limit how many Members to delete.
     */
    limit?: number
  }

  /**
   * Member without action
   */
  export type MemberDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
  }


  /**
   * Model Invitation
   */

  export type AggregateInvitation = {
    _count: InvitationCountAggregateOutputType | null
    _min: InvitationMinAggregateOutputType | null
    _max: InvitationMaxAggregateOutputType | null
  }

  export type InvitationMinAggregateOutputType = {
    id: string | null
    organizationId: string | null
    email: string | null
    role: string | null
    status: string | null
    expiresAt: Date | null
    inviterId: string | null
  }

  export type InvitationMaxAggregateOutputType = {
    id: string | null
    organizationId: string | null
    email: string | null
    role: string | null
    status: string | null
    expiresAt: Date | null
    inviterId: string | null
  }

  export type InvitationCountAggregateOutputType = {
    id: number
    organizationId: number
    email: number
    role: number
    status: number
    expiresAt: number
    inviterId: number
    _all: number
  }


  export type InvitationMinAggregateInputType = {
    id?: true
    organizationId?: true
    email?: true
    role?: true
    status?: true
    expiresAt?: true
    inviterId?: true
  }

  export type InvitationMaxAggregateInputType = {
    id?: true
    organizationId?: true
    email?: true
    role?: true
    status?: true
    expiresAt?: true
    inviterId?: true
  }

  export type InvitationCountAggregateInputType = {
    id?: true
    organizationId?: true
    email?: true
    role?: true
    status?: true
    expiresAt?: true
    inviterId?: true
    _all?: true
  }

  export type InvitationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Invitation to aggregate.
     */
    where?: InvitationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invitations to fetch.
     */
    orderBy?: InvitationOrderByWithRelationInput | InvitationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: InvitationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invitations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Invitations
    **/
    _count?: true | InvitationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InvitationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InvitationMaxAggregateInputType
  }

  export type GetInvitationAggregateType<T extends InvitationAggregateArgs> = {
        [P in keyof T & keyof AggregateInvitation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInvitation[P]>
      : GetScalarType<T[P], AggregateInvitation[P]>
  }




  export type InvitationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: InvitationWhereInput
    orderBy?: InvitationOrderByWithAggregationInput | InvitationOrderByWithAggregationInput[]
    by: InvitationScalarFieldEnum[] | InvitationScalarFieldEnum
    having?: InvitationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InvitationCountAggregateInputType | true
    _min?: InvitationMinAggregateInputType
    _max?: InvitationMaxAggregateInputType
  }

  export type InvitationGroupByOutputType = {
    id: string
    organizationId: string
    email: string
    role: string | null
    status: string
    expiresAt: Date
    inviterId: string
    _count: InvitationCountAggregateOutputType | null
    _min: InvitationMinAggregateOutputType | null
    _max: InvitationMaxAggregateOutputType | null
  }

  type GetInvitationGroupByPayload<T extends InvitationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InvitationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InvitationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InvitationGroupByOutputType[P]>
            : GetScalarType<T[P], InvitationGroupByOutputType[P]>
        }
      >
    >


  export type InvitationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    email?: boolean
    role?: boolean
    status?: boolean
    expiresAt?: boolean
    inviterId?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invitation"]>

  export type InvitationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    email?: boolean
    role?: boolean
    status?: boolean
    expiresAt?: boolean
    inviterId?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invitation"]>

  export type InvitationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    email?: boolean
    role?: boolean
    status?: boolean
    expiresAt?: boolean
    inviterId?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["invitation"]>

  export type InvitationSelectScalar = {
    id?: boolean
    organizationId?: boolean
    email?: boolean
    role?: boolean
    status?: boolean
    expiresAt?: boolean
    inviterId?: boolean
  }

  export type InvitationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "organizationId" | "email" | "role" | "status" | "expiresAt" | "inviterId", ExtArgs["result"]["invitation"]>
  export type InvitationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type InvitationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type InvitationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $InvitationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Invitation"
    objects: {
      organization: Prisma.$OrganizationPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      organizationId: string
      email: string
      role: string | null
      status: string
      expiresAt: Date
      inviterId: string
    }, ExtArgs["result"]["invitation"]>
    composites: {}
  }

  type InvitationGetPayload<S extends boolean | null | undefined | InvitationDefaultArgs> = $Result.GetResult<Prisma.$InvitationPayload, S>

  type InvitationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<InvitationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InvitationCountAggregateInputType | true
    }

  export interface InvitationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Invitation'], meta: { name: 'Invitation' } }
    /**
     * Find zero or one Invitation that matches the filter.
     * @param {InvitationFindUniqueArgs} args - Arguments to find a Invitation
     * @example
     * // Get one Invitation
     * const invitation = await prisma.invitation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends InvitationFindUniqueArgs>(args: SelectSubset<T, InvitationFindUniqueArgs<ExtArgs>>): Prisma__InvitationClient<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Invitation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {InvitationFindUniqueOrThrowArgs} args - Arguments to find a Invitation
     * @example
     * // Get one Invitation
     * const invitation = await prisma.invitation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends InvitationFindUniqueOrThrowArgs>(args: SelectSubset<T, InvitationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__InvitationClient<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Invitation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationFindFirstArgs} args - Arguments to find a Invitation
     * @example
     * // Get one Invitation
     * const invitation = await prisma.invitation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends InvitationFindFirstArgs>(args?: SelectSubset<T, InvitationFindFirstArgs<ExtArgs>>): Prisma__InvitationClient<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Invitation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationFindFirstOrThrowArgs} args - Arguments to find a Invitation
     * @example
     * // Get one Invitation
     * const invitation = await prisma.invitation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends InvitationFindFirstOrThrowArgs>(args?: SelectSubset<T, InvitationFindFirstOrThrowArgs<ExtArgs>>): Prisma__InvitationClient<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Invitations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Invitations
     * const invitations = await prisma.invitation.findMany()
     * 
     * // Get first 10 Invitations
     * const invitations = await prisma.invitation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const invitationWithIdOnly = await prisma.invitation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends InvitationFindManyArgs>(args?: SelectSubset<T, InvitationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Invitation.
     * @param {InvitationCreateArgs} args - Arguments to create a Invitation.
     * @example
     * // Create one Invitation
     * const Invitation = await prisma.invitation.create({
     *   data: {
     *     // ... data to create a Invitation
     *   }
     * })
     * 
     */
    create<T extends InvitationCreateArgs>(args: SelectSubset<T, InvitationCreateArgs<ExtArgs>>): Prisma__InvitationClient<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Invitations.
     * @param {InvitationCreateManyArgs} args - Arguments to create many Invitations.
     * @example
     * // Create many Invitations
     * const invitation = await prisma.invitation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends InvitationCreateManyArgs>(args?: SelectSubset<T, InvitationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Invitations and returns the data saved in the database.
     * @param {InvitationCreateManyAndReturnArgs} args - Arguments to create many Invitations.
     * @example
     * // Create many Invitations
     * const invitation = await prisma.invitation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Invitations and only return the `id`
     * const invitationWithIdOnly = await prisma.invitation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends InvitationCreateManyAndReturnArgs>(args?: SelectSubset<T, InvitationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Invitation.
     * @param {InvitationDeleteArgs} args - Arguments to delete one Invitation.
     * @example
     * // Delete one Invitation
     * const Invitation = await prisma.invitation.delete({
     *   where: {
     *     // ... filter to delete one Invitation
     *   }
     * })
     * 
     */
    delete<T extends InvitationDeleteArgs>(args: SelectSubset<T, InvitationDeleteArgs<ExtArgs>>): Prisma__InvitationClient<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Invitation.
     * @param {InvitationUpdateArgs} args - Arguments to update one Invitation.
     * @example
     * // Update one Invitation
     * const invitation = await prisma.invitation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends InvitationUpdateArgs>(args: SelectSubset<T, InvitationUpdateArgs<ExtArgs>>): Prisma__InvitationClient<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Invitations.
     * @param {InvitationDeleteManyArgs} args - Arguments to filter Invitations to delete.
     * @example
     * // Delete a few Invitations
     * const { count } = await prisma.invitation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends InvitationDeleteManyArgs>(args?: SelectSubset<T, InvitationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Invitations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Invitations
     * const invitation = await prisma.invitation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends InvitationUpdateManyArgs>(args: SelectSubset<T, InvitationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Invitations and returns the data updated in the database.
     * @param {InvitationUpdateManyAndReturnArgs} args - Arguments to update many Invitations.
     * @example
     * // Update many Invitations
     * const invitation = await prisma.invitation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Invitations and only return the `id`
     * const invitationWithIdOnly = await prisma.invitation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends InvitationUpdateManyAndReturnArgs>(args: SelectSubset<T, InvitationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Invitation.
     * @param {InvitationUpsertArgs} args - Arguments to update or create a Invitation.
     * @example
     * // Update or create a Invitation
     * const invitation = await prisma.invitation.upsert({
     *   create: {
     *     // ... data to create a Invitation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Invitation we want to update
     *   }
     * })
     */
    upsert<T extends InvitationUpsertArgs>(args: SelectSubset<T, InvitationUpsertArgs<ExtArgs>>): Prisma__InvitationClient<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Invitations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationCountArgs} args - Arguments to filter Invitations to count.
     * @example
     * // Count the number of Invitations
     * const count = await prisma.invitation.count({
     *   where: {
     *     // ... the filter for the Invitations we want to count
     *   }
     * })
    **/
    count<T extends InvitationCountArgs>(
      args?: Subset<T, InvitationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InvitationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Invitation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InvitationAggregateArgs>(args: Subset<T, InvitationAggregateArgs>): Prisma.PrismaPromise<GetInvitationAggregateType<T>>

    /**
     * Group by Invitation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InvitationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends InvitationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: InvitationGroupByArgs['orderBy'] }
        : { orderBy?: InvitationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, InvitationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInvitationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Invitation model
   */
  readonly fields: InvitationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Invitation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__InvitationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organization<T extends OrganizationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationDefaultArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Invitation model
   */
  interface InvitationFieldRefs {
    readonly id: FieldRef<"Invitation", 'String'>
    readonly organizationId: FieldRef<"Invitation", 'String'>
    readonly email: FieldRef<"Invitation", 'String'>
    readonly role: FieldRef<"Invitation", 'String'>
    readonly status: FieldRef<"Invitation", 'String'>
    readonly expiresAt: FieldRef<"Invitation", 'DateTime'>
    readonly inviterId: FieldRef<"Invitation", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Invitation findUnique
   */
  export type InvitationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * Filter, which Invitation to fetch.
     */
    where: InvitationWhereUniqueInput
  }

  /**
   * Invitation findUniqueOrThrow
   */
  export type InvitationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * Filter, which Invitation to fetch.
     */
    where: InvitationWhereUniqueInput
  }

  /**
   * Invitation findFirst
   */
  export type InvitationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * Filter, which Invitation to fetch.
     */
    where?: InvitationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invitations to fetch.
     */
    orderBy?: InvitationOrderByWithRelationInput | InvitationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Invitations.
     */
    cursor?: InvitationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invitations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Invitations.
     */
    distinct?: InvitationScalarFieldEnum | InvitationScalarFieldEnum[]
  }

  /**
   * Invitation findFirstOrThrow
   */
  export type InvitationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * Filter, which Invitation to fetch.
     */
    where?: InvitationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invitations to fetch.
     */
    orderBy?: InvitationOrderByWithRelationInput | InvitationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Invitations.
     */
    cursor?: InvitationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invitations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Invitations.
     */
    distinct?: InvitationScalarFieldEnum | InvitationScalarFieldEnum[]
  }

  /**
   * Invitation findMany
   */
  export type InvitationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * Filter, which Invitations to fetch.
     */
    where?: InvitationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Invitations to fetch.
     */
    orderBy?: InvitationOrderByWithRelationInput | InvitationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Invitations.
     */
    cursor?: InvitationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Invitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Invitations.
     */
    skip?: number
    distinct?: InvitationScalarFieldEnum | InvitationScalarFieldEnum[]
  }

  /**
   * Invitation create
   */
  export type InvitationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * The data needed to create a Invitation.
     */
    data: XOR<InvitationCreateInput, InvitationUncheckedCreateInput>
  }

  /**
   * Invitation createMany
   */
  export type InvitationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Invitations.
     */
    data: InvitationCreateManyInput | InvitationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Invitation createManyAndReturn
   */
  export type InvitationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * The data used to create many Invitations.
     */
    data: InvitationCreateManyInput | InvitationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Invitation update
   */
  export type InvitationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * The data needed to update a Invitation.
     */
    data: XOR<InvitationUpdateInput, InvitationUncheckedUpdateInput>
    /**
     * Choose, which Invitation to update.
     */
    where: InvitationWhereUniqueInput
  }

  /**
   * Invitation updateMany
   */
  export type InvitationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Invitations.
     */
    data: XOR<InvitationUpdateManyMutationInput, InvitationUncheckedUpdateManyInput>
    /**
     * Filter which Invitations to update
     */
    where?: InvitationWhereInput
    /**
     * Limit how many Invitations to update.
     */
    limit?: number
  }

  /**
   * Invitation updateManyAndReturn
   */
  export type InvitationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * The data used to update Invitations.
     */
    data: XOR<InvitationUpdateManyMutationInput, InvitationUncheckedUpdateManyInput>
    /**
     * Filter which Invitations to update
     */
    where?: InvitationWhereInput
    /**
     * Limit how many Invitations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Invitation upsert
   */
  export type InvitationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * The filter to search for the Invitation to update in case it exists.
     */
    where: InvitationWhereUniqueInput
    /**
     * In case the Invitation found by the `where` argument doesn't exist, create a new Invitation with this data.
     */
    create: XOR<InvitationCreateInput, InvitationUncheckedCreateInput>
    /**
     * In case the Invitation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<InvitationUpdateInput, InvitationUncheckedUpdateInput>
  }

  /**
   * Invitation delete
   */
  export type InvitationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    /**
     * Filter which Invitation to delete.
     */
    where: InvitationWhereUniqueInput
  }

  /**
   * Invitation deleteMany
   */
  export type InvitationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Invitations to delete
     */
    where?: InvitationWhereInput
    /**
     * Limit how many Invitations to delete.
     */
    limit?: number
  }

  /**
   * Invitation without action
   */
  export type InvitationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
  }


  /**
   * Model Organization
   */

  export type AggregateOrganization = {
    _count: OrganizationCountAggregateOutputType | null
    _min: OrganizationMinAggregateOutputType | null
    _max: OrganizationMaxAggregateOutputType | null
  }

  export type OrganizationMinAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    phone: string | null
    email: string | null
    legalEntityId: string | null
    addressId: string | null
    configurationId: string | null
    logo: string | null
    logoId: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type OrganizationMaxAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    phone: string | null
    email: string | null
    legalEntityId: string | null
    addressId: string | null
    configurationId: string | null
    logo: string | null
    logoId: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type OrganizationCountAggregateOutputType = {
    id: number
    name: number
    slug: number
    phone: number
    email: number
    legalEntityId: number
    addressId: number
    configurationId: number
    logo: number
    logoId: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type OrganizationMinAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    phone?: true
    email?: true
    legalEntityId?: true
    addressId?: true
    configurationId?: true
    logo?: true
    logoId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type OrganizationMaxAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    phone?: true
    email?: true
    legalEntityId?: true
    addressId?: true
    configurationId?: true
    logo?: true
    logoId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type OrganizationCountAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    phone?: true
    email?: true
    legalEntityId?: true
    addressId?: true
    configurationId?: true
    logo?: true
    logoId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type OrganizationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Organization to aggregate.
     */
    where?: OrganizationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Organizations to fetch.
     */
    orderBy?: OrganizationOrderByWithRelationInput | OrganizationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrganizationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Organizations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Organizations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Organizations
    **/
    _count?: true | OrganizationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrganizationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrganizationMaxAggregateInputType
  }

  export type GetOrganizationAggregateType<T extends OrganizationAggregateArgs> = {
        [P in keyof T & keyof AggregateOrganization]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrganization[P]>
      : GetScalarType<T[P], AggregateOrganization[P]>
  }




  export type OrganizationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrganizationWhereInput
    orderBy?: OrganizationOrderByWithAggregationInput | OrganizationOrderByWithAggregationInput[]
    by: OrganizationScalarFieldEnum[] | OrganizationScalarFieldEnum
    having?: OrganizationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrganizationCountAggregateInputType | true
    _min?: OrganizationMinAggregateInputType
    _max?: OrganizationMaxAggregateInputType
  }

  export type OrganizationGroupByOutputType = {
    id: string
    name: string
    slug: string | null
    phone: string | null
    email: string | null
    legalEntityId: string | null
    addressId: string
    configurationId: string
    logo: string | null
    logoId: string | null
    createdAt: Date
    createdBy: string | null
    updatedAt: Date
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: OrganizationCountAggregateOutputType | null
    _min: OrganizationMinAggregateOutputType | null
    _max: OrganizationMaxAggregateOutputType | null
  }

  type GetOrganizationGroupByPayload<T extends OrganizationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrganizationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrganizationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrganizationGroupByOutputType[P]>
            : GetScalarType<T[P], OrganizationGroupByOutputType[P]>
        }
      >
    >


  export type OrganizationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    phone?: boolean
    email?: boolean
    legalEntityId?: boolean
    addressId?: boolean
    configurationId?: boolean
    logo?: boolean
    logoId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    legalEntity?: boolean | Organization$legalEntityArgs<ExtArgs>
    address?: boolean | AddressDefaultArgs<ExtArgs>
    configuration?: boolean | OrganizationConfigurationDefaultArgs<ExtArgs>
    logoFile?: boolean | Organization$logoFileArgs<ExtArgs>
    files?: boolean | Organization$filesArgs<ExtArgs>
    members?: boolean | Organization$membersArgs<ExtArgs>
    invitations?: boolean | Organization$invitationsArgs<ExtArgs>
    orders?: boolean | Organization$ordersArgs<ExtArgs>
    campaigns?: boolean | Organization$campaignsArgs<ExtArgs>
    shippingMethods?: boolean | Organization$shippingMethodsArgs<ExtArgs>
    manufacturers?: boolean | Organization$manufacturersArgs<ExtArgs>
    productCategories?: boolean | Organization$productCategoriesArgs<ExtArgs>
    products?: boolean | Organization$productsArgs<ExtArgs>
    reservations?: boolean | Organization$reservationsArgs<ExtArgs>
    _count?: boolean | OrganizationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["organization"]>

  export type OrganizationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    phone?: boolean
    email?: boolean
    legalEntityId?: boolean
    addressId?: boolean
    configurationId?: boolean
    logo?: boolean
    logoId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    legalEntity?: boolean | Organization$legalEntityArgs<ExtArgs>
    address?: boolean | AddressDefaultArgs<ExtArgs>
    configuration?: boolean | OrganizationConfigurationDefaultArgs<ExtArgs>
    logoFile?: boolean | Organization$logoFileArgs<ExtArgs>
  }, ExtArgs["result"]["organization"]>

  export type OrganizationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    phone?: boolean
    email?: boolean
    legalEntityId?: boolean
    addressId?: boolean
    configurationId?: boolean
    logo?: boolean
    logoId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    legalEntity?: boolean | Organization$legalEntityArgs<ExtArgs>
    address?: boolean | AddressDefaultArgs<ExtArgs>
    configuration?: boolean | OrganizationConfigurationDefaultArgs<ExtArgs>
    logoFile?: boolean | Organization$logoFileArgs<ExtArgs>
  }, ExtArgs["result"]["organization"]>

  export type OrganizationSelectScalar = {
    id?: boolean
    name?: boolean
    slug?: boolean
    phone?: boolean
    email?: boolean
    legalEntityId?: boolean
    addressId?: boolean
    configurationId?: boolean
    logo?: boolean
    logoId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type OrganizationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "slug" | "phone" | "email" | "legalEntityId" | "addressId" | "configurationId" | "logo" | "logoId" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["organization"]>
  export type OrganizationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    legalEntity?: boolean | Organization$legalEntityArgs<ExtArgs>
    address?: boolean | AddressDefaultArgs<ExtArgs>
    configuration?: boolean | OrganizationConfigurationDefaultArgs<ExtArgs>
    logoFile?: boolean | Organization$logoFileArgs<ExtArgs>
    files?: boolean | Organization$filesArgs<ExtArgs>
    members?: boolean | Organization$membersArgs<ExtArgs>
    invitations?: boolean | Organization$invitationsArgs<ExtArgs>
    orders?: boolean | Organization$ordersArgs<ExtArgs>
    campaigns?: boolean | Organization$campaignsArgs<ExtArgs>
    shippingMethods?: boolean | Organization$shippingMethodsArgs<ExtArgs>
    manufacturers?: boolean | Organization$manufacturersArgs<ExtArgs>
    productCategories?: boolean | Organization$productCategoriesArgs<ExtArgs>
    products?: boolean | Organization$productsArgs<ExtArgs>
    reservations?: boolean | Organization$reservationsArgs<ExtArgs>
    _count?: boolean | OrganizationCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OrganizationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    legalEntity?: boolean | Organization$legalEntityArgs<ExtArgs>
    address?: boolean | AddressDefaultArgs<ExtArgs>
    configuration?: boolean | OrganizationConfigurationDefaultArgs<ExtArgs>
    logoFile?: boolean | Organization$logoFileArgs<ExtArgs>
  }
  export type OrganizationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    legalEntity?: boolean | Organization$legalEntityArgs<ExtArgs>
    address?: boolean | AddressDefaultArgs<ExtArgs>
    configuration?: boolean | OrganizationConfigurationDefaultArgs<ExtArgs>
    logoFile?: boolean | Organization$logoFileArgs<ExtArgs>
  }

  export type $OrganizationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Organization"
    objects: {
      legalEntity: Prisma.$LegalEntityPayload<ExtArgs> | null
      address: Prisma.$AddressPayload<ExtArgs>
      configuration: Prisma.$OrganizationConfigurationPayload<ExtArgs>
      logoFile: Prisma.$FilePayload<ExtArgs> | null
      files: Prisma.$FilePayload<ExtArgs>[]
      members: Prisma.$MemberPayload<ExtArgs>[]
      invitations: Prisma.$InvitationPayload<ExtArgs>[]
      orders: Prisma.$OrderPayload<ExtArgs>[]
      campaigns: Prisma.$CampaignPayload<ExtArgs>[]
      shippingMethods: Prisma.$ShippingMethodPayload<ExtArgs>[]
      manufacturers: Prisma.$ManufacturerPayload<ExtArgs>[]
      productCategories: Prisma.$ProductCategoryPayload<ExtArgs>[]
      products: Prisma.$ProductPayload<ExtArgs>[]
      reservations: Prisma.$ReservationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      slug: string | null
      phone: string | null
      email: string | null
      legalEntityId: string | null
      addressId: string
      configurationId: string
      logo: string | null
      logoId: string | null
      createdAt: Date
      createdBy: string | null
      updatedAt: Date
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["organization"]>
    composites: {}
  }

  type OrganizationGetPayload<S extends boolean | null | undefined | OrganizationDefaultArgs> = $Result.GetResult<Prisma.$OrganizationPayload, S>

  type OrganizationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrganizationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrganizationCountAggregateInputType | true
    }

  export interface OrganizationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Organization'], meta: { name: 'Organization' } }
    /**
     * Find zero or one Organization that matches the filter.
     * @param {OrganizationFindUniqueArgs} args - Arguments to find a Organization
     * @example
     * // Get one Organization
     * const organization = await prisma.organization.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrganizationFindUniqueArgs>(args: SelectSubset<T, OrganizationFindUniqueArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Organization that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrganizationFindUniqueOrThrowArgs} args - Arguments to find a Organization
     * @example
     * // Get one Organization
     * const organization = await prisma.organization.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrganizationFindUniqueOrThrowArgs>(args: SelectSubset<T, OrganizationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Organization that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationFindFirstArgs} args - Arguments to find a Organization
     * @example
     * // Get one Organization
     * const organization = await prisma.organization.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrganizationFindFirstArgs>(args?: SelectSubset<T, OrganizationFindFirstArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Organization that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationFindFirstOrThrowArgs} args - Arguments to find a Organization
     * @example
     * // Get one Organization
     * const organization = await prisma.organization.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrganizationFindFirstOrThrowArgs>(args?: SelectSubset<T, OrganizationFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Organizations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Organizations
     * const organizations = await prisma.organization.findMany()
     * 
     * // Get first 10 Organizations
     * const organizations = await prisma.organization.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const organizationWithIdOnly = await prisma.organization.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrganizationFindManyArgs>(args?: SelectSubset<T, OrganizationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Organization.
     * @param {OrganizationCreateArgs} args - Arguments to create a Organization.
     * @example
     * // Create one Organization
     * const Organization = await prisma.organization.create({
     *   data: {
     *     // ... data to create a Organization
     *   }
     * })
     * 
     */
    create<T extends OrganizationCreateArgs>(args: SelectSubset<T, OrganizationCreateArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Organizations.
     * @param {OrganizationCreateManyArgs} args - Arguments to create many Organizations.
     * @example
     * // Create many Organizations
     * const organization = await prisma.organization.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrganizationCreateManyArgs>(args?: SelectSubset<T, OrganizationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Organizations and returns the data saved in the database.
     * @param {OrganizationCreateManyAndReturnArgs} args - Arguments to create many Organizations.
     * @example
     * // Create many Organizations
     * const organization = await prisma.organization.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Organizations and only return the `id`
     * const organizationWithIdOnly = await prisma.organization.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrganizationCreateManyAndReturnArgs>(args?: SelectSubset<T, OrganizationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Organization.
     * @param {OrganizationDeleteArgs} args - Arguments to delete one Organization.
     * @example
     * // Delete one Organization
     * const Organization = await prisma.organization.delete({
     *   where: {
     *     // ... filter to delete one Organization
     *   }
     * })
     * 
     */
    delete<T extends OrganizationDeleteArgs>(args: SelectSubset<T, OrganizationDeleteArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Organization.
     * @param {OrganizationUpdateArgs} args - Arguments to update one Organization.
     * @example
     * // Update one Organization
     * const organization = await prisma.organization.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrganizationUpdateArgs>(args: SelectSubset<T, OrganizationUpdateArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Organizations.
     * @param {OrganizationDeleteManyArgs} args - Arguments to filter Organizations to delete.
     * @example
     * // Delete a few Organizations
     * const { count } = await prisma.organization.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrganizationDeleteManyArgs>(args?: SelectSubset<T, OrganizationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Organizations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Organizations
     * const organization = await prisma.organization.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrganizationUpdateManyArgs>(args: SelectSubset<T, OrganizationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Organizations and returns the data updated in the database.
     * @param {OrganizationUpdateManyAndReturnArgs} args - Arguments to update many Organizations.
     * @example
     * // Update many Organizations
     * const organization = await prisma.organization.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Organizations and only return the `id`
     * const organizationWithIdOnly = await prisma.organization.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrganizationUpdateManyAndReturnArgs>(args: SelectSubset<T, OrganizationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Organization.
     * @param {OrganizationUpsertArgs} args - Arguments to update or create a Organization.
     * @example
     * // Update or create a Organization
     * const organization = await prisma.organization.upsert({
     *   create: {
     *     // ... data to create a Organization
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Organization we want to update
     *   }
     * })
     */
    upsert<T extends OrganizationUpsertArgs>(args: SelectSubset<T, OrganizationUpsertArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Organizations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationCountArgs} args - Arguments to filter Organizations to count.
     * @example
     * // Count the number of Organizations
     * const count = await prisma.organization.count({
     *   where: {
     *     // ... the filter for the Organizations we want to count
     *   }
     * })
    **/
    count<T extends OrganizationCountArgs>(
      args?: Subset<T, OrganizationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrganizationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Organization.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrganizationAggregateArgs>(args: Subset<T, OrganizationAggregateArgs>): Prisma.PrismaPromise<GetOrganizationAggregateType<T>>

    /**
     * Group by Organization.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrganizationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrganizationGroupByArgs['orderBy'] }
        : { orderBy?: OrganizationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrganizationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrganizationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Organization model
   */
  readonly fields: OrganizationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Organization.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrganizationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    legalEntity<T extends Organization$legalEntityArgs<ExtArgs> = {}>(args?: Subset<T, Organization$legalEntityArgs<ExtArgs>>): Prisma__LegalEntityClient<$Result.GetResult<Prisma.$LegalEntityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    address<T extends AddressDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AddressDefaultArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    configuration<T extends OrganizationConfigurationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationConfigurationDefaultArgs<ExtArgs>>): Prisma__OrganizationConfigurationClient<$Result.GetResult<Prisma.$OrganizationConfigurationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    logoFile<T extends Organization$logoFileArgs<ExtArgs> = {}>(args?: Subset<T, Organization$logoFileArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    files<T extends Organization$filesArgs<ExtArgs> = {}>(args?: Subset<T, Organization$filesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    members<T extends Organization$membersArgs<ExtArgs> = {}>(args?: Subset<T, Organization$membersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MemberPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    invitations<T extends Organization$invitationsArgs<ExtArgs> = {}>(args?: Subset<T, Organization$invitationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$InvitationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    orders<T extends Organization$ordersArgs<ExtArgs> = {}>(args?: Subset<T, Organization$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    campaigns<T extends Organization$campaignsArgs<ExtArgs> = {}>(args?: Subset<T, Organization$campaignsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CampaignPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    shippingMethods<T extends Organization$shippingMethodsArgs<ExtArgs> = {}>(args?: Subset<T, Organization$shippingMethodsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShippingMethodPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    manufacturers<T extends Organization$manufacturersArgs<ExtArgs> = {}>(args?: Subset<T, Organization$manufacturersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    productCategories<T extends Organization$productCategoriesArgs<ExtArgs> = {}>(args?: Subset<T, Organization$productCategoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    products<T extends Organization$productsArgs<ExtArgs> = {}>(args?: Subset<T, Organization$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    reservations<T extends Organization$reservationsArgs<ExtArgs> = {}>(args?: Subset<T, Organization$reservationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Organization model
   */
  interface OrganizationFieldRefs {
    readonly id: FieldRef<"Organization", 'String'>
    readonly name: FieldRef<"Organization", 'String'>
    readonly slug: FieldRef<"Organization", 'String'>
    readonly phone: FieldRef<"Organization", 'String'>
    readonly email: FieldRef<"Organization", 'String'>
    readonly legalEntityId: FieldRef<"Organization", 'String'>
    readonly addressId: FieldRef<"Organization", 'String'>
    readonly configurationId: FieldRef<"Organization", 'String'>
    readonly logo: FieldRef<"Organization", 'String'>
    readonly logoId: FieldRef<"Organization", 'String'>
    readonly createdAt: FieldRef<"Organization", 'DateTime'>
    readonly createdBy: FieldRef<"Organization", 'String'>
    readonly updatedAt: FieldRef<"Organization", 'DateTime'>
    readonly updatedBy: FieldRef<"Organization", 'String'>
    readonly deletedAt: FieldRef<"Organization", 'DateTime'>
    readonly deletedBy: FieldRef<"Organization", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Organization findUnique
   */
  export type OrganizationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * Filter, which Organization to fetch.
     */
    where: OrganizationWhereUniqueInput
  }

  /**
   * Organization findUniqueOrThrow
   */
  export type OrganizationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * Filter, which Organization to fetch.
     */
    where: OrganizationWhereUniqueInput
  }

  /**
   * Organization findFirst
   */
  export type OrganizationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * Filter, which Organization to fetch.
     */
    where?: OrganizationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Organizations to fetch.
     */
    orderBy?: OrganizationOrderByWithRelationInput | OrganizationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Organizations.
     */
    cursor?: OrganizationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Organizations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Organizations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Organizations.
     */
    distinct?: OrganizationScalarFieldEnum | OrganizationScalarFieldEnum[]
  }

  /**
   * Organization findFirstOrThrow
   */
  export type OrganizationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * Filter, which Organization to fetch.
     */
    where?: OrganizationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Organizations to fetch.
     */
    orderBy?: OrganizationOrderByWithRelationInput | OrganizationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Organizations.
     */
    cursor?: OrganizationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Organizations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Organizations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Organizations.
     */
    distinct?: OrganizationScalarFieldEnum | OrganizationScalarFieldEnum[]
  }

  /**
   * Organization findMany
   */
  export type OrganizationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * Filter, which Organizations to fetch.
     */
    where?: OrganizationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Organizations to fetch.
     */
    orderBy?: OrganizationOrderByWithRelationInput | OrganizationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Organizations.
     */
    cursor?: OrganizationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Organizations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Organizations.
     */
    skip?: number
    distinct?: OrganizationScalarFieldEnum | OrganizationScalarFieldEnum[]
  }

  /**
   * Organization create
   */
  export type OrganizationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * The data needed to create a Organization.
     */
    data: XOR<OrganizationCreateInput, OrganizationUncheckedCreateInput>
  }

  /**
   * Organization createMany
   */
  export type OrganizationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Organizations.
     */
    data: OrganizationCreateManyInput | OrganizationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Organization createManyAndReturn
   */
  export type OrganizationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * The data used to create many Organizations.
     */
    data: OrganizationCreateManyInput | OrganizationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Organization update
   */
  export type OrganizationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * The data needed to update a Organization.
     */
    data: XOR<OrganizationUpdateInput, OrganizationUncheckedUpdateInput>
    /**
     * Choose, which Organization to update.
     */
    where: OrganizationWhereUniqueInput
  }

  /**
   * Organization updateMany
   */
  export type OrganizationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Organizations.
     */
    data: XOR<OrganizationUpdateManyMutationInput, OrganizationUncheckedUpdateManyInput>
    /**
     * Filter which Organizations to update
     */
    where?: OrganizationWhereInput
    /**
     * Limit how many Organizations to update.
     */
    limit?: number
  }

  /**
   * Organization updateManyAndReturn
   */
  export type OrganizationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * The data used to update Organizations.
     */
    data: XOR<OrganizationUpdateManyMutationInput, OrganizationUncheckedUpdateManyInput>
    /**
     * Filter which Organizations to update
     */
    where?: OrganizationWhereInput
    /**
     * Limit how many Organizations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Organization upsert
   */
  export type OrganizationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * The filter to search for the Organization to update in case it exists.
     */
    where: OrganizationWhereUniqueInput
    /**
     * In case the Organization found by the `where` argument doesn't exist, create a new Organization with this data.
     */
    create: XOR<OrganizationCreateInput, OrganizationUncheckedCreateInput>
    /**
     * In case the Organization was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrganizationUpdateInput, OrganizationUncheckedUpdateInput>
  }

  /**
   * Organization delete
   */
  export type OrganizationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    /**
     * Filter which Organization to delete.
     */
    where: OrganizationWhereUniqueInput
  }

  /**
   * Organization deleteMany
   */
  export type OrganizationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Organizations to delete
     */
    where?: OrganizationWhereInput
    /**
     * Limit how many Organizations to delete.
     */
    limit?: number
  }

  /**
   * Organization.legalEntity
   */
  export type Organization$legalEntityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalEntity
     */
    select?: LegalEntitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the LegalEntity
     */
    omit?: LegalEntityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LegalEntityInclude<ExtArgs> | null
    where?: LegalEntityWhereInput
  }

  /**
   * Organization.logoFile
   */
  export type Organization$logoFileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    where?: FileWhereInput
  }

  /**
   * Organization.files
   */
  export type Organization$filesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    where?: FileWhereInput
    orderBy?: FileOrderByWithRelationInput | FileOrderByWithRelationInput[]
    cursor?: FileWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FileScalarFieldEnum | FileScalarFieldEnum[]
  }

  /**
   * Organization.members
   */
  export type Organization$membersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Member
     */
    select?: MemberSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Member
     */
    omit?: MemberOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MemberInclude<ExtArgs> | null
    where?: MemberWhereInput
    orderBy?: MemberOrderByWithRelationInput | MemberOrderByWithRelationInput[]
    cursor?: MemberWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MemberScalarFieldEnum | MemberScalarFieldEnum[]
  }

  /**
   * Organization.invitations
   */
  export type Organization$invitationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Invitation
     */
    select?: InvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Invitation
     */
    omit?: InvitationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: InvitationInclude<ExtArgs> | null
    where?: InvitationWhereInput
    orderBy?: InvitationOrderByWithRelationInput | InvitationOrderByWithRelationInput[]
    cursor?: InvitationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: InvitationScalarFieldEnum | InvitationScalarFieldEnum[]
  }

  /**
   * Organization.orders
   */
  export type Organization$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Organization.campaigns
   */
  export type Organization$campaignsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campaign
     */
    select?: CampaignSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campaign
     */
    omit?: CampaignOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampaignInclude<ExtArgs> | null
    where?: CampaignWhereInput
    orderBy?: CampaignOrderByWithRelationInput | CampaignOrderByWithRelationInput[]
    cursor?: CampaignWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CampaignScalarFieldEnum | CampaignScalarFieldEnum[]
  }

  /**
   * Organization.shippingMethods
   */
  export type Organization$shippingMethodsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingMethod
     */
    select?: ShippingMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingMethod
     */
    omit?: ShippingMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingMethodInclude<ExtArgs> | null
    where?: ShippingMethodWhereInput
    orderBy?: ShippingMethodOrderByWithRelationInput | ShippingMethodOrderByWithRelationInput[]
    cursor?: ShippingMethodWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShippingMethodScalarFieldEnum | ShippingMethodScalarFieldEnum[]
  }

  /**
   * Organization.manufacturers
   */
  export type Organization$manufacturersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manufacturer
     */
    select?: ManufacturerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Manufacturer
     */
    omit?: ManufacturerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerInclude<ExtArgs> | null
    where?: ManufacturerWhereInput
    orderBy?: ManufacturerOrderByWithRelationInput | ManufacturerOrderByWithRelationInput[]
    cursor?: ManufacturerWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ManufacturerScalarFieldEnum | ManufacturerScalarFieldEnum[]
  }

  /**
   * Organization.productCategories
   */
  export type Organization$productCategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    where?: ProductCategoryWhereInput
    orderBy?: ProductCategoryOrderByWithRelationInput | ProductCategoryOrderByWithRelationInput[]
    cursor?: ProductCategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductCategoryScalarFieldEnum | ProductCategoryScalarFieldEnum[]
  }

  /**
   * Organization.products
   */
  export type Organization$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Organization.reservations
   */
  export type Organization$reservationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    where?: ReservationWhereInput
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    cursor?: ReservationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * Organization without action
   */
  export type OrganizationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
  }


  /**
   * Model OpeningTimes
   */

  export type AggregateOpeningTimes = {
    _count: OpeningTimesCountAggregateOutputType | null
    _min: OpeningTimesMinAggregateOutputType | null
    _max: OpeningTimesMaxAggregateOutputType | null
  }

  export type OpeningTimesMinAggregateOutputType = {
    id: string | null
    monday: Date | null
    tuesday: Date | null
    wednesday: Date | null
    thursday: Date | null
    friday: Date | null
    saturday: Date | null
    sunday: Date | null
  }

  export type OpeningTimesMaxAggregateOutputType = {
    id: string | null
    monday: Date | null
    tuesday: Date | null
    wednesday: Date | null
    thursday: Date | null
    friday: Date | null
    saturday: Date | null
    sunday: Date | null
  }

  export type OpeningTimesCountAggregateOutputType = {
    id: number
    monday: number
    tuesday: number
    wednesday: number
    thursday: number
    friday: number
    saturday: number
    sunday: number
    _all: number
  }


  export type OpeningTimesMinAggregateInputType = {
    id?: true
    monday?: true
    tuesday?: true
    wednesday?: true
    thursday?: true
    friday?: true
    saturday?: true
    sunday?: true
  }

  export type OpeningTimesMaxAggregateInputType = {
    id?: true
    monday?: true
    tuesday?: true
    wednesday?: true
    thursday?: true
    friday?: true
    saturday?: true
    sunday?: true
  }

  export type OpeningTimesCountAggregateInputType = {
    id?: true
    monday?: true
    tuesday?: true
    wednesday?: true
    thursday?: true
    friday?: true
    saturday?: true
    sunday?: true
    _all?: true
  }

  export type OpeningTimesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OpeningTimes to aggregate.
     */
    where?: OpeningTimesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OpeningTimes to fetch.
     */
    orderBy?: OpeningTimesOrderByWithRelationInput | OpeningTimesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OpeningTimesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OpeningTimes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OpeningTimes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OpeningTimes
    **/
    _count?: true | OpeningTimesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OpeningTimesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OpeningTimesMaxAggregateInputType
  }

  export type GetOpeningTimesAggregateType<T extends OpeningTimesAggregateArgs> = {
        [P in keyof T & keyof AggregateOpeningTimes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOpeningTimes[P]>
      : GetScalarType<T[P], AggregateOpeningTimes[P]>
  }




  export type OpeningTimesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OpeningTimesWhereInput
    orderBy?: OpeningTimesOrderByWithAggregationInput | OpeningTimesOrderByWithAggregationInput[]
    by: OpeningTimesScalarFieldEnum[] | OpeningTimesScalarFieldEnum
    having?: OpeningTimesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OpeningTimesCountAggregateInputType | true
    _min?: OpeningTimesMinAggregateInputType
    _max?: OpeningTimesMaxAggregateInputType
  }

  export type OpeningTimesGroupByOutputType = {
    id: string
    monday: Date | null
    tuesday: Date | null
    wednesday: Date | null
    thursday: Date | null
    friday: Date | null
    saturday: Date | null
    sunday: Date | null
    _count: OpeningTimesCountAggregateOutputType | null
    _min: OpeningTimesMinAggregateOutputType | null
    _max: OpeningTimesMaxAggregateOutputType | null
  }

  type GetOpeningTimesGroupByPayload<T extends OpeningTimesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OpeningTimesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OpeningTimesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OpeningTimesGroupByOutputType[P]>
            : GetScalarType<T[P], OpeningTimesGroupByOutputType[P]>
        }
      >
    >


  export type OpeningTimesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    monday?: boolean
    tuesday?: boolean
    wednesday?: boolean
    thursday?: boolean
    friday?: boolean
    saturday?: boolean
    sunday?: boolean
    organizationConfiguration?: boolean | OpeningTimes$organizationConfigurationArgs<ExtArgs>
  }, ExtArgs["result"]["openingTimes"]>

  export type OpeningTimesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    monday?: boolean
    tuesday?: boolean
    wednesday?: boolean
    thursday?: boolean
    friday?: boolean
    saturday?: boolean
    sunday?: boolean
  }, ExtArgs["result"]["openingTimes"]>

  export type OpeningTimesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    monday?: boolean
    tuesday?: boolean
    wednesday?: boolean
    thursday?: boolean
    friday?: boolean
    saturday?: boolean
    sunday?: boolean
  }, ExtArgs["result"]["openingTimes"]>

  export type OpeningTimesSelectScalar = {
    id?: boolean
    monday?: boolean
    tuesday?: boolean
    wednesday?: boolean
    thursday?: boolean
    friday?: boolean
    saturday?: boolean
    sunday?: boolean
  }

  export type OpeningTimesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "monday" | "tuesday" | "wednesday" | "thursday" | "friday" | "saturday" | "sunday", ExtArgs["result"]["openingTimes"]>
  export type OpeningTimesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organizationConfiguration?: boolean | OpeningTimes$organizationConfigurationArgs<ExtArgs>
  }
  export type OpeningTimesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type OpeningTimesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $OpeningTimesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OpeningTimes"
    objects: {
      organizationConfiguration: Prisma.$OrganizationConfigurationPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      monday: Date | null
      tuesday: Date | null
      wednesday: Date | null
      thursday: Date | null
      friday: Date | null
      saturday: Date | null
      sunday: Date | null
    }, ExtArgs["result"]["openingTimes"]>
    composites: {}
  }

  type OpeningTimesGetPayload<S extends boolean | null | undefined | OpeningTimesDefaultArgs> = $Result.GetResult<Prisma.$OpeningTimesPayload, S>

  type OpeningTimesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OpeningTimesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OpeningTimesCountAggregateInputType | true
    }

  export interface OpeningTimesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OpeningTimes'], meta: { name: 'OpeningTimes' } }
    /**
     * Find zero or one OpeningTimes that matches the filter.
     * @param {OpeningTimesFindUniqueArgs} args - Arguments to find a OpeningTimes
     * @example
     * // Get one OpeningTimes
     * const openingTimes = await prisma.openingTimes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OpeningTimesFindUniqueArgs>(args: SelectSubset<T, OpeningTimesFindUniqueArgs<ExtArgs>>): Prisma__OpeningTimesClient<$Result.GetResult<Prisma.$OpeningTimesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OpeningTimes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OpeningTimesFindUniqueOrThrowArgs} args - Arguments to find a OpeningTimes
     * @example
     * // Get one OpeningTimes
     * const openingTimes = await prisma.openingTimes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OpeningTimesFindUniqueOrThrowArgs>(args: SelectSubset<T, OpeningTimesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OpeningTimesClient<$Result.GetResult<Prisma.$OpeningTimesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OpeningTimes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpeningTimesFindFirstArgs} args - Arguments to find a OpeningTimes
     * @example
     * // Get one OpeningTimes
     * const openingTimes = await prisma.openingTimes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OpeningTimesFindFirstArgs>(args?: SelectSubset<T, OpeningTimesFindFirstArgs<ExtArgs>>): Prisma__OpeningTimesClient<$Result.GetResult<Prisma.$OpeningTimesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OpeningTimes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpeningTimesFindFirstOrThrowArgs} args - Arguments to find a OpeningTimes
     * @example
     * // Get one OpeningTimes
     * const openingTimes = await prisma.openingTimes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OpeningTimesFindFirstOrThrowArgs>(args?: SelectSubset<T, OpeningTimesFindFirstOrThrowArgs<ExtArgs>>): Prisma__OpeningTimesClient<$Result.GetResult<Prisma.$OpeningTimesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OpeningTimes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpeningTimesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OpeningTimes
     * const openingTimes = await prisma.openingTimes.findMany()
     * 
     * // Get first 10 OpeningTimes
     * const openingTimes = await prisma.openingTimes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const openingTimesWithIdOnly = await prisma.openingTimes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OpeningTimesFindManyArgs>(args?: SelectSubset<T, OpeningTimesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OpeningTimesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OpeningTimes.
     * @param {OpeningTimesCreateArgs} args - Arguments to create a OpeningTimes.
     * @example
     * // Create one OpeningTimes
     * const OpeningTimes = await prisma.openingTimes.create({
     *   data: {
     *     // ... data to create a OpeningTimes
     *   }
     * })
     * 
     */
    create<T extends OpeningTimesCreateArgs>(args: SelectSubset<T, OpeningTimesCreateArgs<ExtArgs>>): Prisma__OpeningTimesClient<$Result.GetResult<Prisma.$OpeningTimesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OpeningTimes.
     * @param {OpeningTimesCreateManyArgs} args - Arguments to create many OpeningTimes.
     * @example
     * // Create many OpeningTimes
     * const openingTimes = await prisma.openingTimes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OpeningTimesCreateManyArgs>(args?: SelectSubset<T, OpeningTimesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OpeningTimes and returns the data saved in the database.
     * @param {OpeningTimesCreateManyAndReturnArgs} args - Arguments to create many OpeningTimes.
     * @example
     * // Create many OpeningTimes
     * const openingTimes = await prisma.openingTimes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OpeningTimes and only return the `id`
     * const openingTimesWithIdOnly = await prisma.openingTimes.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OpeningTimesCreateManyAndReturnArgs>(args?: SelectSubset<T, OpeningTimesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OpeningTimesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OpeningTimes.
     * @param {OpeningTimesDeleteArgs} args - Arguments to delete one OpeningTimes.
     * @example
     * // Delete one OpeningTimes
     * const OpeningTimes = await prisma.openingTimes.delete({
     *   where: {
     *     // ... filter to delete one OpeningTimes
     *   }
     * })
     * 
     */
    delete<T extends OpeningTimesDeleteArgs>(args: SelectSubset<T, OpeningTimesDeleteArgs<ExtArgs>>): Prisma__OpeningTimesClient<$Result.GetResult<Prisma.$OpeningTimesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OpeningTimes.
     * @param {OpeningTimesUpdateArgs} args - Arguments to update one OpeningTimes.
     * @example
     * // Update one OpeningTimes
     * const openingTimes = await prisma.openingTimes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OpeningTimesUpdateArgs>(args: SelectSubset<T, OpeningTimesUpdateArgs<ExtArgs>>): Prisma__OpeningTimesClient<$Result.GetResult<Prisma.$OpeningTimesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OpeningTimes.
     * @param {OpeningTimesDeleteManyArgs} args - Arguments to filter OpeningTimes to delete.
     * @example
     * // Delete a few OpeningTimes
     * const { count } = await prisma.openingTimes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OpeningTimesDeleteManyArgs>(args?: SelectSubset<T, OpeningTimesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OpeningTimes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpeningTimesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OpeningTimes
     * const openingTimes = await prisma.openingTimes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OpeningTimesUpdateManyArgs>(args: SelectSubset<T, OpeningTimesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OpeningTimes and returns the data updated in the database.
     * @param {OpeningTimesUpdateManyAndReturnArgs} args - Arguments to update many OpeningTimes.
     * @example
     * // Update many OpeningTimes
     * const openingTimes = await prisma.openingTimes.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OpeningTimes and only return the `id`
     * const openingTimesWithIdOnly = await prisma.openingTimes.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OpeningTimesUpdateManyAndReturnArgs>(args: SelectSubset<T, OpeningTimesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OpeningTimesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OpeningTimes.
     * @param {OpeningTimesUpsertArgs} args - Arguments to update or create a OpeningTimes.
     * @example
     * // Update or create a OpeningTimes
     * const openingTimes = await prisma.openingTimes.upsert({
     *   create: {
     *     // ... data to create a OpeningTimes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OpeningTimes we want to update
     *   }
     * })
     */
    upsert<T extends OpeningTimesUpsertArgs>(args: SelectSubset<T, OpeningTimesUpsertArgs<ExtArgs>>): Prisma__OpeningTimesClient<$Result.GetResult<Prisma.$OpeningTimesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OpeningTimes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpeningTimesCountArgs} args - Arguments to filter OpeningTimes to count.
     * @example
     * // Count the number of OpeningTimes
     * const count = await prisma.openingTimes.count({
     *   where: {
     *     // ... the filter for the OpeningTimes we want to count
     *   }
     * })
    **/
    count<T extends OpeningTimesCountArgs>(
      args?: Subset<T, OpeningTimesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OpeningTimesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OpeningTimes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpeningTimesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OpeningTimesAggregateArgs>(args: Subset<T, OpeningTimesAggregateArgs>): Prisma.PrismaPromise<GetOpeningTimesAggregateType<T>>

    /**
     * Group by OpeningTimes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OpeningTimesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OpeningTimesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OpeningTimesGroupByArgs['orderBy'] }
        : { orderBy?: OpeningTimesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OpeningTimesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOpeningTimesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OpeningTimes model
   */
  readonly fields: OpeningTimesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OpeningTimes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OpeningTimesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organizationConfiguration<T extends OpeningTimes$organizationConfigurationArgs<ExtArgs> = {}>(args?: Subset<T, OpeningTimes$organizationConfigurationArgs<ExtArgs>>): Prisma__OrganizationConfigurationClient<$Result.GetResult<Prisma.$OrganizationConfigurationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OpeningTimes model
   */
  interface OpeningTimesFieldRefs {
    readonly id: FieldRef<"OpeningTimes", 'String'>
    readonly monday: FieldRef<"OpeningTimes", 'DateTime'>
    readonly tuesday: FieldRef<"OpeningTimes", 'DateTime'>
    readonly wednesday: FieldRef<"OpeningTimes", 'DateTime'>
    readonly thursday: FieldRef<"OpeningTimes", 'DateTime'>
    readonly friday: FieldRef<"OpeningTimes", 'DateTime'>
    readonly saturday: FieldRef<"OpeningTimes", 'DateTime'>
    readonly sunday: FieldRef<"OpeningTimes", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * OpeningTimes findUnique
   */
  export type OpeningTimesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpeningTimes
     */
    select?: OpeningTimesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OpeningTimes
     */
    omit?: OpeningTimesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpeningTimesInclude<ExtArgs> | null
    /**
     * Filter, which OpeningTimes to fetch.
     */
    where: OpeningTimesWhereUniqueInput
  }

  /**
   * OpeningTimes findUniqueOrThrow
   */
  export type OpeningTimesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpeningTimes
     */
    select?: OpeningTimesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OpeningTimes
     */
    omit?: OpeningTimesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpeningTimesInclude<ExtArgs> | null
    /**
     * Filter, which OpeningTimes to fetch.
     */
    where: OpeningTimesWhereUniqueInput
  }

  /**
   * OpeningTimes findFirst
   */
  export type OpeningTimesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpeningTimes
     */
    select?: OpeningTimesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OpeningTimes
     */
    omit?: OpeningTimesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpeningTimesInclude<ExtArgs> | null
    /**
     * Filter, which OpeningTimes to fetch.
     */
    where?: OpeningTimesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OpeningTimes to fetch.
     */
    orderBy?: OpeningTimesOrderByWithRelationInput | OpeningTimesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OpeningTimes.
     */
    cursor?: OpeningTimesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OpeningTimes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OpeningTimes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OpeningTimes.
     */
    distinct?: OpeningTimesScalarFieldEnum | OpeningTimesScalarFieldEnum[]
  }

  /**
   * OpeningTimes findFirstOrThrow
   */
  export type OpeningTimesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpeningTimes
     */
    select?: OpeningTimesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OpeningTimes
     */
    omit?: OpeningTimesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpeningTimesInclude<ExtArgs> | null
    /**
     * Filter, which OpeningTimes to fetch.
     */
    where?: OpeningTimesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OpeningTimes to fetch.
     */
    orderBy?: OpeningTimesOrderByWithRelationInput | OpeningTimesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OpeningTimes.
     */
    cursor?: OpeningTimesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OpeningTimes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OpeningTimes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OpeningTimes.
     */
    distinct?: OpeningTimesScalarFieldEnum | OpeningTimesScalarFieldEnum[]
  }

  /**
   * OpeningTimes findMany
   */
  export type OpeningTimesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpeningTimes
     */
    select?: OpeningTimesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OpeningTimes
     */
    omit?: OpeningTimesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpeningTimesInclude<ExtArgs> | null
    /**
     * Filter, which OpeningTimes to fetch.
     */
    where?: OpeningTimesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OpeningTimes to fetch.
     */
    orderBy?: OpeningTimesOrderByWithRelationInput | OpeningTimesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OpeningTimes.
     */
    cursor?: OpeningTimesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OpeningTimes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OpeningTimes.
     */
    skip?: number
    distinct?: OpeningTimesScalarFieldEnum | OpeningTimesScalarFieldEnum[]
  }

  /**
   * OpeningTimes create
   */
  export type OpeningTimesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpeningTimes
     */
    select?: OpeningTimesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OpeningTimes
     */
    omit?: OpeningTimesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpeningTimesInclude<ExtArgs> | null
    /**
     * The data needed to create a OpeningTimes.
     */
    data?: XOR<OpeningTimesCreateInput, OpeningTimesUncheckedCreateInput>
  }

  /**
   * OpeningTimes createMany
   */
  export type OpeningTimesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OpeningTimes.
     */
    data: OpeningTimesCreateManyInput | OpeningTimesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OpeningTimes createManyAndReturn
   */
  export type OpeningTimesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpeningTimes
     */
    select?: OpeningTimesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OpeningTimes
     */
    omit?: OpeningTimesOmit<ExtArgs> | null
    /**
     * The data used to create many OpeningTimes.
     */
    data: OpeningTimesCreateManyInput | OpeningTimesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OpeningTimes update
   */
  export type OpeningTimesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpeningTimes
     */
    select?: OpeningTimesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OpeningTimes
     */
    omit?: OpeningTimesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpeningTimesInclude<ExtArgs> | null
    /**
     * The data needed to update a OpeningTimes.
     */
    data: XOR<OpeningTimesUpdateInput, OpeningTimesUncheckedUpdateInput>
    /**
     * Choose, which OpeningTimes to update.
     */
    where: OpeningTimesWhereUniqueInput
  }

  /**
   * OpeningTimes updateMany
   */
  export type OpeningTimesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OpeningTimes.
     */
    data: XOR<OpeningTimesUpdateManyMutationInput, OpeningTimesUncheckedUpdateManyInput>
    /**
     * Filter which OpeningTimes to update
     */
    where?: OpeningTimesWhereInput
    /**
     * Limit how many OpeningTimes to update.
     */
    limit?: number
  }

  /**
   * OpeningTimes updateManyAndReturn
   */
  export type OpeningTimesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpeningTimes
     */
    select?: OpeningTimesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OpeningTimes
     */
    omit?: OpeningTimesOmit<ExtArgs> | null
    /**
     * The data used to update OpeningTimes.
     */
    data: XOR<OpeningTimesUpdateManyMutationInput, OpeningTimesUncheckedUpdateManyInput>
    /**
     * Filter which OpeningTimes to update
     */
    where?: OpeningTimesWhereInput
    /**
     * Limit how many OpeningTimes to update.
     */
    limit?: number
  }

  /**
   * OpeningTimes upsert
   */
  export type OpeningTimesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpeningTimes
     */
    select?: OpeningTimesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OpeningTimes
     */
    omit?: OpeningTimesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpeningTimesInclude<ExtArgs> | null
    /**
     * The filter to search for the OpeningTimes to update in case it exists.
     */
    where: OpeningTimesWhereUniqueInput
    /**
     * In case the OpeningTimes found by the `where` argument doesn't exist, create a new OpeningTimes with this data.
     */
    create: XOR<OpeningTimesCreateInput, OpeningTimesUncheckedCreateInput>
    /**
     * In case the OpeningTimes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OpeningTimesUpdateInput, OpeningTimesUncheckedUpdateInput>
  }

  /**
   * OpeningTimes delete
   */
  export type OpeningTimesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpeningTimes
     */
    select?: OpeningTimesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OpeningTimes
     */
    omit?: OpeningTimesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpeningTimesInclude<ExtArgs> | null
    /**
     * Filter which OpeningTimes to delete.
     */
    where: OpeningTimesWhereUniqueInput
  }

  /**
   * OpeningTimes deleteMany
   */
  export type OpeningTimesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OpeningTimes to delete
     */
    where?: OpeningTimesWhereInput
    /**
     * Limit how many OpeningTimes to delete.
     */
    limit?: number
  }

  /**
   * OpeningTimes.organizationConfiguration
   */
  export type OpeningTimes$organizationConfigurationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationConfiguration
     */
    select?: OrganizationConfigurationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationConfiguration
     */
    omit?: OrganizationConfigurationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationConfigurationInclude<ExtArgs> | null
    where?: OrganizationConfigurationWhereInput
  }

  /**
   * OpeningTimes without action
   */
  export type OpeningTimesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpeningTimes
     */
    select?: OpeningTimesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OpeningTimes
     */
    omit?: OpeningTimesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpeningTimesInclude<ExtArgs> | null
  }


  /**
   * Model ClosingTimes
   */

  export type AggregateClosingTimes = {
    _count: ClosingTimesCountAggregateOutputType | null
    _min: ClosingTimesMinAggregateOutputType | null
    _max: ClosingTimesMaxAggregateOutputType | null
  }

  export type ClosingTimesMinAggregateOutputType = {
    id: string | null
    monday: Date | null
    tuesday: Date | null
    wednesday: Date | null
    thursday: Date | null
    friday: Date | null
    saturday: Date | null
    sunday: Date | null
  }

  export type ClosingTimesMaxAggregateOutputType = {
    id: string | null
    monday: Date | null
    tuesday: Date | null
    wednesday: Date | null
    thursday: Date | null
    friday: Date | null
    saturday: Date | null
    sunday: Date | null
  }

  export type ClosingTimesCountAggregateOutputType = {
    id: number
    monday: number
    tuesday: number
    wednesday: number
    thursday: number
    friday: number
    saturday: number
    sunday: number
    _all: number
  }


  export type ClosingTimesMinAggregateInputType = {
    id?: true
    monday?: true
    tuesday?: true
    wednesday?: true
    thursday?: true
    friday?: true
    saturday?: true
    sunday?: true
  }

  export type ClosingTimesMaxAggregateInputType = {
    id?: true
    monday?: true
    tuesday?: true
    wednesday?: true
    thursday?: true
    friday?: true
    saturday?: true
    sunday?: true
  }

  export type ClosingTimesCountAggregateInputType = {
    id?: true
    monday?: true
    tuesday?: true
    wednesday?: true
    thursday?: true
    friday?: true
    saturday?: true
    sunday?: true
    _all?: true
  }

  export type ClosingTimesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ClosingTimes to aggregate.
     */
    where?: ClosingTimesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClosingTimes to fetch.
     */
    orderBy?: ClosingTimesOrderByWithRelationInput | ClosingTimesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ClosingTimesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClosingTimes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClosingTimes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ClosingTimes
    **/
    _count?: true | ClosingTimesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ClosingTimesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ClosingTimesMaxAggregateInputType
  }

  export type GetClosingTimesAggregateType<T extends ClosingTimesAggregateArgs> = {
        [P in keyof T & keyof AggregateClosingTimes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateClosingTimes[P]>
      : GetScalarType<T[P], AggregateClosingTimes[P]>
  }




  export type ClosingTimesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ClosingTimesWhereInput
    orderBy?: ClosingTimesOrderByWithAggregationInput | ClosingTimesOrderByWithAggregationInput[]
    by: ClosingTimesScalarFieldEnum[] | ClosingTimesScalarFieldEnum
    having?: ClosingTimesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ClosingTimesCountAggregateInputType | true
    _min?: ClosingTimesMinAggregateInputType
    _max?: ClosingTimesMaxAggregateInputType
  }

  export type ClosingTimesGroupByOutputType = {
    id: string
    monday: Date | null
    tuesday: Date | null
    wednesday: Date | null
    thursday: Date | null
    friday: Date | null
    saturday: Date | null
    sunday: Date | null
    _count: ClosingTimesCountAggregateOutputType | null
    _min: ClosingTimesMinAggregateOutputType | null
    _max: ClosingTimesMaxAggregateOutputType | null
  }

  type GetClosingTimesGroupByPayload<T extends ClosingTimesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ClosingTimesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ClosingTimesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ClosingTimesGroupByOutputType[P]>
            : GetScalarType<T[P], ClosingTimesGroupByOutputType[P]>
        }
      >
    >


  export type ClosingTimesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    monday?: boolean
    tuesday?: boolean
    wednesday?: boolean
    thursday?: boolean
    friday?: boolean
    saturday?: boolean
    sunday?: boolean
    organizationConfiguration?: boolean | ClosingTimes$organizationConfigurationArgs<ExtArgs>
  }, ExtArgs["result"]["closingTimes"]>

  export type ClosingTimesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    monday?: boolean
    tuesday?: boolean
    wednesday?: boolean
    thursday?: boolean
    friday?: boolean
    saturday?: boolean
    sunday?: boolean
  }, ExtArgs["result"]["closingTimes"]>

  export type ClosingTimesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    monday?: boolean
    tuesday?: boolean
    wednesday?: boolean
    thursday?: boolean
    friday?: boolean
    saturday?: boolean
    sunday?: boolean
  }, ExtArgs["result"]["closingTimes"]>

  export type ClosingTimesSelectScalar = {
    id?: boolean
    monday?: boolean
    tuesday?: boolean
    wednesday?: boolean
    thursday?: boolean
    friday?: boolean
    saturday?: boolean
    sunday?: boolean
  }

  export type ClosingTimesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "monday" | "tuesday" | "wednesday" | "thursday" | "friday" | "saturday" | "sunday", ExtArgs["result"]["closingTimes"]>
  export type ClosingTimesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organizationConfiguration?: boolean | ClosingTimes$organizationConfigurationArgs<ExtArgs>
  }
  export type ClosingTimesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type ClosingTimesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ClosingTimesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ClosingTimes"
    objects: {
      organizationConfiguration: Prisma.$OrganizationConfigurationPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      monday: Date | null
      tuesday: Date | null
      wednesday: Date | null
      thursday: Date | null
      friday: Date | null
      saturday: Date | null
      sunday: Date | null
    }, ExtArgs["result"]["closingTimes"]>
    composites: {}
  }

  type ClosingTimesGetPayload<S extends boolean | null | undefined | ClosingTimesDefaultArgs> = $Result.GetResult<Prisma.$ClosingTimesPayload, S>

  type ClosingTimesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ClosingTimesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ClosingTimesCountAggregateInputType | true
    }

  export interface ClosingTimesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ClosingTimes'], meta: { name: 'ClosingTimes' } }
    /**
     * Find zero or one ClosingTimes that matches the filter.
     * @param {ClosingTimesFindUniqueArgs} args - Arguments to find a ClosingTimes
     * @example
     * // Get one ClosingTimes
     * const closingTimes = await prisma.closingTimes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ClosingTimesFindUniqueArgs>(args: SelectSubset<T, ClosingTimesFindUniqueArgs<ExtArgs>>): Prisma__ClosingTimesClient<$Result.GetResult<Prisma.$ClosingTimesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ClosingTimes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ClosingTimesFindUniqueOrThrowArgs} args - Arguments to find a ClosingTimes
     * @example
     * // Get one ClosingTimes
     * const closingTimes = await prisma.closingTimes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ClosingTimesFindUniqueOrThrowArgs>(args: SelectSubset<T, ClosingTimesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ClosingTimesClient<$Result.GetResult<Prisma.$ClosingTimesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ClosingTimes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClosingTimesFindFirstArgs} args - Arguments to find a ClosingTimes
     * @example
     * // Get one ClosingTimes
     * const closingTimes = await prisma.closingTimes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ClosingTimesFindFirstArgs>(args?: SelectSubset<T, ClosingTimesFindFirstArgs<ExtArgs>>): Prisma__ClosingTimesClient<$Result.GetResult<Prisma.$ClosingTimesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ClosingTimes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClosingTimesFindFirstOrThrowArgs} args - Arguments to find a ClosingTimes
     * @example
     * // Get one ClosingTimes
     * const closingTimes = await prisma.closingTimes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ClosingTimesFindFirstOrThrowArgs>(args?: SelectSubset<T, ClosingTimesFindFirstOrThrowArgs<ExtArgs>>): Prisma__ClosingTimesClient<$Result.GetResult<Prisma.$ClosingTimesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ClosingTimes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClosingTimesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ClosingTimes
     * const closingTimes = await prisma.closingTimes.findMany()
     * 
     * // Get first 10 ClosingTimes
     * const closingTimes = await prisma.closingTimes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const closingTimesWithIdOnly = await prisma.closingTimes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ClosingTimesFindManyArgs>(args?: SelectSubset<T, ClosingTimesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClosingTimesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ClosingTimes.
     * @param {ClosingTimesCreateArgs} args - Arguments to create a ClosingTimes.
     * @example
     * // Create one ClosingTimes
     * const ClosingTimes = await prisma.closingTimes.create({
     *   data: {
     *     // ... data to create a ClosingTimes
     *   }
     * })
     * 
     */
    create<T extends ClosingTimesCreateArgs>(args: SelectSubset<T, ClosingTimesCreateArgs<ExtArgs>>): Prisma__ClosingTimesClient<$Result.GetResult<Prisma.$ClosingTimesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ClosingTimes.
     * @param {ClosingTimesCreateManyArgs} args - Arguments to create many ClosingTimes.
     * @example
     * // Create many ClosingTimes
     * const closingTimes = await prisma.closingTimes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ClosingTimesCreateManyArgs>(args?: SelectSubset<T, ClosingTimesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ClosingTimes and returns the data saved in the database.
     * @param {ClosingTimesCreateManyAndReturnArgs} args - Arguments to create many ClosingTimes.
     * @example
     * // Create many ClosingTimes
     * const closingTimes = await prisma.closingTimes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ClosingTimes and only return the `id`
     * const closingTimesWithIdOnly = await prisma.closingTimes.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ClosingTimesCreateManyAndReturnArgs>(args?: SelectSubset<T, ClosingTimesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClosingTimesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ClosingTimes.
     * @param {ClosingTimesDeleteArgs} args - Arguments to delete one ClosingTimes.
     * @example
     * // Delete one ClosingTimes
     * const ClosingTimes = await prisma.closingTimes.delete({
     *   where: {
     *     // ... filter to delete one ClosingTimes
     *   }
     * })
     * 
     */
    delete<T extends ClosingTimesDeleteArgs>(args: SelectSubset<T, ClosingTimesDeleteArgs<ExtArgs>>): Prisma__ClosingTimesClient<$Result.GetResult<Prisma.$ClosingTimesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ClosingTimes.
     * @param {ClosingTimesUpdateArgs} args - Arguments to update one ClosingTimes.
     * @example
     * // Update one ClosingTimes
     * const closingTimes = await prisma.closingTimes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ClosingTimesUpdateArgs>(args: SelectSubset<T, ClosingTimesUpdateArgs<ExtArgs>>): Prisma__ClosingTimesClient<$Result.GetResult<Prisma.$ClosingTimesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ClosingTimes.
     * @param {ClosingTimesDeleteManyArgs} args - Arguments to filter ClosingTimes to delete.
     * @example
     * // Delete a few ClosingTimes
     * const { count } = await prisma.closingTimes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ClosingTimesDeleteManyArgs>(args?: SelectSubset<T, ClosingTimesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ClosingTimes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClosingTimesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ClosingTimes
     * const closingTimes = await prisma.closingTimes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ClosingTimesUpdateManyArgs>(args: SelectSubset<T, ClosingTimesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ClosingTimes and returns the data updated in the database.
     * @param {ClosingTimesUpdateManyAndReturnArgs} args - Arguments to update many ClosingTimes.
     * @example
     * // Update many ClosingTimes
     * const closingTimes = await prisma.closingTimes.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ClosingTimes and only return the `id`
     * const closingTimesWithIdOnly = await prisma.closingTimes.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ClosingTimesUpdateManyAndReturnArgs>(args: SelectSubset<T, ClosingTimesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ClosingTimesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ClosingTimes.
     * @param {ClosingTimesUpsertArgs} args - Arguments to update or create a ClosingTimes.
     * @example
     * // Update or create a ClosingTimes
     * const closingTimes = await prisma.closingTimes.upsert({
     *   create: {
     *     // ... data to create a ClosingTimes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ClosingTimes we want to update
     *   }
     * })
     */
    upsert<T extends ClosingTimesUpsertArgs>(args: SelectSubset<T, ClosingTimesUpsertArgs<ExtArgs>>): Prisma__ClosingTimesClient<$Result.GetResult<Prisma.$ClosingTimesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ClosingTimes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClosingTimesCountArgs} args - Arguments to filter ClosingTimes to count.
     * @example
     * // Count the number of ClosingTimes
     * const count = await prisma.closingTimes.count({
     *   where: {
     *     // ... the filter for the ClosingTimes we want to count
     *   }
     * })
    **/
    count<T extends ClosingTimesCountArgs>(
      args?: Subset<T, ClosingTimesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ClosingTimesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ClosingTimes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClosingTimesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ClosingTimesAggregateArgs>(args: Subset<T, ClosingTimesAggregateArgs>): Prisma.PrismaPromise<GetClosingTimesAggregateType<T>>

    /**
     * Group by ClosingTimes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ClosingTimesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ClosingTimesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ClosingTimesGroupByArgs['orderBy'] }
        : { orderBy?: ClosingTimesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ClosingTimesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClosingTimesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ClosingTimes model
   */
  readonly fields: ClosingTimesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ClosingTimes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ClosingTimesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organizationConfiguration<T extends ClosingTimes$organizationConfigurationArgs<ExtArgs> = {}>(args?: Subset<T, ClosingTimes$organizationConfigurationArgs<ExtArgs>>): Prisma__OrganizationConfigurationClient<$Result.GetResult<Prisma.$OrganizationConfigurationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ClosingTimes model
   */
  interface ClosingTimesFieldRefs {
    readonly id: FieldRef<"ClosingTimes", 'String'>
    readonly monday: FieldRef<"ClosingTimes", 'DateTime'>
    readonly tuesday: FieldRef<"ClosingTimes", 'DateTime'>
    readonly wednesday: FieldRef<"ClosingTimes", 'DateTime'>
    readonly thursday: FieldRef<"ClosingTimes", 'DateTime'>
    readonly friday: FieldRef<"ClosingTimes", 'DateTime'>
    readonly saturday: FieldRef<"ClosingTimes", 'DateTime'>
    readonly sunday: FieldRef<"ClosingTimes", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ClosingTimes findUnique
   */
  export type ClosingTimesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClosingTimes
     */
    select?: ClosingTimesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClosingTimes
     */
    omit?: ClosingTimesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClosingTimesInclude<ExtArgs> | null
    /**
     * Filter, which ClosingTimes to fetch.
     */
    where: ClosingTimesWhereUniqueInput
  }

  /**
   * ClosingTimes findUniqueOrThrow
   */
  export type ClosingTimesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClosingTimes
     */
    select?: ClosingTimesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClosingTimes
     */
    omit?: ClosingTimesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClosingTimesInclude<ExtArgs> | null
    /**
     * Filter, which ClosingTimes to fetch.
     */
    where: ClosingTimesWhereUniqueInput
  }

  /**
   * ClosingTimes findFirst
   */
  export type ClosingTimesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClosingTimes
     */
    select?: ClosingTimesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClosingTimes
     */
    omit?: ClosingTimesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClosingTimesInclude<ExtArgs> | null
    /**
     * Filter, which ClosingTimes to fetch.
     */
    where?: ClosingTimesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClosingTimes to fetch.
     */
    orderBy?: ClosingTimesOrderByWithRelationInput | ClosingTimesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ClosingTimes.
     */
    cursor?: ClosingTimesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClosingTimes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClosingTimes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ClosingTimes.
     */
    distinct?: ClosingTimesScalarFieldEnum | ClosingTimesScalarFieldEnum[]
  }

  /**
   * ClosingTimes findFirstOrThrow
   */
  export type ClosingTimesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClosingTimes
     */
    select?: ClosingTimesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClosingTimes
     */
    omit?: ClosingTimesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClosingTimesInclude<ExtArgs> | null
    /**
     * Filter, which ClosingTimes to fetch.
     */
    where?: ClosingTimesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClosingTimes to fetch.
     */
    orderBy?: ClosingTimesOrderByWithRelationInput | ClosingTimesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ClosingTimes.
     */
    cursor?: ClosingTimesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClosingTimes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClosingTimes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ClosingTimes.
     */
    distinct?: ClosingTimesScalarFieldEnum | ClosingTimesScalarFieldEnum[]
  }

  /**
   * ClosingTimes findMany
   */
  export type ClosingTimesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClosingTimes
     */
    select?: ClosingTimesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClosingTimes
     */
    omit?: ClosingTimesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClosingTimesInclude<ExtArgs> | null
    /**
     * Filter, which ClosingTimes to fetch.
     */
    where?: ClosingTimesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ClosingTimes to fetch.
     */
    orderBy?: ClosingTimesOrderByWithRelationInput | ClosingTimesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ClosingTimes.
     */
    cursor?: ClosingTimesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ClosingTimes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ClosingTimes.
     */
    skip?: number
    distinct?: ClosingTimesScalarFieldEnum | ClosingTimesScalarFieldEnum[]
  }

  /**
   * ClosingTimes create
   */
  export type ClosingTimesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClosingTimes
     */
    select?: ClosingTimesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClosingTimes
     */
    omit?: ClosingTimesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClosingTimesInclude<ExtArgs> | null
    /**
     * The data needed to create a ClosingTimes.
     */
    data?: XOR<ClosingTimesCreateInput, ClosingTimesUncheckedCreateInput>
  }

  /**
   * ClosingTimes createMany
   */
  export type ClosingTimesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ClosingTimes.
     */
    data: ClosingTimesCreateManyInput | ClosingTimesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ClosingTimes createManyAndReturn
   */
  export type ClosingTimesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClosingTimes
     */
    select?: ClosingTimesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ClosingTimes
     */
    omit?: ClosingTimesOmit<ExtArgs> | null
    /**
     * The data used to create many ClosingTimes.
     */
    data: ClosingTimesCreateManyInput | ClosingTimesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ClosingTimes update
   */
  export type ClosingTimesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClosingTimes
     */
    select?: ClosingTimesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClosingTimes
     */
    omit?: ClosingTimesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClosingTimesInclude<ExtArgs> | null
    /**
     * The data needed to update a ClosingTimes.
     */
    data: XOR<ClosingTimesUpdateInput, ClosingTimesUncheckedUpdateInput>
    /**
     * Choose, which ClosingTimes to update.
     */
    where: ClosingTimesWhereUniqueInput
  }

  /**
   * ClosingTimes updateMany
   */
  export type ClosingTimesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ClosingTimes.
     */
    data: XOR<ClosingTimesUpdateManyMutationInput, ClosingTimesUncheckedUpdateManyInput>
    /**
     * Filter which ClosingTimes to update
     */
    where?: ClosingTimesWhereInput
    /**
     * Limit how many ClosingTimes to update.
     */
    limit?: number
  }

  /**
   * ClosingTimes updateManyAndReturn
   */
  export type ClosingTimesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClosingTimes
     */
    select?: ClosingTimesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ClosingTimes
     */
    omit?: ClosingTimesOmit<ExtArgs> | null
    /**
     * The data used to update ClosingTimes.
     */
    data: XOR<ClosingTimesUpdateManyMutationInput, ClosingTimesUncheckedUpdateManyInput>
    /**
     * Filter which ClosingTimes to update
     */
    where?: ClosingTimesWhereInput
    /**
     * Limit how many ClosingTimes to update.
     */
    limit?: number
  }

  /**
   * ClosingTimes upsert
   */
  export type ClosingTimesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClosingTimes
     */
    select?: ClosingTimesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClosingTimes
     */
    omit?: ClosingTimesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClosingTimesInclude<ExtArgs> | null
    /**
     * The filter to search for the ClosingTimes to update in case it exists.
     */
    where: ClosingTimesWhereUniqueInput
    /**
     * In case the ClosingTimes found by the `where` argument doesn't exist, create a new ClosingTimes with this data.
     */
    create: XOR<ClosingTimesCreateInput, ClosingTimesUncheckedCreateInput>
    /**
     * In case the ClosingTimes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ClosingTimesUpdateInput, ClosingTimesUncheckedUpdateInput>
  }

  /**
   * ClosingTimes delete
   */
  export type ClosingTimesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClosingTimes
     */
    select?: ClosingTimesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClosingTimes
     */
    omit?: ClosingTimesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClosingTimesInclude<ExtArgs> | null
    /**
     * Filter which ClosingTimes to delete.
     */
    where: ClosingTimesWhereUniqueInput
  }

  /**
   * ClosingTimes deleteMany
   */
  export type ClosingTimesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ClosingTimes to delete
     */
    where?: ClosingTimesWhereInput
    /**
     * Limit how many ClosingTimes to delete.
     */
    limit?: number
  }

  /**
   * ClosingTimes.organizationConfiguration
   */
  export type ClosingTimes$organizationConfigurationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationConfiguration
     */
    select?: OrganizationConfigurationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationConfiguration
     */
    omit?: OrganizationConfigurationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationConfigurationInclude<ExtArgs> | null
    where?: OrganizationConfigurationWhereInput
  }

  /**
   * ClosingTimes without action
   */
  export type ClosingTimesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClosingTimes
     */
    select?: ClosingTimesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClosingTimes
     */
    omit?: ClosingTimesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClosingTimesInclude<ExtArgs> | null
  }


  /**
   * Model OrganizationConfiguration
   */

  export type AggregateOrganizationConfiguration = {
    _count: OrganizationConfigurationCountAggregateOutputType | null
    _min: OrganizationConfigurationMinAggregateOutputType | null
    _max: OrganizationConfigurationMaxAggregateOutputType | null
  }

  export type OrganizationConfigurationMinAggregateOutputType = {
    id: string | null
    hostname: string | null
    stripeAccountId: string | null
    enableHostCheckout: boolean | null
    enableHostTracking: boolean | null
    isAcceptingOrders: boolean | null
    defaultCurrency: $Enums.Currency | null
    defaultLocale: $Enums.Locale | null
    openingTimesId: string | null
    closingTimesId: string | null
    facebookProfile: string | null
    instagramProfile: string | null
    xProfile: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type OrganizationConfigurationMaxAggregateOutputType = {
    id: string | null
    hostname: string | null
    stripeAccountId: string | null
    enableHostCheckout: boolean | null
    enableHostTracking: boolean | null
    isAcceptingOrders: boolean | null
    defaultCurrency: $Enums.Currency | null
    defaultLocale: $Enums.Locale | null
    openingTimesId: string | null
    closingTimesId: string | null
    facebookProfile: string | null
    instagramProfile: string | null
    xProfile: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type OrganizationConfigurationCountAggregateOutputType = {
    id: number
    hostname: number
    countriesShipping: number
    stripeAccountId: number
    enableHostCheckout: number
    enableHostTracking: number
    isAcceptingOrders: number
    defaultCurrency: number
    defaultLocale: number
    supportedLocales: number
    openingTimesId: number
    closingTimesId: number
    facebookProfile: number
    instagramProfile: number
    xProfile: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type OrganizationConfigurationMinAggregateInputType = {
    id?: true
    hostname?: true
    stripeAccountId?: true
    enableHostCheckout?: true
    enableHostTracking?: true
    isAcceptingOrders?: true
    defaultCurrency?: true
    defaultLocale?: true
    openingTimesId?: true
    closingTimesId?: true
    facebookProfile?: true
    instagramProfile?: true
    xProfile?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type OrganizationConfigurationMaxAggregateInputType = {
    id?: true
    hostname?: true
    stripeAccountId?: true
    enableHostCheckout?: true
    enableHostTracking?: true
    isAcceptingOrders?: true
    defaultCurrency?: true
    defaultLocale?: true
    openingTimesId?: true
    closingTimesId?: true
    facebookProfile?: true
    instagramProfile?: true
    xProfile?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type OrganizationConfigurationCountAggregateInputType = {
    id?: true
    hostname?: true
    countriesShipping?: true
    stripeAccountId?: true
    enableHostCheckout?: true
    enableHostTracking?: true
    isAcceptingOrders?: true
    defaultCurrency?: true
    defaultLocale?: true
    supportedLocales?: true
    openingTimesId?: true
    closingTimesId?: true
    facebookProfile?: true
    instagramProfile?: true
    xProfile?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type OrganizationConfigurationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrganizationConfiguration to aggregate.
     */
    where?: OrganizationConfigurationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrganizationConfigurations to fetch.
     */
    orderBy?: OrganizationConfigurationOrderByWithRelationInput | OrganizationConfigurationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrganizationConfigurationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrganizationConfigurations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrganizationConfigurations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrganizationConfigurations
    **/
    _count?: true | OrganizationConfigurationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrganizationConfigurationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrganizationConfigurationMaxAggregateInputType
  }

  export type GetOrganizationConfigurationAggregateType<T extends OrganizationConfigurationAggregateArgs> = {
        [P in keyof T & keyof AggregateOrganizationConfiguration]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrganizationConfiguration[P]>
      : GetScalarType<T[P], AggregateOrganizationConfiguration[P]>
  }




  export type OrganizationConfigurationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrganizationConfigurationWhereInput
    orderBy?: OrganizationConfigurationOrderByWithAggregationInput | OrganizationConfigurationOrderByWithAggregationInput[]
    by: OrganizationConfigurationScalarFieldEnum[] | OrganizationConfigurationScalarFieldEnum
    having?: OrganizationConfigurationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrganizationConfigurationCountAggregateInputType | true
    _min?: OrganizationConfigurationMinAggregateInputType
    _max?: OrganizationConfigurationMaxAggregateInputType
  }

  export type OrganizationConfigurationGroupByOutputType = {
    id: string
    hostname: string | null
    countriesShipping: string[]
    stripeAccountId: string | null
    enableHostCheckout: boolean
    enableHostTracking: boolean
    isAcceptingOrders: boolean | null
    defaultCurrency: $Enums.Currency
    defaultLocale: $Enums.Locale
    supportedLocales: $Enums.Locale[]
    openingTimesId: string | null
    closingTimesId: string | null
    facebookProfile: string | null
    instagramProfile: string | null
    xProfile: string | null
    createdAt: Date
    createdBy: string | null
    updatedAt: Date
    updatedBy: string | null
    _count: OrganizationConfigurationCountAggregateOutputType | null
    _min: OrganizationConfigurationMinAggregateOutputType | null
    _max: OrganizationConfigurationMaxAggregateOutputType | null
  }

  type GetOrganizationConfigurationGroupByPayload<T extends OrganizationConfigurationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrganizationConfigurationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrganizationConfigurationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrganizationConfigurationGroupByOutputType[P]>
            : GetScalarType<T[P], OrganizationConfigurationGroupByOutputType[P]>
        }
      >
    >


  export type OrganizationConfigurationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    hostname?: boolean
    countriesShipping?: boolean
    stripeAccountId?: boolean
    enableHostCheckout?: boolean
    enableHostTracking?: boolean
    isAcceptingOrders?: boolean
    defaultCurrency?: boolean
    defaultLocale?: boolean
    supportedLocales?: boolean
    openingTimesId?: boolean
    closingTimesId?: boolean
    facebookProfile?: boolean
    instagramProfile?: boolean
    xProfile?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    openingTimes?: boolean | OrganizationConfiguration$openingTimesArgs<ExtArgs>
    closingTimes?: boolean | OrganizationConfiguration$closingTimesArgs<ExtArgs>
    organizations?: boolean | OrganizationConfiguration$organizationsArgs<ExtArgs>
    _count?: boolean | OrganizationConfigurationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["organizationConfiguration"]>

  export type OrganizationConfigurationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    hostname?: boolean
    countriesShipping?: boolean
    stripeAccountId?: boolean
    enableHostCheckout?: boolean
    enableHostTracking?: boolean
    isAcceptingOrders?: boolean
    defaultCurrency?: boolean
    defaultLocale?: boolean
    supportedLocales?: boolean
    openingTimesId?: boolean
    closingTimesId?: boolean
    facebookProfile?: boolean
    instagramProfile?: boolean
    xProfile?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    openingTimes?: boolean | OrganizationConfiguration$openingTimesArgs<ExtArgs>
    closingTimes?: boolean | OrganizationConfiguration$closingTimesArgs<ExtArgs>
  }, ExtArgs["result"]["organizationConfiguration"]>

  export type OrganizationConfigurationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    hostname?: boolean
    countriesShipping?: boolean
    stripeAccountId?: boolean
    enableHostCheckout?: boolean
    enableHostTracking?: boolean
    isAcceptingOrders?: boolean
    defaultCurrency?: boolean
    defaultLocale?: boolean
    supportedLocales?: boolean
    openingTimesId?: boolean
    closingTimesId?: boolean
    facebookProfile?: boolean
    instagramProfile?: boolean
    xProfile?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    openingTimes?: boolean | OrganizationConfiguration$openingTimesArgs<ExtArgs>
    closingTimes?: boolean | OrganizationConfiguration$closingTimesArgs<ExtArgs>
  }, ExtArgs["result"]["organizationConfiguration"]>

  export type OrganizationConfigurationSelectScalar = {
    id?: boolean
    hostname?: boolean
    countriesShipping?: boolean
    stripeAccountId?: boolean
    enableHostCheckout?: boolean
    enableHostTracking?: boolean
    isAcceptingOrders?: boolean
    defaultCurrency?: boolean
    defaultLocale?: boolean
    supportedLocales?: boolean
    openingTimesId?: boolean
    closingTimesId?: boolean
    facebookProfile?: boolean
    instagramProfile?: boolean
    xProfile?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type OrganizationConfigurationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "hostname" | "countriesShipping" | "stripeAccountId" | "enableHostCheckout" | "enableHostTracking" | "isAcceptingOrders" | "defaultCurrency" | "defaultLocale" | "supportedLocales" | "openingTimesId" | "closingTimesId" | "facebookProfile" | "instagramProfile" | "xProfile" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy", ExtArgs["result"]["organizationConfiguration"]>
  export type OrganizationConfigurationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    openingTimes?: boolean | OrganizationConfiguration$openingTimesArgs<ExtArgs>
    closingTimes?: boolean | OrganizationConfiguration$closingTimesArgs<ExtArgs>
    organizations?: boolean | OrganizationConfiguration$organizationsArgs<ExtArgs>
    _count?: boolean | OrganizationConfigurationCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OrganizationConfigurationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    openingTimes?: boolean | OrganizationConfiguration$openingTimesArgs<ExtArgs>
    closingTimes?: boolean | OrganizationConfiguration$closingTimesArgs<ExtArgs>
  }
  export type OrganizationConfigurationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    openingTimes?: boolean | OrganizationConfiguration$openingTimesArgs<ExtArgs>
    closingTimes?: boolean | OrganizationConfiguration$closingTimesArgs<ExtArgs>
  }

  export type $OrganizationConfigurationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrganizationConfiguration"
    objects: {
      openingTimes: Prisma.$OpeningTimesPayload<ExtArgs> | null
      closingTimes: Prisma.$ClosingTimesPayload<ExtArgs> | null
      organizations: Prisma.$OrganizationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      hostname: string | null
      countriesShipping: string[]
      stripeAccountId: string | null
      enableHostCheckout: boolean
      enableHostTracking: boolean
      isAcceptingOrders: boolean | null
      defaultCurrency: $Enums.Currency
      defaultLocale: $Enums.Locale
      supportedLocales: $Enums.Locale[]
      openingTimesId: string | null
      closingTimesId: string | null
      facebookProfile: string | null
      instagramProfile: string | null
      xProfile: string | null
      createdAt: Date
      createdBy: string | null
      updatedAt: Date
      updatedBy: string | null
    }, ExtArgs["result"]["organizationConfiguration"]>
    composites: {}
  }

  type OrganizationConfigurationGetPayload<S extends boolean | null | undefined | OrganizationConfigurationDefaultArgs> = $Result.GetResult<Prisma.$OrganizationConfigurationPayload, S>

  type OrganizationConfigurationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrganizationConfigurationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrganizationConfigurationCountAggregateInputType | true
    }

  export interface OrganizationConfigurationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrganizationConfiguration'], meta: { name: 'OrganizationConfiguration' } }
    /**
     * Find zero or one OrganizationConfiguration that matches the filter.
     * @param {OrganizationConfigurationFindUniqueArgs} args - Arguments to find a OrganizationConfiguration
     * @example
     * // Get one OrganizationConfiguration
     * const organizationConfiguration = await prisma.organizationConfiguration.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrganizationConfigurationFindUniqueArgs>(args: SelectSubset<T, OrganizationConfigurationFindUniqueArgs<ExtArgs>>): Prisma__OrganizationConfigurationClient<$Result.GetResult<Prisma.$OrganizationConfigurationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OrganizationConfiguration that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrganizationConfigurationFindUniqueOrThrowArgs} args - Arguments to find a OrganizationConfiguration
     * @example
     * // Get one OrganizationConfiguration
     * const organizationConfiguration = await prisma.organizationConfiguration.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrganizationConfigurationFindUniqueOrThrowArgs>(args: SelectSubset<T, OrganizationConfigurationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrganizationConfigurationClient<$Result.GetResult<Prisma.$OrganizationConfigurationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrganizationConfiguration that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationConfigurationFindFirstArgs} args - Arguments to find a OrganizationConfiguration
     * @example
     * // Get one OrganizationConfiguration
     * const organizationConfiguration = await prisma.organizationConfiguration.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrganizationConfigurationFindFirstArgs>(args?: SelectSubset<T, OrganizationConfigurationFindFirstArgs<ExtArgs>>): Prisma__OrganizationConfigurationClient<$Result.GetResult<Prisma.$OrganizationConfigurationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrganizationConfiguration that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationConfigurationFindFirstOrThrowArgs} args - Arguments to find a OrganizationConfiguration
     * @example
     * // Get one OrganizationConfiguration
     * const organizationConfiguration = await prisma.organizationConfiguration.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrganizationConfigurationFindFirstOrThrowArgs>(args?: SelectSubset<T, OrganizationConfigurationFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrganizationConfigurationClient<$Result.GetResult<Prisma.$OrganizationConfigurationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OrganizationConfigurations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationConfigurationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrganizationConfigurations
     * const organizationConfigurations = await prisma.organizationConfiguration.findMany()
     * 
     * // Get first 10 OrganizationConfigurations
     * const organizationConfigurations = await prisma.organizationConfiguration.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const organizationConfigurationWithIdOnly = await prisma.organizationConfiguration.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrganizationConfigurationFindManyArgs>(args?: SelectSubset<T, OrganizationConfigurationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganizationConfigurationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OrganizationConfiguration.
     * @param {OrganizationConfigurationCreateArgs} args - Arguments to create a OrganizationConfiguration.
     * @example
     * // Create one OrganizationConfiguration
     * const OrganizationConfiguration = await prisma.organizationConfiguration.create({
     *   data: {
     *     // ... data to create a OrganizationConfiguration
     *   }
     * })
     * 
     */
    create<T extends OrganizationConfigurationCreateArgs>(args: SelectSubset<T, OrganizationConfigurationCreateArgs<ExtArgs>>): Prisma__OrganizationConfigurationClient<$Result.GetResult<Prisma.$OrganizationConfigurationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OrganizationConfigurations.
     * @param {OrganizationConfigurationCreateManyArgs} args - Arguments to create many OrganizationConfigurations.
     * @example
     * // Create many OrganizationConfigurations
     * const organizationConfiguration = await prisma.organizationConfiguration.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrganizationConfigurationCreateManyArgs>(args?: SelectSubset<T, OrganizationConfigurationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrganizationConfigurations and returns the data saved in the database.
     * @param {OrganizationConfigurationCreateManyAndReturnArgs} args - Arguments to create many OrganizationConfigurations.
     * @example
     * // Create many OrganizationConfigurations
     * const organizationConfiguration = await prisma.organizationConfiguration.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrganizationConfigurations and only return the `id`
     * const organizationConfigurationWithIdOnly = await prisma.organizationConfiguration.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrganizationConfigurationCreateManyAndReturnArgs>(args?: SelectSubset<T, OrganizationConfigurationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganizationConfigurationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OrganizationConfiguration.
     * @param {OrganizationConfigurationDeleteArgs} args - Arguments to delete one OrganizationConfiguration.
     * @example
     * // Delete one OrganizationConfiguration
     * const OrganizationConfiguration = await prisma.organizationConfiguration.delete({
     *   where: {
     *     // ... filter to delete one OrganizationConfiguration
     *   }
     * })
     * 
     */
    delete<T extends OrganizationConfigurationDeleteArgs>(args: SelectSubset<T, OrganizationConfigurationDeleteArgs<ExtArgs>>): Prisma__OrganizationConfigurationClient<$Result.GetResult<Prisma.$OrganizationConfigurationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OrganizationConfiguration.
     * @param {OrganizationConfigurationUpdateArgs} args - Arguments to update one OrganizationConfiguration.
     * @example
     * // Update one OrganizationConfiguration
     * const organizationConfiguration = await prisma.organizationConfiguration.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrganizationConfigurationUpdateArgs>(args: SelectSubset<T, OrganizationConfigurationUpdateArgs<ExtArgs>>): Prisma__OrganizationConfigurationClient<$Result.GetResult<Prisma.$OrganizationConfigurationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OrganizationConfigurations.
     * @param {OrganizationConfigurationDeleteManyArgs} args - Arguments to filter OrganizationConfigurations to delete.
     * @example
     * // Delete a few OrganizationConfigurations
     * const { count } = await prisma.organizationConfiguration.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrganizationConfigurationDeleteManyArgs>(args?: SelectSubset<T, OrganizationConfigurationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrganizationConfigurations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationConfigurationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrganizationConfigurations
     * const organizationConfiguration = await prisma.organizationConfiguration.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrganizationConfigurationUpdateManyArgs>(args: SelectSubset<T, OrganizationConfigurationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrganizationConfigurations and returns the data updated in the database.
     * @param {OrganizationConfigurationUpdateManyAndReturnArgs} args - Arguments to update many OrganizationConfigurations.
     * @example
     * // Update many OrganizationConfigurations
     * const organizationConfiguration = await prisma.organizationConfiguration.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OrganizationConfigurations and only return the `id`
     * const organizationConfigurationWithIdOnly = await prisma.organizationConfiguration.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrganizationConfigurationUpdateManyAndReturnArgs>(args: SelectSubset<T, OrganizationConfigurationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganizationConfigurationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OrganizationConfiguration.
     * @param {OrganizationConfigurationUpsertArgs} args - Arguments to update or create a OrganizationConfiguration.
     * @example
     * // Update or create a OrganizationConfiguration
     * const organizationConfiguration = await prisma.organizationConfiguration.upsert({
     *   create: {
     *     // ... data to create a OrganizationConfiguration
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrganizationConfiguration we want to update
     *   }
     * })
     */
    upsert<T extends OrganizationConfigurationUpsertArgs>(args: SelectSubset<T, OrganizationConfigurationUpsertArgs<ExtArgs>>): Prisma__OrganizationConfigurationClient<$Result.GetResult<Prisma.$OrganizationConfigurationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OrganizationConfigurations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationConfigurationCountArgs} args - Arguments to filter OrganizationConfigurations to count.
     * @example
     * // Count the number of OrganizationConfigurations
     * const count = await prisma.organizationConfiguration.count({
     *   where: {
     *     // ... the filter for the OrganizationConfigurations we want to count
     *   }
     * })
    **/
    count<T extends OrganizationConfigurationCountArgs>(
      args?: Subset<T, OrganizationConfigurationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrganizationConfigurationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrganizationConfiguration.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationConfigurationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrganizationConfigurationAggregateArgs>(args: Subset<T, OrganizationConfigurationAggregateArgs>): Prisma.PrismaPromise<GetOrganizationConfigurationAggregateType<T>>

    /**
     * Group by OrganizationConfiguration.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrganizationConfigurationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrganizationConfigurationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrganizationConfigurationGroupByArgs['orderBy'] }
        : { orderBy?: OrganizationConfigurationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrganizationConfigurationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrganizationConfigurationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrganizationConfiguration model
   */
  readonly fields: OrganizationConfigurationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrganizationConfiguration.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrganizationConfigurationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    openingTimes<T extends OrganizationConfiguration$openingTimesArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationConfiguration$openingTimesArgs<ExtArgs>>): Prisma__OpeningTimesClient<$Result.GetResult<Prisma.$OpeningTimesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    closingTimes<T extends OrganizationConfiguration$closingTimesArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationConfiguration$closingTimesArgs<ExtArgs>>): Prisma__ClosingTimesClient<$Result.GetResult<Prisma.$ClosingTimesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    organizations<T extends OrganizationConfiguration$organizationsArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationConfiguration$organizationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrganizationConfiguration model
   */
  interface OrganizationConfigurationFieldRefs {
    readonly id: FieldRef<"OrganizationConfiguration", 'String'>
    readonly hostname: FieldRef<"OrganizationConfiguration", 'String'>
    readonly countriesShipping: FieldRef<"OrganizationConfiguration", 'String[]'>
    readonly stripeAccountId: FieldRef<"OrganizationConfiguration", 'String'>
    readonly enableHostCheckout: FieldRef<"OrganizationConfiguration", 'Boolean'>
    readonly enableHostTracking: FieldRef<"OrganizationConfiguration", 'Boolean'>
    readonly isAcceptingOrders: FieldRef<"OrganizationConfiguration", 'Boolean'>
    readonly defaultCurrency: FieldRef<"OrganizationConfiguration", 'Currency'>
    readonly defaultLocale: FieldRef<"OrganizationConfiguration", 'Locale'>
    readonly supportedLocales: FieldRef<"OrganizationConfiguration", 'Locale[]'>
    readonly openingTimesId: FieldRef<"OrganizationConfiguration", 'String'>
    readonly closingTimesId: FieldRef<"OrganizationConfiguration", 'String'>
    readonly facebookProfile: FieldRef<"OrganizationConfiguration", 'String'>
    readonly instagramProfile: FieldRef<"OrganizationConfiguration", 'String'>
    readonly xProfile: FieldRef<"OrganizationConfiguration", 'String'>
    readonly createdAt: FieldRef<"OrganizationConfiguration", 'DateTime'>
    readonly createdBy: FieldRef<"OrganizationConfiguration", 'String'>
    readonly updatedAt: FieldRef<"OrganizationConfiguration", 'DateTime'>
    readonly updatedBy: FieldRef<"OrganizationConfiguration", 'String'>
  }
    

  // Custom InputTypes
  /**
   * OrganizationConfiguration findUnique
   */
  export type OrganizationConfigurationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationConfiguration
     */
    select?: OrganizationConfigurationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationConfiguration
     */
    omit?: OrganizationConfigurationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationConfigurationInclude<ExtArgs> | null
    /**
     * Filter, which OrganizationConfiguration to fetch.
     */
    where: OrganizationConfigurationWhereUniqueInput
  }

  /**
   * OrganizationConfiguration findUniqueOrThrow
   */
  export type OrganizationConfigurationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationConfiguration
     */
    select?: OrganizationConfigurationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationConfiguration
     */
    omit?: OrganizationConfigurationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationConfigurationInclude<ExtArgs> | null
    /**
     * Filter, which OrganizationConfiguration to fetch.
     */
    where: OrganizationConfigurationWhereUniqueInput
  }

  /**
   * OrganizationConfiguration findFirst
   */
  export type OrganizationConfigurationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationConfiguration
     */
    select?: OrganizationConfigurationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationConfiguration
     */
    omit?: OrganizationConfigurationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationConfigurationInclude<ExtArgs> | null
    /**
     * Filter, which OrganizationConfiguration to fetch.
     */
    where?: OrganizationConfigurationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrganizationConfigurations to fetch.
     */
    orderBy?: OrganizationConfigurationOrderByWithRelationInput | OrganizationConfigurationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrganizationConfigurations.
     */
    cursor?: OrganizationConfigurationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrganizationConfigurations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrganizationConfigurations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrganizationConfigurations.
     */
    distinct?: OrganizationConfigurationScalarFieldEnum | OrganizationConfigurationScalarFieldEnum[]
  }

  /**
   * OrganizationConfiguration findFirstOrThrow
   */
  export type OrganizationConfigurationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationConfiguration
     */
    select?: OrganizationConfigurationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationConfiguration
     */
    omit?: OrganizationConfigurationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationConfigurationInclude<ExtArgs> | null
    /**
     * Filter, which OrganizationConfiguration to fetch.
     */
    where?: OrganizationConfigurationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrganizationConfigurations to fetch.
     */
    orderBy?: OrganizationConfigurationOrderByWithRelationInput | OrganizationConfigurationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrganizationConfigurations.
     */
    cursor?: OrganizationConfigurationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrganizationConfigurations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrganizationConfigurations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrganizationConfigurations.
     */
    distinct?: OrganizationConfigurationScalarFieldEnum | OrganizationConfigurationScalarFieldEnum[]
  }

  /**
   * OrganizationConfiguration findMany
   */
  export type OrganizationConfigurationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationConfiguration
     */
    select?: OrganizationConfigurationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationConfiguration
     */
    omit?: OrganizationConfigurationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationConfigurationInclude<ExtArgs> | null
    /**
     * Filter, which OrganizationConfigurations to fetch.
     */
    where?: OrganizationConfigurationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrganizationConfigurations to fetch.
     */
    orderBy?: OrganizationConfigurationOrderByWithRelationInput | OrganizationConfigurationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrganizationConfigurations.
     */
    cursor?: OrganizationConfigurationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrganizationConfigurations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrganizationConfigurations.
     */
    skip?: number
    distinct?: OrganizationConfigurationScalarFieldEnum | OrganizationConfigurationScalarFieldEnum[]
  }

  /**
   * OrganizationConfiguration create
   */
  export type OrganizationConfigurationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationConfiguration
     */
    select?: OrganizationConfigurationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationConfiguration
     */
    omit?: OrganizationConfigurationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationConfigurationInclude<ExtArgs> | null
    /**
     * The data needed to create a OrganizationConfiguration.
     */
    data: XOR<OrganizationConfigurationCreateInput, OrganizationConfigurationUncheckedCreateInput>
  }

  /**
   * OrganizationConfiguration createMany
   */
  export type OrganizationConfigurationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrganizationConfigurations.
     */
    data: OrganizationConfigurationCreateManyInput | OrganizationConfigurationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrganizationConfiguration createManyAndReturn
   */
  export type OrganizationConfigurationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationConfiguration
     */
    select?: OrganizationConfigurationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationConfiguration
     */
    omit?: OrganizationConfigurationOmit<ExtArgs> | null
    /**
     * The data used to create many OrganizationConfigurations.
     */
    data: OrganizationConfigurationCreateManyInput | OrganizationConfigurationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationConfigurationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrganizationConfiguration update
   */
  export type OrganizationConfigurationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationConfiguration
     */
    select?: OrganizationConfigurationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationConfiguration
     */
    omit?: OrganizationConfigurationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationConfigurationInclude<ExtArgs> | null
    /**
     * The data needed to update a OrganizationConfiguration.
     */
    data: XOR<OrganizationConfigurationUpdateInput, OrganizationConfigurationUncheckedUpdateInput>
    /**
     * Choose, which OrganizationConfiguration to update.
     */
    where: OrganizationConfigurationWhereUniqueInput
  }

  /**
   * OrganizationConfiguration updateMany
   */
  export type OrganizationConfigurationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrganizationConfigurations.
     */
    data: XOR<OrganizationConfigurationUpdateManyMutationInput, OrganizationConfigurationUncheckedUpdateManyInput>
    /**
     * Filter which OrganizationConfigurations to update
     */
    where?: OrganizationConfigurationWhereInput
    /**
     * Limit how many OrganizationConfigurations to update.
     */
    limit?: number
  }

  /**
   * OrganizationConfiguration updateManyAndReturn
   */
  export type OrganizationConfigurationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationConfiguration
     */
    select?: OrganizationConfigurationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationConfiguration
     */
    omit?: OrganizationConfigurationOmit<ExtArgs> | null
    /**
     * The data used to update OrganizationConfigurations.
     */
    data: XOR<OrganizationConfigurationUpdateManyMutationInput, OrganizationConfigurationUncheckedUpdateManyInput>
    /**
     * Filter which OrganizationConfigurations to update
     */
    where?: OrganizationConfigurationWhereInput
    /**
     * Limit how many OrganizationConfigurations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationConfigurationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrganizationConfiguration upsert
   */
  export type OrganizationConfigurationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationConfiguration
     */
    select?: OrganizationConfigurationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationConfiguration
     */
    omit?: OrganizationConfigurationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationConfigurationInclude<ExtArgs> | null
    /**
     * The filter to search for the OrganizationConfiguration to update in case it exists.
     */
    where: OrganizationConfigurationWhereUniqueInput
    /**
     * In case the OrganizationConfiguration found by the `where` argument doesn't exist, create a new OrganizationConfiguration with this data.
     */
    create: XOR<OrganizationConfigurationCreateInput, OrganizationConfigurationUncheckedCreateInput>
    /**
     * In case the OrganizationConfiguration was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrganizationConfigurationUpdateInput, OrganizationConfigurationUncheckedUpdateInput>
  }

  /**
   * OrganizationConfiguration delete
   */
  export type OrganizationConfigurationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationConfiguration
     */
    select?: OrganizationConfigurationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationConfiguration
     */
    omit?: OrganizationConfigurationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationConfigurationInclude<ExtArgs> | null
    /**
     * Filter which OrganizationConfiguration to delete.
     */
    where: OrganizationConfigurationWhereUniqueInput
  }

  /**
   * OrganizationConfiguration deleteMany
   */
  export type OrganizationConfigurationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrganizationConfigurations to delete
     */
    where?: OrganizationConfigurationWhereInput
    /**
     * Limit how many OrganizationConfigurations to delete.
     */
    limit?: number
  }

  /**
   * OrganizationConfiguration.openingTimes
   */
  export type OrganizationConfiguration$openingTimesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OpeningTimes
     */
    select?: OpeningTimesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OpeningTimes
     */
    omit?: OpeningTimesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OpeningTimesInclude<ExtArgs> | null
    where?: OpeningTimesWhereInput
  }

  /**
   * OrganizationConfiguration.closingTimes
   */
  export type OrganizationConfiguration$closingTimesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ClosingTimes
     */
    select?: ClosingTimesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ClosingTimes
     */
    omit?: ClosingTimesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ClosingTimesInclude<ExtArgs> | null
    where?: ClosingTimesWhereInput
  }

  /**
   * OrganizationConfiguration.organizations
   */
  export type OrganizationConfiguration$organizationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    where?: OrganizationWhereInput
    orderBy?: OrganizationOrderByWithRelationInput | OrganizationOrderByWithRelationInput[]
    cursor?: OrganizationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrganizationScalarFieldEnum | OrganizationScalarFieldEnum[]
  }

  /**
   * OrganizationConfiguration without action
   */
  export type OrganizationConfigurationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrganizationConfiguration
     */
    select?: OrganizationConfigurationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrganizationConfiguration
     */
    omit?: OrganizationConfigurationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationConfigurationInclude<ExtArgs> | null
  }


  /**
   * Model Address
   */

  export type AggregateAddress = {
    _count: AddressCountAggregateOutputType | null
    _avg: AddressAvgAggregateOutputType | null
    _sum: AddressSumAggregateOutputType | null
    _min: AddressMinAggregateOutputType | null
    _max: AddressMaxAggregateOutputType | null
  }

  export type AddressAvgAggregateOutputType = {
    latitude: number | null
    longitude: number | null
  }

  export type AddressSumAggregateOutputType = {
    latitude: number | null
    longitude: number | null
  }

  export type AddressMinAggregateOutputType = {
    id: string | null
    firstname: string | null
    lastname: string | null
    phone: string | null
    addressLineOne: string | null
    doorNumber: string | null
    addressLineTwo: string | null
    zipCode: string | null
    placeId: string | null
    deliveryInstructions: string | null
    city: string | null
    country: string | null
    latitude: number | null
    longitude: number | null
    isDefault: boolean | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type AddressMaxAggregateOutputType = {
    id: string | null
    firstname: string | null
    lastname: string | null
    phone: string | null
    addressLineOne: string | null
    doorNumber: string | null
    addressLineTwo: string | null
    zipCode: string | null
    placeId: string | null
    deliveryInstructions: string | null
    city: string | null
    country: string | null
    latitude: number | null
    longitude: number | null
    isDefault: boolean | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type AddressCountAggregateOutputType = {
    id: number
    firstname: number
    lastname: number
    phone: number
    addressLineOne: number
    doorNumber: number
    addressLineTwo: number
    zipCode: number
    placeId: number
    deliveryInstructions: number
    city: number
    country: number
    latitude: number
    longitude: number
    isDefault: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type AddressAvgAggregateInputType = {
    latitude?: true
    longitude?: true
  }

  export type AddressSumAggregateInputType = {
    latitude?: true
    longitude?: true
  }

  export type AddressMinAggregateInputType = {
    id?: true
    firstname?: true
    lastname?: true
    phone?: true
    addressLineOne?: true
    doorNumber?: true
    addressLineTwo?: true
    zipCode?: true
    placeId?: true
    deliveryInstructions?: true
    city?: true
    country?: true
    latitude?: true
    longitude?: true
    isDefault?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type AddressMaxAggregateInputType = {
    id?: true
    firstname?: true
    lastname?: true
    phone?: true
    addressLineOne?: true
    doorNumber?: true
    addressLineTwo?: true
    zipCode?: true
    placeId?: true
    deliveryInstructions?: true
    city?: true
    country?: true
    latitude?: true
    longitude?: true
    isDefault?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type AddressCountAggregateInputType = {
    id?: true
    firstname?: true
    lastname?: true
    phone?: true
    addressLineOne?: true
    doorNumber?: true
    addressLineTwo?: true
    zipCode?: true
    placeId?: true
    deliveryInstructions?: true
    city?: true
    country?: true
    latitude?: true
    longitude?: true
    isDefault?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type AddressAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Address to aggregate.
     */
    where?: AddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Addresses to fetch.
     */
    orderBy?: AddressOrderByWithRelationInput | AddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Addresses
    **/
    _count?: true | AddressCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AddressAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AddressSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AddressMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AddressMaxAggregateInputType
  }

  export type GetAddressAggregateType<T extends AddressAggregateArgs> = {
        [P in keyof T & keyof AggregateAddress]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAddress[P]>
      : GetScalarType<T[P], AggregateAddress[P]>
  }




  export type AddressGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AddressWhereInput
    orderBy?: AddressOrderByWithAggregationInput | AddressOrderByWithAggregationInput[]
    by: AddressScalarFieldEnum[] | AddressScalarFieldEnum
    having?: AddressScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AddressCountAggregateInputType | true
    _avg?: AddressAvgAggregateInputType
    _sum?: AddressSumAggregateInputType
    _min?: AddressMinAggregateInputType
    _max?: AddressMaxAggregateInputType
  }

  export type AddressGroupByOutputType = {
    id: string
    firstname: string | null
    lastname: string | null
    phone: string | null
    addressLineOne: string
    doorNumber: string | null
    addressLineTwo: string | null
    zipCode: string | null
    placeId: string | null
    deliveryInstructions: string | null
    city: string
    country: string | null
    latitude: number | null
    longitude: number | null
    isDefault: boolean
    createdAt: Date
    createdBy: string | null
    updatedAt: Date
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: AddressCountAggregateOutputType | null
    _avg: AddressAvgAggregateOutputType | null
    _sum: AddressSumAggregateOutputType | null
    _min: AddressMinAggregateOutputType | null
    _max: AddressMaxAggregateOutputType | null
  }

  type GetAddressGroupByPayload<T extends AddressGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AddressGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AddressGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AddressGroupByOutputType[P]>
            : GetScalarType<T[P], AddressGroupByOutputType[P]>
        }
      >
    >


  export type AddressSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstname?: boolean
    lastname?: boolean
    phone?: boolean
    addressLineOne?: boolean
    doorNumber?: boolean
    addressLineTwo?: boolean
    zipCode?: boolean
    placeId?: boolean
    deliveryInstructions?: boolean
    city?: boolean
    country?: boolean
    latitude?: boolean
    longitude?: boolean
    isDefault?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    LegalEntity?: boolean | Address$LegalEntityArgs<ExtArgs>
    organizations?: boolean | Address$organizationsArgs<ExtArgs>
    users?: boolean | Address$usersArgs<ExtArgs>
    orders?: boolean | Address$ordersArgs<ExtArgs>
    _count?: boolean | AddressCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["address"]>

  export type AddressSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstname?: boolean
    lastname?: boolean
    phone?: boolean
    addressLineOne?: boolean
    doorNumber?: boolean
    addressLineTwo?: boolean
    zipCode?: boolean
    placeId?: boolean
    deliveryInstructions?: boolean
    city?: boolean
    country?: boolean
    latitude?: boolean
    longitude?: boolean
    isDefault?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }, ExtArgs["result"]["address"]>

  export type AddressSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstname?: boolean
    lastname?: boolean
    phone?: boolean
    addressLineOne?: boolean
    doorNumber?: boolean
    addressLineTwo?: boolean
    zipCode?: boolean
    placeId?: boolean
    deliveryInstructions?: boolean
    city?: boolean
    country?: boolean
    latitude?: boolean
    longitude?: boolean
    isDefault?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }, ExtArgs["result"]["address"]>

  export type AddressSelectScalar = {
    id?: boolean
    firstname?: boolean
    lastname?: boolean
    phone?: boolean
    addressLineOne?: boolean
    doorNumber?: boolean
    addressLineTwo?: boolean
    zipCode?: boolean
    placeId?: boolean
    deliveryInstructions?: boolean
    city?: boolean
    country?: boolean
    latitude?: boolean
    longitude?: boolean
    isDefault?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type AddressOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "firstname" | "lastname" | "phone" | "addressLineOne" | "doorNumber" | "addressLineTwo" | "zipCode" | "placeId" | "deliveryInstructions" | "city" | "country" | "latitude" | "longitude" | "isDefault" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["address"]>
  export type AddressInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    LegalEntity?: boolean | Address$LegalEntityArgs<ExtArgs>
    organizations?: boolean | Address$organizationsArgs<ExtArgs>
    users?: boolean | Address$usersArgs<ExtArgs>
    orders?: boolean | Address$ordersArgs<ExtArgs>
    _count?: boolean | AddressCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AddressIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type AddressIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $AddressPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Address"
    objects: {
      LegalEntity: Prisma.$LegalEntityPayload<ExtArgs>[]
      organizations: Prisma.$OrganizationPayload<ExtArgs>[]
      users: Prisma.$UserPayload<ExtArgs>[]
      orders: Prisma.$OrderPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      firstname: string | null
      lastname: string | null
      phone: string | null
      addressLineOne: string
      doorNumber: string | null
      addressLineTwo: string | null
      zipCode: string | null
      placeId: string | null
      deliveryInstructions: string | null
      city: string
      country: string | null
      latitude: number | null
      longitude: number | null
      isDefault: boolean
      createdAt: Date
      createdBy: string | null
      updatedAt: Date
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["address"]>
    composites: {}
  }

  type AddressGetPayload<S extends boolean | null | undefined | AddressDefaultArgs> = $Result.GetResult<Prisma.$AddressPayload, S>

  type AddressCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AddressFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AddressCountAggregateInputType | true
    }

  export interface AddressDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Address'], meta: { name: 'Address' } }
    /**
     * Find zero or one Address that matches the filter.
     * @param {AddressFindUniqueArgs} args - Arguments to find a Address
     * @example
     * // Get one Address
     * const address = await prisma.address.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AddressFindUniqueArgs>(args: SelectSubset<T, AddressFindUniqueArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Address that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AddressFindUniqueOrThrowArgs} args - Arguments to find a Address
     * @example
     * // Get one Address
     * const address = await prisma.address.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AddressFindUniqueOrThrowArgs>(args: SelectSubset<T, AddressFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Address that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressFindFirstArgs} args - Arguments to find a Address
     * @example
     * // Get one Address
     * const address = await prisma.address.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AddressFindFirstArgs>(args?: SelectSubset<T, AddressFindFirstArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Address that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressFindFirstOrThrowArgs} args - Arguments to find a Address
     * @example
     * // Get one Address
     * const address = await prisma.address.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AddressFindFirstOrThrowArgs>(args?: SelectSubset<T, AddressFindFirstOrThrowArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Addresses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Addresses
     * const addresses = await prisma.address.findMany()
     * 
     * // Get first 10 Addresses
     * const addresses = await prisma.address.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const addressWithIdOnly = await prisma.address.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AddressFindManyArgs>(args?: SelectSubset<T, AddressFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Address.
     * @param {AddressCreateArgs} args - Arguments to create a Address.
     * @example
     * // Create one Address
     * const Address = await prisma.address.create({
     *   data: {
     *     // ... data to create a Address
     *   }
     * })
     * 
     */
    create<T extends AddressCreateArgs>(args: SelectSubset<T, AddressCreateArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Addresses.
     * @param {AddressCreateManyArgs} args - Arguments to create many Addresses.
     * @example
     * // Create many Addresses
     * const address = await prisma.address.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AddressCreateManyArgs>(args?: SelectSubset<T, AddressCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Addresses and returns the data saved in the database.
     * @param {AddressCreateManyAndReturnArgs} args - Arguments to create many Addresses.
     * @example
     * // Create many Addresses
     * const address = await prisma.address.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Addresses and only return the `id`
     * const addressWithIdOnly = await prisma.address.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AddressCreateManyAndReturnArgs>(args?: SelectSubset<T, AddressCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Address.
     * @param {AddressDeleteArgs} args - Arguments to delete one Address.
     * @example
     * // Delete one Address
     * const Address = await prisma.address.delete({
     *   where: {
     *     // ... filter to delete one Address
     *   }
     * })
     * 
     */
    delete<T extends AddressDeleteArgs>(args: SelectSubset<T, AddressDeleteArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Address.
     * @param {AddressUpdateArgs} args - Arguments to update one Address.
     * @example
     * // Update one Address
     * const address = await prisma.address.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AddressUpdateArgs>(args: SelectSubset<T, AddressUpdateArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Addresses.
     * @param {AddressDeleteManyArgs} args - Arguments to filter Addresses to delete.
     * @example
     * // Delete a few Addresses
     * const { count } = await prisma.address.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AddressDeleteManyArgs>(args?: SelectSubset<T, AddressDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Addresses
     * const address = await prisma.address.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AddressUpdateManyArgs>(args: SelectSubset<T, AddressUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Addresses and returns the data updated in the database.
     * @param {AddressUpdateManyAndReturnArgs} args - Arguments to update many Addresses.
     * @example
     * // Update many Addresses
     * const address = await prisma.address.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Addresses and only return the `id`
     * const addressWithIdOnly = await prisma.address.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AddressUpdateManyAndReturnArgs>(args: SelectSubset<T, AddressUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Address.
     * @param {AddressUpsertArgs} args - Arguments to update or create a Address.
     * @example
     * // Update or create a Address
     * const address = await prisma.address.upsert({
     *   create: {
     *     // ... data to create a Address
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Address we want to update
     *   }
     * })
     */
    upsert<T extends AddressUpsertArgs>(args: SelectSubset<T, AddressUpsertArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressCountArgs} args - Arguments to filter Addresses to count.
     * @example
     * // Count the number of Addresses
     * const count = await prisma.address.count({
     *   where: {
     *     // ... the filter for the Addresses we want to count
     *   }
     * })
    **/
    count<T extends AddressCountArgs>(
      args?: Subset<T, AddressCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AddressCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Address.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AddressAggregateArgs>(args: Subset<T, AddressAggregateArgs>): Prisma.PrismaPromise<GetAddressAggregateType<T>>

    /**
     * Group by Address.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AddressGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AddressGroupByArgs['orderBy'] }
        : { orderBy?: AddressGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AddressGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAddressGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Address model
   */
  readonly fields: AddressFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Address.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AddressClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    LegalEntity<T extends Address$LegalEntityArgs<ExtArgs> = {}>(args?: Subset<T, Address$LegalEntityArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LegalEntityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    organizations<T extends Address$organizationsArgs<ExtArgs> = {}>(args?: Subset<T, Address$organizationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends Address$usersArgs<ExtArgs> = {}>(args?: Subset<T, Address$usersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    orders<T extends Address$ordersArgs<ExtArgs> = {}>(args?: Subset<T, Address$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Address model
   */
  interface AddressFieldRefs {
    readonly id: FieldRef<"Address", 'String'>
    readonly firstname: FieldRef<"Address", 'String'>
    readonly lastname: FieldRef<"Address", 'String'>
    readonly phone: FieldRef<"Address", 'String'>
    readonly addressLineOne: FieldRef<"Address", 'String'>
    readonly doorNumber: FieldRef<"Address", 'String'>
    readonly addressLineTwo: FieldRef<"Address", 'String'>
    readonly zipCode: FieldRef<"Address", 'String'>
    readonly placeId: FieldRef<"Address", 'String'>
    readonly deliveryInstructions: FieldRef<"Address", 'String'>
    readonly city: FieldRef<"Address", 'String'>
    readonly country: FieldRef<"Address", 'String'>
    readonly latitude: FieldRef<"Address", 'Float'>
    readonly longitude: FieldRef<"Address", 'Float'>
    readonly isDefault: FieldRef<"Address", 'Boolean'>
    readonly createdAt: FieldRef<"Address", 'DateTime'>
    readonly createdBy: FieldRef<"Address", 'String'>
    readonly updatedAt: FieldRef<"Address", 'DateTime'>
    readonly updatedBy: FieldRef<"Address", 'String'>
    readonly deletedAt: FieldRef<"Address", 'DateTime'>
    readonly deletedBy: FieldRef<"Address", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Address findUnique
   */
  export type AddressFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * Filter, which Address to fetch.
     */
    where: AddressWhereUniqueInput
  }

  /**
   * Address findUniqueOrThrow
   */
  export type AddressFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * Filter, which Address to fetch.
     */
    where: AddressWhereUniqueInput
  }

  /**
   * Address findFirst
   */
  export type AddressFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * Filter, which Address to fetch.
     */
    where?: AddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Addresses to fetch.
     */
    orderBy?: AddressOrderByWithRelationInput | AddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Addresses.
     */
    cursor?: AddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Addresses.
     */
    distinct?: AddressScalarFieldEnum | AddressScalarFieldEnum[]
  }

  /**
   * Address findFirstOrThrow
   */
  export type AddressFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * Filter, which Address to fetch.
     */
    where?: AddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Addresses to fetch.
     */
    orderBy?: AddressOrderByWithRelationInput | AddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Addresses.
     */
    cursor?: AddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Addresses.
     */
    distinct?: AddressScalarFieldEnum | AddressScalarFieldEnum[]
  }

  /**
   * Address findMany
   */
  export type AddressFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * Filter, which Addresses to fetch.
     */
    where?: AddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Addresses to fetch.
     */
    orderBy?: AddressOrderByWithRelationInput | AddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Addresses.
     */
    cursor?: AddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Addresses.
     */
    skip?: number
    distinct?: AddressScalarFieldEnum | AddressScalarFieldEnum[]
  }

  /**
   * Address create
   */
  export type AddressCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * The data needed to create a Address.
     */
    data: XOR<AddressCreateInput, AddressUncheckedCreateInput>
  }

  /**
   * Address createMany
   */
  export type AddressCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Addresses.
     */
    data: AddressCreateManyInput | AddressCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Address createManyAndReturn
   */
  export type AddressCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * The data used to create many Addresses.
     */
    data: AddressCreateManyInput | AddressCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Address update
   */
  export type AddressUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * The data needed to update a Address.
     */
    data: XOR<AddressUpdateInput, AddressUncheckedUpdateInput>
    /**
     * Choose, which Address to update.
     */
    where: AddressWhereUniqueInput
  }

  /**
   * Address updateMany
   */
  export type AddressUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Addresses.
     */
    data: XOR<AddressUpdateManyMutationInput, AddressUncheckedUpdateManyInput>
    /**
     * Filter which Addresses to update
     */
    where?: AddressWhereInput
    /**
     * Limit how many Addresses to update.
     */
    limit?: number
  }

  /**
   * Address updateManyAndReturn
   */
  export type AddressUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * The data used to update Addresses.
     */
    data: XOR<AddressUpdateManyMutationInput, AddressUncheckedUpdateManyInput>
    /**
     * Filter which Addresses to update
     */
    where?: AddressWhereInput
    /**
     * Limit how many Addresses to update.
     */
    limit?: number
  }

  /**
   * Address upsert
   */
  export type AddressUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * The filter to search for the Address to update in case it exists.
     */
    where: AddressWhereUniqueInput
    /**
     * In case the Address found by the `where` argument doesn't exist, create a new Address with this data.
     */
    create: XOR<AddressCreateInput, AddressUncheckedCreateInput>
    /**
     * In case the Address was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AddressUpdateInput, AddressUncheckedUpdateInput>
  }

  /**
   * Address delete
   */
  export type AddressDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * Filter which Address to delete.
     */
    where: AddressWhereUniqueInput
  }

  /**
   * Address deleteMany
   */
  export type AddressDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Addresses to delete
     */
    where?: AddressWhereInput
    /**
     * Limit how many Addresses to delete.
     */
    limit?: number
  }

  /**
   * Address.LegalEntity
   */
  export type Address$LegalEntityArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalEntity
     */
    select?: LegalEntitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the LegalEntity
     */
    omit?: LegalEntityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LegalEntityInclude<ExtArgs> | null
    where?: LegalEntityWhereInput
    orderBy?: LegalEntityOrderByWithRelationInput | LegalEntityOrderByWithRelationInput[]
    cursor?: LegalEntityWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LegalEntityScalarFieldEnum | LegalEntityScalarFieldEnum[]
  }

  /**
   * Address.organizations
   */
  export type Address$organizationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    where?: OrganizationWhereInput
    orderBy?: OrganizationOrderByWithRelationInput | OrganizationOrderByWithRelationInput[]
    cursor?: OrganizationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrganizationScalarFieldEnum | OrganizationScalarFieldEnum[]
  }

  /**
   * Address.users
   */
  export type Address$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    cursor?: UserWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * Address.orders
   */
  export type Address$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Address without action
   */
  export type AddressDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
  }


  /**
   * Model LegalEntity
   */

  export type AggregateLegalEntity = {
    _count: LegalEntityCountAggregateOutputType | null
    _min: LegalEntityMinAggregateOutputType | null
    _max: LegalEntityMaxAggregateOutputType | null
  }

  export type LegalEntityMinAggregateOutputType = {
    id: string | null
    name: string | null
    taxId: string | null
    addressId: string | null
    email: string | null
    phone: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type LegalEntityMaxAggregateOutputType = {
    id: string | null
    name: string | null
    taxId: string | null
    addressId: string | null
    email: string | null
    phone: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type LegalEntityCountAggregateOutputType = {
    id: number
    name: number
    taxId: number
    addressId: number
    email: number
    phone: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type LegalEntityMinAggregateInputType = {
    id?: true
    name?: true
    taxId?: true
    addressId?: true
    email?: true
    phone?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type LegalEntityMaxAggregateInputType = {
    id?: true
    name?: true
    taxId?: true
    addressId?: true
    email?: true
    phone?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type LegalEntityCountAggregateInputType = {
    id?: true
    name?: true
    taxId?: true
    addressId?: true
    email?: true
    phone?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type LegalEntityAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LegalEntity to aggregate.
     */
    where?: LegalEntityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LegalEntities to fetch.
     */
    orderBy?: LegalEntityOrderByWithRelationInput | LegalEntityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LegalEntityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LegalEntities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LegalEntities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LegalEntities
    **/
    _count?: true | LegalEntityCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LegalEntityMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LegalEntityMaxAggregateInputType
  }

  export type GetLegalEntityAggregateType<T extends LegalEntityAggregateArgs> = {
        [P in keyof T & keyof AggregateLegalEntity]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLegalEntity[P]>
      : GetScalarType<T[P], AggregateLegalEntity[P]>
  }




  export type LegalEntityGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LegalEntityWhereInput
    orderBy?: LegalEntityOrderByWithAggregationInput | LegalEntityOrderByWithAggregationInput[]
    by: LegalEntityScalarFieldEnum[] | LegalEntityScalarFieldEnum
    having?: LegalEntityScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LegalEntityCountAggregateInputType | true
    _min?: LegalEntityMinAggregateInputType
    _max?: LegalEntityMaxAggregateInputType
  }

  export type LegalEntityGroupByOutputType = {
    id: string
    name: string
    taxId: string
    addressId: string
    email: string | null
    phone: string | null
    createdAt: Date
    createdBy: string | null
    updatedAt: Date
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: LegalEntityCountAggregateOutputType | null
    _min: LegalEntityMinAggregateOutputType | null
    _max: LegalEntityMaxAggregateOutputType | null
  }

  type GetLegalEntityGroupByPayload<T extends LegalEntityGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LegalEntityGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LegalEntityGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LegalEntityGroupByOutputType[P]>
            : GetScalarType<T[P], LegalEntityGroupByOutputType[P]>
        }
      >
    >


  export type LegalEntitySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    taxId?: boolean
    addressId?: boolean
    email?: boolean
    phone?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    address?: boolean | AddressDefaultArgs<ExtArgs>
    organizations?: boolean | LegalEntity$organizationsArgs<ExtArgs>
    _count?: boolean | LegalEntityCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["legalEntity"]>

  export type LegalEntitySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    taxId?: boolean
    addressId?: boolean
    email?: boolean
    phone?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    address?: boolean | AddressDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["legalEntity"]>

  export type LegalEntitySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    taxId?: boolean
    addressId?: boolean
    email?: boolean
    phone?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    address?: boolean | AddressDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["legalEntity"]>

  export type LegalEntitySelectScalar = {
    id?: boolean
    name?: boolean
    taxId?: boolean
    addressId?: boolean
    email?: boolean
    phone?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type LegalEntityOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "taxId" | "addressId" | "email" | "phone" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["legalEntity"]>
  export type LegalEntityInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    address?: boolean | AddressDefaultArgs<ExtArgs>
    organizations?: boolean | LegalEntity$organizationsArgs<ExtArgs>
    _count?: boolean | LegalEntityCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type LegalEntityIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    address?: boolean | AddressDefaultArgs<ExtArgs>
  }
  export type LegalEntityIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    address?: boolean | AddressDefaultArgs<ExtArgs>
  }

  export type $LegalEntityPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "LegalEntity"
    objects: {
      address: Prisma.$AddressPayload<ExtArgs>
      organizations: Prisma.$OrganizationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      taxId: string
      addressId: string
      email: string | null
      phone: string | null
      createdAt: Date
      createdBy: string | null
      updatedAt: Date
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["legalEntity"]>
    composites: {}
  }

  type LegalEntityGetPayload<S extends boolean | null | undefined | LegalEntityDefaultArgs> = $Result.GetResult<Prisma.$LegalEntityPayload, S>

  type LegalEntityCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LegalEntityFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LegalEntityCountAggregateInputType | true
    }

  export interface LegalEntityDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['LegalEntity'], meta: { name: 'LegalEntity' } }
    /**
     * Find zero or one LegalEntity that matches the filter.
     * @param {LegalEntityFindUniqueArgs} args - Arguments to find a LegalEntity
     * @example
     * // Get one LegalEntity
     * const legalEntity = await prisma.legalEntity.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LegalEntityFindUniqueArgs>(args: SelectSubset<T, LegalEntityFindUniqueArgs<ExtArgs>>): Prisma__LegalEntityClient<$Result.GetResult<Prisma.$LegalEntityPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one LegalEntity that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LegalEntityFindUniqueOrThrowArgs} args - Arguments to find a LegalEntity
     * @example
     * // Get one LegalEntity
     * const legalEntity = await prisma.legalEntity.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LegalEntityFindUniqueOrThrowArgs>(args: SelectSubset<T, LegalEntityFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LegalEntityClient<$Result.GetResult<Prisma.$LegalEntityPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LegalEntity that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LegalEntityFindFirstArgs} args - Arguments to find a LegalEntity
     * @example
     * // Get one LegalEntity
     * const legalEntity = await prisma.legalEntity.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LegalEntityFindFirstArgs>(args?: SelectSubset<T, LegalEntityFindFirstArgs<ExtArgs>>): Prisma__LegalEntityClient<$Result.GetResult<Prisma.$LegalEntityPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LegalEntity that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LegalEntityFindFirstOrThrowArgs} args - Arguments to find a LegalEntity
     * @example
     * // Get one LegalEntity
     * const legalEntity = await prisma.legalEntity.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LegalEntityFindFirstOrThrowArgs>(args?: SelectSubset<T, LegalEntityFindFirstOrThrowArgs<ExtArgs>>): Prisma__LegalEntityClient<$Result.GetResult<Prisma.$LegalEntityPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more LegalEntities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LegalEntityFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LegalEntities
     * const legalEntities = await prisma.legalEntity.findMany()
     * 
     * // Get first 10 LegalEntities
     * const legalEntities = await prisma.legalEntity.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const legalEntityWithIdOnly = await prisma.legalEntity.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LegalEntityFindManyArgs>(args?: SelectSubset<T, LegalEntityFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LegalEntityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a LegalEntity.
     * @param {LegalEntityCreateArgs} args - Arguments to create a LegalEntity.
     * @example
     * // Create one LegalEntity
     * const LegalEntity = await prisma.legalEntity.create({
     *   data: {
     *     // ... data to create a LegalEntity
     *   }
     * })
     * 
     */
    create<T extends LegalEntityCreateArgs>(args: SelectSubset<T, LegalEntityCreateArgs<ExtArgs>>): Prisma__LegalEntityClient<$Result.GetResult<Prisma.$LegalEntityPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many LegalEntities.
     * @param {LegalEntityCreateManyArgs} args - Arguments to create many LegalEntities.
     * @example
     * // Create many LegalEntities
     * const legalEntity = await prisma.legalEntity.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LegalEntityCreateManyArgs>(args?: SelectSubset<T, LegalEntityCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many LegalEntities and returns the data saved in the database.
     * @param {LegalEntityCreateManyAndReturnArgs} args - Arguments to create many LegalEntities.
     * @example
     * // Create many LegalEntities
     * const legalEntity = await prisma.legalEntity.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many LegalEntities and only return the `id`
     * const legalEntityWithIdOnly = await prisma.legalEntity.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LegalEntityCreateManyAndReturnArgs>(args?: SelectSubset<T, LegalEntityCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LegalEntityPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a LegalEntity.
     * @param {LegalEntityDeleteArgs} args - Arguments to delete one LegalEntity.
     * @example
     * // Delete one LegalEntity
     * const LegalEntity = await prisma.legalEntity.delete({
     *   where: {
     *     // ... filter to delete one LegalEntity
     *   }
     * })
     * 
     */
    delete<T extends LegalEntityDeleteArgs>(args: SelectSubset<T, LegalEntityDeleteArgs<ExtArgs>>): Prisma__LegalEntityClient<$Result.GetResult<Prisma.$LegalEntityPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one LegalEntity.
     * @param {LegalEntityUpdateArgs} args - Arguments to update one LegalEntity.
     * @example
     * // Update one LegalEntity
     * const legalEntity = await prisma.legalEntity.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LegalEntityUpdateArgs>(args: SelectSubset<T, LegalEntityUpdateArgs<ExtArgs>>): Prisma__LegalEntityClient<$Result.GetResult<Prisma.$LegalEntityPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more LegalEntities.
     * @param {LegalEntityDeleteManyArgs} args - Arguments to filter LegalEntities to delete.
     * @example
     * // Delete a few LegalEntities
     * const { count } = await prisma.legalEntity.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LegalEntityDeleteManyArgs>(args?: SelectSubset<T, LegalEntityDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LegalEntities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LegalEntityUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LegalEntities
     * const legalEntity = await prisma.legalEntity.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LegalEntityUpdateManyArgs>(args: SelectSubset<T, LegalEntityUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LegalEntities and returns the data updated in the database.
     * @param {LegalEntityUpdateManyAndReturnArgs} args - Arguments to update many LegalEntities.
     * @example
     * // Update many LegalEntities
     * const legalEntity = await prisma.legalEntity.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more LegalEntities and only return the `id`
     * const legalEntityWithIdOnly = await prisma.legalEntity.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LegalEntityUpdateManyAndReturnArgs>(args: SelectSubset<T, LegalEntityUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LegalEntityPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one LegalEntity.
     * @param {LegalEntityUpsertArgs} args - Arguments to update or create a LegalEntity.
     * @example
     * // Update or create a LegalEntity
     * const legalEntity = await prisma.legalEntity.upsert({
     *   create: {
     *     // ... data to create a LegalEntity
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LegalEntity we want to update
     *   }
     * })
     */
    upsert<T extends LegalEntityUpsertArgs>(args: SelectSubset<T, LegalEntityUpsertArgs<ExtArgs>>): Prisma__LegalEntityClient<$Result.GetResult<Prisma.$LegalEntityPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of LegalEntities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LegalEntityCountArgs} args - Arguments to filter LegalEntities to count.
     * @example
     * // Count the number of LegalEntities
     * const count = await prisma.legalEntity.count({
     *   where: {
     *     // ... the filter for the LegalEntities we want to count
     *   }
     * })
    **/
    count<T extends LegalEntityCountArgs>(
      args?: Subset<T, LegalEntityCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LegalEntityCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LegalEntity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LegalEntityAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LegalEntityAggregateArgs>(args: Subset<T, LegalEntityAggregateArgs>): Prisma.PrismaPromise<GetLegalEntityAggregateType<T>>

    /**
     * Group by LegalEntity.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LegalEntityGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LegalEntityGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LegalEntityGroupByArgs['orderBy'] }
        : { orderBy?: LegalEntityGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LegalEntityGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLegalEntityGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the LegalEntity model
   */
  readonly fields: LegalEntityFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for LegalEntity.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LegalEntityClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    address<T extends AddressDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AddressDefaultArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    organizations<T extends LegalEntity$organizationsArgs<ExtArgs> = {}>(args?: Subset<T, LegalEntity$organizationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the LegalEntity model
   */
  interface LegalEntityFieldRefs {
    readonly id: FieldRef<"LegalEntity", 'String'>
    readonly name: FieldRef<"LegalEntity", 'String'>
    readonly taxId: FieldRef<"LegalEntity", 'String'>
    readonly addressId: FieldRef<"LegalEntity", 'String'>
    readonly email: FieldRef<"LegalEntity", 'String'>
    readonly phone: FieldRef<"LegalEntity", 'String'>
    readonly createdAt: FieldRef<"LegalEntity", 'DateTime'>
    readonly createdBy: FieldRef<"LegalEntity", 'String'>
    readonly updatedAt: FieldRef<"LegalEntity", 'DateTime'>
    readonly updatedBy: FieldRef<"LegalEntity", 'String'>
    readonly deletedAt: FieldRef<"LegalEntity", 'DateTime'>
    readonly deletedBy: FieldRef<"LegalEntity", 'String'>
  }
    

  // Custom InputTypes
  /**
   * LegalEntity findUnique
   */
  export type LegalEntityFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalEntity
     */
    select?: LegalEntitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the LegalEntity
     */
    omit?: LegalEntityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LegalEntityInclude<ExtArgs> | null
    /**
     * Filter, which LegalEntity to fetch.
     */
    where: LegalEntityWhereUniqueInput
  }

  /**
   * LegalEntity findUniqueOrThrow
   */
  export type LegalEntityFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalEntity
     */
    select?: LegalEntitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the LegalEntity
     */
    omit?: LegalEntityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LegalEntityInclude<ExtArgs> | null
    /**
     * Filter, which LegalEntity to fetch.
     */
    where: LegalEntityWhereUniqueInput
  }

  /**
   * LegalEntity findFirst
   */
  export type LegalEntityFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalEntity
     */
    select?: LegalEntitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the LegalEntity
     */
    omit?: LegalEntityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LegalEntityInclude<ExtArgs> | null
    /**
     * Filter, which LegalEntity to fetch.
     */
    where?: LegalEntityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LegalEntities to fetch.
     */
    orderBy?: LegalEntityOrderByWithRelationInput | LegalEntityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LegalEntities.
     */
    cursor?: LegalEntityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LegalEntities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LegalEntities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LegalEntities.
     */
    distinct?: LegalEntityScalarFieldEnum | LegalEntityScalarFieldEnum[]
  }

  /**
   * LegalEntity findFirstOrThrow
   */
  export type LegalEntityFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalEntity
     */
    select?: LegalEntitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the LegalEntity
     */
    omit?: LegalEntityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LegalEntityInclude<ExtArgs> | null
    /**
     * Filter, which LegalEntity to fetch.
     */
    where?: LegalEntityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LegalEntities to fetch.
     */
    orderBy?: LegalEntityOrderByWithRelationInput | LegalEntityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LegalEntities.
     */
    cursor?: LegalEntityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LegalEntities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LegalEntities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LegalEntities.
     */
    distinct?: LegalEntityScalarFieldEnum | LegalEntityScalarFieldEnum[]
  }

  /**
   * LegalEntity findMany
   */
  export type LegalEntityFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalEntity
     */
    select?: LegalEntitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the LegalEntity
     */
    omit?: LegalEntityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LegalEntityInclude<ExtArgs> | null
    /**
     * Filter, which LegalEntities to fetch.
     */
    where?: LegalEntityWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LegalEntities to fetch.
     */
    orderBy?: LegalEntityOrderByWithRelationInput | LegalEntityOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LegalEntities.
     */
    cursor?: LegalEntityWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LegalEntities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LegalEntities.
     */
    skip?: number
    distinct?: LegalEntityScalarFieldEnum | LegalEntityScalarFieldEnum[]
  }

  /**
   * LegalEntity create
   */
  export type LegalEntityCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalEntity
     */
    select?: LegalEntitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the LegalEntity
     */
    omit?: LegalEntityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LegalEntityInclude<ExtArgs> | null
    /**
     * The data needed to create a LegalEntity.
     */
    data: XOR<LegalEntityCreateInput, LegalEntityUncheckedCreateInput>
  }

  /**
   * LegalEntity createMany
   */
  export type LegalEntityCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many LegalEntities.
     */
    data: LegalEntityCreateManyInput | LegalEntityCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LegalEntity createManyAndReturn
   */
  export type LegalEntityCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalEntity
     */
    select?: LegalEntitySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LegalEntity
     */
    omit?: LegalEntityOmit<ExtArgs> | null
    /**
     * The data used to create many LegalEntities.
     */
    data: LegalEntityCreateManyInput | LegalEntityCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LegalEntityIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * LegalEntity update
   */
  export type LegalEntityUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalEntity
     */
    select?: LegalEntitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the LegalEntity
     */
    omit?: LegalEntityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LegalEntityInclude<ExtArgs> | null
    /**
     * The data needed to update a LegalEntity.
     */
    data: XOR<LegalEntityUpdateInput, LegalEntityUncheckedUpdateInput>
    /**
     * Choose, which LegalEntity to update.
     */
    where: LegalEntityWhereUniqueInput
  }

  /**
   * LegalEntity updateMany
   */
  export type LegalEntityUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update LegalEntities.
     */
    data: XOR<LegalEntityUpdateManyMutationInput, LegalEntityUncheckedUpdateManyInput>
    /**
     * Filter which LegalEntities to update
     */
    where?: LegalEntityWhereInput
    /**
     * Limit how many LegalEntities to update.
     */
    limit?: number
  }

  /**
   * LegalEntity updateManyAndReturn
   */
  export type LegalEntityUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalEntity
     */
    select?: LegalEntitySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LegalEntity
     */
    omit?: LegalEntityOmit<ExtArgs> | null
    /**
     * The data used to update LegalEntities.
     */
    data: XOR<LegalEntityUpdateManyMutationInput, LegalEntityUncheckedUpdateManyInput>
    /**
     * Filter which LegalEntities to update
     */
    where?: LegalEntityWhereInput
    /**
     * Limit how many LegalEntities to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LegalEntityIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * LegalEntity upsert
   */
  export type LegalEntityUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalEntity
     */
    select?: LegalEntitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the LegalEntity
     */
    omit?: LegalEntityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LegalEntityInclude<ExtArgs> | null
    /**
     * The filter to search for the LegalEntity to update in case it exists.
     */
    where: LegalEntityWhereUniqueInput
    /**
     * In case the LegalEntity found by the `where` argument doesn't exist, create a new LegalEntity with this data.
     */
    create: XOR<LegalEntityCreateInput, LegalEntityUncheckedCreateInput>
    /**
     * In case the LegalEntity was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LegalEntityUpdateInput, LegalEntityUncheckedUpdateInput>
  }

  /**
   * LegalEntity delete
   */
  export type LegalEntityDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalEntity
     */
    select?: LegalEntitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the LegalEntity
     */
    omit?: LegalEntityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LegalEntityInclude<ExtArgs> | null
    /**
     * Filter which LegalEntity to delete.
     */
    where: LegalEntityWhereUniqueInput
  }

  /**
   * LegalEntity deleteMany
   */
  export type LegalEntityDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LegalEntities to delete
     */
    where?: LegalEntityWhereInput
    /**
     * Limit how many LegalEntities to delete.
     */
    limit?: number
  }

  /**
   * LegalEntity.organizations
   */
  export type LegalEntity$organizationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    where?: OrganizationWhereInput
    orderBy?: OrganizationOrderByWithRelationInput | OrganizationOrderByWithRelationInput[]
    cursor?: OrganizationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrganizationScalarFieldEnum | OrganizationScalarFieldEnum[]
  }

  /**
   * LegalEntity without action
   */
  export type LegalEntityDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LegalEntity
     */
    select?: LegalEntitySelect<ExtArgs> | null
    /**
     * Omit specific fields from the LegalEntity
     */
    omit?: LegalEntityOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: LegalEntityInclude<ExtArgs> | null
  }


  /**
   * Model File
   */

  export type AggregateFile = {
    _count: FileCountAggregateOutputType | null
    _avg: FileAvgAggregateOutputType | null
    _sum: FileSumAggregateOutputType | null
    _min: FileMinAggregateOutputType | null
    _max: FileMaxAggregateOutputType | null
  }

  export type FileAvgAggregateOutputType = {
    size: number | null
  }

  export type FileSumAggregateOutputType = {
    size: number | null
  }

  export type FileMinAggregateOutputType = {
    id: string | null
    mimeType: string | null
    size: number | null
    filename: string | null
    url: string | null
    status: $Enums.FileUploadStatus | null
    organizationId: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type FileMaxAggregateOutputType = {
    id: string | null
    mimeType: string | null
    size: number | null
    filename: string | null
    url: string | null
    status: $Enums.FileUploadStatus | null
    organizationId: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type FileCountAggregateOutputType = {
    id: number
    mimeType: number
    size: number
    filename: number
    url: number
    status: number
    organizationId: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type FileAvgAggregateInputType = {
    size?: true
  }

  export type FileSumAggregateInputType = {
    size?: true
  }

  export type FileMinAggregateInputType = {
    id?: true
    mimeType?: true
    size?: true
    filename?: true
    url?: true
    status?: true
    organizationId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type FileMaxAggregateInputType = {
    id?: true
    mimeType?: true
    size?: true
    filename?: true
    url?: true
    status?: true
    organizationId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type FileCountAggregateInputType = {
    id?: true
    mimeType?: true
    size?: true
    filename?: true
    url?: true
    status?: true
    organizationId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type FileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which File to aggregate.
     */
    where?: FileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Files to fetch.
     */
    orderBy?: FileOrderByWithRelationInput | FileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Files
    **/
    _count?: true | FileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FileAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FileSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FileMaxAggregateInputType
  }

  export type GetFileAggregateType<T extends FileAggregateArgs> = {
        [P in keyof T & keyof AggregateFile]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFile[P]>
      : GetScalarType<T[P], AggregateFile[P]>
  }




  export type FileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FileWhereInput
    orderBy?: FileOrderByWithAggregationInput | FileOrderByWithAggregationInput[]
    by: FileScalarFieldEnum[] | FileScalarFieldEnum
    having?: FileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FileCountAggregateInputType | true
    _avg?: FileAvgAggregateInputType
    _sum?: FileSumAggregateInputType
    _min?: FileMinAggregateInputType
    _max?: FileMaxAggregateInputType
  }

  export type FileGroupByOutputType = {
    id: string
    mimeType: string | null
    size: number | null
    filename: string | null
    url: string | null
    status: $Enums.FileUploadStatus
    organizationId: string | null
    createdAt: Date
    createdBy: string | null
    updatedAt: Date
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: FileCountAggregateOutputType | null
    _avg: FileAvgAggregateOutputType | null
    _sum: FileSumAggregateOutputType | null
    _min: FileMinAggregateOutputType | null
    _max: FileMaxAggregateOutputType | null
  }

  type GetFileGroupByPayload<T extends FileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FileGroupByOutputType[P]>
            : GetScalarType<T[P], FileGroupByOutputType[P]>
        }
      >
    >


  export type FileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mimeType?: boolean
    size?: boolean
    filename?: boolean
    url?: boolean
    status?: boolean
    organizationId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    organization?: boolean | File$organizationArgs<ExtArgs>
    manufacturerLogo?: boolean | File$manufacturerLogoArgs<ExtArgs>
    productCategoryImage?: boolean | File$productCategoryImageArgs<ExtArgs>
    productImages?: boolean | File$productImagesArgs<ExtArgs>
    modifierImages?: boolean | File$modifierImagesArgs<ExtArgs>
    shippingMethodLogoFor?: boolean | File$shippingMethodLogoForArgs<ExtArgs>
    organizationLogo?: boolean | File$organizationLogoArgs<ExtArgs>
    orderItemImages?: boolean | File$orderItemImagesArgs<ExtArgs>
    _count?: boolean | FileCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["file"]>

  export type FileSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mimeType?: boolean
    size?: boolean
    filename?: boolean
    url?: boolean
    status?: boolean
    organizationId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    organization?: boolean | File$organizationArgs<ExtArgs>
  }, ExtArgs["result"]["file"]>

  export type FileSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    mimeType?: boolean
    size?: boolean
    filename?: boolean
    url?: boolean
    status?: boolean
    organizationId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    organization?: boolean | File$organizationArgs<ExtArgs>
  }, ExtArgs["result"]["file"]>

  export type FileSelectScalar = {
    id?: boolean
    mimeType?: boolean
    size?: boolean
    filename?: boolean
    url?: boolean
    status?: boolean
    organizationId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type FileOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "mimeType" | "size" | "filename" | "url" | "status" | "organizationId" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["file"]>
  export type FileInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | File$organizationArgs<ExtArgs>
    manufacturerLogo?: boolean | File$manufacturerLogoArgs<ExtArgs>
    productCategoryImage?: boolean | File$productCategoryImageArgs<ExtArgs>
    productImages?: boolean | File$productImagesArgs<ExtArgs>
    modifierImages?: boolean | File$modifierImagesArgs<ExtArgs>
    shippingMethodLogoFor?: boolean | File$shippingMethodLogoForArgs<ExtArgs>
    organizationLogo?: boolean | File$organizationLogoArgs<ExtArgs>
    orderItemImages?: boolean | File$orderItemImagesArgs<ExtArgs>
    _count?: boolean | FileCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type FileIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | File$organizationArgs<ExtArgs>
  }
  export type FileIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | File$organizationArgs<ExtArgs>
  }

  export type $FilePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "File"
    objects: {
      organization: Prisma.$OrganizationPayload<ExtArgs> | null
      manufacturerLogo: Prisma.$ManufacturerPayload<ExtArgs> | null
      productCategoryImage: Prisma.$ProductCategoryPayload<ExtArgs> | null
      productImages: Prisma.$ProductPayload<ExtArgs>[]
      modifierImages: Prisma.$ModifierPayload<ExtArgs>[]
      shippingMethodLogoFor: Prisma.$ShippingMethodPayload<ExtArgs> | null
      organizationLogo: Prisma.$OrganizationPayload<ExtArgs> | null
      orderItemImages: Prisma.$OrderItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      mimeType: string | null
      size: number | null
      filename: string | null
      url: string | null
      status: $Enums.FileUploadStatus
      organizationId: string | null
      createdAt: Date
      createdBy: string | null
      updatedAt: Date
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["file"]>
    composites: {}
  }

  type FileGetPayload<S extends boolean | null | undefined | FileDefaultArgs> = $Result.GetResult<Prisma.$FilePayload, S>

  type FileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FileCountAggregateInputType | true
    }

  export interface FileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['File'], meta: { name: 'File' } }
    /**
     * Find zero or one File that matches the filter.
     * @param {FileFindUniqueArgs} args - Arguments to find a File
     * @example
     * // Get one File
     * const file = await prisma.file.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FileFindUniqueArgs>(args: SelectSubset<T, FileFindUniqueArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one File that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FileFindUniqueOrThrowArgs} args - Arguments to find a File
     * @example
     * // Get one File
     * const file = await prisma.file.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FileFindUniqueOrThrowArgs>(args: SelectSubset<T, FileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first File that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileFindFirstArgs} args - Arguments to find a File
     * @example
     * // Get one File
     * const file = await prisma.file.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FileFindFirstArgs>(args?: SelectSubset<T, FileFindFirstArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first File that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileFindFirstOrThrowArgs} args - Arguments to find a File
     * @example
     * // Get one File
     * const file = await prisma.file.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FileFindFirstOrThrowArgs>(args?: SelectSubset<T, FileFindFirstOrThrowArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Files that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Files
     * const files = await prisma.file.findMany()
     * 
     * // Get first 10 Files
     * const files = await prisma.file.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const fileWithIdOnly = await prisma.file.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FileFindManyArgs>(args?: SelectSubset<T, FileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a File.
     * @param {FileCreateArgs} args - Arguments to create a File.
     * @example
     * // Create one File
     * const File = await prisma.file.create({
     *   data: {
     *     // ... data to create a File
     *   }
     * })
     * 
     */
    create<T extends FileCreateArgs>(args: SelectSubset<T, FileCreateArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Files.
     * @param {FileCreateManyArgs} args - Arguments to create many Files.
     * @example
     * // Create many Files
     * const file = await prisma.file.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FileCreateManyArgs>(args?: SelectSubset<T, FileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Files and returns the data saved in the database.
     * @param {FileCreateManyAndReturnArgs} args - Arguments to create many Files.
     * @example
     * // Create many Files
     * const file = await prisma.file.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Files and only return the `id`
     * const fileWithIdOnly = await prisma.file.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FileCreateManyAndReturnArgs>(args?: SelectSubset<T, FileCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a File.
     * @param {FileDeleteArgs} args - Arguments to delete one File.
     * @example
     * // Delete one File
     * const File = await prisma.file.delete({
     *   where: {
     *     // ... filter to delete one File
     *   }
     * })
     * 
     */
    delete<T extends FileDeleteArgs>(args: SelectSubset<T, FileDeleteArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one File.
     * @param {FileUpdateArgs} args - Arguments to update one File.
     * @example
     * // Update one File
     * const file = await prisma.file.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FileUpdateArgs>(args: SelectSubset<T, FileUpdateArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Files.
     * @param {FileDeleteManyArgs} args - Arguments to filter Files to delete.
     * @example
     * // Delete a few Files
     * const { count } = await prisma.file.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FileDeleteManyArgs>(args?: SelectSubset<T, FileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Files
     * const file = await prisma.file.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FileUpdateManyArgs>(args: SelectSubset<T, FileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Files and returns the data updated in the database.
     * @param {FileUpdateManyAndReturnArgs} args - Arguments to update many Files.
     * @example
     * // Update many Files
     * const file = await prisma.file.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Files and only return the `id`
     * const fileWithIdOnly = await prisma.file.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FileUpdateManyAndReturnArgs>(args: SelectSubset<T, FileUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one File.
     * @param {FileUpsertArgs} args - Arguments to update or create a File.
     * @example
     * // Update or create a File
     * const file = await prisma.file.upsert({
     *   create: {
     *     // ... data to create a File
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the File we want to update
     *   }
     * })
     */
    upsert<T extends FileUpsertArgs>(args: SelectSubset<T, FileUpsertArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Files.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileCountArgs} args - Arguments to filter Files to count.
     * @example
     * // Count the number of Files
     * const count = await prisma.file.count({
     *   where: {
     *     // ... the filter for the Files we want to count
     *   }
     * })
    **/
    count<T extends FileCountArgs>(
      args?: Subset<T, FileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a File.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FileAggregateArgs>(args: Subset<T, FileAggregateArgs>): Prisma.PrismaPromise<GetFileAggregateType<T>>

    /**
     * Group by File.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FileGroupByArgs['orderBy'] }
        : { orderBy?: FileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the File model
   */
  readonly fields: FileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for File.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organization<T extends File$organizationArgs<ExtArgs> = {}>(args?: Subset<T, File$organizationArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    manufacturerLogo<T extends File$manufacturerLogoArgs<ExtArgs> = {}>(args?: Subset<T, File$manufacturerLogoArgs<ExtArgs>>): Prisma__ManufacturerClient<$Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    productCategoryImage<T extends File$productCategoryImageArgs<ExtArgs> = {}>(args?: Subset<T, File$productCategoryImageArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    productImages<T extends File$productImagesArgs<ExtArgs> = {}>(args?: Subset<T, File$productImagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    modifierImages<T extends File$modifierImagesArgs<ExtArgs> = {}>(args?: Subset<T, File$modifierImagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    shippingMethodLogoFor<T extends File$shippingMethodLogoForArgs<ExtArgs> = {}>(args?: Subset<T, File$shippingMethodLogoForArgs<ExtArgs>>): Prisma__ShippingMethodClient<$Result.GetResult<Prisma.$ShippingMethodPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    organizationLogo<T extends File$organizationLogoArgs<ExtArgs> = {}>(args?: Subset<T, File$organizationLogoArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    orderItemImages<T extends File$orderItemImagesArgs<ExtArgs> = {}>(args?: Subset<T, File$orderItemImagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the File model
   */
  interface FileFieldRefs {
    readonly id: FieldRef<"File", 'String'>
    readonly mimeType: FieldRef<"File", 'String'>
    readonly size: FieldRef<"File", 'Int'>
    readonly filename: FieldRef<"File", 'String'>
    readonly url: FieldRef<"File", 'String'>
    readonly status: FieldRef<"File", 'FileUploadStatus'>
    readonly organizationId: FieldRef<"File", 'String'>
    readonly createdAt: FieldRef<"File", 'DateTime'>
    readonly createdBy: FieldRef<"File", 'String'>
    readonly updatedAt: FieldRef<"File", 'DateTime'>
    readonly updatedBy: FieldRef<"File", 'String'>
    readonly deletedAt: FieldRef<"File", 'DateTime'>
    readonly deletedBy: FieldRef<"File", 'String'>
  }
    

  // Custom InputTypes
  /**
   * File findUnique
   */
  export type FileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    /**
     * Filter, which File to fetch.
     */
    where: FileWhereUniqueInput
  }

  /**
   * File findUniqueOrThrow
   */
  export type FileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    /**
     * Filter, which File to fetch.
     */
    where: FileWhereUniqueInput
  }

  /**
   * File findFirst
   */
  export type FileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    /**
     * Filter, which File to fetch.
     */
    where?: FileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Files to fetch.
     */
    orderBy?: FileOrderByWithRelationInput | FileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Files.
     */
    cursor?: FileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Files.
     */
    distinct?: FileScalarFieldEnum | FileScalarFieldEnum[]
  }

  /**
   * File findFirstOrThrow
   */
  export type FileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    /**
     * Filter, which File to fetch.
     */
    where?: FileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Files to fetch.
     */
    orderBy?: FileOrderByWithRelationInput | FileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Files.
     */
    cursor?: FileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Files.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Files.
     */
    distinct?: FileScalarFieldEnum | FileScalarFieldEnum[]
  }

  /**
   * File findMany
   */
  export type FileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    /**
     * Filter, which Files to fetch.
     */
    where?: FileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Files to fetch.
     */
    orderBy?: FileOrderByWithRelationInput | FileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Files.
     */
    cursor?: FileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Files from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Files.
     */
    skip?: number
    distinct?: FileScalarFieldEnum | FileScalarFieldEnum[]
  }

  /**
   * File create
   */
  export type FileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    /**
     * The data needed to create a File.
     */
    data: XOR<FileCreateInput, FileUncheckedCreateInput>
  }

  /**
   * File createMany
   */
  export type FileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Files.
     */
    data: FileCreateManyInput | FileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * File createManyAndReturn
   */
  export type FileCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * The data used to create many Files.
     */
    data: FileCreateManyInput | FileCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * File update
   */
  export type FileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    /**
     * The data needed to update a File.
     */
    data: XOR<FileUpdateInput, FileUncheckedUpdateInput>
    /**
     * Choose, which File to update.
     */
    where: FileWhereUniqueInput
  }

  /**
   * File updateMany
   */
  export type FileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Files.
     */
    data: XOR<FileUpdateManyMutationInput, FileUncheckedUpdateManyInput>
    /**
     * Filter which Files to update
     */
    where?: FileWhereInput
    /**
     * Limit how many Files to update.
     */
    limit?: number
  }

  /**
   * File updateManyAndReturn
   */
  export type FileUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * The data used to update Files.
     */
    data: XOR<FileUpdateManyMutationInput, FileUncheckedUpdateManyInput>
    /**
     * Filter which Files to update
     */
    where?: FileWhereInput
    /**
     * Limit how many Files to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * File upsert
   */
  export type FileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    /**
     * The filter to search for the File to update in case it exists.
     */
    where: FileWhereUniqueInput
    /**
     * In case the File found by the `where` argument doesn't exist, create a new File with this data.
     */
    create: XOR<FileCreateInput, FileUncheckedCreateInput>
    /**
     * In case the File was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FileUpdateInput, FileUncheckedUpdateInput>
  }

  /**
   * File delete
   */
  export type FileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    /**
     * Filter which File to delete.
     */
    where: FileWhereUniqueInput
  }

  /**
   * File deleteMany
   */
  export type FileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Files to delete
     */
    where?: FileWhereInput
    /**
     * Limit how many Files to delete.
     */
    limit?: number
  }

  /**
   * File.organization
   */
  export type File$organizationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    where?: OrganizationWhereInput
  }

  /**
   * File.manufacturerLogo
   */
  export type File$manufacturerLogoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manufacturer
     */
    select?: ManufacturerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Manufacturer
     */
    omit?: ManufacturerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerInclude<ExtArgs> | null
    where?: ManufacturerWhereInput
  }

  /**
   * File.productCategoryImage
   */
  export type File$productCategoryImageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    where?: ProductCategoryWhereInput
  }

  /**
   * File.productImages
   */
  export type File$productImagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * File.modifierImages
   */
  export type File$modifierImagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Modifier
     */
    omit?: ModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierInclude<ExtArgs> | null
    where?: ModifierWhereInput
    orderBy?: ModifierOrderByWithRelationInput | ModifierOrderByWithRelationInput[]
    cursor?: ModifierWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ModifierScalarFieldEnum | ModifierScalarFieldEnum[]
  }

  /**
   * File.shippingMethodLogoFor
   */
  export type File$shippingMethodLogoForArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingMethod
     */
    select?: ShippingMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingMethod
     */
    omit?: ShippingMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingMethodInclude<ExtArgs> | null
    where?: ShippingMethodWhereInput
  }

  /**
   * File.organizationLogo
   */
  export type File$organizationLogoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Organization
     */
    select?: OrganizationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Organization
     */
    omit?: OrganizationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrganizationInclude<ExtArgs> | null
    where?: OrganizationWhereInput
  }

  /**
   * File.orderItemImages
   */
  export type File$orderItemImagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    where?: OrderItemWhereInput
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    cursor?: OrderItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * File without action
   */
  export type FileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
  }


  /**
   * Model Manufacturer
   */

  export type AggregateManufacturer = {
    _count: ManufacturerCountAggregateOutputType | null
    _min: ManufacturerMinAggregateOutputType | null
    _max: ManufacturerMaxAggregateOutputType | null
  }

  export type ManufacturerMinAggregateOutputType = {
    id: string | null
    name: string | null
    logoId: string | null
    organizationId: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type ManufacturerMaxAggregateOutputType = {
    id: string | null
    name: string | null
    logoId: string | null
    organizationId: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }

  export type ManufacturerCountAggregateOutputType = {
    id: number
    name: number
    logoId: number
    organizationId: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    _all: number
  }


  export type ManufacturerMinAggregateInputType = {
    id?: true
    name?: true
    logoId?: true
    organizationId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type ManufacturerMaxAggregateInputType = {
    id?: true
    name?: true
    logoId?: true
    organizationId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
  }

  export type ManufacturerCountAggregateInputType = {
    id?: true
    name?: true
    logoId?: true
    organizationId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    _all?: true
  }

  export type ManufacturerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Manufacturer to aggregate.
     */
    where?: ManufacturerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Manufacturers to fetch.
     */
    orderBy?: ManufacturerOrderByWithRelationInput | ManufacturerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ManufacturerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Manufacturers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Manufacturers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Manufacturers
    **/
    _count?: true | ManufacturerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ManufacturerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ManufacturerMaxAggregateInputType
  }

  export type GetManufacturerAggregateType<T extends ManufacturerAggregateArgs> = {
        [P in keyof T & keyof AggregateManufacturer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateManufacturer[P]>
      : GetScalarType<T[P], AggregateManufacturer[P]>
  }




  export type ManufacturerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ManufacturerWhereInput
    orderBy?: ManufacturerOrderByWithAggregationInput | ManufacturerOrderByWithAggregationInput[]
    by: ManufacturerScalarFieldEnum[] | ManufacturerScalarFieldEnum
    having?: ManufacturerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ManufacturerCountAggregateInputType | true
    _min?: ManufacturerMinAggregateInputType
    _max?: ManufacturerMaxAggregateInputType
  }

  export type ManufacturerGroupByOutputType = {
    id: string
    name: string
    logoId: string | null
    organizationId: string
    createdAt: Date
    createdBy: string | null
    updatedAt: Date
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    _count: ManufacturerCountAggregateOutputType | null
    _min: ManufacturerMinAggregateOutputType | null
    _max: ManufacturerMaxAggregateOutputType | null
  }

  type GetManufacturerGroupByPayload<T extends ManufacturerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ManufacturerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ManufacturerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ManufacturerGroupByOutputType[P]>
            : GetScalarType<T[P], ManufacturerGroupByOutputType[P]>
        }
      >
    >


  export type ManufacturerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    logoId?: boolean
    organizationId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    logo?: boolean | Manufacturer$logoArgs<ExtArgs>
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    products?: boolean | Manufacturer$productsArgs<ExtArgs>
    translations?: boolean | Manufacturer$translationsArgs<ExtArgs>
    _count?: boolean | ManufacturerCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["manufacturer"]>

  export type ManufacturerSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    logoId?: boolean
    organizationId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    logo?: boolean | Manufacturer$logoArgs<ExtArgs>
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["manufacturer"]>

  export type ManufacturerSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    logoId?: boolean
    organizationId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    logo?: boolean | Manufacturer$logoArgs<ExtArgs>
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["manufacturer"]>

  export type ManufacturerSelectScalar = {
    id?: boolean
    name?: boolean
    logoId?: boolean
    organizationId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
  }

  export type ManufacturerOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "logoId" | "organizationId" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["manufacturer"]>
  export type ManufacturerInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    logo?: boolean | Manufacturer$logoArgs<ExtArgs>
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    products?: boolean | Manufacturer$productsArgs<ExtArgs>
    translations?: boolean | Manufacturer$translationsArgs<ExtArgs>
    _count?: boolean | ManufacturerCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ManufacturerIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    logo?: boolean | Manufacturer$logoArgs<ExtArgs>
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }
  export type ManufacturerIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    logo?: boolean | Manufacturer$logoArgs<ExtArgs>
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }

  export type $ManufacturerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Manufacturer"
    objects: {
      logo: Prisma.$FilePayload<ExtArgs> | null
      organization: Prisma.$OrganizationPayload<ExtArgs>
      products: Prisma.$ProductPayload<ExtArgs>[]
      translations: Prisma.$ManufacturerTranslationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      logoId: string | null
      organizationId: string
      createdAt: Date
      createdBy: string | null
      updatedAt: Date
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
    }, ExtArgs["result"]["manufacturer"]>
    composites: {}
  }

  type ManufacturerGetPayload<S extends boolean | null | undefined | ManufacturerDefaultArgs> = $Result.GetResult<Prisma.$ManufacturerPayload, S>

  type ManufacturerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ManufacturerFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ManufacturerCountAggregateInputType | true
    }

  export interface ManufacturerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Manufacturer'], meta: { name: 'Manufacturer' } }
    /**
     * Find zero or one Manufacturer that matches the filter.
     * @param {ManufacturerFindUniqueArgs} args - Arguments to find a Manufacturer
     * @example
     * // Get one Manufacturer
     * const manufacturer = await prisma.manufacturer.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ManufacturerFindUniqueArgs>(args: SelectSubset<T, ManufacturerFindUniqueArgs<ExtArgs>>): Prisma__ManufacturerClient<$Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Manufacturer that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ManufacturerFindUniqueOrThrowArgs} args - Arguments to find a Manufacturer
     * @example
     * // Get one Manufacturer
     * const manufacturer = await prisma.manufacturer.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ManufacturerFindUniqueOrThrowArgs>(args: SelectSubset<T, ManufacturerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ManufacturerClient<$Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Manufacturer that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManufacturerFindFirstArgs} args - Arguments to find a Manufacturer
     * @example
     * // Get one Manufacturer
     * const manufacturer = await prisma.manufacturer.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ManufacturerFindFirstArgs>(args?: SelectSubset<T, ManufacturerFindFirstArgs<ExtArgs>>): Prisma__ManufacturerClient<$Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Manufacturer that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManufacturerFindFirstOrThrowArgs} args - Arguments to find a Manufacturer
     * @example
     * // Get one Manufacturer
     * const manufacturer = await prisma.manufacturer.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ManufacturerFindFirstOrThrowArgs>(args?: SelectSubset<T, ManufacturerFindFirstOrThrowArgs<ExtArgs>>): Prisma__ManufacturerClient<$Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Manufacturers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManufacturerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Manufacturers
     * const manufacturers = await prisma.manufacturer.findMany()
     * 
     * // Get first 10 Manufacturers
     * const manufacturers = await prisma.manufacturer.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const manufacturerWithIdOnly = await prisma.manufacturer.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ManufacturerFindManyArgs>(args?: SelectSubset<T, ManufacturerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Manufacturer.
     * @param {ManufacturerCreateArgs} args - Arguments to create a Manufacturer.
     * @example
     * // Create one Manufacturer
     * const Manufacturer = await prisma.manufacturer.create({
     *   data: {
     *     // ... data to create a Manufacturer
     *   }
     * })
     * 
     */
    create<T extends ManufacturerCreateArgs>(args: SelectSubset<T, ManufacturerCreateArgs<ExtArgs>>): Prisma__ManufacturerClient<$Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Manufacturers.
     * @param {ManufacturerCreateManyArgs} args - Arguments to create many Manufacturers.
     * @example
     * // Create many Manufacturers
     * const manufacturer = await prisma.manufacturer.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ManufacturerCreateManyArgs>(args?: SelectSubset<T, ManufacturerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Manufacturers and returns the data saved in the database.
     * @param {ManufacturerCreateManyAndReturnArgs} args - Arguments to create many Manufacturers.
     * @example
     * // Create many Manufacturers
     * const manufacturer = await prisma.manufacturer.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Manufacturers and only return the `id`
     * const manufacturerWithIdOnly = await prisma.manufacturer.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ManufacturerCreateManyAndReturnArgs>(args?: SelectSubset<T, ManufacturerCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Manufacturer.
     * @param {ManufacturerDeleteArgs} args - Arguments to delete one Manufacturer.
     * @example
     * // Delete one Manufacturer
     * const Manufacturer = await prisma.manufacturer.delete({
     *   where: {
     *     // ... filter to delete one Manufacturer
     *   }
     * })
     * 
     */
    delete<T extends ManufacturerDeleteArgs>(args: SelectSubset<T, ManufacturerDeleteArgs<ExtArgs>>): Prisma__ManufacturerClient<$Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Manufacturer.
     * @param {ManufacturerUpdateArgs} args - Arguments to update one Manufacturer.
     * @example
     * // Update one Manufacturer
     * const manufacturer = await prisma.manufacturer.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ManufacturerUpdateArgs>(args: SelectSubset<T, ManufacturerUpdateArgs<ExtArgs>>): Prisma__ManufacturerClient<$Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Manufacturers.
     * @param {ManufacturerDeleteManyArgs} args - Arguments to filter Manufacturers to delete.
     * @example
     * // Delete a few Manufacturers
     * const { count } = await prisma.manufacturer.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ManufacturerDeleteManyArgs>(args?: SelectSubset<T, ManufacturerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Manufacturers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManufacturerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Manufacturers
     * const manufacturer = await prisma.manufacturer.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ManufacturerUpdateManyArgs>(args: SelectSubset<T, ManufacturerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Manufacturers and returns the data updated in the database.
     * @param {ManufacturerUpdateManyAndReturnArgs} args - Arguments to update many Manufacturers.
     * @example
     * // Update many Manufacturers
     * const manufacturer = await prisma.manufacturer.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Manufacturers and only return the `id`
     * const manufacturerWithIdOnly = await prisma.manufacturer.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ManufacturerUpdateManyAndReturnArgs>(args: SelectSubset<T, ManufacturerUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Manufacturer.
     * @param {ManufacturerUpsertArgs} args - Arguments to update or create a Manufacturer.
     * @example
     * // Update or create a Manufacturer
     * const manufacturer = await prisma.manufacturer.upsert({
     *   create: {
     *     // ... data to create a Manufacturer
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Manufacturer we want to update
     *   }
     * })
     */
    upsert<T extends ManufacturerUpsertArgs>(args: SelectSubset<T, ManufacturerUpsertArgs<ExtArgs>>): Prisma__ManufacturerClient<$Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Manufacturers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManufacturerCountArgs} args - Arguments to filter Manufacturers to count.
     * @example
     * // Count the number of Manufacturers
     * const count = await prisma.manufacturer.count({
     *   where: {
     *     // ... the filter for the Manufacturers we want to count
     *   }
     * })
    **/
    count<T extends ManufacturerCountArgs>(
      args?: Subset<T, ManufacturerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ManufacturerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Manufacturer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManufacturerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ManufacturerAggregateArgs>(args: Subset<T, ManufacturerAggregateArgs>): Prisma.PrismaPromise<GetManufacturerAggregateType<T>>

    /**
     * Group by Manufacturer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManufacturerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ManufacturerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ManufacturerGroupByArgs['orderBy'] }
        : { orderBy?: ManufacturerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ManufacturerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetManufacturerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Manufacturer model
   */
  readonly fields: ManufacturerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Manufacturer.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ManufacturerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    logo<T extends Manufacturer$logoArgs<ExtArgs> = {}>(args?: Subset<T, Manufacturer$logoArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    organization<T extends OrganizationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationDefaultArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    products<T extends Manufacturer$productsArgs<ExtArgs> = {}>(args?: Subset<T, Manufacturer$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    translations<T extends Manufacturer$translationsArgs<ExtArgs> = {}>(args?: Subset<T, Manufacturer$translationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ManufacturerTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Manufacturer model
   */
  interface ManufacturerFieldRefs {
    readonly id: FieldRef<"Manufacturer", 'String'>
    readonly name: FieldRef<"Manufacturer", 'String'>
    readonly logoId: FieldRef<"Manufacturer", 'String'>
    readonly organizationId: FieldRef<"Manufacturer", 'String'>
    readonly createdAt: FieldRef<"Manufacturer", 'DateTime'>
    readonly createdBy: FieldRef<"Manufacturer", 'String'>
    readonly updatedAt: FieldRef<"Manufacturer", 'DateTime'>
    readonly updatedBy: FieldRef<"Manufacturer", 'String'>
    readonly deletedAt: FieldRef<"Manufacturer", 'DateTime'>
    readonly deletedBy: FieldRef<"Manufacturer", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Manufacturer findUnique
   */
  export type ManufacturerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manufacturer
     */
    select?: ManufacturerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Manufacturer
     */
    omit?: ManufacturerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerInclude<ExtArgs> | null
    /**
     * Filter, which Manufacturer to fetch.
     */
    where: ManufacturerWhereUniqueInput
  }

  /**
   * Manufacturer findUniqueOrThrow
   */
  export type ManufacturerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manufacturer
     */
    select?: ManufacturerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Manufacturer
     */
    omit?: ManufacturerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerInclude<ExtArgs> | null
    /**
     * Filter, which Manufacturer to fetch.
     */
    where: ManufacturerWhereUniqueInput
  }

  /**
   * Manufacturer findFirst
   */
  export type ManufacturerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manufacturer
     */
    select?: ManufacturerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Manufacturer
     */
    omit?: ManufacturerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerInclude<ExtArgs> | null
    /**
     * Filter, which Manufacturer to fetch.
     */
    where?: ManufacturerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Manufacturers to fetch.
     */
    orderBy?: ManufacturerOrderByWithRelationInput | ManufacturerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Manufacturers.
     */
    cursor?: ManufacturerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Manufacturers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Manufacturers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Manufacturers.
     */
    distinct?: ManufacturerScalarFieldEnum | ManufacturerScalarFieldEnum[]
  }

  /**
   * Manufacturer findFirstOrThrow
   */
  export type ManufacturerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manufacturer
     */
    select?: ManufacturerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Manufacturer
     */
    omit?: ManufacturerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerInclude<ExtArgs> | null
    /**
     * Filter, which Manufacturer to fetch.
     */
    where?: ManufacturerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Manufacturers to fetch.
     */
    orderBy?: ManufacturerOrderByWithRelationInput | ManufacturerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Manufacturers.
     */
    cursor?: ManufacturerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Manufacturers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Manufacturers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Manufacturers.
     */
    distinct?: ManufacturerScalarFieldEnum | ManufacturerScalarFieldEnum[]
  }

  /**
   * Manufacturer findMany
   */
  export type ManufacturerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manufacturer
     */
    select?: ManufacturerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Manufacturer
     */
    omit?: ManufacturerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerInclude<ExtArgs> | null
    /**
     * Filter, which Manufacturers to fetch.
     */
    where?: ManufacturerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Manufacturers to fetch.
     */
    orderBy?: ManufacturerOrderByWithRelationInput | ManufacturerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Manufacturers.
     */
    cursor?: ManufacturerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Manufacturers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Manufacturers.
     */
    skip?: number
    distinct?: ManufacturerScalarFieldEnum | ManufacturerScalarFieldEnum[]
  }

  /**
   * Manufacturer create
   */
  export type ManufacturerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manufacturer
     */
    select?: ManufacturerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Manufacturer
     */
    omit?: ManufacturerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerInclude<ExtArgs> | null
    /**
     * The data needed to create a Manufacturer.
     */
    data: XOR<ManufacturerCreateInput, ManufacturerUncheckedCreateInput>
  }

  /**
   * Manufacturer createMany
   */
  export type ManufacturerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Manufacturers.
     */
    data: ManufacturerCreateManyInput | ManufacturerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Manufacturer createManyAndReturn
   */
  export type ManufacturerCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manufacturer
     */
    select?: ManufacturerSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Manufacturer
     */
    omit?: ManufacturerOmit<ExtArgs> | null
    /**
     * The data used to create many Manufacturers.
     */
    data: ManufacturerCreateManyInput | ManufacturerCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Manufacturer update
   */
  export type ManufacturerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manufacturer
     */
    select?: ManufacturerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Manufacturer
     */
    omit?: ManufacturerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerInclude<ExtArgs> | null
    /**
     * The data needed to update a Manufacturer.
     */
    data: XOR<ManufacturerUpdateInput, ManufacturerUncheckedUpdateInput>
    /**
     * Choose, which Manufacturer to update.
     */
    where: ManufacturerWhereUniqueInput
  }

  /**
   * Manufacturer updateMany
   */
  export type ManufacturerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Manufacturers.
     */
    data: XOR<ManufacturerUpdateManyMutationInput, ManufacturerUncheckedUpdateManyInput>
    /**
     * Filter which Manufacturers to update
     */
    where?: ManufacturerWhereInput
    /**
     * Limit how many Manufacturers to update.
     */
    limit?: number
  }

  /**
   * Manufacturer updateManyAndReturn
   */
  export type ManufacturerUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manufacturer
     */
    select?: ManufacturerSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Manufacturer
     */
    omit?: ManufacturerOmit<ExtArgs> | null
    /**
     * The data used to update Manufacturers.
     */
    data: XOR<ManufacturerUpdateManyMutationInput, ManufacturerUncheckedUpdateManyInput>
    /**
     * Filter which Manufacturers to update
     */
    where?: ManufacturerWhereInput
    /**
     * Limit how many Manufacturers to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Manufacturer upsert
   */
  export type ManufacturerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manufacturer
     */
    select?: ManufacturerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Manufacturer
     */
    omit?: ManufacturerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerInclude<ExtArgs> | null
    /**
     * The filter to search for the Manufacturer to update in case it exists.
     */
    where: ManufacturerWhereUniqueInput
    /**
     * In case the Manufacturer found by the `where` argument doesn't exist, create a new Manufacturer with this data.
     */
    create: XOR<ManufacturerCreateInput, ManufacturerUncheckedCreateInput>
    /**
     * In case the Manufacturer was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ManufacturerUpdateInput, ManufacturerUncheckedUpdateInput>
  }

  /**
   * Manufacturer delete
   */
  export type ManufacturerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manufacturer
     */
    select?: ManufacturerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Manufacturer
     */
    omit?: ManufacturerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerInclude<ExtArgs> | null
    /**
     * Filter which Manufacturer to delete.
     */
    where: ManufacturerWhereUniqueInput
  }

  /**
   * Manufacturer deleteMany
   */
  export type ManufacturerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Manufacturers to delete
     */
    where?: ManufacturerWhereInput
    /**
     * Limit how many Manufacturers to delete.
     */
    limit?: number
  }

  /**
   * Manufacturer.logo
   */
  export type Manufacturer$logoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    where?: FileWhereInput
  }

  /**
   * Manufacturer.products
   */
  export type Manufacturer$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Manufacturer.translations
   */
  export type Manufacturer$translationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManufacturerTranslation
     */
    select?: ManufacturerTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ManufacturerTranslation
     */
    omit?: ManufacturerTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerTranslationInclude<ExtArgs> | null
    where?: ManufacturerTranslationWhereInput
    orderBy?: ManufacturerTranslationOrderByWithRelationInput | ManufacturerTranslationOrderByWithRelationInput[]
    cursor?: ManufacturerTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ManufacturerTranslationScalarFieldEnum | ManufacturerTranslationScalarFieldEnum[]
  }

  /**
   * Manufacturer without action
   */
  export type ManufacturerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manufacturer
     */
    select?: ManufacturerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Manufacturer
     */
    omit?: ManufacturerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerInclude<ExtArgs> | null
  }


  /**
   * Model ManufacturerTranslation
   */

  export type AggregateManufacturerTranslation = {
    _count: ManufacturerTranslationCountAggregateOutputType | null
    _min: ManufacturerTranslationMinAggregateOutputType | null
    _max: ManufacturerTranslationMaxAggregateOutputType | null
  }

  export type ManufacturerTranslationMinAggregateOutputType = {
    id: string | null
    locale: string | null
    about: string | null
    manufacturerId: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type ManufacturerTranslationMaxAggregateOutputType = {
    id: string | null
    locale: string | null
    about: string | null
    manufacturerId: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type ManufacturerTranslationCountAggregateOutputType = {
    id: number
    locale: number
    about: number
    manufacturerId: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type ManufacturerTranslationMinAggregateInputType = {
    id?: true
    locale?: true
    about?: true
    manufacturerId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type ManufacturerTranslationMaxAggregateInputType = {
    id?: true
    locale?: true
    about?: true
    manufacturerId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type ManufacturerTranslationCountAggregateInputType = {
    id?: true
    locale?: true
    about?: true
    manufacturerId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type ManufacturerTranslationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ManufacturerTranslation to aggregate.
     */
    where?: ManufacturerTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ManufacturerTranslations to fetch.
     */
    orderBy?: ManufacturerTranslationOrderByWithRelationInput | ManufacturerTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ManufacturerTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ManufacturerTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ManufacturerTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ManufacturerTranslations
    **/
    _count?: true | ManufacturerTranslationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ManufacturerTranslationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ManufacturerTranslationMaxAggregateInputType
  }

  export type GetManufacturerTranslationAggregateType<T extends ManufacturerTranslationAggregateArgs> = {
        [P in keyof T & keyof AggregateManufacturerTranslation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateManufacturerTranslation[P]>
      : GetScalarType<T[P], AggregateManufacturerTranslation[P]>
  }




  export type ManufacturerTranslationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ManufacturerTranslationWhereInput
    orderBy?: ManufacturerTranslationOrderByWithAggregationInput | ManufacturerTranslationOrderByWithAggregationInput[]
    by: ManufacturerTranslationScalarFieldEnum[] | ManufacturerTranslationScalarFieldEnum
    having?: ManufacturerTranslationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ManufacturerTranslationCountAggregateInputType | true
    _min?: ManufacturerTranslationMinAggregateInputType
    _max?: ManufacturerTranslationMaxAggregateInputType
  }

  export type ManufacturerTranslationGroupByOutputType = {
    id: string
    locale: string
    about: string | null
    manufacturerId: string
    createdAt: Date
    createdBy: string | null
    updatedAt: Date
    updatedBy: string | null
    _count: ManufacturerTranslationCountAggregateOutputType | null
    _min: ManufacturerTranslationMinAggregateOutputType | null
    _max: ManufacturerTranslationMaxAggregateOutputType | null
  }

  type GetManufacturerTranslationGroupByPayload<T extends ManufacturerTranslationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ManufacturerTranslationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ManufacturerTranslationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ManufacturerTranslationGroupByOutputType[P]>
            : GetScalarType<T[P], ManufacturerTranslationGroupByOutputType[P]>
        }
      >
    >


  export type ManufacturerTranslationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    locale?: boolean
    about?: boolean
    manufacturerId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    manufacturer?: boolean | ManufacturerDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["manufacturerTranslation"]>

  export type ManufacturerTranslationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    locale?: boolean
    about?: boolean
    manufacturerId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    manufacturer?: boolean | ManufacturerDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["manufacturerTranslation"]>

  export type ManufacturerTranslationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    locale?: boolean
    about?: boolean
    manufacturerId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    manufacturer?: boolean | ManufacturerDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["manufacturerTranslation"]>

  export type ManufacturerTranslationSelectScalar = {
    id?: boolean
    locale?: boolean
    about?: boolean
    manufacturerId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type ManufacturerTranslationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "locale" | "about" | "manufacturerId" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy", ExtArgs["result"]["manufacturerTranslation"]>
  export type ManufacturerTranslationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    manufacturer?: boolean | ManufacturerDefaultArgs<ExtArgs>
  }
  export type ManufacturerTranslationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    manufacturer?: boolean | ManufacturerDefaultArgs<ExtArgs>
  }
  export type ManufacturerTranslationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    manufacturer?: boolean | ManufacturerDefaultArgs<ExtArgs>
  }

  export type $ManufacturerTranslationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ManufacturerTranslation"
    objects: {
      manufacturer: Prisma.$ManufacturerPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      locale: string
      about: string | null
      manufacturerId: string
      createdAt: Date
      createdBy: string | null
      updatedAt: Date
      updatedBy: string | null
    }, ExtArgs["result"]["manufacturerTranslation"]>
    composites: {}
  }

  type ManufacturerTranslationGetPayload<S extends boolean | null | undefined | ManufacturerTranslationDefaultArgs> = $Result.GetResult<Prisma.$ManufacturerTranslationPayload, S>

  type ManufacturerTranslationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ManufacturerTranslationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ManufacturerTranslationCountAggregateInputType | true
    }

  export interface ManufacturerTranslationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ManufacturerTranslation'], meta: { name: 'ManufacturerTranslation' } }
    /**
     * Find zero or one ManufacturerTranslation that matches the filter.
     * @param {ManufacturerTranslationFindUniqueArgs} args - Arguments to find a ManufacturerTranslation
     * @example
     * // Get one ManufacturerTranslation
     * const manufacturerTranslation = await prisma.manufacturerTranslation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ManufacturerTranslationFindUniqueArgs>(args: SelectSubset<T, ManufacturerTranslationFindUniqueArgs<ExtArgs>>): Prisma__ManufacturerTranslationClient<$Result.GetResult<Prisma.$ManufacturerTranslationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ManufacturerTranslation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ManufacturerTranslationFindUniqueOrThrowArgs} args - Arguments to find a ManufacturerTranslation
     * @example
     * // Get one ManufacturerTranslation
     * const manufacturerTranslation = await prisma.manufacturerTranslation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ManufacturerTranslationFindUniqueOrThrowArgs>(args: SelectSubset<T, ManufacturerTranslationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ManufacturerTranslationClient<$Result.GetResult<Prisma.$ManufacturerTranslationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ManufacturerTranslation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManufacturerTranslationFindFirstArgs} args - Arguments to find a ManufacturerTranslation
     * @example
     * // Get one ManufacturerTranslation
     * const manufacturerTranslation = await prisma.manufacturerTranslation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ManufacturerTranslationFindFirstArgs>(args?: SelectSubset<T, ManufacturerTranslationFindFirstArgs<ExtArgs>>): Prisma__ManufacturerTranslationClient<$Result.GetResult<Prisma.$ManufacturerTranslationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ManufacturerTranslation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManufacturerTranslationFindFirstOrThrowArgs} args - Arguments to find a ManufacturerTranslation
     * @example
     * // Get one ManufacturerTranslation
     * const manufacturerTranslation = await prisma.manufacturerTranslation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ManufacturerTranslationFindFirstOrThrowArgs>(args?: SelectSubset<T, ManufacturerTranslationFindFirstOrThrowArgs<ExtArgs>>): Prisma__ManufacturerTranslationClient<$Result.GetResult<Prisma.$ManufacturerTranslationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ManufacturerTranslations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManufacturerTranslationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ManufacturerTranslations
     * const manufacturerTranslations = await prisma.manufacturerTranslation.findMany()
     * 
     * // Get first 10 ManufacturerTranslations
     * const manufacturerTranslations = await prisma.manufacturerTranslation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const manufacturerTranslationWithIdOnly = await prisma.manufacturerTranslation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ManufacturerTranslationFindManyArgs>(args?: SelectSubset<T, ManufacturerTranslationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ManufacturerTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ManufacturerTranslation.
     * @param {ManufacturerTranslationCreateArgs} args - Arguments to create a ManufacturerTranslation.
     * @example
     * // Create one ManufacturerTranslation
     * const ManufacturerTranslation = await prisma.manufacturerTranslation.create({
     *   data: {
     *     // ... data to create a ManufacturerTranslation
     *   }
     * })
     * 
     */
    create<T extends ManufacturerTranslationCreateArgs>(args: SelectSubset<T, ManufacturerTranslationCreateArgs<ExtArgs>>): Prisma__ManufacturerTranslationClient<$Result.GetResult<Prisma.$ManufacturerTranslationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ManufacturerTranslations.
     * @param {ManufacturerTranslationCreateManyArgs} args - Arguments to create many ManufacturerTranslations.
     * @example
     * // Create many ManufacturerTranslations
     * const manufacturerTranslation = await prisma.manufacturerTranslation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ManufacturerTranslationCreateManyArgs>(args?: SelectSubset<T, ManufacturerTranslationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ManufacturerTranslations and returns the data saved in the database.
     * @param {ManufacturerTranslationCreateManyAndReturnArgs} args - Arguments to create many ManufacturerTranslations.
     * @example
     * // Create many ManufacturerTranslations
     * const manufacturerTranslation = await prisma.manufacturerTranslation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ManufacturerTranslations and only return the `id`
     * const manufacturerTranslationWithIdOnly = await prisma.manufacturerTranslation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ManufacturerTranslationCreateManyAndReturnArgs>(args?: SelectSubset<T, ManufacturerTranslationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ManufacturerTranslationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ManufacturerTranslation.
     * @param {ManufacturerTranslationDeleteArgs} args - Arguments to delete one ManufacturerTranslation.
     * @example
     * // Delete one ManufacturerTranslation
     * const ManufacturerTranslation = await prisma.manufacturerTranslation.delete({
     *   where: {
     *     // ... filter to delete one ManufacturerTranslation
     *   }
     * })
     * 
     */
    delete<T extends ManufacturerTranslationDeleteArgs>(args: SelectSubset<T, ManufacturerTranslationDeleteArgs<ExtArgs>>): Prisma__ManufacturerTranslationClient<$Result.GetResult<Prisma.$ManufacturerTranslationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ManufacturerTranslation.
     * @param {ManufacturerTranslationUpdateArgs} args - Arguments to update one ManufacturerTranslation.
     * @example
     * // Update one ManufacturerTranslation
     * const manufacturerTranslation = await prisma.manufacturerTranslation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ManufacturerTranslationUpdateArgs>(args: SelectSubset<T, ManufacturerTranslationUpdateArgs<ExtArgs>>): Prisma__ManufacturerTranslationClient<$Result.GetResult<Prisma.$ManufacturerTranslationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ManufacturerTranslations.
     * @param {ManufacturerTranslationDeleteManyArgs} args - Arguments to filter ManufacturerTranslations to delete.
     * @example
     * // Delete a few ManufacturerTranslations
     * const { count } = await prisma.manufacturerTranslation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ManufacturerTranslationDeleteManyArgs>(args?: SelectSubset<T, ManufacturerTranslationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ManufacturerTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManufacturerTranslationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ManufacturerTranslations
     * const manufacturerTranslation = await prisma.manufacturerTranslation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ManufacturerTranslationUpdateManyArgs>(args: SelectSubset<T, ManufacturerTranslationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ManufacturerTranslations and returns the data updated in the database.
     * @param {ManufacturerTranslationUpdateManyAndReturnArgs} args - Arguments to update many ManufacturerTranslations.
     * @example
     * // Update many ManufacturerTranslations
     * const manufacturerTranslation = await prisma.manufacturerTranslation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ManufacturerTranslations and only return the `id`
     * const manufacturerTranslationWithIdOnly = await prisma.manufacturerTranslation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ManufacturerTranslationUpdateManyAndReturnArgs>(args: SelectSubset<T, ManufacturerTranslationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ManufacturerTranslationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ManufacturerTranslation.
     * @param {ManufacturerTranslationUpsertArgs} args - Arguments to update or create a ManufacturerTranslation.
     * @example
     * // Update or create a ManufacturerTranslation
     * const manufacturerTranslation = await prisma.manufacturerTranslation.upsert({
     *   create: {
     *     // ... data to create a ManufacturerTranslation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ManufacturerTranslation we want to update
     *   }
     * })
     */
    upsert<T extends ManufacturerTranslationUpsertArgs>(args: SelectSubset<T, ManufacturerTranslationUpsertArgs<ExtArgs>>): Prisma__ManufacturerTranslationClient<$Result.GetResult<Prisma.$ManufacturerTranslationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ManufacturerTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManufacturerTranslationCountArgs} args - Arguments to filter ManufacturerTranslations to count.
     * @example
     * // Count the number of ManufacturerTranslations
     * const count = await prisma.manufacturerTranslation.count({
     *   where: {
     *     // ... the filter for the ManufacturerTranslations we want to count
     *   }
     * })
    **/
    count<T extends ManufacturerTranslationCountArgs>(
      args?: Subset<T, ManufacturerTranslationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ManufacturerTranslationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ManufacturerTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManufacturerTranslationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ManufacturerTranslationAggregateArgs>(args: Subset<T, ManufacturerTranslationAggregateArgs>): Prisma.PrismaPromise<GetManufacturerTranslationAggregateType<T>>

    /**
     * Group by ManufacturerTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ManufacturerTranslationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ManufacturerTranslationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ManufacturerTranslationGroupByArgs['orderBy'] }
        : { orderBy?: ManufacturerTranslationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ManufacturerTranslationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetManufacturerTranslationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ManufacturerTranslation model
   */
  readonly fields: ManufacturerTranslationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ManufacturerTranslation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ManufacturerTranslationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    manufacturer<T extends ManufacturerDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ManufacturerDefaultArgs<ExtArgs>>): Prisma__ManufacturerClient<$Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ManufacturerTranslation model
   */
  interface ManufacturerTranslationFieldRefs {
    readonly id: FieldRef<"ManufacturerTranslation", 'String'>
    readonly locale: FieldRef<"ManufacturerTranslation", 'String'>
    readonly about: FieldRef<"ManufacturerTranslation", 'String'>
    readonly manufacturerId: FieldRef<"ManufacturerTranslation", 'String'>
    readonly createdAt: FieldRef<"ManufacturerTranslation", 'DateTime'>
    readonly createdBy: FieldRef<"ManufacturerTranslation", 'String'>
    readonly updatedAt: FieldRef<"ManufacturerTranslation", 'DateTime'>
    readonly updatedBy: FieldRef<"ManufacturerTranslation", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ManufacturerTranslation findUnique
   */
  export type ManufacturerTranslationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManufacturerTranslation
     */
    select?: ManufacturerTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ManufacturerTranslation
     */
    omit?: ManufacturerTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ManufacturerTranslation to fetch.
     */
    where: ManufacturerTranslationWhereUniqueInput
  }

  /**
   * ManufacturerTranslation findUniqueOrThrow
   */
  export type ManufacturerTranslationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManufacturerTranslation
     */
    select?: ManufacturerTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ManufacturerTranslation
     */
    omit?: ManufacturerTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ManufacturerTranslation to fetch.
     */
    where: ManufacturerTranslationWhereUniqueInput
  }

  /**
   * ManufacturerTranslation findFirst
   */
  export type ManufacturerTranslationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManufacturerTranslation
     */
    select?: ManufacturerTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ManufacturerTranslation
     */
    omit?: ManufacturerTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ManufacturerTranslation to fetch.
     */
    where?: ManufacturerTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ManufacturerTranslations to fetch.
     */
    orderBy?: ManufacturerTranslationOrderByWithRelationInput | ManufacturerTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ManufacturerTranslations.
     */
    cursor?: ManufacturerTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ManufacturerTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ManufacturerTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ManufacturerTranslations.
     */
    distinct?: ManufacturerTranslationScalarFieldEnum | ManufacturerTranslationScalarFieldEnum[]
  }

  /**
   * ManufacturerTranslation findFirstOrThrow
   */
  export type ManufacturerTranslationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManufacturerTranslation
     */
    select?: ManufacturerTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ManufacturerTranslation
     */
    omit?: ManufacturerTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ManufacturerTranslation to fetch.
     */
    where?: ManufacturerTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ManufacturerTranslations to fetch.
     */
    orderBy?: ManufacturerTranslationOrderByWithRelationInput | ManufacturerTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ManufacturerTranslations.
     */
    cursor?: ManufacturerTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ManufacturerTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ManufacturerTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ManufacturerTranslations.
     */
    distinct?: ManufacturerTranslationScalarFieldEnum | ManufacturerTranslationScalarFieldEnum[]
  }

  /**
   * ManufacturerTranslation findMany
   */
  export type ManufacturerTranslationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManufacturerTranslation
     */
    select?: ManufacturerTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ManufacturerTranslation
     */
    omit?: ManufacturerTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ManufacturerTranslations to fetch.
     */
    where?: ManufacturerTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ManufacturerTranslations to fetch.
     */
    orderBy?: ManufacturerTranslationOrderByWithRelationInput | ManufacturerTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ManufacturerTranslations.
     */
    cursor?: ManufacturerTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ManufacturerTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ManufacturerTranslations.
     */
    skip?: number
    distinct?: ManufacturerTranslationScalarFieldEnum | ManufacturerTranslationScalarFieldEnum[]
  }

  /**
   * ManufacturerTranslation create
   */
  export type ManufacturerTranslationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManufacturerTranslation
     */
    select?: ManufacturerTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ManufacturerTranslation
     */
    omit?: ManufacturerTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerTranslationInclude<ExtArgs> | null
    /**
     * The data needed to create a ManufacturerTranslation.
     */
    data: XOR<ManufacturerTranslationCreateInput, ManufacturerTranslationUncheckedCreateInput>
  }

  /**
   * ManufacturerTranslation createMany
   */
  export type ManufacturerTranslationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ManufacturerTranslations.
     */
    data: ManufacturerTranslationCreateManyInput | ManufacturerTranslationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ManufacturerTranslation createManyAndReturn
   */
  export type ManufacturerTranslationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManufacturerTranslation
     */
    select?: ManufacturerTranslationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ManufacturerTranslation
     */
    omit?: ManufacturerTranslationOmit<ExtArgs> | null
    /**
     * The data used to create many ManufacturerTranslations.
     */
    data: ManufacturerTranslationCreateManyInput | ManufacturerTranslationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerTranslationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ManufacturerTranslation update
   */
  export type ManufacturerTranslationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManufacturerTranslation
     */
    select?: ManufacturerTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ManufacturerTranslation
     */
    omit?: ManufacturerTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerTranslationInclude<ExtArgs> | null
    /**
     * The data needed to update a ManufacturerTranslation.
     */
    data: XOR<ManufacturerTranslationUpdateInput, ManufacturerTranslationUncheckedUpdateInput>
    /**
     * Choose, which ManufacturerTranslation to update.
     */
    where: ManufacturerTranslationWhereUniqueInput
  }

  /**
   * ManufacturerTranslation updateMany
   */
  export type ManufacturerTranslationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ManufacturerTranslations.
     */
    data: XOR<ManufacturerTranslationUpdateManyMutationInput, ManufacturerTranslationUncheckedUpdateManyInput>
    /**
     * Filter which ManufacturerTranslations to update
     */
    where?: ManufacturerTranslationWhereInput
    /**
     * Limit how many ManufacturerTranslations to update.
     */
    limit?: number
  }

  /**
   * ManufacturerTranslation updateManyAndReturn
   */
  export type ManufacturerTranslationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManufacturerTranslation
     */
    select?: ManufacturerTranslationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ManufacturerTranslation
     */
    omit?: ManufacturerTranslationOmit<ExtArgs> | null
    /**
     * The data used to update ManufacturerTranslations.
     */
    data: XOR<ManufacturerTranslationUpdateManyMutationInput, ManufacturerTranslationUncheckedUpdateManyInput>
    /**
     * Filter which ManufacturerTranslations to update
     */
    where?: ManufacturerTranslationWhereInput
    /**
     * Limit how many ManufacturerTranslations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerTranslationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ManufacturerTranslation upsert
   */
  export type ManufacturerTranslationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManufacturerTranslation
     */
    select?: ManufacturerTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ManufacturerTranslation
     */
    omit?: ManufacturerTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerTranslationInclude<ExtArgs> | null
    /**
     * The filter to search for the ManufacturerTranslation to update in case it exists.
     */
    where: ManufacturerTranslationWhereUniqueInput
    /**
     * In case the ManufacturerTranslation found by the `where` argument doesn't exist, create a new ManufacturerTranslation with this data.
     */
    create: XOR<ManufacturerTranslationCreateInput, ManufacturerTranslationUncheckedCreateInput>
    /**
     * In case the ManufacturerTranslation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ManufacturerTranslationUpdateInput, ManufacturerTranslationUncheckedUpdateInput>
  }

  /**
   * ManufacturerTranslation delete
   */
  export type ManufacturerTranslationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManufacturerTranslation
     */
    select?: ManufacturerTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ManufacturerTranslation
     */
    omit?: ManufacturerTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerTranslationInclude<ExtArgs> | null
    /**
     * Filter which ManufacturerTranslation to delete.
     */
    where: ManufacturerTranslationWhereUniqueInput
  }

  /**
   * ManufacturerTranslation deleteMany
   */
  export type ManufacturerTranslationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ManufacturerTranslations to delete
     */
    where?: ManufacturerTranslationWhereInput
    /**
     * Limit how many ManufacturerTranslations to delete.
     */
    limit?: number
  }

  /**
   * ManufacturerTranslation without action
   */
  export type ManufacturerTranslationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ManufacturerTranslation
     */
    select?: ManufacturerTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ManufacturerTranslation
     */
    omit?: ManufacturerTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerTranslationInclude<ExtArgs> | null
  }


  /**
   * Model ProductCategory
   */

  export type AggregateProductCategory = {
    _count: ProductCategoryCountAggregateOutputType | null
    _avg: ProductCategoryAvgAggregateOutputType | null
    _sum: ProductCategorySumAggregateOutputType | null
    _min: ProductCategoryMinAggregateOutputType | null
    _max: ProductCategoryMaxAggregateOutputType | null
  }

  export type ProductCategoryAvgAggregateOutputType = {
    priority: number | null
  }

  export type ProductCategorySumAggregateOutputType = {
    priority: number | null
  }

  export type ProductCategoryMinAggregateOutputType = {
    id: string | null
    slug: string | null
    organizationId: string | null
    priority: number | null
    imageId: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    publishedAt: Date | null
    publishedBy: string | null
  }

  export type ProductCategoryMaxAggregateOutputType = {
    id: string | null
    slug: string | null
    organizationId: string | null
    priority: number | null
    imageId: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    publishedAt: Date | null
    publishedBy: string | null
  }

  export type ProductCategoryCountAggregateOutputType = {
    id: number
    slug: number
    organizationId: number
    priority: number
    imageId: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    deletedAt: number
    deletedBy: number
    publishedAt: number
    publishedBy: number
    _all: number
  }


  export type ProductCategoryAvgAggregateInputType = {
    priority?: true
  }

  export type ProductCategorySumAggregateInputType = {
    priority?: true
  }

  export type ProductCategoryMinAggregateInputType = {
    id?: true
    slug?: true
    organizationId?: true
    priority?: true
    imageId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    publishedAt?: true
    publishedBy?: true
  }

  export type ProductCategoryMaxAggregateInputType = {
    id?: true
    slug?: true
    organizationId?: true
    priority?: true
    imageId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    publishedAt?: true
    publishedBy?: true
  }

  export type ProductCategoryCountAggregateInputType = {
    id?: true
    slug?: true
    organizationId?: true
    priority?: true
    imageId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    deletedAt?: true
    deletedBy?: true
    publishedAt?: true
    publishedBy?: true
    _all?: true
  }

  export type ProductCategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductCategory to aggregate.
     */
    where?: ProductCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductCategories to fetch.
     */
    orderBy?: ProductCategoryOrderByWithRelationInput | ProductCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductCategories
    **/
    _count?: true | ProductCategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductCategoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductCategorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductCategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductCategoryMaxAggregateInputType
  }

  export type GetProductCategoryAggregateType<T extends ProductCategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateProductCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductCategory[P]>
      : GetScalarType<T[P], AggregateProductCategory[P]>
  }




  export type ProductCategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductCategoryWhereInput
    orderBy?: ProductCategoryOrderByWithAggregationInput | ProductCategoryOrderByWithAggregationInput[]
    by: ProductCategoryScalarFieldEnum[] | ProductCategoryScalarFieldEnum
    having?: ProductCategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductCategoryCountAggregateInputType | true
    _avg?: ProductCategoryAvgAggregateInputType
    _sum?: ProductCategorySumAggregateInputType
    _min?: ProductCategoryMinAggregateInputType
    _max?: ProductCategoryMaxAggregateInputType
  }

  export type ProductCategoryGroupByOutputType = {
    id: string
    slug: string | null
    organizationId: string
    priority: number | null
    imageId: string | null
    createdAt: Date
    createdBy: string | null
    updatedAt: Date
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    publishedAt: Date | null
    publishedBy: string | null
    _count: ProductCategoryCountAggregateOutputType | null
    _avg: ProductCategoryAvgAggregateOutputType | null
    _sum: ProductCategorySumAggregateOutputType | null
    _min: ProductCategoryMinAggregateOutputType | null
    _max: ProductCategoryMaxAggregateOutputType | null
  }

  type GetProductCategoryGroupByPayload<T extends ProductCategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductCategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductCategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductCategoryGroupByOutputType[P]>
            : GetScalarType<T[P], ProductCategoryGroupByOutputType[P]>
        }
      >
    >


  export type ProductCategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    slug?: boolean
    organizationId?: boolean
    priority?: boolean
    imageId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    publishedAt?: boolean
    publishedBy?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    image?: boolean | ProductCategory$imageArgs<ExtArgs>
    translations?: boolean | ProductCategory$translationsArgs<ExtArgs>
    products?: boolean | ProductCategory$productsArgs<ExtArgs>
    _count?: boolean | ProductCategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productCategory"]>

  export type ProductCategorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    slug?: boolean
    organizationId?: boolean
    priority?: boolean
    imageId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    publishedAt?: boolean
    publishedBy?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    image?: boolean | ProductCategory$imageArgs<ExtArgs>
  }, ExtArgs["result"]["productCategory"]>

  export type ProductCategorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    slug?: boolean
    organizationId?: boolean
    priority?: boolean
    imageId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    publishedAt?: boolean
    publishedBy?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    image?: boolean | ProductCategory$imageArgs<ExtArgs>
  }, ExtArgs["result"]["productCategory"]>

  export type ProductCategorySelectScalar = {
    id?: boolean
    slug?: boolean
    organizationId?: boolean
    priority?: boolean
    imageId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    publishedAt?: boolean
    publishedBy?: boolean
  }

  export type ProductCategoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "slug" | "organizationId" | "priority" | "imageId" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy" | "publishedAt" | "publishedBy", ExtArgs["result"]["productCategory"]>
  export type ProductCategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    image?: boolean | ProductCategory$imageArgs<ExtArgs>
    translations?: boolean | ProductCategory$translationsArgs<ExtArgs>
    products?: boolean | ProductCategory$productsArgs<ExtArgs>
    _count?: boolean | ProductCategoryCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductCategoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    image?: boolean | ProductCategory$imageArgs<ExtArgs>
  }
  export type ProductCategoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    image?: boolean | ProductCategory$imageArgs<ExtArgs>
  }

  export type $ProductCategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductCategory"
    objects: {
      organization: Prisma.$OrganizationPayload<ExtArgs>
      image: Prisma.$FilePayload<ExtArgs> | null
      translations: Prisma.$ProductCategoryTranslationPayload<ExtArgs>[]
      products: Prisma.$ProductPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      slug: string | null
      organizationId: string
      priority: number | null
      imageId: string | null
      createdAt: Date
      createdBy: string | null
      updatedAt: Date
      updatedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
      publishedAt: Date | null
      publishedBy: string | null
    }, ExtArgs["result"]["productCategory"]>
    composites: {}
  }

  type ProductCategoryGetPayload<S extends boolean | null | undefined | ProductCategoryDefaultArgs> = $Result.GetResult<Prisma.$ProductCategoryPayload, S>

  type ProductCategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductCategoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductCategoryCountAggregateInputType | true
    }

  export interface ProductCategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductCategory'], meta: { name: 'ProductCategory' } }
    /**
     * Find zero or one ProductCategory that matches the filter.
     * @param {ProductCategoryFindUniqueArgs} args - Arguments to find a ProductCategory
     * @example
     * // Get one ProductCategory
     * const productCategory = await prisma.productCategory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductCategoryFindUniqueArgs>(args: SelectSubset<T, ProductCategoryFindUniqueArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductCategory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductCategoryFindUniqueOrThrowArgs} args - Arguments to find a ProductCategory
     * @example
     * // Get one ProductCategory
     * const productCategory = await prisma.productCategory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductCategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductCategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductCategory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryFindFirstArgs} args - Arguments to find a ProductCategory
     * @example
     * // Get one ProductCategory
     * const productCategory = await prisma.productCategory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductCategoryFindFirstArgs>(args?: SelectSubset<T, ProductCategoryFindFirstArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductCategory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryFindFirstOrThrowArgs} args - Arguments to find a ProductCategory
     * @example
     * // Get one ProductCategory
     * const productCategory = await prisma.productCategory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductCategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductCategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductCategories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductCategories
     * const productCategories = await prisma.productCategory.findMany()
     * 
     * // Get first 10 ProductCategories
     * const productCategories = await prisma.productCategory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productCategoryWithIdOnly = await prisma.productCategory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductCategoryFindManyArgs>(args?: SelectSubset<T, ProductCategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductCategory.
     * @param {ProductCategoryCreateArgs} args - Arguments to create a ProductCategory.
     * @example
     * // Create one ProductCategory
     * const ProductCategory = await prisma.productCategory.create({
     *   data: {
     *     // ... data to create a ProductCategory
     *   }
     * })
     * 
     */
    create<T extends ProductCategoryCreateArgs>(args: SelectSubset<T, ProductCategoryCreateArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductCategories.
     * @param {ProductCategoryCreateManyArgs} args - Arguments to create many ProductCategories.
     * @example
     * // Create many ProductCategories
     * const productCategory = await prisma.productCategory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductCategoryCreateManyArgs>(args?: SelectSubset<T, ProductCategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductCategories and returns the data saved in the database.
     * @param {ProductCategoryCreateManyAndReturnArgs} args - Arguments to create many ProductCategories.
     * @example
     * // Create many ProductCategories
     * const productCategory = await prisma.productCategory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductCategories and only return the `id`
     * const productCategoryWithIdOnly = await prisma.productCategory.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductCategoryCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductCategoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProductCategory.
     * @param {ProductCategoryDeleteArgs} args - Arguments to delete one ProductCategory.
     * @example
     * // Delete one ProductCategory
     * const ProductCategory = await prisma.productCategory.delete({
     *   where: {
     *     // ... filter to delete one ProductCategory
     *   }
     * })
     * 
     */
    delete<T extends ProductCategoryDeleteArgs>(args: SelectSubset<T, ProductCategoryDeleteArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductCategory.
     * @param {ProductCategoryUpdateArgs} args - Arguments to update one ProductCategory.
     * @example
     * // Update one ProductCategory
     * const productCategory = await prisma.productCategory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductCategoryUpdateArgs>(args: SelectSubset<T, ProductCategoryUpdateArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductCategories.
     * @param {ProductCategoryDeleteManyArgs} args - Arguments to filter ProductCategories to delete.
     * @example
     * // Delete a few ProductCategories
     * const { count } = await prisma.productCategory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductCategoryDeleteManyArgs>(args?: SelectSubset<T, ProductCategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductCategories
     * const productCategory = await prisma.productCategory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductCategoryUpdateManyArgs>(args: SelectSubset<T, ProductCategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductCategories and returns the data updated in the database.
     * @param {ProductCategoryUpdateManyAndReturnArgs} args - Arguments to update many ProductCategories.
     * @example
     * // Update many ProductCategories
     * const productCategory = await prisma.productCategory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProductCategories and only return the `id`
     * const productCategoryWithIdOnly = await prisma.productCategory.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductCategoryUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductCategoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProductCategory.
     * @param {ProductCategoryUpsertArgs} args - Arguments to update or create a ProductCategory.
     * @example
     * // Update or create a ProductCategory
     * const productCategory = await prisma.productCategory.upsert({
     *   create: {
     *     // ... data to create a ProductCategory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductCategory we want to update
     *   }
     * })
     */
    upsert<T extends ProductCategoryUpsertArgs>(args: SelectSubset<T, ProductCategoryUpsertArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryCountArgs} args - Arguments to filter ProductCategories to count.
     * @example
     * // Count the number of ProductCategories
     * const count = await prisma.productCategory.count({
     *   where: {
     *     // ... the filter for the ProductCategories we want to count
     *   }
     * })
    **/
    count<T extends ProductCategoryCountArgs>(
      args?: Subset<T, ProductCategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductCategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductCategoryAggregateArgs>(args: Subset<T, ProductCategoryAggregateArgs>): Prisma.PrismaPromise<GetProductCategoryAggregateType<T>>

    /**
     * Group by ProductCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductCategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductCategoryGroupByArgs['orderBy'] }
        : { orderBy?: ProductCategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductCategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductCategory model
   */
  readonly fields: ProductCategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductCategory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductCategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organization<T extends OrganizationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationDefaultArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    image<T extends ProductCategory$imageArgs<ExtArgs> = {}>(args?: Subset<T, ProductCategory$imageArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    translations<T extends ProductCategory$translationsArgs<ExtArgs> = {}>(args?: Subset<T, ProductCategory$translationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductCategoryTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    products<T extends ProductCategory$productsArgs<ExtArgs> = {}>(args?: Subset<T, ProductCategory$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductCategory model
   */
  interface ProductCategoryFieldRefs {
    readonly id: FieldRef<"ProductCategory", 'String'>
    readonly slug: FieldRef<"ProductCategory", 'String'>
    readonly organizationId: FieldRef<"ProductCategory", 'String'>
    readonly priority: FieldRef<"ProductCategory", 'Int'>
    readonly imageId: FieldRef<"ProductCategory", 'String'>
    readonly createdAt: FieldRef<"ProductCategory", 'DateTime'>
    readonly createdBy: FieldRef<"ProductCategory", 'String'>
    readonly updatedAt: FieldRef<"ProductCategory", 'DateTime'>
    readonly updatedBy: FieldRef<"ProductCategory", 'String'>
    readonly deletedAt: FieldRef<"ProductCategory", 'DateTime'>
    readonly deletedBy: FieldRef<"ProductCategory", 'String'>
    readonly publishedAt: FieldRef<"ProductCategory", 'DateTime'>
    readonly publishedBy: FieldRef<"ProductCategory", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ProductCategory findUnique
   */
  export type ProductCategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProductCategory to fetch.
     */
    where: ProductCategoryWhereUniqueInput
  }

  /**
   * ProductCategory findUniqueOrThrow
   */
  export type ProductCategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProductCategory to fetch.
     */
    where: ProductCategoryWhereUniqueInput
  }

  /**
   * ProductCategory findFirst
   */
  export type ProductCategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProductCategory to fetch.
     */
    where?: ProductCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductCategories to fetch.
     */
    orderBy?: ProductCategoryOrderByWithRelationInput | ProductCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductCategories.
     */
    cursor?: ProductCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductCategories.
     */
    distinct?: ProductCategoryScalarFieldEnum | ProductCategoryScalarFieldEnum[]
  }

  /**
   * ProductCategory findFirstOrThrow
   */
  export type ProductCategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProductCategory to fetch.
     */
    where?: ProductCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductCategories to fetch.
     */
    orderBy?: ProductCategoryOrderByWithRelationInput | ProductCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductCategories.
     */
    cursor?: ProductCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductCategories.
     */
    distinct?: ProductCategoryScalarFieldEnum | ProductCategoryScalarFieldEnum[]
  }

  /**
   * ProductCategory findMany
   */
  export type ProductCategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProductCategories to fetch.
     */
    where?: ProductCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductCategories to fetch.
     */
    orderBy?: ProductCategoryOrderByWithRelationInput | ProductCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductCategories.
     */
    cursor?: ProductCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductCategories.
     */
    skip?: number
    distinct?: ProductCategoryScalarFieldEnum | ProductCategoryScalarFieldEnum[]
  }

  /**
   * ProductCategory create
   */
  export type ProductCategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductCategory.
     */
    data: XOR<ProductCategoryCreateInput, ProductCategoryUncheckedCreateInput>
  }

  /**
   * ProductCategory createMany
   */
  export type ProductCategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductCategories.
     */
    data: ProductCategoryCreateManyInput | ProductCategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductCategory createManyAndReturn
   */
  export type ProductCategoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * The data used to create many ProductCategories.
     */
    data: ProductCategoryCreateManyInput | ProductCategoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductCategory update
   */
  export type ProductCategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductCategory.
     */
    data: XOR<ProductCategoryUpdateInput, ProductCategoryUncheckedUpdateInput>
    /**
     * Choose, which ProductCategory to update.
     */
    where: ProductCategoryWhereUniqueInput
  }

  /**
   * ProductCategory updateMany
   */
  export type ProductCategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductCategories.
     */
    data: XOR<ProductCategoryUpdateManyMutationInput, ProductCategoryUncheckedUpdateManyInput>
    /**
     * Filter which ProductCategories to update
     */
    where?: ProductCategoryWhereInput
    /**
     * Limit how many ProductCategories to update.
     */
    limit?: number
  }

  /**
   * ProductCategory updateManyAndReturn
   */
  export type ProductCategoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * The data used to update ProductCategories.
     */
    data: XOR<ProductCategoryUpdateManyMutationInput, ProductCategoryUncheckedUpdateManyInput>
    /**
     * Filter which ProductCategories to update
     */
    where?: ProductCategoryWhereInput
    /**
     * Limit how many ProductCategories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductCategory upsert
   */
  export type ProductCategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductCategory to update in case it exists.
     */
    where: ProductCategoryWhereUniqueInput
    /**
     * In case the ProductCategory found by the `where` argument doesn't exist, create a new ProductCategory with this data.
     */
    create: XOR<ProductCategoryCreateInput, ProductCategoryUncheckedCreateInput>
    /**
     * In case the ProductCategory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductCategoryUpdateInput, ProductCategoryUncheckedUpdateInput>
  }

  /**
   * ProductCategory delete
   */
  export type ProductCategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * Filter which ProductCategory to delete.
     */
    where: ProductCategoryWhereUniqueInput
  }

  /**
   * ProductCategory deleteMany
   */
  export type ProductCategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductCategories to delete
     */
    where?: ProductCategoryWhereInput
    /**
     * Limit how many ProductCategories to delete.
     */
    limit?: number
  }

  /**
   * ProductCategory.image
   */
  export type ProductCategory$imageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    where?: FileWhereInput
  }

  /**
   * ProductCategory.translations
   */
  export type ProductCategory$translationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategoryTranslation
     */
    select?: ProductCategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategoryTranslation
     */
    omit?: ProductCategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryTranslationInclude<ExtArgs> | null
    where?: ProductCategoryTranslationWhereInput
    orderBy?: ProductCategoryTranslationOrderByWithRelationInput | ProductCategoryTranslationOrderByWithRelationInput[]
    cursor?: ProductCategoryTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductCategoryTranslationScalarFieldEnum | ProductCategoryTranslationScalarFieldEnum[]
  }

  /**
   * ProductCategory.products
   */
  export type ProductCategory$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * ProductCategory without action
   */
  export type ProductCategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
  }


  /**
   * Model ProductCategoryTranslation
   */

  export type AggregateProductCategoryTranslation = {
    _count: ProductCategoryTranslationCountAggregateOutputType | null
    _min: ProductCategoryTranslationMinAggregateOutputType | null
    _max: ProductCategoryTranslationMaxAggregateOutputType | null
  }

  export type ProductCategoryTranslationMinAggregateOutputType = {
    id: string | null
    locale: string | null
    title: string | null
    description: string | null
    productCategoryId: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type ProductCategoryTranslationMaxAggregateOutputType = {
    id: string | null
    locale: string | null
    title: string | null
    description: string | null
    productCategoryId: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type ProductCategoryTranslationCountAggregateOutputType = {
    id: number
    locale: number
    title: number
    description: number
    productCategoryId: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type ProductCategoryTranslationMinAggregateInputType = {
    id?: true
    locale?: true
    title?: true
    description?: true
    productCategoryId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type ProductCategoryTranslationMaxAggregateInputType = {
    id?: true
    locale?: true
    title?: true
    description?: true
    productCategoryId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type ProductCategoryTranslationCountAggregateInputType = {
    id?: true
    locale?: true
    title?: true
    description?: true
    productCategoryId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type ProductCategoryTranslationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductCategoryTranslation to aggregate.
     */
    where?: ProductCategoryTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductCategoryTranslations to fetch.
     */
    orderBy?: ProductCategoryTranslationOrderByWithRelationInput | ProductCategoryTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductCategoryTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductCategoryTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductCategoryTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductCategoryTranslations
    **/
    _count?: true | ProductCategoryTranslationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductCategoryTranslationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductCategoryTranslationMaxAggregateInputType
  }

  export type GetProductCategoryTranslationAggregateType<T extends ProductCategoryTranslationAggregateArgs> = {
        [P in keyof T & keyof AggregateProductCategoryTranslation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductCategoryTranslation[P]>
      : GetScalarType<T[P], AggregateProductCategoryTranslation[P]>
  }




  export type ProductCategoryTranslationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductCategoryTranslationWhereInput
    orderBy?: ProductCategoryTranslationOrderByWithAggregationInput | ProductCategoryTranslationOrderByWithAggregationInput[]
    by: ProductCategoryTranslationScalarFieldEnum[] | ProductCategoryTranslationScalarFieldEnum
    having?: ProductCategoryTranslationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductCategoryTranslationCountAggregateInputType | true
    _min?: ProductCategoryTranslationMinAggregateInputType
    _max?: ProductCategoryTranslationMaxAggregateInputType
  }

  export type ProductCategoryTranslationGroupByOutputType = {
    id: string
    locale: string
    title: string | null
    description: string | null
    productCategoryId: string
    createdAt: Date
    createdBy: string | null
    updatedAt: Date
    updatedBy: string | null
    _count: ProductCategoryTranslationCountAggregateOutputType | null
    _min: ProductCategoryTranslationMinAggregateOutputType | null
    _max: ProductCategoryTranslationMaxAggregateOutputType | null
  }

  type GetProductCategoryTranslationGroupByPayload<T extends ProductCategoryTranslationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductCategoryTranslationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductCategoryTranslationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductCategoryTranslationGroupByOutputType[P]>
            : GetScalarType<T[P], ProductCategoryTranslationGroupByOutputType[P]>
        }
      >
    >


  export type ProductCategoryTranslationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    locale?: boolean
    title?: boolean
    description?: boolean
    productCategoryId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    productCategory?: boolean | ProductCategoryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productCategoryTranslation"]>

  export type ProductCategoryTranslationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    locale?: boolean
    title?: boolean
    description?: boolean
    productCategoryId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    productCategory?: boolean | ProductCategoryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productCategoryTranslation"]>

  export type ProductCategoryTranslationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    locale?: boolean
    title?: boolean
    description?: boolean
    productCategoryId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    productCategory?: boolean | ProductCategoryDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productCategoryTranslation"]>

  export type ProductCategoryTranslationSelectScalar = {
    id?: boolean
    locale?: boolean
    title?: boolean
    description?: boolean
    productCategoryId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type ProductCategoryTranslationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "locale" | "title" | "description" | "productCategoryId" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy", ExtArgs["result"]["productCategoryTranslation"]>
  export type ProductCategoryTranslationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productCategory?: boolean | ProductCategoryDefaultArgs<ExtArgs>
  }
  export type ProductCategoryTranslationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productCategory?: boolean | ProductCategoryDefaultArgs<ExtArgs>
  }
  export type ProductCategoryTranslationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    productCategory?: boolean | ProductCategoryDefaultArgs<ExtArgs>
  }

  export type $ProductCategoryTranslationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductCategoryTranslation"
    objects: {
      productCategory: Prisma.$ProductCategoryPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      locale: string
      title: string | null
      description: string | null
      productCategoryId: string
      createdAt: Date
      createdBy: string | null
      updatedAt: Date
      updatedBy: string | null
    }, ExtArgs["result"]["productCategoryTranslation"]>
    composites: {}
  }

  type ProductCategoryTranslationGetPayload<S extends boolean | null | undefined | ProductCategoryTranslationDefaultArgs> = $Result.GetResult<Prisma.$ProductCategoryTranslationPayload, S>

  type ProductCategoryTranslationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductCategoryTranslationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductCategoryTranslationCountAggregateInputType | true
    }

  export interface ProductCategoryTranslationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductCategoryTranslation'], meta: { name: 'ProductCategoryTranslation' } }
    /**
     * Find zero or one ProductCategoryTranslation that matches the filter.
     * @param {ProductCategoryTranslationFindUniqueArgs} args - Arguments to find a ProductCategoryTranslation
     * @example
     * // Get one ProductCategoryTranslation
     * const productCategoryTranslation = await prisma.productCategoryTranslation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductCategoryTranslationFindUniqueArgs>(args: SelectSubset<T, ProductCategoryTranslationFindUniqueArgs<ExtArgs>>): Prisma__ProductCategoryTranslationClient<$Result.GetResult<Prisma.$ProductCategoryTranslationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductCategoryTranslation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductCategoryTranslationFindUniqueOrThrowArgs} args - Arguments to find a ProductCategoryTranslation
     * @example
     * // Get one ProductCategoryTranslation
     * const productCategoryTranslation = await prisma.productCategoryTranslation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductCategoryTranslationFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductCategoryTranslationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductCategoryTranslationClient<$Result.GetResult<Prisma.$ProductCategoryTranslationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductCategoryTranslation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryTranslationFindFirstArgs} args - Arguments to find a ProductCategoryTranslation
     * @example
     * // Get one ProductCategoryTranslation
     * const productCategoryTranslation = await prisma.productCategoryTranslation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductCategoryTranslationFindFirstArgs>(args?: SelectSubset<T, ProductCategoryTranslationFindFirstArgs<ExtArgs>>): Prisma__ProductCategoryTranslationClient<$Result.GetResult<Prisma.$ProductCategoryTranslationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductCategoryTranslation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryTranslationFindFirstOrThrowArgs} args - Arguments to find a ProductCategoryTranslation
     * @example
     * // Get one ProductCategoryTranslation
     * const productCategoryTranslation = await prisma.productCategoryTranslation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductCategoryTranslationFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductCategoryTranslationFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductCategoryTranslationClient<$Result.GetResult<Prisma.$ProductCategoryTranslationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductCategoryTranslations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryTranslationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductCategoryTranslations
     * const productCategoryTranslations = await prisma.productCategoryTranslation.findMany()
     * 
     * // Get first 10 ProductCategoryTranslations
     * const productCategoryTranslations = await prisma.productCategoryTranslation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productCategoryTranslationWithIdOnly = await prisma.productCategoryTranslation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductCategoryTranslationFindManyArgs>(args?: SelectSubset<T, ProductCategoryTranslationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductCategoryTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductCategoryTranslation.
     * @param {ProductCategoryTranslationCreateArgs} args - Arguments to create a ProductCategoryTranslation.
     * @example
     * // Create one ProductCategoryTranslation
     * const ProductCategoryTranslation = await prisma.productCategoryTranslation.create({
     *   data: {
     *     // ... data to create a ProductCategoryTranslation
     *   }
     * })
     * 
     */
    create<T extends ProductCategoryTranslationCreateArgs>(args: SelectSubset<T, ProductCategoryTranslationCreateArgs<ExtArgs>>): Prisma__ProductCategoryTranslationClient<$Result.GetResult<Prisma.$ProductCategoryTranslationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductCategoryTranslations.
     * @param {ProductCategoryTranslationCreateManyArgs} args - Arguments to create many ProductCategoryTranslations.
     * @example
     * // Create many ProductCategoryTranslations
     * const productCategoryTranslation = await prisma.productCategoryTranslation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductCategoryTranslationCreateManyArgs>(args?: SelectSubset<T, ProductCategoryTranslationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductCategoryTranslations and returns the data saved in the database.
     * @param {ProductCategoryTranslationCreateManyAndReturnArgs} args - Arguments to create many ProductCategoryTranslations.
     * @example
     * // Create many ProductCategoryTranslations
     * const productCategoryTranslation = await prisma.productCategoryTranslation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductCategoryTranslations and only return the `id`
     * const productCategoryTranslationWithIdOnly = await prisma.productCategoryTranslation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductCategoryTranslationCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductCategoryTranslationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductCategoryTranslationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProductCategoryTranslation.
     * @param {ProductCategoryTranslationDeleteArgs} args - Arguments to delete one ProductCategoryTranslation.
     * @example
     * // Delete one ProductCategoryTranslation
     * const ProductCategoryTranslation = await prisma.productCategoryTranslation.delete({
     *   where: {
     *     // ... filter to delete one ProductCategoryTranslation
     *   }
     * })
     * 
     */
    delete<T extends ProductCategoryTranslationDeleteArgs>(args: SelectSubset<T, ProductCategoryTranslationDeleteArgs<ExtArgs>>): Prisma__ProductCategoryTranslationClient<$Result.GetResult<Prisma.$ProductCategoryTranslationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductCategoryTranslation.
     * @param {ProductCategoryTranslationUpdateArgs} args - Arguments to update one ProductCategoryTranslation.
     * @example
     * // Update one ProductCategoryTranslation
     * const productCategoryTranslation = await prisma.productCategoryTranslation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductCategoryTranslationUpdateArgs>(args: SelectSubset<T, ProductCategoryTranslationUpdateArgs<ExtArgs>>): Prisma__ProductCategoryTranslationClient<$Result.GetResult<Prisma.$ProductCategoryTranslationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductCategoryTranslations.
     * @param {ProductCategoryTranslationDeleteManyArgs} args - Arguments to filter ProductCategoryTranslations to delete.
     * @example
     * // Delete a few ProductCategoryTranslations
     * const { count } = await prisma.productCategoryTranslation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductCategoryTranslationDeleteManyArgs>(args?: SelectSubset<T, ProductCategoryTranslationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductCategoryTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryTranslationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductCategoryTranslations
     * const productCategoryTranslation = await prisma.productCategoryTranslation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductCategoryTranslationUpdateManyArgs>(args: SelectSubset<T, ProductCategoryTranslationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductCategoryTranslations and returns the data updated in the database.
     * @param {ProductCategoryTranslationUpdateManyAndReturnArgs} args - Arguments to update many ProductCategoryTranslations.
     * @example
     * // Update many ProductCategoryTranslations
     * const productCategoryTranslation = await prisma.productCategoryTranslation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProductCategoryTranslations and only return the `id`
     * const productCategoryTranslationWithIdOnly = await prisma.productCategoryTranslation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductCategoryTranslationUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductCategoryTranslationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductCategoryTranslationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProductCategoryTranslation.
     * @param {ProductCategoryTranslationUpsertArgs} args - Arguments to update or create a ProductCategoryTranslation.
     * @example
     * // Update or create a ProductCategoryTranslation
     * const productCategoryTranslation = await prisma.productCategoryTranslation.upsert({
     *   create: {
     *     // ... data to create a ProductCategoryTranslation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductCategoryTranslation we want to update
     *   }
     * })
     */
    upsert<T extends ProductCategoryTranslationUpsertArgs>(args: SelectSubset<T, ProductCategoryTranslationUpsertArgs<ExtArgs>>): Prisma__ProductCategoryTranslationClient<$Result.GetResult<Prisma.$ProductCategoryTranslationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductCategoryTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryTranslationCountArgs} args - Arguments to filter ProductCategoryTranslations to count.
     * @example
     * // Count the number of ProductCategoryTranslations
     * const count = await prisma.productCategoryTranslation.count({
     *   where: {
     *     // ... the filter for the ProductCategoryTranslations we want to count
     *   }
     * })
    **/
    count<T extends ProductCategoryTranslationCountArgs>(
      args?: Subset<T, ProductCategoryTranslationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductCategoryTranslationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductCategoryTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryTranslationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductCategoryTranslationAggregateArgs>(args: Subset<T, ProductCategoryTranslationAggregateArgs>): Prisma.PrismaPromise<GetProductCategoryTranslationAggregateType<T>>

    /**
     * Group by ProductCategoryTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryTranslationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductCategoryTranslationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductCategoryTranslationGroupByArgs['orderBy'] }
        : { orderBy?: ProductCategoryTranslationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductCategoryTranslationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductCategoryTranslationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductCategoryTranslation model
   */
  readonly fields: ProductCategoryTranslationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductCategoryTranslation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductCategoryTranslationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    productCategory<T extends ProductCategoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductCategoryDefaultArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductCategoryTranslation model
   */
  interface ProductCategoryTranslationFieldRefs {
    readonly id: FieldRef<"ProductCategoryTranslation", 'String'>
    readonly locale: FieldRef<"ProductCategoryTranslation", 'String'>
    readonly title: FieldRef<"ProductCategoryTranslation", 'String'>
    readonly description: FieldRef<"ProductCategoryTranslation", 'String'>
    readonly productCategoryId: FieldRef<"ProductCategoryTranslation", 'String'>
    readonly createdAt: FieldRef<"ProductCategoryTranslation", 'DateTime'>
    readonly createdBy: FieldRef<"ProductCategoryTranslation", 'String'>
    readonly updatedAt: FieldRef<"ProductCategoryTranslation", 'DateTime'>
    readonly updatedBy: FieldRef<"ProductCategoryTranslation", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ProductCategoryTranslation findUnique
   */
  export type ProductCategoryTranslationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategoryTranslation
     */
    select?: ProductCategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategoryTranslation
     */
    omit?: ProductCategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ProductCategoryTranslation to fetch.
     */
    where: ProductCategoryTranslationWhereUniqueInput
  }

  /**
   * ProductCategoryTranslation findUniqueOrThrow
   */
  export type ProductCategoryTranslationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategoryTranslation
     */
    select?: ProductCategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategoryTranslation
     */
    omit?: ProductCategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ProductCategoryTranslation to fetch.
     */
    where: ProductCategoryTranslationWhereUniqueInput
  }

  /**
   * ProductCategoryTranslation findFirst
   */
  export type ProductCategoryTranslationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategoryTranslation
     */
    select?: ProductCategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategoryTranslation
     */
    omit?: ProductCategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ProductCategoryTranslation to fetch.
     */
    where?: ProductCategoryTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductCategoryTranslations to fetch.
     */
    orderBy?: ProductCategoryTranslationOrderByWithRelationInput | ProductCategoryTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductCategoryTranslations.
     */
    cursor?: ProductCategoryTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductCategoryTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductCategoryTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductCategoryTranslations.
     */
    distinct?: ProductCategoryTranslationScalarFieldEnum | ProductCategoryTranslationScalarFieldEnum[]
  }

  /**
   * ProductCategoryTranslation findFirstOrThrow
   */
  export type ProductCategoryTranslationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategoryTranslation
     */
    select?: ProductCategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategoryTranslation
     */
    omit?: ProductCategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ProductCategoryTranslation to fetch.
     */
    where?: ProductCategoryTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductCategoryTranslations to fetch.
     */
    orderBy?: ProductCategoryTranslationOrderByWithRelationInput | ProductCategoryTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductCategoryTranslations.
     */
    cursor?: ProductCategoryTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductCategoryTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductCategoryTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductCategoryTranslations.
     */
    distinct?: ProductCategoryTranslationScalarFieldEnum | ProductCategoryTranslationScalarFieldEnum[]
  }

  /**
   * ProductCategoryTranslation findMany
   */
  export type ProductCategoryTranslationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategoryTranslation
     */
    select?: ProductCategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategoryTranslation
     */
    omit?: ProductCategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ProductCategoryTranslations to fetch.
     */
    where?: ProductCategoryTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductCategoryTranslations to fetch.
     */
    orderBy?: ProductCategoryTranslationOrderByWithRelationInput | ProductCategoryTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductCategoryTranslations.
     */
    cursor?: ProductCategoryTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductCategoryTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductCategoryTranslations.
     */
    skip?: number
    distinct?: ProductCategoryTranslationScalarFieldEnum | ProductCategoryTranslationScalarFieldEnum[]
  }

  /**
   * ProductCategoryTranslation create
   */
  export type ProductCategoryTranslationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategoryTranslation
     */
    select?: ProductCategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategoryTranslation
     */
    omit?: ProductCategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryTranslationInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductCategoryTranslation.
     */
    data: XOR<ProductCategoryTranslationCreateInput, ProductCategoryTranslationUncheckedCreateInput>
  }

  /**
   * ProductCategoryTranslation createMany
   */
  export type ProductCategoryTranslationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductCategoryTranslations.
     */
    data: ProductCategoryTranslationCreateManyInput | ProductCategoryTranslationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductCategoryTranslation createManyAndReturn
   */
  export type ProductCategoryTranslationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategoryTranslation
     */
    select?: ProductCategoryTranslationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategoryTranslation
     */
    omit?: ProductCategoryTranslationOmit<ExtArgs> | null
    /**
     * The data used to create many ProductCategoryTranslations.
     */
    data: ProductCategoryTranslationCreateManyInput | ProductCategoryTranslationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryTranslationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductCategoryTranslation update
   */
  export type ProductCategoryTranslationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategoryTranslation
     */
    select?: ProductCategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategoryTranslation
     */
    omit?: ProductCategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryTranslationInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductCategoryTranslation.
     */
    data: XOR<ProductCategoryTranslationUpdateInput, ProductCategoryTranslationUncheckedUpdateInput>
    /**
     * Choose, which ProductCategoryTranslation to update.
     */
    where: ProductCategoryTranslationWhereUniqueInput
  }

  /**
   * ProductCategoryTranslation updateMany
   */
  export type ProductCategoryTranslationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductCategoryTranslations.
     */
    data: XOR<ProductCategoryTranslationUpdateManyMutationInput, ProductCategoryTranslationUncheckedUpdateManyInput>
    /**
     * Filter which ProductCategoryTranslations to update
     */
    where?: ProductCategoryTranslationWhereInput
    /**
     * Limit how many ProductCategoryTranslations to update.
     */
    limit?: number
  }

  /**
   * ProductCategoryTranslation updateManyAndReturn
   */
  export type ProductCategoryTranslationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategoryTranslation
     */
    select?: ProductCategoryTranslationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategoryTranslation
     */
    omit?: ProductCategoryTranslationOmit<ExtArgs> | null
    /**
     * The data used to update ProductCategoryTranslations.
     */
    data: XOR<ProductCategoryTranslationUpdateManyMutationInput, ProductCategoryTranslationUncheckedUpdateManyInput>
    /**
     * Filter which ProductCategoryTranslations to update
     */
    where?: ProductCategoryTranslationWhereInput
    /**
     * Limit how many ProductCategoryTranslations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryTranslationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductCategoryTranslation upsert
   */
  export type ProductCategoryTranslationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategoryTranslation
     */
    select?: ProductCategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategoryTranslation
     */
    omit?: ProductCategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryTranslationInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductCategoryTranslation to update in case it exists.
     */
    where: ProductCategoryTranslationWhereUniqueInput
    /**
     * In case the ProductCategoryTranslation found by the `where` argument doesn't exist, create a new ProductCategoryTranslation with this data.
     */
    create: XOR<ProductCategoryTranslationCreateInput, ProductCategoryTranslationUncheckedCreateInput>
    /**
     * In case the ProductCategoryTranslation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductCategoryTranslationUpdateInput, ProductCategoryTranslationUncheckedUpdateInput>
  }

  /**
   * ProductCategoryTranslation delete
   */
  export type ProductCategoryTranslationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategoryTranslation
     */
    select?: ProductCategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategoryTranslation
     */
    omit?: ProductCategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryTranslationInclude<ExtArgs> | null
    /**
     * Filter which ProductCategoryTranslation to delete.
     */
    where: ProductCategoryTranslationWhereUniqueInput
  }

  /**
   * ProductCategoryTranslation deleteMany
   */
  export type ProductCategoryTranslationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductCategoryTranslations to delete
     */
    where?: ProductCategoryTranslationWhereInput
    /**
     * Limit how many ProductCategoryTranslations to delete.
     */
    limit?: number
  }

  /**
   * ProductCategoryTranslation without action
   */
  export type ProductCategoryTranslationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategoryTranslation
     */
    select?: ProductCategoryTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategoryTranslation
     */
    omit?: ProductCategoryTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryTranslationInclude<ExtArgs> | null
  }


  /**
   * Model Product
   */

  export type AggregateProduct = {
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  export type ProductAvgAggregateOutputType = {
    basePrice: number | null
    discountedBasePrice: number | null
  }

  export type ProductSumAggregateOutputType = {
    basePrice: number | null
    discountedBasePrice: number | null
  }

  export type ProductMinAggregateOutputType = {
    id: string | null
    content: string | null
    slug: string | null
    sku: string | null
    basePrice: number | null
    discountedBasePrice: number | null
    currency: string | null
    organizationId: string | null
    manufacturerId: string | null
    publishedAt: Date | null
    publishedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    latestSnapshotId: string | null
  }

  export type ProductMaxAggregateOutputType = {
    id: string | null
    content: string | null
    slug: string | null
    sku: string | null
    basePrice: number | null
    discountedBasePrice: number | null
    currency: string | null
    organizationId: string | null
    manufacturerId: string | null
    publishedAt: Date | null
    publishedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
    latestSnapshotId: string | null
  }

  export type ProductCountAggregateOutputType = {
    id: number
    content: number
    slug: number
    sku: number
    basePrice: number
    discountedBasePrice: number
    currency: number
    organizationId: number
    manufacturerId: number
    tags: number
    metadata: number
    publishedAt: number
    publishedBy: number
    deletedAt: number
    deletedBy: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    latestSnapshotId: number
    _all: number
  }


  export type ProductAvgAggregateInputType = {
    basePrice?: true
    discountedBasePrice?: true
  }

  export type ProductSumAggregateInputType = {
    basePrice?: true
    discountedBasePrice?: true
  }

  export type ProductMinAggregateInputType = {
    id?: true
    content?: true
    slug?: true
    sku?: true
    basePrice?: true
    discountedBasePrice?: true
    currency?: true
    organizationId?: true
    manufacturerId?: true
    publishedAt?: true
    publishedBy?: true
    deletedAt?: true
    deletedBy?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    latestSnapshotId?: true
  }

  export type ProductMaxAggregateInputType = {
    id?: true
    content?: true
    slug?: true
    sku?: true
    basePrice?: true
    discountedBasePrice?: true
    currency?: true
    organizationId?: true
    manufacturerId?: true
    publishedAt?: true
    publishedBy?: true
    deletedAt?: true
    deletedBy?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    latestSnapshotId?: true
  }

  export type ProductCountAggregateInputType = {
    id?: true
    content?: true
    slug?: true
    sku?: true
    basePrice?: true
    discountedBasePrice?: true
    currency?: true
    organizationId?: true
    manufacturerId?: true
    tags?: true
    metadata?: true
    publishedAt?: true
    publishedBy?: true
    deletedAt?: true
    deletedBy?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    latestSnapshotId?: true
    _all?: true
  }

  export type ProductAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Product to aggregate.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Products
    **/
    _count?: true | ProductCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductMaxAggregateInputType
  }

  export type GetProductAggregateType<T extends ProductAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct[P]>
      : GetScalarType<T[P], AggregateProduct[P]>
  }




  export type ProductGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithAggregationInput | ProductOrderByWithAggregationInput[]
    by: ProductScalarFieldEnum[] | ProductScalarFieldEnum
    having?: ProductScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductCountAggregateInputType | true
    _avg?: ProductAvgAggregateInputType
    _sum?: ProductSumAggregateInputType
    _min?: ProductMinAggregateInputType
    _max?: ProductMaxAggregateInputType
  }

  export type ProductGroupByOutputType = {
    id: string
    content: string | null
    slug: string | null
    sku: string | null
    basePrice: number
    discountedBasePrice: number | null
    currency: string
    organizationId: string
    manufacturerId: string | null
    tags: string[]
    metadata: JsonValue | null
    publishedAt: Date | null
    publishedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
    createdAt: Date
    createdBy: string | null
    updatedAt: Date
    updatedBy: string | null
    latestSnapshotId: string | null
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  type GetProductGroupByPayload<T extends ProductGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductGroupByOutputType[P]>
            : GetScalarType<T[P], ProductGroupByOutputType[P]>
        }
      >
    >


  export type ProductSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    slug?: boolean
    sku?: boolean
    basePrice?: boolean
    discountedBasePrice?: boolean
    currency?: boolean
    organizationId?: boolean
    manufacturerId?: boolean
    tags?: boolean
    metadata?: boolean
    publishedAt?: boolean
    publishedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    latestSnapshotId?: boolean
    images?: boolean | Product$imagesArgs<ExtArgs>
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    manufacturer?: boolean | Product$manufacturerArgs<ExtArgs>
    categories?: boolean | Product$categoriesArgs<ExtArgs>
    modifierGroups?: boolean | Product$modifierGroupsArgs<ExtArgs>
    translations?: boolean | Product$translationsArgs<ExtArgs>
    snapshots?: boolean | Product$snapshotsArgs<ExtArgs>
    latestSnapshot?: boolean | Product$latestSnapshotArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    slug?: boolean
    sku?: boolean
    basePrice?: boolean
    discountedBasePrice?: boolean
    currency?: boolean
    organizationId?: boolean
    manufacturerId?: boolean
    tags?: boolean
    metadata?: boolean
    publishedAt?: boolean
    publishedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    latestSnapshotId?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    manufacturer?: boolean | Product$manufacturerArgs<ExtArgs>
    latestSnapshot?: boolean | Product$latestSnapshotArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    content?: boolean
    slug?: boolean
    sku?: boolean
    basePrice?: boolean
    discountedBasePrice?: boolean
    currency?: boolean
    organizationId?: boolean
    manufacturerId?: boolean
    tags?: boolean
    metadata?: boolean
    publishedAt?: boolean
    publishedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    latestSnapshotId?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    manufacturer?: boolean | Product$manufacturerArgs<ExtArgs>
    latestSnapshot?: boolean | Product$latestSnapshotArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectScalar = {
    id?: boolean
    content?: boolean
    slug?: boolean
    sku?: boolean
    basePrice?: boolean
    discountedBasePrice?: boolean
    currency?: boolean
    organizationId?: boolean
    manufacturerId?: boolean
    tags?: boolean
    metadata?: boolean
    publishedAt?: boolean
    publishedBy?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    latestSnapshotId?: boolean
  }

  export type ProductOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "content" | "slug" | "sku" | "basePrice" | "discountedBasePrice" | "currency" | "organizationId" | "manufacturerId" | "tags" | "metadata" | "publishedAt" | "publishedBy" | "deletedAt" | "deletedBy" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "latestSnapshotId", ExtArgs["result"]["product"]>
  export type ProductInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    images?: boolean | Product$imagesArgs<ExtArgs>
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    manufacturer?: boolean | Product$manufacturerArgs<ExtArgs>
    categories?: boolean | Product$categoriesArgs<ExtArgs>
    modifierGroups?: boolean | Product$modifierGroupsArgs<ExtArgs>
    translations?: boolean | Product$translationsArgs<ExtArgs>
    snapshots?: boolean | Product$snapshotsArgs<ExtArgs>
    latestSnapshot?: boolean | Product$latestSnapshotArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    manufacturer?: boolean | Product$manufacturerArgs<ExtArgs>
    latestSnapshot?: boolean | Product$latestSnapshotArgs<ExtArgs>
  }
  export type ProductIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    manufacturer?: boolean | Product$manufacturerArgs<ExtArgs>
    latestSnapshot?: boolean | Product$latestSnapshotArgs<ExtArgs>
  }

  export type $ProductPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Product"
    objects: {
      images: Prisma.$FilePayload<ExtArgs>[]
      organization: Prisma.$OrganizationPayload<ExtArgs>
      manufacturer: Prisma.$ManufacturerPayload<ExtArgs> | null
      categories: Prisma.$ProductCategoryPayload<ExtArgs>[]
      modifierGroups: Prisma.$ModifierGroupPayload<ExtArgs>[]
      translations: Prisma.$ProductTranslationPayload<ExtArgs>[]
      snapshots: Prisma.$ProductSnapshotPayload<ExtArgs>[]
      latestSnapshot: Prisma.$ProductSnapshotPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      content: string | null
      slug: string | null
      sku: string | null
      basePrice: number
      discountedBasePrice: number | null
      currency: string
      organizationId: string
      manufacturerId: string | null
      tags: string[]
      metadata: Prisma.JsonValue | null
      publishedAt: Date | null
      publishedBy: string | null
      deletedAt: Date | null
      deletedBy: string | null
      createdAt: Date
      createdBy: string | null
      updatedAt: Date
      updatedBy: string | null
      latestSnapshotId: string | null
    }, ExtArgs["result"]["product"]>
    composites: {}
  }

  type ProductGetPayload<S extends boolean | null | undefined | ProductDefaultArgs> = $Result.GetResult<Prisma.$ProductPayload, S>

  type ProductCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductCountAggregateInputType | true
    }

  export interface ProductDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Product'], meta: { name: 'Product' } }
    /**
     * Find zero or one Product that matches the filter.
     * @param {ProductFindUniqueArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductFindUniqueArgs>(args: SelectSubset<T, ProductFindUniqueArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Product that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductFindUniqueOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductFindFirstArgs>(args?: SelectSubset<T, ProductFindFirstArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Products
     * const products = await prisma.product.findMany()
     * 
     * // Get first 10 Products
     * const products = await prisma.product.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productWithIdOnly = await prisma.product.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductFindManyArgs>(args?: SelectSubset<T, ProductFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Product.
     * @param {ProductCreateArgs} args - Arguments to create a Product.
     * @example
     * // Create one Product
     * const Product = await prisma.product.create({
     *   data: {
     *     // ... data to create a Product
     *   }
     * })
     * 
     */
    create<T extends ProductCreateArgs>(args: SelectSubset<T, ProductCreateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Products.
     * @param {ProductCreateManyArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductCreateManyArgs>(args?: SelectSubset<T, ProductCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Products and returns the data saved in the database.
     * @param {ProductCreateManyAndReturnArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Products and only return the `id`
     * const productWithIdOnly = await prisma.product.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Product.
     * @param {ProductDeleteArgs} args - Arguments to delete one Product.
     * @example
     * // Delete one Product
     * const Product = await prisma.product.delete({
     *   where: {
     *     // ... filter to delete one Product
     *   }
     * })
     * 
     */
    delete<T extends ProductDeleteArgs>(args: SelectSubset<T, ProductDeleteArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Product.
     * @param {ProductUpdateArgs} args - Arguments to update one Product.
     * @example
     * // Update one Product
     * const product = await prisma.product.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductUpdateArgs>(args: SelectSubset<T, ProductUpdateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Products.
     * @param {ProductDeleteManyArgs} args - Arguments to filter Products to delete.
     * @example
     * // Delete a few Products
     * const { count } = await prisma.product.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductDeleteManyArgs>(args?: SelectSubset<T, ProductDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductUpdateManyArgs>(args: SelectSubset<T, ProductUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products and returns the data updated in the database.
     * @param {ProductUpdateManyAndReturnArgs} args - Arguments to update many Products.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Products and only return the `id`
     * const productWithIdOnly = await prisma.product.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Product.
     * @param {ProductUpsertArgs} args - Arguments to update or create a Product.
     * @example
     * // Update or create a Product
     * const product = await prisma.product.upsert({
     *   create: {
     *     // ... data to create a Product
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product we want to update
     *   }
     * })
     */
    upsert<T extends ProductUpsertArgs>(args: SelectSubset<T, ProductUpsertArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCountArgs} args - Arguments to filter Products to count.
     * @example
     * // Count the number of Products
     * const count = await prisma.product.count({
     *   where: {
     *     // ... the filter for the Products we want to count
     *   }
     * })
    **/
    count<T extends ProductCountArgs>(
      args?: Subset<T, ProductCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductAggregateArgs>(args: Subset<T, ProductAggregateArgs>): Prisma.PrismaPromise<GetProductAggregateType<T>>

    /**
     * Group by Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductGroupByArgs['orderBy'] }
        : { orderBy?: ProductGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Product model
   */
  readonly fields: ProductFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Product.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    images<T extends Product$imagesArgs<ExtArgs> = {}>(args?: Subset<T, Product$imagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    organization<T extends OrganizationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationDefaultArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    manufacturer<T extends Product$manufacturerArgs<ExtArgs> = {}>(args?: Subset<T, Product$manufacturerArgs<ExtArgs>>): Prisma__ManufacturerClient<$Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    categories<T extends Product$categoriesArgs<ExtArgs> = {}>(args?: Subset<T, Product$categoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    modifierGroups<T extends Product$modifierGroupsArgs<ExtArgs> = {}>(args?: Subset<T, Product$modifierGroupsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModifierGroupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    translations<T extends Product$translationsArgs<ExtArgs> = {}>(args?: Subset<T, Product$translationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    snapshots<T extends Product$snapshotsArgs<ExtArgs> = {}>(args?: Subset<T, Product$snapshotsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductSnapshotPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    latestSnapshot<T extends Product$latestSnapshotArgs<ExtArgs> = {}>(args?: Subset<T, Product$latestSnapshotArgs<ExtArgs>>): Prisma__ProductSnapshotClient<$Result.GetResult<Prisma.$ProductSnapshotPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Product model
   */
  interface ProductFieldRefs {
    readonly id: FieldRef<"Product", 'String'>
    readonly content: FieldRef<"Product", 'String'>
    readonly slug: FieldRef<"Product", 'String'>
    readonly sku: FieldRef<"Product", 'String'>
    readonly basePrice: FieldRef<"Product", 'Float'>
    readonly discountedBasePrice: FieldRef<"Product", 'Float'>
    readonly currency: FieldRef<"Product", 'String'>
    readonly organizationId: FieldRef<"Product", 'String'>
    readonly manufacturerId: FieldRef<"Product", 'String'>
    readonly tags: FieldRef<"Product", 'String[]'>
    readonly metadata: FieldRef<"Product", 'Json'>
    readonly publishedAt: FieldRef<"Product", 'DateTime'>
    readonly publishedBy: FieldRef<"Product", 'String'>
    readonly deletedAt: FieldRef<"Product", 'DateTime'>
    readonly deletedBy: FieldRef<"Product", 'String'>
    readonly createdAt: FieldRef<"Product", 'DateTime'>
    readonly createdBy: FieldRef<"Product", 'String'>
    readonly updatedAt: FieldRef<"Product", 'DateTime'>
    readonly updatedBy: FieldRef<"Product", 'String'>
    readonly latestSnapshotId: FieldRef<"Product", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Product findUnique
   */
  export type ProductFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findUniqueOrThrow
   */
  export type ProductFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findFirst
   */
  export type ProductFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findFirstOrThrow
   */
  export type ProductFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findMany
   */
  export type ProductFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Products to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product create
   */
  export type ProductCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to create a Product.
     */
    data: XOR<ProductCreateInput, ProductUncheckedCreateInput>
  }

  /**
   * Product createMany
   */
  export type ProductCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Product createManyAndReturn
   */
  export type ProductCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Product update
   */
  export type ProductUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to update a Product.
     */
    data: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
    /**
     * Choose, which Product to update.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product updateMany
   */
  export type ProductUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to update.
     */
    limit?: number
  }

  /**
   * Product updateManyAndReturn
   */
  export type ProductUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Product upsert
   */
  export type ProductUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The filter to search for the Product to update in case it exists.
     */
    where: ProductWhereUniqueInput
    /**
     * In case the Product found by the `where` argument doesn't exist, create a new Product with this data.
     */
    create: XOR<ProductCreateInput, ProductUncheckedCreateInput>
    /**
     * In case the Product was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
  }

  /**
   * Product delete
   */
  export type ProductDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter which Product to delete.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product deleteMany
   */
  export type ProductDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Products to delete
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to delete.
     */
    limit?: number
  }

  /**
   * Product.images
   */
  export type Product$imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    where?: FileWhereInput
    orderBy?: FileOrderByWithRelationInput | FileOrderByWithRelationInput[]
    cursor?: FileWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FileScalarFieldEnum | FileScalarFieldEnum[]
  }

  /**
   * Product.manufacturer
   */
  export type Product$manufacturerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Manufacturer
     */
    select?: ManufacturerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Manufacturer
     */
    omit?: ManufacturerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ManufacturerInclude<ExtArgs> | null
    where?: ManufacturerWhereInput
  }

  /**
   * Product.categories
   */
  export type Product$categoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    where?: ProductCategoryWhereInput
    orderBy?: ProductCategoryOrderByWithRelationInput | ProductCategoryOrderByWithRelationInput[]
    cursor?: ProductCategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductCategoryScalarFieldEnum | ProductCategoryScalarFieldEnum[]
  }

  /**
   * Product.modifierGroups
   */
  export type Product$modifierGroupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroup
     */
    select?: ModifierGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ModifierGroup
     */
    omit?: ModifierGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierGroupInclude<ExtArgs> | null
    where?: ModifierGroupWhereInput
    orderBy?: ModifierGroupOrderByWithRelationInput | ModifierGroupOrderByWithRelationInput[]
    cursor?: ModifierGroupWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ModifierGroupScalarFieldEnum | ModifierGroupScalarFieldEnum[]
  }

  /**
   * Product.translations
   */
  export type Product$translationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    where?: ProductTranslationWhereInput
    orderBy?: ProductTranslationOrderByWithRelationInput | ProductTranslationOrderByWithRelationInput[]
    cursor?: ProductTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductTranslationScalarFieldEnum | ProductTranslationScalarFieldEnum[]
  }

  /**
   * Product.snapshots
   */
  export type Product$snapshotsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSnapshot
     */
    select?: ProductSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSnapshot
     */
    omit?: ProductSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSnapshotInclude<ExtArgs> | null
    where?: ProductSnapshotWhereInput
    orderBy?: ProductSnapshotOrderByWithRelationInput | ProductSnapshotOrderByWithRelationInput[]
    cursor?: ProductSnapshotWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductSnapshotScalarFieldEnum | ProductSnapshotScalarFieldEnum[]
  }

  /**
   * Product.latestSnapshot
   */
  export type Product$latestSnapshotArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSnapshot
     */
    select?: ProductSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSnapshot
     */
    omit?: ProductSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSnapshotInclude<ExtArgs> | null
    where?: ProductSnapshotWhereInput
  }

  /**
   * Product without action
   */
  export type ProductDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
  }


  /**
   * Model ProductSnapshot
   */

  export type AggregateProductSnapshot = {
    _count: ProductSnapshotCountAggregateOutputType | null
    _min: ProductSnapshotMinAggregateOutputType | null
    _max: ProductSnapshotMaxAggregateOutputType | null
  }

  export type ProductSnapshotMinAggregateOutputType = {
    id: string | null
    productId: string | null
    createdAt: Date | null
    createdBy: string | null
  }

  export type ProductSnapshotMaxAggregateOutputType = {
    id: string | null
    productId: string | null
    createdAt: Date | null
    createdBy: string | null
  }

  export type ProductSnapshotCountAggregateOutputType = {
    id: number
    productId: number
    data: number
    createdAt: number
    createdBy: number
    _all: number
  }


  export type ProductSnapshotMinAggregateInputType = {
    id?: true
    productId?: true
    createdAt?: true
    createdBy?: true
  }

  export type ProductSnapshotMaxAggregateInputType = {
    id?: true
    productId?: true
    createdAt?: true
    createdBy?: true
  }

  export type ProductSnapshotCountAggregateInputType = {
    id?: true
    productId?: true
    data?: true
    createdAt?: true
    createdBy?: true
    _all?: true
  }

  export type ProductSnapshotAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductSnapshot to aggregate.
     */
    where?: ProductSnapshotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductSnapshots to fetch.
     */
    orderBy?: ProductSnapshotOrderByWithRelationInput | ProductSnapshotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductSnapshotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductSnapshots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductSnapshots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductSnapshots
    **/
    _count?: true | ProductSnapshotCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductSnapshotMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductSnapshotMaxAggregateInputType
  }

  export type GetProductSnapshotAggregateType<T extends ProductSnapshotAggregateArgs> = {
        [P in keyof T & keyof AggregateProductSnapshot]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductSnapshot[P]>
      : GetScalarType<T[P], AggregateProductSnapshot[P]>
  }




  export type ProductSnapshotGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductSnapshotWhereInput
    orderBy?: ProductSnapshotOrderByWithAggregationInput | ProductSnapshotOrderByWithAggregationInput[]
    by: ProductSnapshotScalarFieldEnum[] | ProductSnapshotScalarFieldEnum
    having?: ProductSnapshotScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductSnapshotCountAggregateInputType | true
    _min?: ProductSnapshotMinAggregateInputType
    _max?: ProductSnapshotMaxAggregateInputType
  }

  export type ProductSnapshotGroupByOutputType = {
    id: string
    productId: string
    data: JsonValue
    createdAt: Date
    createdBy: string | null
    _count: ProductSnapshotCountAggregateOutputType | null
    _min: ProductSnapshotMinAggregateOutputType | null
    _max: ProductSnapshotMaxAggregateOutputType | null
  }

  type GetProductSnapshotGroupByPayload<T extends ProductSnapshotGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductSnapshotGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductSnapshotGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductSnapshotGroupByOutputType[P]>
            : GetScalarType<T[P], ProductSnapshotGroupByOutputType[P]>
        }
      >
    >


  export type ProductSnapshotSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    data?: boolean
    createdAt?: boolean
    createdBy?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
    latestForProduct?: boolean | ProductSnapshot$latestForProductArgs<ExtArgs>
    orderItems?: boolean | ProductSnapshot$orderItemsArgs<ExtArgs>
    _count?: boolean | ProductSnapshotCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productSnapshot"]>

  export type ProductSnapshotSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    data?: boolean
    createdAt?: boolean
    createdBy?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productSnapshot"]>

  export type ProductSnapshotSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    data?: boolean
    createdAt?: boolean
    createdBy?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productSnapshot"]>

  export type ProductSnapshotSelectScalar = {
    id?: boolean
    productId?: boolean
    data?: boolean
    createdAt?: boolean
    createdBy?: boolean
  }

  export type ProductSnapshotOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productId" | "data" | "createdAt" | "createdBy", ExtArgs["result"]["productSnapshot"]>
  export type ProductSnapshotInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
    latestForProduct?: boolean | ProductSnapshot$latestForProductArgs<ExtArgs>
    orderItems?: boolean | ProductSnapshot$orderItemsArgs<ExtArgs>
    _count?: boolean | ProductSnapshotCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductSnapshotIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ProductSnapshotIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $ProductSnapshotPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductSnapshot"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
      latestForProduct: Prisma.$ProductPayload<ExtArgs> | null
      orderItems: Prisma.$OrderItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      productId: string
      data: Prisma.JsonValue
      createdAt: Date
      createdBy: string | null
    }, ExtArgs["result"]["productSnapshot"]>
    composites: {}
  }

  type ProductSnapshotGetPayload<S extends boolean | null | undefined | ProductSnapshotDefaultArgs> = $Result.GetResult<Prisma.$ProductSnapshotPayload, S>

  type ProductSnapshotCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductSnapshotFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductSnapshotCountAggregateInputType | true
    }

  export interface ProductSnapshotDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductSnapshot'], meta: { name: 'ProductSnapshot' } }
    /**
     * Find zero or one ProductSnapshot that matches the filter.
     * @param {ProductSnapshotFindUniqueArgs} args - Arguments to find a ProductSnapshot
     * @example
     * // Get one ProductSnapshot
     * const productSnapshot = await prisma.productSnapshot.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductSnapshotFindUniqueArgs>(args: SelectSubset<T, ProductSnapshotFindUniqueArgs<ExtArgs>>): Prisma__ProductSnapshotClient<$Result.GetResult<Prisma.$ProductSnapshotPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductSnapshot that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductSnapshotFindUniqueOrThrowArgs} args - Arguments to find a ProductSnapshot
     * @example
     * // Get one ProductSnapshot
     * const productSnapshot = await prisma.productSnapshot.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductSnapshotFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductSnapshotFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductSnapshotClient<$Result.GetResult<Prisma.$ProductSnapshotPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductSnapshot that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductSnapshotFindFirstArgs} args - Arguments to find a ProductSnapshot
     * @example
     * // Get one ProductSnapshot
     * const productSnapshot = await prisma.productSnapshot.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductSnapshotFindFirstArgs>(args?: SelectSubset<T, ProductSnapshotFindFirstArgs<ExtArgs>>): Prisma__ProductSnapshotClient<$Result.GetResult<Prisma.$ProductSnapshotPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductSnapshot that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductSnapshotFindFirstOrThrowArgs} args - Arguments to find a ProductSnapshot
     * @example
     * // Get one ProductSnapshot
     * const productSnapshot = await prisma.productSnapshot.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductSnapshotFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductSnapshotFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductSnapshotClient<$Result.GetResult<Prisma.$ProductSnapshotPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductSnapshots that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductSnapshotFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductSnapshots
     * const productSnapshots = await prisma.productSnapshot.findMany()
     * 
     * // Get first 10 ProductSnapshots
     * const productSnapshots = await prisma.productSnapshot.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productSnapshotWithIdOnly = await prisma.productSnapshot.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductSnapshotFindManyArgs>(args?: SelectSubset<T, ProductSnapshotFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductSnapshotPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductSnapshot.
     * @param {ProductSnapshotCreateArgs} args - Arguments to create a ProductSnapshot.
     * @example
     * // Create one ProductSnapshot
     * const ProductSnapshot = await prisma.productSnapshot.create({
     *   data: {
     *     // ... data to create a ProductSnapshot
     *   }
     * })
     * 
     */
    create<T extends ProductSnapshotCreateArgs>(args: SelectSubset<T, ProductSnapshotCreateArgs<ExtArgs>>): Prisma__ProductSnapshotClient<$Result.GetResult<Prisma.$ProductSnapshotPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductSnapshots.
     * @param {ProductSnapshotCreateManyArgs} args - Arguments to create many ProductSnapshots.
     * @example
     * // Create many ProductSnapshots
     * const productSnapshot = await prisma.productSnapshot.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductSnapshotCreateManyArgs>(args?: SelectSubset<T, ProductSnapshotCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductSnapshots and returns the data saved in the database.
     * @param {ProductSnapshotCreateManyAndReturnArgs} args - Arguments to create many ProductSnapshots.
     * @example
     * // Create many ProductSnapshots
     * const productSnapshot = await prisma.productSnapshot.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductSnapshots and only return the `id`
     * const productSnapshotWithIdOnly = await prisma.productSnapshot.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductSnapshotCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductSnapshotCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductSnapshotPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProductSnapshot.
     * @param {ProductSnapshotDeleteArgs} args - Arguments to delete one ProductSnapshot.
     * @example
     * // Delete one ProductSnapshot
     * const ProductSnapshot = await prisma.productSnapshot.delete({
     *   where: {
     *     // ... filter to delete one ProductSnapshot
     *   }
     * })
     * 
     */
    delete<T extends ProductSnapshotDeleteArgs>(args: SelectSubset<T, ProductSnapshotDeleteArgs<ExtArgs>>): Prisma__ProductSnapshotClient<$Result.GetResult<Prisma.$ProductSnapshotPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductSnapshot.
     * @param {ProductSnapshotUpdateArgs} args - Arguments to update one ProductSnapshot.
     * @example
     * // Update one ProductSnapshot
     * const productSnapshot = await prisma.productSnapshot.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductSnapshotUpdateArgs>(args: SelectSubset<T, ProductSnapshotUpdateArgs<ExtArgs>>): Prisma__ProductSnapshotClient<$Result.GetResult<Prisma.$ProductSnapshotPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductSnapshots.
     * @param {ProductSnapshotDeleteManyArgs} args - Arguments to filter ProductSnapshots to delete.
     * @example
     * // Delete a few ProductSnapshots
     * const { count } = await prisma.productSnapshot.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductSnapshotDeleteManyArgs>(args?: SelectSubset<T, ProductSnapshotDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductSnapshots.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductSnapshotUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductSnapshots
     * const productSnapshot = await prisma.productSnapshot.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductSnapshotUpdateManyArgs>(args: SelectSubset<T, ProductSnapshotUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductSnapshots and returns the data updated in the database.
     * @param {ProductSnapshotUpdateManyAndReturnArgs} args - Arguments to update many ProductSnapshots.
     * @example
     * // Update many ProductSnapshots
     * const productSnapshot = await prisma.productSnapshot.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProductSnapshots and only return the `id`
     * const productSnapshotWithIdOnly = await prisma.productSnapshot.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductSnapshotUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductSnapshotUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductSnapshotPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProductSnapshot.
     * @param {ProductSnapshotUpsertArgs} args - Arguments to update or create a ProductSnapshot.
     * @example
     * // Update or create a ProductSnapshot
     * const productSnapshot = await prisma.productSnapshot.upsert({
     *   create: {
     *     // ... data to create a ProductSnapshot
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductSnapshot we want to update
     *   }
     * })
     */
    upsert<T extends ProductSnapshotUpsertArgs>(args: SelectSubset<T, ProductSnapshotUpsertArgs<ExtArgs>>): Prisma__ProductSnapshotClient<$Result.GetResult<Prisma.$ProductSnapshotPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductSnapshots.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductSnapshotCountArgs} args - Arguments to filter ProductSnapshots to count.
     * @example
     * // Count the number of ProductSnapshots
     * const count = await prisma.productSnapshot.count({
     *   where: {
     *     // ... the filter for the ProductSnapshots we want to count
     *   }
     * })
    **/
    count<T extends ProductSnapshotCountArgs>(
      args?: Subset<T, ProductSnapshotCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductSnapshotCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductSnapshot.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductSnapshotAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductSnapshotAggregateArgs>(args: Subset<T, ProductSnapshotAggregateArgs>): Prisma.PrismaPromise<GetProductSnapshotAggregateType<T>>

    /**
     * Group by ProductSnapshot.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductSnapshotGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductSnapshotGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductSnapshotGroupByArgs['orderBy'] }
        : { orderBy?: ProductSnapshotGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductSnapshotGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductSnapshotGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductSnapshot model
   */
  readonly fields: ProductSnapshotFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductSnapshot.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductSnapshotClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    latestForProduct<T extends ProductSnapshot$latestForProductArgs<ExtArgs> = {}>(args?: Subset<T, ProductSnapshot$latestForProductArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    orderItems<T extends ProductSnapshot$orderItemsArgs<ExtArgs> = {}>(args?: Subset<T, ProductSnapshot$orderItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductSnapshot model
   */
  interface ProductSnapshotFieldRefs {
    readonly id: FieldRef<"ProductSnapshot", 'String'>
    readonly productId: FieldRef<"ProductSnapshot", 'String'>
    readonly data: FieldRef<"ProductSnapshot", 'Json'>
    readonly createdAt: FieldRef<"ProductSnapshot", 'DateTime'>
    readonly createdBy: FieldRef<"ProductSnapshot", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ProductSnapshot findUnique
   */
  export type ProductSnapshotFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSnapshot
     */
    select?: ProductSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSnapshot
     */
    omit?: ProductSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSnapshotInclude<ExtArgs> | null
    /**
     * Filter, which ProductSnapshot to fetch.
     */
    where: ProductSnapshotWhereUniqueInput
  }

  /**
   * ProductSnapshot findUniqueOrThrow
   */
  export type ProductSnapshotFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSnapshot
     */
    select?: ProductSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSnapshot
     */
    omit?: ProductSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSnapshotInclude<ExtArgs> | null
    /**
     * Filter, which ProductSnapshot to fetch.
     */
    where: ProductSnapshotWhereUniqueInput
  }

  /**
   * ProductSnapshot findFirst
   */
  export type ProductSnapshotFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSnapshot
     */
    select?: ProductSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSnapshot
     */
    omit?: ProductSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSnapshotInclude<ExtArgs> | null
    /**
     * Filter, which ProductSnapshot to fetch.
     */
    where?: ProductSnapshotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductSnapshots to fetch.
     */
    orderBy?: ProductSnapshotOrderByWithRelationInput | ProductSnapshotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductSnapshots.
     */
    cursor?: ProductSnapshotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductSnapshots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductSnapshots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductSnapshots.
     */
    distinct?: ProductSnapshotScalarFieldEnum | ProductSnapshotScalarFieldEnum[]
  }

  /**
   * ProductSnapshot findFirstOrThrow
   */
  export type ProductSnapshotFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSnapshot
     */
    select?: ProductSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSnapshot
     */
    omit?: ProductSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSnapshotInclude<ExtArgs> | null
    /**
     * Filter, which ProductSnapshot to fetch.
     */
    where?: ProductSnapshotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductSnapshots to fetch.
     */
    orderBy?: ProductSnapshotOrderByWithRelationInput | ProductSnapshotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductSnapshots.
     */
    cursor?: ProductSnapshotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductSnapshots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductSnapshots.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductSnapshots.
     */
    distinct?: ProductSnapshotScalarFieldEnum | ProductSnapshotScalarFieldEnum[]
  }

  /**
   * ProductSnapshot findMany
   */
  export type ProductSnapshotFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSnapshot
     */
    select?: ProductSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSnapshot
     */
    omit?: ProductSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSnapshotInclude<ExtArgs> | null
    /**
     * Filter, which ProductSnapshots to fetch.
     */
    where?: ProductSnapshotWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductSnapshots to fetch.
     */
    orderBy?: ProductSnapshotOrderByWithRelationInput | ProductSnapshotOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductSnapshots.
     */
    cursor?: ProductSnapshotWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductSnapshots from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductSnapshots.
     */
    skip?: number
    distinct?: ProductSnapshotScalarFieldEnum | ProductSnapshotScalarFieldEnum[]
  }

  /**
   * ProductSnapshot create
   */
  export type ProductSnapshotCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSnapshot
     */
    select?: ProductSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSnapshot
     */
    omit?: ProductSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSnapshotInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductSnapshot.
     */
    data: XOR<ProductSnapshotCreateInput, ProductSnapshotUncheckedCreateInput>
  }

  /**
   * ProductSnapshot createMany
   */
  export type ProductSnapshotCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductSnapshots.
     */
    data: ProductSnapshotCreateManyInput | ProductSnapshotCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductSnapshot createManyAndReturn
   */
  export type ProductSnapshotCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSnapshot
     */
    select?: ProductSnapshotSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSnapshot
     */
    omit?: ProductSnapshotOmit<ExtArgs> | null
    /**
     * The data used to create many ProductSnapshots.
     */
    data: ProductSnapshotCreateManyInput | ProductSnapshotCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSnapshotIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductSnapshot update
   */
  export type ProductSnapshotUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSnapshot
     */
    select?: ProductSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSnapshot
     */
    omit?: ProductSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSnapshotInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductSnapshot.
     */
    data: XOR<ProductSnapshotUpdateInput, ProductSnapshotUncheckedUpdateInput>
    /**
     * Choose, which ProductSnapshot to update.
     */
    where: ProductSnapshotWhereUniqueInput
  }

  /**
   * ProductSnapshot updateMany
   */
  export type ProductSnapshotUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductSnapshots.
     */
    data: XOR<ProductSnapshotUpdateManyMutationInput, ProductSnapshotUncheckedUpdateManyInput>
    /**
     * Filter which ProductSnapshots to update
     */
    where?: ProductSnapshotWhereInput
    /**
     * Limit how many ProductSnapshots to update.
     */
    limit?: number
  }

  /**
   * ProductSnapshot updateManyAndReturn
   */
  export type ProductSnapshotUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSnapshot
     */
    select?: ProductSnapshotSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSnapshot
     */
    omit?: ProductSnapshotOmit<ExtArgs> | null
    /**
     * The data used to update ProductSnapshots.
     */
    data: XOR<ProductSnapshotUpdateManyMutationInput, ProductSnapshotUncheckedUpdateManyInput>
    /**
     * Filter which ProductSnapshots to update
     */
    where?: ProductSnapshotWhereInput
    /**
     * Limit how many ProductSnapshots to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSnapshotIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductSnapshot upsert
   */
  export type ProductSnapshotUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSnapshot
     */
    select?: ProductSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSnapshot
     */
    omit?: ProductSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSnapshotInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductSnapshot to update in case it exists.
     */
    where: ProductSnapshotWhereUniqueInput
    /**
     * In case the ProductSnapshot found by the `where` argument doesn't exist, create a new ProductSnapshot with this data.
     */
    create: XOR<ProductSnapshotCreateInput, ProductSnapshotUncheckedCreateInput>
    /**
     * In case the ProductSnapshot was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductSnapshotUpdateInput, ProductSnapshotUncheckedUpdateInput>
  }

  /**
   * ProductSnapshot delete
   */
  export type ProductSnapshotDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSnapshot
     */
    select?: ProductSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSnapshot
     */
    omit?: ProductSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSnapshotInclude<ExtArgs> | null
    /**
     * Filter which ProductSnapshot to delete.
     */
    where: ProductSnapshotWhereUniqueInput
  }

  /**
   * ProductSnapshot deleteMany
   */
  export type ProductSnapshotDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductSnapshots to delete
     */
    where?: ProductSnapshotWhereInput
    /**
     * Limit how many ProductSnapshots to delete.
     */
    limit?: number
  }

  /**
   * ProductSnapshot.latestForProduct
   */
  export type ProductSnapshot$latestForProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
  }

  /**
   * ProductSnapshot.orderItems
   */
  export type ProductSnapshot$orderItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    where?: OrderItemWhereInput
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    cursor?: OrderItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * ProductSnapshot without action
   */
  export type ProductSnapshotDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSnapshot
     */
    select?: ProductSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSnapshot
     */
    omit?: ProductSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSnapshotInclude<ExtArgs> | null
  }


  /**
   * Model ProductTranslation
   */

  export type AggregateProductTranslation = {
    _count: ProductTranslationCountAggregateOutputType | null
    _min: ProductTranslationMinAggregateOutputType | null
    _max: ProductTranslationMaxAggregateOutputType | null
  }

  export type ProductTranslationMinAggregateOutputType = {
    id: string | null
    locale: string | null
    title: string | null
    description: string | null
    productId: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type ProductTranslationMaxAggregateOutputType = {
    id: string | null
    locale: string | null
    title: string | null
    description: string | null
    productId: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type ProductTranslationCountAggregateOutputType = {
    id: number
    locale: number
    title: number
    description: number
    productId: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type ProductTranslationMinAggregateInputType = {
    id?: true
    locale?: true
    title?: true
    description?: true
    productId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type ProductTranslationMaxAggregateInputType = {
    id?: true
    locale?: true
    title?: true
    description?: true
    productId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type ProductTranslationCountAggregateInputType = {
    id?: true
    locale?: true
    title?: true
    description?: true
    productId?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type ProductTranslationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductTranslation to aggregate.
     */
    where?: ProductTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductTranslations to fetch.
     */
    orderBy?: ProductTranslationOrderByWithRelationInput | ProductTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductTranslations
    **/
    _count?: true | ProductTranslationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductTranslationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductTranslationMaxAggregateInputType
  }

  export type GetProductTranslationAggregateType<T extends ProductTranslationAggregateArgs> = {
        [P in keyof T & keyof AggregateProductTranslation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductTranslation[P]>
      : GetScalarType<T[P], AggregateProductTranslation[P]>
  }




  export type ProductTranslationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductTranslationWhereInput
    orderBy?: ProductTranslationOrderByWithAggregationInput | ProductTranslationOrderByWithAggregationInput[]
    by: ProductTranslationScalarFieldEnum[] | ProductTranslationScalarFieldEnum
    having?: ProductTranslationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductTranslationCountAggregateInputType | true
    _min?: ProductTranslationMinAggregateInputType
    _max?: ProductTranslationMaxAggregateInputType
  }

  export type ProductTranslationGroupByOutputType = {
    id: string
    locale: string
    title: string | null
    description: string | null
    productId: string
    createdAt: Date
    createdBy: string | null
    updatedAt: Date
    updatedBy: string | null
    _count: ProductTranslationCountAggregateOutputType | null
    _min: ProductTranslationMinAggregateOutputType | null
    _max: ProductTranslationMaxAggregateOutputType | null
  }

  type GetProductTranslationGroupByPayload<T extends ProductTranslationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductTranslationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductTranslationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductTranslationGroupByOutputType[P]>
            : GetScalarType<T[P], ProductTranslationGroupByOutputType[P]>
        }
      >
    >


  export type ProductTranslationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    locale?: boolean
    title?: boolean
    description?: boolean
    productId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productTranslation"]>

  export type ProductTranslationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    locale?: boolean
    title?: boolean
    description?: boolean
    productId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productTranslation"]>

  export type ProductTranslationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    locale?: boolean
    title?: boolean
    description?: boolean
    productId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productTranslation"]>

  export type ProductTranslationSelectScalar = {
    id?: boolean
    locale?: boolean
    title?: boolean
    description?: boolean
    productId?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type ProductTranslationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "locale" | "title" | "description" | "productId" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy", ExtArgs["result"]["productTranslation"]>
  export type ProductTranslationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ProductTranslationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ProductTranslationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $ProductTranslationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductTranslation"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      locale: string
      title: string | null
      description: string | null
      productId: string
      createdAt: Date
      createdBy: string | null
      updatedAt: Date
      updatedBy: string | null
    }, ExtArgs["result"]["productTranslation"]>
    composites: {}
  }

  type ProductTranslationGetPayload<S extends boolean | null | undefined | ProductTranslationDefaultArgs> = $Result.GetResult<Prisma.$ProductTranslationPayload, S>

  type ProductTranslationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductTranslationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductTranslationCountAggregateInputType | true
    }

  export interface ProductTranslationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductTranslation'], meta: { name: 'ProductTranslation' } }
    /**
     * Find zero or one ProductTranslation that matches the filter.
     * @param {ProductTranslationFindUniqueArgs} args - Arguments to find a ProductTranslation
     * @example
     * // Get one ProductTranslation
     * const productTranslation = await prisma.productTranslation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductTranslationFindUniqueArgs>(args: SelectSubset<T, ProductTranslationFindUniqueArgs<ExtArgs>>): Prisma__ProductTranslationClient<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductTranslation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductTranslationFindUniqueOrThrowArgs} args - Arguments to find a ProductTranslation
     * @example
     * // Get one ProductTranslation
     * const productTranslation = await prisma.productTranslation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductTranslationFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductTranslationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductTranslationClient<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductTranslation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductTranslationFindFirstArgs} args - Arguments to find a ProductTranslation
     * @example
     * // Get one ProductTranslation
     * const productTranslation = await prisma.productTranslation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductTranslationFindFirstArgs>(args?: SelectSubset<T, ProductTranslationFindFirstArgs<ExtArgs>>): Prisma__ProductTranslationClient<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductTranslation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductTranslationFindFirstOrThrowArgs} args - Arguments to find a ProductTranslation
     * @example
     * // Get one ProductTranslation
     * const productTranslation = await prisma.productTranslation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductTranslationFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductTranslationFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductTranslationClient<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductTranslations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductTranslationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductTranslations
     * const productTranslations = await prisma.productTranslation.findMany()
     * 
     * // Get first 10 ProductTranslations
     * const productTranslations = await prisma.productTranslation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productTranslationWithIdOnly = await prisma.productTranslation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductTranslationFindManyArgs>(args?: SelectSubset<T, ProductTranslationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductTranslation.
     * @param {ProductTranslationCreateArgs} args - Arguments to create a ProductTranslation.
     * @example
     * // Create one ProductTranslation
     * const ProductTranslation = await prisma.productTranslation.create({
     *   data: {
     *     // ... data to create a ProductTranslation
     *   }
     * })
     * 
     */
    create<T extends ProductTranslationCreateArgs>(args: SelectSubset<T, ProductTranslationCreateArgs<ExtArgs>>): Prisma__ProductTranslationClient<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductTranslations.
     * @param {ProductTranslationCreateManyArgs} args - Arguments to create many ProductTranslations.
     * @example
     * // Create many ProductTranslations
     * const productTranslation = await prisma.productTranslation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductTranslationCreateManyArgs>(args?: SelectSubset<T, ProductTranslationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductTranslations and returns the data saved in the database.
     * @param {ProductTranslationCreateManyAndReturnArgs} args - Arguments to create many ProductTranslations.
     * @example
     * // Create many ProductTranslations
     * const productTranslation = await prisma.productTranslation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductTranslations and only return the `id`
     * const productTranslationWithIdOnly = await prisma.productTranslation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductTranslationCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductTranslationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProductTranslation.
     * @param {ProductTranslationDeleteArgs} args - Arguments to delete one ProductTranslation.
     * @example
     * // Delete one ProductTranslation
     * const ProductTranslation = await prisma.productTranslation.delete({
     *   where: {
     *     // ... filter to delete one ProductTranslation
     *   }
     * })
     * 
     */
    delete<T extends ProductTranslationDeleteArgs>(args: SelectSubset<T, ProductTranslationDeleteArgs<ExtArgs>>): Prisma__ProductTranslationClient<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductTranslation.
     * @param {ProductTranslationUpdateArgs} args - Arguments to update one ProductTranslation.
     * @example
     * // Update one ProductTranslation
     * const productTranslation = await prisma.productTranslation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductTranslationUpdateArgs>(args: SelectSubset<T, ProductTranslationUpdateArgs<ExtArgs>>): Prisma__ProductTranslationClient<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductTranslations.
     * @param {ProductTranslationDeleteManyArgs} args - Arguments to filter ProductTranslations to delete.
     * @example
     * // Delete a few ProductTranslations
     * const { count } = await prisma.productTranslation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductTranslationDeleteManyArgs>(args?: SelectSubset<T, ProductTranslationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductTranslationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductTranslations
     * const productTranslation = await prisma.productTranslation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductTranslationUpdateManyArgs>(args: SelectSubset<T, ProductTranslationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductTranslations and returns the data updated in the database.
     * @param {ProductTranslationUpdateManyAndReturnArgs} args - Arguments to update many ProductTranslations.
     * @example
     * // Update many ProductTranslations
     * const productTranslation = await prisma.productTranslation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProductTranslations and only return the `id`
     * const productTranslationWithIdOnly = await prisma.productTranslation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductTranslationUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductTranslationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProductTranslation.
     * @param {ProductTranslationUpsertArgs} args - Arguments to update or create a ProductTranslation.
     * @example
     * // Update or create a ProductTranslation
     * const productTranslation = await prisma.productTranslation.upsert({
     *   create: {
     *     // ... data to create a ProductTranslation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductTranslation we want to update
     *   }
     * })
     */
    upsert<T extends ProductTranslationUpsertArgs>(args: SelectSubset<T, ProductTranslationUpsertArgs<ExtArgs>>): Prisma__ProductTranslationClient<$Result.GetResult<Prisma.$ProductTranslationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductTranslationCountArgs} args - Arguments to filter ProductTranslations to count.
     * @example
     * // Count the number of ProductTranslations
     * const count = await prisma.productTranslation.count({
     *   where: {
     *     // ... the filter for the ProductTranslations we want to count
     *   }
     * })
    **/
    count<T extends ProductTranslationCountArgs>(
      args?: Subset<T, ProductTranslationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductTranslationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductTranslationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductTranslationAggregateArgs>(args: Subset<T, ProductTranslationAggregateArgs>): Prisma.PrismaPromise<GetProductTranslationAggregateType<T>>

    /**
     * Group by ProductTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductTranslationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductTranslationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductTranslationGroupByArgs['orderBy'] }
        : { orderBy?: ProductTranslationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductTranslationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductTranslationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductTranslation model
   */
  readonly fields: ProductTranslationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductTranslation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductTranslationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductTranslation model
   */
  interface ProductTranslationFieldRefs {
    readonly id: FieldRef<"ProductTranslation", 'String'>
    readonly locale: FieldRef<"ProductTranslation", 'String'>
    readonly title: FieldRef<"ProductTranslation", 'String'>
    readonly description: FieldRef<"ProductTranslation", 'String'>
    readonly productId: FieldRef<"ProductTranslation", 'String'>
    readonly createdAt: FieldRef<"ProductTranslation", 'DateTime'>
    readonly createdBy: FieldRef<"ProductTranslation", 'String'>
    readonly updatedAt: FieldRef<"ProductTranslation", 'DateTime'>
    readonly updatedBy: FieldRef<"ProductTranslation", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ProductTranslation findUnique
   */
  export type ProductTranslationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ProductTranslation to fetch.
     */
    where: ProductTranslationWhereUniqueInput
  }

  /**
   * ProductTranslation findUniqueOrThrow
   */
  export type ProductTranslationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ProductTranslation to fetch.
     */
    where: ProductTranslationWhereUniqueInput
  }

  /**
   * ProductTranslation findFirst
   */
  export type ProductTranslationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ProductTranslation to fetch.
     */
    where?: ProductTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductTranslations to fetch.
     */
    orderBy?: ProductTranslationOrderByWithRelationInput | ProductTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductTranslations.
     */
    cursor?: ProductTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductTranslations.
     */
    distinct?: ProductTranslationScalarFieldEnum | ProductTranslationScalarFieldEnum[]
  }

  /**
   * ProductTranslation findFirstOrThrow
   */
  export type ProductTranslationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ProductTranslation to fetch.
     */
    where?: ProductTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductTranslations to fetch.
     */
    orderBy?: ProductTranslationOrderByWithRelationInput | ProductTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductTranslations.
     */
    cursor?: ProductTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductTranslations.
     */
    distinct?: ProductTranslationScalarFieldEnum | ProductTranslationScalarFieldEnum[]
  }

  /**
   * ProductTranslation findMany
   */
  export type ProductTranslationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ProductTranslations to fetch.
     */
    where?: ProductTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductTranslations to fetch.
     */
    orderBy?: ProductTranslationOrderByWithRelationInput | ProductTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductTranslations.
     */
    cursor?: ProductTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductTranslations.
     */
    skip?: number
    distinct?: ProductTranslationScalarFieldEnum | ProductTranslationScalarFieldEnum[]
  }

  /**
   * ProductTranslation create
   */
  export type ProductTranslationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductTranslation.
     */
    data: XOR<ProductTranslationCreateInput, ProductTranslationUncheckedCreateInput>
  }

  /**
   * ProductTranslation createMany
   */
  export type ProductTranslationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductTranslations.
     */
    data: ProductTranslationCreateManyInput | ProductTranslationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductTranslation createManyAndReturn
   */
  export type ProductTranslationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * The data used to create many ProductTranslations.
     */
    data: ProductTranslationCreateManyInput | ProductTranslationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductTranslation update
   */
  export type ProductTranslationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductTranslation.
     */
    data: XOR<ProductTranslationUpdateInput, ProductTranslationUncheckedUpdateInput>
    /**
     * Choose, which ProductTranslation to update.
     */
    where: ProductTranslationWhereUniqueInput
  }

  /**
   * ProductTranslation updateMany
   */
  export type ProductTranslationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductTranslations.
     */
    data: XOR<ProductTranslationUpdateManyMutationInput, ProductTranslationUncheckedUpdateManyInput>
    /**
     * Filter which ProductTranslations to update
     */
    where?: ProductTranslationWhereInput
    /**
     * Limit how many ProductTranslations to update.
     */
    limit?: number
  }

  /**
   * ProductTranslation updateManyAndReturn
   */
  export type ProductTranslationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * The data used to update ProductTranslations.
     */
    data: XOR<ProductTranslationUpdateManyMutationInput, ProductTranslationUncheckedUpdateManyInput>
    /**
     * Filter which ProductTranslations to update
     */
    where?: ProductTranslationWhereInput
    /**
     * Limit how many ProductTranslations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductTranslation upsert
   */
  export type ProductTranslationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductTranslation to update in case it exists.
     */
    where: ProductTranslationWhereUniqueInput
    /**
     * In case the ProductTranslation found by the `where` argument doesn't exist, create a new ProductTranslation with this data.
     */
    create: XOR<ProductTranslationCreateInput, ProductTranslationUncheckedCreateInput>
    /**
     * In case the ProductTranslation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductTranslationUpdateInput, ProductTranslationUncheckedUpdateInput>
  }

  /**
   * ProductTranslation delete
   */
  export type ProductTranslationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
    /**
     * Filter which ProductTranslation to delete.
     */
    where: ProductTranslationWhereUniqueInput
  }

  /**
   * ProductTranslation deleteMany
   */
  export type ProductTranslationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductTranslations to delete
     */
    where?: ProductTranslationWhereInput
    /**
     * Limit how many ProductTranslations to delete.
     */
    limit?: number
  }

  /**
   * ProductTranslation without action
   */
  export type ProductTranslationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductTranslation
     */
    select?: ProductTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductTranslation
     */
    omit?: ProductTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductTranslationInclude<ExtArgs> | null
  }


  /**
   * Model ModifierGroup
   */

  export type AggregateModifierGroup = {
    _count: ModifierGroupCountAggregateOutputType | null
    _avg: ModifierGroupAvgAggregateOutputType | null
    _sum: ModifierGroupSumAggregateOutputType | null
    _min: ModifierGroupMinAggregateOutputType | null
    _max: ModifierGroupMaxAggregateOutputType | null
  }

  export type ModifierGroupAvgAggregateOutputType = {
    selectMin: number | null
    selectMax: number | null
  }

  export type ModifierGroupSumAggregateOutputType = {
    selectMin: number | null
    selectMax: number | null
  }

  export type ModifierGroupMinAggregateOutputType = {
    id: string | null
    selectMin: number | null
    selectMax: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ModifierGroupMaxAggregateOutputType = {
    id: string | null
    selectMin: number | null
    selectMax: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ModifierGroupCountAggregateOutputType = {
    id: number
    selectMin: number
    selectMax: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ModifierGroupAvgAggregateInputType = {
    selectMin?: true
    selectMax?: true
  }

  export type ModifierGroupSumAggregateInputType = {
    selectMin?: true
    selectMax?: true
  }

  export type ModifierGroupMinAggregateInputType = {
    id?: true
    selectMin?: true
    selectMax?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ModifierGroupMaxAggregateInputType = {
    id?: true
    selectMin?: true
    selectMax?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ModifierGroupCountAggregateInputType = {
    id?: true
    selectMin?: true
    selectMax?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ModifierGroupAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ModifierGroup to aggregate.
     */
    where?: ModifierGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ModifierGroups to fetch.
     */
    orderBy?: ModifierGroupOrderByWithRelationInput | ModifierGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ModifierGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ModifierGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ModifierGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ModifierGroups
    **/
    _count?: true | ModifierGroupCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ModifierGroupAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ModifierGroupSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ModifierGroupMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ModifierGroupMaxAggregateInputType
  }

  export type GetModifierGroupAggregateType<T extends ModifierGroupAggregateArgs> = {
        [P in keyof T & keyof AggregateModifierGroup]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateModifierGroup[P]>
      : GetScalarType<T[P], AggregateModifierGroup[P]>
  }




  export type ModifierGroupGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ModifierGroupWhereInput
    orderBy?: ModifierGroupOrderByWithAggregationInput | ModifierGroupOrderByWithAggregationInput[]
    by: ModifierGroupScalarFieldEnum[] | ModifierGroupScalarFieldEnum
    having?: ModifierGroupScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ModifierGroupCountAggregateInputType | true
    _avg?: ModifierGroupAvgAggregateInputType
    _sum?: ModifierGroupSumAggregateInputType
    _min?: ModifierGroupMinAggregateInputType
    _max?: ModifierGroupMaxAggregateInputType
  }

  export type ModifierGroupGroupByOutputType = {
    id: string
    selectMin: number | null
    selectMax: number | null
    createdAt: Date
    updatedAt: Date
    _count: ModifierGroupCountAggregateOutputType | null
    _avg: ModifierGroupAvgAggregateOutputType | null
    _sum: ModifierGroupSumAggregateOutputType | null
    _min: ModifierGroupMinAggregateOutputType | null
    _max: ModifierGroupMaxAggregateOutputType | null
  }

  type GetModifierGroupGroupByPayload<T extends ModifierGroupGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ModifierGroupGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ModifierGroupGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ModifierGroupGroupByOutputType[P]>
            : GetScalarType<T[P], ModifierGroupGroupByOutputType[P]>
        }
      >
    >


  export type ModifierGroupSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    selectMin?: boolean
    selectMax?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    modifiers?: boolean | ModifierGroup$modifiersArgs<ExtArgs>
    products?: boolean | ModifierGroup$productsArgs<ExtArgs>
    translations?: boolean | ModifierGroup$translationsArgs<ExtArgs>
    _count?: boolean | ModifierGroupCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["modifierGroup"]>

  export type ModifierGroupSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    selectMin?: boolean
    selectMax?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["modifierGroup"]>

  export type ModifierGroupSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    selectMin?: boolean
    selectMax?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["modifierGroup"]>

  export type ModifierGroupSelectScalar = {
    id?: boolean
    selectMin?: boolean
    selectMax?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ModifierGroupOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "selectMin" | "selectMax" | "createdAt" | "updatedAt", ExtArgs["result"]["modifierGroup"]>
  export type ModifierGroupInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    modifiers?: boolean | ModifierGroup$modifiersArgs<ExtArgs>
    products?: boolean | ModifierGroup$productsArgs<ExtArgs>
    translations?: boolean | ModifierGroup$translationsArgs<ExtArgs>
    _count?: boolean | ModifierGroupCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ModifierGroupIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type ModifierGroupIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ModifierGroupPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ModifierGroup"
    objects: {
      modifiers: Prisma.$ModifierPayload<ExtArgs>[]
      products: Prisma.$ProductPayload<ExtArgs>[]
      translations: Prisma.$ModifierGroupTranslationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      selectMin: number | null
      selectMax: number | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["modifierGroup"]>
    composites: {}
  }

  type ModifierGroupGetPayload<S extends boolean | null | undefined | ModifierGroupDefaultArgs> = $Result.GetResult<Prisma.$ModifierGroupPayload, S>

  type ModifierGroupCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ModifierGroupFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ModifierGroupCountAggregateInputType | true
    }

  export interface ModifierGroupDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ModifierGroup'], meta: { name: 'ModifierGroup' } }
    /**
     * Find zero or one ModifierGroup that matches the filter.
     * @param {ModifierGroupFindUniqueArgs} args - Arguments to find a ModifierGroup
     * @example
     * // Get one ModifierGroup
     * const modifierGroup = await prisma.modifierGroup.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ModifierGroupFindUniqueArgs>(args: SelectSubset<T, ModifierGroupFindUniqueArgs<ExtArgs>>): Prisma__ModifierGroupClient<$Result.GetResult<Prisma.$ModifierGroupPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ModifierGroup that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ModifierGroupFindUniqueOrThrowArgs} args - Arguments to find a ModifierGroup
     * @example
     * // Get one ModifierGroup
     * const modifierGroup = await prisma.modifierGroup.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ModifierGroupFindUniqueOrThrowArgs>(args: SelectSubset<T, ModifierGroupFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ModifierGroupClient<$Result.GetResult<Prisma.$ModifierGroupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ModifierGroup that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierGroupFindFirstArgs} args - Arguments to find a ModifierGroup
     * @example
     * // Get one ModifierGroup
     * const modifierGroup = await prisma.modifierGroup.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ModifierGroupFindFirstArgs>(args?: SelectSubset<T, ModifierGroupFindFirstArgs<ExtArgs>>): Prisma__ModifierGroupClient<$Result.GetResult<Prisma.$ModifierGroupPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ModifierGroup that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierGroupFindFirstOrThrowArgs} args - Arguments to find a ModifierGroup
     * @example
     * // Get one ModifierGroup
     * const modifierGroup = await prisma.modifierGroup.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ModifierGroupFindFirstOrThrowArgs>(args?: SelectSubset<T, ModifierGroupFindFirstOrThrowArgs<ExtArgs>>): Prisma__ModifierGroupClient<$Result.GetResult<Prisma.$ModifierGroupPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ModifierGroups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierGroupFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ModifierGroups
     * const modifierGroups = await prisma.modifierGroup.findMany()
     * 
     * // Get first 10 ModifierGroups
     * const modifierGroups = await prisma.modifierGroup.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const modifierGroupWithIdOnly = await prisma.modifierGroup.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ModifierGroupFindManyArgs>(args?: SelectSubset<T, ModifierGroupFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModifierGroupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ModifierGroup.
     * @param {ModifierGroupCreateArgs} args - Arguments to create a ModifierGroup.
     * @example
     * // Create one ModifierGroup
     * const ModifierGroup = await prisma.modifierGroup.create({
     *   data: {
     *     // ... data to create a ModifierGroup
     *   }
     * })
     * 
     */
    create<T extends ModifierGroupCreateArgs>(args: SelectSubset<T, ModifierGroupCreateArgs<ExtArgs>>): Prisma__ModifierGroupClient<$Result.GetResult<Prisma.$ModifierGroupPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ModifierGroups.
     * @param {ModifierGroupCreateManyArgs} args - Arguments to create many ModifierGroups.
     * @example
     * // Create many ModifierGroups
     * const modifierGroup = await prisma.modifierGroup.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ModifierGroupCreateManyArgs>(args?: SelectSubset<T, ModifierGroupCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ModifierGroups and returns the data saved in the database.
     * @param {ModifierGroupCreateManyAndReturnArgs} args - Arguments to create many ModifierGroups.
     * @example
     * // Create many ModifierGroups
     * const modifierGroup = await prisma.modifierGroup.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ModifierGroups and only return the `id`
     * const modifierGroupWithIdOnly = await prisma.modifierGroup.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ModifierGroupCreateManyAndReturnArgs>(args?: SelectSubset<T, ModifierGroupCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModifierGroupPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ModifierGroup.
     * @param {ModifierGroupDeleteArgs} args - Arguments to delete one ModifierGroup.
     * @example
     * // Delete one ModifierGroup
     * const ModifierGroup = await prisma.modifierGroup.delete({
     *   where: {
     *     // ... filter to delete one ModifierGroup
     *   }
     * })
     * 
     */
    delete<T extends ModifierGroupDeleteArgs>(args: SelectSubset<T, ModifierGroupDeleteArgs<ExtArgs>>): Prisma__ModifierGroupClient<$Result.GetResult<Prisma.$ModifierGroupPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ModifierGroup.
     * @param {ModifierGroupUpdateArgs} args - Arguments to update one ModifierGroup.
     * @example
     * // Update one ModifierGroup
     * const modifierGroup = await prisma.modifierGroup.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ModifierGroupUpdateArgs>(args: SelectSubset<T, ModifierGroupUpdateArgs<ExtArgs>>): Prisma__ModifierGroupClient<$Result.GetResult<Prisma.$ModifierGroupPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ModifierGroups.
     * @param {ModifierGroupDeleteManyArgs} args - Arguments to filter ModifierGroups to delete.
     * @example
     * // Delete a few ModifierGroups
     * const { count } = await prisma.modifierGroup.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ModifierGroupDeleteManyArgs>(args?: SelectSubset<T, ModifierGroupDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ModifierGroups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierGroupUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ModifierGroups
     * const modifierGroup = await prisma.modifierGroup.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ModifierGroupUpdateManyArgs>(args: SelectSubset<T, ModifierGroupUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ModifierGroups and returns the data updated in the database.
     * @param {ModifierGroupUpdateManyAndReturnArgs} args - Arguments to update many ModifierGroups.
     * @example
     * // Update many ModifierGroups
     * const modifierGroup = await prisma.modifierGroup.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ModifierGroups and only return the `id`
     * const modifierGroupWithIdOnly = await prisma.modifierGroup.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ModifierGroupUpdateManyAndReturnArgs>(args: SelectSubset<T, ModifierGroupUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModifierGroupPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ModifierGroup.
     * @param {ModifierGroupUpsertArgs} args - Arguments to update or create a ModifierGroup.
     * @example
     * // Update or create a ModifierGroup
     * const modifierGroup = await prisma.modifierGroup.upsert({
     *   create: {
     *     // ... data to create a ModifierGroup
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ModifierGroup we want to update
     *   }
     * })
     */
    upsert<T extends ModifierGroupUpsertArgs>(args: SelectSubset<T, ModifierGroupUpsertArgs<ExtArgs>>): Prisma__ModifierGroupClient<$Result.GetResult<Prisma.$ModifierGroupPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ModifierGroups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierGroupCountArgs} args - Arguments to filter ModifierGroups to count.
     * @example
     * // Count the number of ModifierGroups
     * const count = await prisma.modifierGroup.count({
     *   where: {
     *     // ... the filter for the ModifierGroups we want to count
     *   }
     * })
    **/
    count<T extends ModifierGroupCountArgs>(
      args?: Subset<T, ModifierGroupCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ModifierGroupCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ModifierGroup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierGroupAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ModifierGroupAggregateArgs>(args: Subset<T, ModifierGroupAggregateArgs>): Prisma.PrismaPromise<GetModifierGroupAggregateType<T>>

    /**
     * Group by ModifierGroup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierGroupGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ModifierGroupGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ModifierGroupGroupByArgs['orderBy'] }
        : { orderBy?: ModifierGroupGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ModifierGroupGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetModifierGroupGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ModifierGroup model
   */
  readonly fields: ModifierGroupFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ModifierGroup.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ModifierGroupClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    modifiers<T extends ModifierGroup$modifiersArgs<ExtArgs> = {}>(args?: Subset<T, ModifierGroup$modifiersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    products<T extends ModifierGroup$productsArgs<ExtArgs> = {}>(args?: Subset<T, ModifierGroup$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    translations<T extends ModifierGroup$translationsArgs<ExtArgs> = {}>(args?: Subset<T, ModifierGroup$translationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModifierGroupTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ModifierGroup model
   */
  interface ModifierGroupFieldRefs {
    readonly id: FieldRef<"ModifierGroup", 'String'>
    readonly selectMin: FieldRef<"ModifierGroup", 'Int'>
    readonly selectMax: FieldRef<"ModifierGroup", 'Int'>
    readonly createdAt: FieldRef<"ModifierGroup", 'DateTime'>
    readonly updatedAt: FieldRef<"ModifierGroup", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ModifierGroup findUnique
   */
  export type ModifierGroupFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroup
     */
    select?: ModifierGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ModifierGroup
     */
    omit?: ModifierGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierGroupInclude<ExtArgs> | null
    /**
     * Filter, which ModifierGroup to fetch.
     */
    where: ModifierGroupWhereUniqueInput
  }

  /**
   * ModifierGroup findUniqueOrThrow
   */
  export type ModifierGroupFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroup
     */
    select?: ModifierGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ModifierGroup
     */
    omit?: ModifierGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierGroupInclude<ExtArgs> | null
    /**
     * Filter, which ModifierGroup to fetch.
     */
    where: ModifierGroupWhereUniqueInput
  }

  /**
   * ModifierGroup findFirst
   */
  export type ModifierGroupFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroup
     */
    select?: ModifierGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ModifierGroup
     */
    omit?: ModifierGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierGroupInclude<ExtArgs> | null
    /**
     * Filter, which ModifierGroup to fetch.
     */
    where?: ModifierGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ModifierGroups to fetch.
     */
    orderBy?: ModifierGroupOrderByWithRelationInput | ModifierGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ModifierGroups.
     */
    cursor?: ModifierGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ModifierGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ModifierGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ModifierGroups.
     */
    distinct?: ModifierGroupScalarFieldEnum | ModifierGroupScalarFieldEnum[]
  }

  /**
   * ModifierGroup findFirstOrThrow
   */
  export type ModifierGroupFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroup
     */
    select?: ModifierGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ModifierGroup
     */
    omit?: ModifierGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierGroupInclude<ExtArgs> | null
    /**
     * Filter, which ModifierGroup to fetch.
     */
    where?: ModifierGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ModifierGroups to fetch.
     */
    orderBy?: ModifierGroupOrderByWithRelationInput | ModifierGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ModifierGroups.
     */
    cursor?: ModifierGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ModifierGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ModifierGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ModifierGroups.
     */
    distinct?: ModifierGroupScalarFieldEnum | ModifierGroupScalarFieldEnum[]
  }

  /**
   * ModifierGroup findMany
   */
  export type ModifierGroupFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroup
     */
    select?: ModifierGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ModifierGroup
     */
    omit?: ModifierGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierGroupInclude<ExtArgs> | null
    /**
     * Filter, which ModifierGroups to fetch.
     */
    where?: ModifierGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ModifierGroups to fetch.
     */
    orderBy?: ModifierGroupOrderByWithRelationInput | ModifierGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ModifierGroups.
     */
    cursor?: ModifierGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ModifierGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ModifierGroups.
     */
    skip?: number
    distinct?: ModifierGroupScalarFieldEnum | ModifierGroupScalarFieldEnum[]
  }

  /**
   * ModifierGroup create
   */
  export type ModifierGroupCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroup
     */
    select?: ModifierGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ModifierGroup
     */
    omit?: ModifierGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierGroupInclude<ExtArgs> | null
    /**
     * The data needed to create a ModifierGroup.
     */
    data?: XOR<ModifierGroupCreateInput, ModifierGroupUncheckedCreateInput>
  }

  /**
   * ModifierGroup createMany
   */
  export type ModifierGroupCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ModifierGroups.
     */
    data: ModifierGroupCreateManyInput | ModifierGroupCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ModifierGroup createManyAndReturn
   */
  export type ModifierGroupCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroup
     */
    select?: ModifierGroupSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ModifierGroup
     */
    omit?: ModifierGroupOmit<ExtArgs> | null
    /**
     * The data used to create many ModifierGroups.
     */
    data: ModifierGroupCreateManyInput | ModifierGroupCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ModifierGroup update
   */
  export type ModifierGroupUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroup
     */
    select?: ModifierGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ModifierGroup
     */
    omit?: ModifierGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierGroupInclude<ExtArgs> | null
    /**
     * The data needed to update a ModifierGroup.
     */
    data: XOR<ModifierGroupUpdateInput, ModifierGroupUncheckedUpdateInput>
    /**
     * Choose, which ModifierGroup to update.
     */
    where: ModifierGroupWhereUniqueInput
  }

  /**
   * ModifierGroup updateMany
   */
  export type ModifierGroupUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ModifierGroups.
     */
    data: XOR<ModifierGroupUpdateManyMutationInput, ModifierGroupUncheckedUpdateManyInput>
    /**
     * Filter which ModifierGroups to update
     */
    where?: ModifierGroupWhereInput
    /**
     * Limit how many ModifierGroups to update.
     */
    limit?: number
  }

  /**
   * ModifierGroup updateManyAndReturn
   */
  export type ModifierGroupUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroup
     */
    select?: ModifierGroupSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ModifierGroup
     */
    omit?: ModifierGroupOmit<ExtArgs> | null
    /**
     * The data used to update ModifierGroups.
     */
    data: XOR<ModifierGroupUpdateManyMutationInput, ModifierGroupUncheckedUpdateManyInput>
    /**
     * Filter which ModifierGroups to update
     */
    where?: ModifierGroupWhereInput
    /**
     * Limit how many ModifierGroups to update.
     */
    limit?: number
  }

  /**
   * ModifierGroup upsert
   */
  export type ModifierGroupUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroup
     */
    select?: ModifierGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ModifierGroup
     */
    omit?: ModifierGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierGroupInclude<ExtArgs> | null
    /**
     * The filter to search for the ModifierGroup to update in case it exists.
     */
    where: ModifierGroupWhereUniqueInput
    /**
     * In case the ModifierGroup found by the `where` argument doesn't exist, create a new ModifierGroup with this data.
     */
    create: XOR<ModifierGroupCreateInput, ModifierGroupUncheckedCreateInput>
    /**
     * In case the ModifierGroup was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ModifierGroupUpdateInput, ModifierGroupUncheckedUpdateInput>
  }

  /**
   * ModifierGroup delete
   */
  export type ModifierGroupDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroup
     */
    select?: ModifierGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ModifierGroup
     */
    omit?: ModifierGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierGroupInclude<ExtArgs> | null
    /**
     * Filter which ModifierGroup to delete.
     */
    where: ModifierGroupWhereUniqueInput
  }

  /**
   * ModifierGroup deleteMany
   */
  export type ModifierGroupDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ModifierGroups to delete
     */
    where?: ModifierGroupWhereInput
    /**
     * Limit how many ModifierGroups to delete.
     */
    limit?: number
  }

  /**
   * ModifierGroup.modifiers
   */
  export type ModifierGroup$modifiersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Modifier
     */
    omit?: ModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierInclude<ExtArgs> | null
    where?: ModifierWhereInput
    orderBy?: ModifierOrderByWithRelationInput | ModifierOrderByWithRelationInput[]
    cursor?: ModifierWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ModifierScalarFieldEnum | ModifierScalarFieldEnum[]
  }

  /**
   * ModifierGroup.products
   */
  export type ModifierGroup$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * ModifierGroup.translations
   */
  export type ModifierGroup$translationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroupTranslation
     */
    select?: ModifierGroupTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ModifierGroupTranslation
     */
    omit?: ModifierGroupTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierGroupTranslationInclude<ExtArgs> | null
    where?: ModifierGroupTranslationWhereInput
    orderBy?: ModifierGroupTranslationOrderByWithRelationInput | ModifierGroupTranslationOrderByWithRelationInput[]
    cursor?: ModifierGroupTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ModifierGroupTranslationScalarFieldEnum | ModifierGroupTranslationScalarFieldEnum[]
  }

  /**
   * ModifierGroup without action
   */
  export type ModifierGroupDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroup
     */
    select?: ModifierGroupSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ModifierGroup
     */
    omit?: ModifierGroupOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierGroupInclude<ExtArgs> | null
  }


  /**
   * Model ModifierGroupTranslation
   */

  export type AggregateModifierGroupTranslation = {
    _count: ModifierGroupTranslationCountAggregateOutputType | null
    _min: ModifierGroupTranslationMinAggregateOutputType | null
    _max: ModifierGroupTranslationMaxAggregateOutputType | null
  }

  export type ModifierGroupTranslationMinAggregateOutputType = {
    id: string | null
    locale: string | null
    title: string | null
    description: string | null
    modifierGroupId: string | null
  }

  export type ModifierGroupTranslationMaxAggregateOutputType = {
    id: string | null
    locale: string | null
    title: string | null
    description: string | null
    modifierGroupId: string | null
  }

  export type ModifierGroupTranslationCountAggregateOutputType = {
    id: number
    locale: number
    title: number
    description: number
    modifierGroupId: number
    _all: number
  }


  export type ModifierGroupTranslationMinAggregateInputType = {
    id?: true
    locale?: true
    title?: true
    description?: true
    modifierGroupId?: true
  }

  export type ModifierGroupTranslationMaxAggregateInputType = {
    id?: true
    locale?: true
    title?: true
    description?: true
    modifierGroupId?: true
  }

  export type ModifierGroupTranslationCountAggregateInputType = {
    id?: true
    locale?: true
    title?: true
    description?: true
    modifierGroupId?: true
    _all?: true
  }

  export type ModifierGroupTranslationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ModifierGroupTranslation to aggregate.
     */
    where?: ModifierGroupTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ModifierGroupTranslations to fetch.
     */
    orderBy?: ModifierGroupTranslationOrderByWithRelationInput | ModifierGroupTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ModifierGroupTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ModifierGroupTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ModifierGroupTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ModifierGroupTranslations
    **/
    _count?: true | ModifierGroupTranslationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ModifierGroupTranslationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ModifierGroupTranslationMaxAggregateInputType
  }

  export type GetModifierGroupTranslationAggregateType<T extends ModifierGroupTranslationAggregateArgs> = {
        [P in keyof T & keyof AggregateModifierGroupTranslation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateModifierGroupTranslation[P]>
      : GetScalarType<T[P], AggregateModifierGroupTranslation[P]>
  }




  export type ModifierGroupTranslationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ModifierGroupTranslationWhereInput
    orderBy?: ModifierGroupTranslationOrderByWithAggregationInput | ModifierGroupTranslationOrderByWithAggregationInput[]
    by: ModifierGroupTranslationScalarFieldEnum[] | ModifierGroupTranslationScalarFieldEnum
    having?: ModifierGroupTranslationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ModifierGroupTranslationCountAggregateInputType | true
    _min?: ModifierGroupTranslationMinAggregateInputType
    _max?: ModifierGroupTranslationMaxAggregateInputType
  }

  export type ModifierGroupTranslationGroupByOutputType = {
    id: string
    locale: string
    title: string | null
    description: string | null
    modifierGroupId: string
    _count: ModifierGroupTranslationCountAggregateOutputType | null
    _min: ModifierGroupTranslationMinAggregateOutputType | null
    _max: ModifierGroupTranslationMaxAggregateOutputType | null
  }

  type GetModifierGroupTranslationGroupByPayload<T extends ModifierGroupTranslationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ModifierGroupTranslationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ModifierGroupTranslationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ModifierGroupTranslationGroupByOutputType[P]>
            : GetScalarType<T[P], ModifierGroupTranslationGroupByOutputType[P]>
        }
      >
    >


  export type ModifierGroupTranslationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    locale?: boolean
    title?: boolean
    description?: boolean
    modifierGroupId?: boolean
    modifierGroup?: boolean | ModifierGroupDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["modifierGroupTranslation"]>

  export type ModifierGroupTranslationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    locale?: boolean
    title?: boolean
    description?: boolean
    modifierGroupId?: boolean
    modifierGroup?: boolean | ModifierGroupDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["modifierGroupTranslation"]>

  export type ModifierGroupTranslationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    locale?: boolean
    title?: boolean
    description?: boolean
    modifierGroupId?: boolean
    modifierGroup?: boolean | ModifierGroupDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["modifierGroupTranslation"]>

  export type ModifierGroupTranslationSelectScalar = {
    id?: boolean
    locale?: boolean
    title?: boolean
    description?: boolean
    modifierGroupId?: boolean
  }

  export type ModifierGroupTranslationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "locale" | "title" | "description" | "modifierGroupId", ExtArgs["result"]["modifierGroupTranslation"]>
  export type ModifierGroupTranslationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    modifierGroup?: boolean | ModifierGroupDefaultArgs<ExtArgs>
  }
  export type ModifierGroupTranslationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    modifierGroup?: boolean | ModifierGroupDefaultArgs<ExtArgs>
  }
  export type ModifierGroupTranslationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    modifierGroup?: boolean | ModifierGroupDefaultArgs<ExtArgs>
  }

  export type $ModifierGroupTranslationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ModifierGroupTranslation"
    objects: {
      modifierGroup: Prisma.$ModifierGroupPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      locale: string
      title: string | null
      description: string | null
      modifierGroupId: string
    }, ExtArgs["result"]["modifierGroupTranslation"]>
    composites: {}
  }

  type ModifierGroupTranslationGetPayload<S extends boolean | null | undefined | ModifierGroupTranslationDefaultArgs> = $Result.GetResult<Prisma.$ModifierGroupTranslationPayload, S>

  type ModifierGroupTranslationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ModifierGroupTranslationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ModifierGroupTranslationCountAggregateInputType | true
    }

  export interface ModifierGroupTranslationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ModifierGroupTranslation'], meta: { name: 'ModifierGroupTranslation' } }
    /**
     * Find zero or one ModifierGroupTranslation that matches the filter.
     * @param {ModifierGroupTranslationFindUniqueArgs} args - Arguments to find a ModifierGroupTranslation
     * @example
     * // Get one ModifierGroupTranslation
     * const modifierGroupTranslation = await prisma.modifierGroupTranslation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ModifierGroupTranslationFindUniqueArgs>(args: SelectSubset<T, ModifierGroupTranslationFindUniqueArgs<ExtArgs>>): Prisma__ModifierGroupTranslationClient<$Result.GetResult<Prisma.$ModifierGroupTranslationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ModifierGroupTranslation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ModifierGroupTranslationFindUniqueOrThrowArgs} args - Arguments to find a ModifierGroupTranslation
     * @example
     * // Get one ModifierGroupTranslation
     * const modifierGroupTranslation = await prisma.modifierGroupTranslation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ModifierGroupTranslationFindUniqueOrThrowArgs>(args: SelectSubset<T, ModifierGroupTranslationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ModifierGroupTranslationClient<$Result.GetResult<Prisma.$ModifierGroupTranslationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ModifierGroupTranslation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierGroupTranslationFindFirstArgs} args - Arguments to find a ModifierGroupTranslation
     * @example
     * // Get one ModifierGroupTranslation
     * const modifierGroupTranslation = await prisma.modifierGroupTranslation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ModifierGroupTranslationFindFirstArgs>(args?: SelectSubset<T, ModifierGroupTranslationFindFirstArgs<ExtArgs>>): Prisma__ModifierGroupTranslationClient<$Result.GetResult<Prisma.$ModifierGroupTranslationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ModifierGroupTranslation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierGroupTranslationFindFirstOrThrowArgs} args - Arguments to find a ModifierGroupTranslation
     * @example
     * // Get one ModifierGroupTranslation
     * const modifierGroupTranslation = await prisma.modifierGroupTranslation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ModifierGroupTranslationFindFirstOrThrowArgs>(args?: SelectSubset<T, ModifierGroupTranslationFindFirstOrThrowArgs<ExtArgs>>): Prisma__ModifierGroupTranslationClient<$Result.GetResult<Prisma.$ModifierGroupTranslationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ModifierGroupTranslations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierGroupTranslationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ModifierGroupTranslations
     * const modifierGroupTranslations = await prisma.modifierGroupTranslation.findMany()
     * 
     * // Get first 10 ModifierGroupTranslations
     * const modifierGroupTranslations = await prisma.modifierGroupTranslation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const modifierGroupTranslationWithIdOnly = await prisma.modifierGroupTranslation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ModifierGroupTranslationFindManyArgs>(args?: SelectSubset<T, ModifierGroupTranslationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModifierGroupTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ModifierGroupTranslation.
     * @param {ModifierGroupTranslationCreateArgs} args - Arguments to create a ModifierGroupTranslation.
     * @example
     * // Create one ModifierGroupTranslation
     * const ModifierGroupTranslation = await prisma.modifierGroupTranslation.create({
     *   data: {
     *     // ... data to create a ModifierGroupTranslation
     *   }
     * })
     * 
     */
    create<T extends ModifierGroupTranslationCreateArgs>(args: SelectSubset<T, ModifierGroupTranslationCreateArgs<ExtArgs>>): Prisma__ModifierGroupTranslationClient<$Result.GetResult<Prisma.$ModifierGroupTranslationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ModifierGroupTranslations.
     * @param {ModifierGroupTranslationCreateManyArgs} args - Arguments to create many ModifierGroupTranslations.
     * @example
     * // Create many ModifierGroupTranslations
     * const modifierGroupTranslation = await prisma.modifierGroupTranslation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ModifierGroupTranslationCreateManyArgs>(args?: SelectSubset<T, ModifierGroupTranslationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ModifierGroupTranslations and returns the data saved in the database.
     * @param {ModifierGroupTranslationCreateManyAndReturnArgs} args - Arguments to create many ModifierGroupTranslations.
     * @example
     * // Create many ModifierGroupTranslations
     * const modifierGroupTranslation = await prisma.modifierGroupTranslation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ModifierGroupTranslations and only return the `id`
     * const modifierGroupTranslationWithIdOnly = await prisma.modifierGroupTranslation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ModifierGroupTranslationCreateManyAndReturnArgs>(args?: SelectSubset<T, ModifierGroupTranslationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModifierGroupTranslationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ModifierGroupTranslation.
     * @param {ModifierGroupTranslationDeleteArgs} args - Arguments to delete one ModifierGroupTranslation.
     * @example
     * // Delete one ModifierGroupTranslation
     * const ModifierGroupTranslation = await prisma.modifierGroupTranslation.delete({
     *   where: {
     *     // ... filter to delete one ModifierGroupTranslation
     *   }
     * })
     * 
     */
    delete<T extends ModifierGroupTranslationDeleteArgs>(args: SelectSubset<T, ModifierGroupTranslationDeleteArgs<ExtArgs>>): Prisma__ModifierGroupTranslationClient<$Result.GetResult<Prisma.$ModifierGroupTranslationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ModifierGroupTranslation.
     * @param {ModifierGroupTranslationUpdateArgs} args - Arguments to update one ModifierGroupTranslation.
     * @example
     * // Update one ModifierGroupTranslation
     * const modifierGroupTranslation = await prisma.modifierGroupTranslation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ModifierGroupTranslationUpdateArgs>(args: SelectSubset<T, ModifierGroupTranslationUpdateArgs<ExtArgs>>): Prisma__ModifierGroupTranslationClient<$Result.GetResult<Prisma.$ModifierGroupTranslationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ModifierGroupTranslations.
     * @param {ModifierGroupTranslationDeleteManyArgs} args - Arguments to filter ModifierGroupTranslations to delete.
     * @example
     * // Delete a few ModifierGroupTranslations
     * const { count } = await prisma.modifierGroupTranslation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ModifierGroupTranslationDeleteManyArgs>(args?: SelectSubset<T, ModifierGroupTranslationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ModifierGroupTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierGroupTranslationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ModifierGroupTranslations
     * const modifierGroupTranslation = await prisma.modifierGroupTranslation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ModifierGroupTranslationUpdateManyArgs>(args: SelectSubset<T, ModifierGroupTranslationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ModifierGroupTranslations and returns the data updated in the database.
     * @param {ModifierGroupTranslationUpdateManyAndReturnArgs} args - Arguments to update many ModifierGroupTranslations.
     * @example
     * // Update many ModifierGroupTranslations
     * const modifierGroupTranslation = await prisma.modifierGroupTranslation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ModifierGroupTranslations and only return the `id`
     * const modifierGroupTranslationWithIdOnly = await prisma.modifierGroupTranslation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ModifierGroupTranslationUpdateManyAndReturnArgs>(args: SelectSubset<T, ModifierGroupTranslationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModifierGroupTranslationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ModifierGroupTranslation.
     * @param {ModifierGroupTranslationUpsertArgs} args - Arguments to update or create a ModifierGroupTranslation.
     * @example
     * // Update or create a ModifierGroupTranslation
     * const modifierGroupTranslation = await prisma.modifierGroupTranslation.upsert({
     *   create: {
     *     // ... data to create a ModifierGroupTranslation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ModifierGroupTranslation we want to update
     *   }
     * })
     */
    upsert<T extends ModifierGroupTranslationUpsertArgs>(args: SelectSubset<T, ModifierGroupTranslationUpsertArgs<ExtArgs>>): Prisma__ModifierGroupTranslationClient<$Result.GetResult<Prisma.$ModifierGroupTranslationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ModifierGroupTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierGroupTranslationCountArgs} args - Arguments to filter ModifierGroupTranslations to count.
     * @example
     * // Count the number of ModifierGroupTranslations
     * const count = await prisma.modifierGroupTranslation.count({
     *   where: {
     *     // ... the filter for the ModifierGroupTranslations we want to count
     *   }
     * })
    **/
    count<T extends ModifierGroupTranslationCountArgs>(
      args?: Subset<T, ModifierGroupTranslationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ModifierGroupTranslationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ModifierGroupTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierGroupTranslationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ModifierGroupTranslationAggregateArgs>(args: Subset<T, ModifierGroupTranslationAggregateArgs>): Prisma.PrismaPromise<GetModifierGroupTranslationAggregateType<T>>

    /**
     * Group by ModifierGroupTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierGroupTranslationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ModifierGroupTranslationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ModifierGroupTranslationGroupByArgs['orderBy'] }
        : { orderBy?: ModifierGroupTranslationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ModifierGroupTranslationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetModifierGroupTranslationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ModifierGroupTranslation model
   */
  readonly fields: ModifierGroupTranslationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ModifierGroupTranslation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ModifierGroupTranslationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    modifierGroup<T extends ModifierGroupDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ModifierGroupDefaultArgs<ExtArgs>>): Prisma__ModifierGroupClient<$Result.GetResult<Prisma.$ModifierGroupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ModifierGroupTranslation model
   */
  interface ModifierGroupTranslationFieldRefs {
    readonly id: FieldRef<"ModifierGroupTranslation", 'String'>
    readonly locale: FieldRef<"ModifierGroupTranslation", 'String'>
    readonly title: FieldRef<"ModifierGroupTranslation", 'String'>
    readonly description: FieldRef<"ModifierGroupTranslation", 'String'>
    readonly modifierGroupId: FieldRef<"ModifierGroupTranslation", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ModifierGroupTranslation findUnique
   */
  export type ModifierGroupTranslationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroupTranslation
     */
    select?: ModifierGroupTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ModifierGroupTranslation
     */
    omit?: ModifierGroupTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierGroupTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ModifierGroupTranslation to fetch.
     */
    where: ModifierGroupTranslationWhereUniqueInput
  }

  /**
   * ModifierGroupTranslation findUniqueOrThrow
   */
  export type ModifierGroupTranslationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroupTranslation
     */
    select?: ModifierGroupTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ModifierGroupTranslation
     */
    omit?: ModifierGroupTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierGroupTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ModifierGroupTranslation to fetch.
     */
    where: ModifierGroupTranslationWhereUniqueInput
  }

  /**
   * ModifierGroupTranslation findFirst
   */
  export type ModifierGroupTranslationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroupTranslation
     */
    select?: ModifierGroupTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ModifierGroupTranslation
     */
    omit?: ModifierGroupTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierGroupTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ModifierGroupTranslation to fetch.
     */
    where?: ModifierGroupTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ModifierGroupTranslations to fetch.
     */
    orderBy?: ModifierGroupTranslationOrderByWithRelationInput | ModifierGroupTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ModifierGroupTranslations.
     */
    cursor?: ModifierGroupTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ModifierGroupTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ModifierGroupTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ModifierGroupTranslations.
     */
    distinct?: ModifierGroupTranslationScalarFieldEnum | ModifierGroupTranslationScalarFieldEnum[]
  }

  /**
   * ModifierGroupTranslation findFirstOrThrow
   */
  export type ModifierGroupTranslationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroupTranslation
     */
    select?: ModifierGroupTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ModifierGroupTranslation
     */
    omit?: ModifierGroupTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierGroupTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ModifierGroupTranslation to fetch.
     */
    where?: ModifierGroupTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ModifierGroupTranslations to fetch.
     */
    orderBy?: ModifierGroupTranslationOrderByWithRelationInput | ModifierGroupTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ModifierGroupTranslations.
     */
    cursor?: ModifierGroupTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ModifierGroupTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ModifierGroupTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ModifierGroupTranslations.
     */
    distinct?: ModifierGroupTranslationScalarFieldEnum | ModifierGroupTranslationScalarFieldEnum[]
  }

  /**
   * ModifierGroupTranslation findMany
   */
  export type ModifierGroupTranslationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroupTranslation
     */
    select?: ModifierGroupTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ModifierGroupTranslation
     */
    omit?: ModifierGroupTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierGroupTranslationInclude<ExtArgs> | null
    /**
     * Filter, which ModifierGroupTranslations to fetch.
     */
    where?: ModifierGroupTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ModifierGroupTranslations to fetch.
     */
    orderBy?: ModifierGroupTranslationOrderByWithRelationInput | ModifierGroupTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ModifierGroupTranslations.
     */
    cursor?: ModifierGroupTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ModifierGroupTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ModifierGroupTranslations.
     */
    skip?: number
    distinct?: ModifierGroupTranslationScalarFieldEnum | ModifierGroupTranslationScalarFieldEnum[]
  }

  /**
   * ModifierGroupTranslation create
   */
  export type ModifierGroupTranslationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroupTranslation
     */
    select?: ModifierGroupTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ModifierGroupTranslation
     */
    omit?: ModifierGroupTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierGroupTranslationInclude<ExtArgs> | null
    /**
     * The data needed to create a ModifierGroupTranslation.
     */
    data: XOR<ModifierGroupTranslationCreateInput, ModifierGroupTranslationUncheckedCreateInput>
  }

  /**
   * ModifierGroupTranslation createMany
   */
  export type ModifierGroupTranslationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ModifierGroupTranslations.
     */
    data: ModifierGroupTranslationCreateManyInput | ModifierGroupTranslationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ModifierGroupTranslation createManyAndReturn
   */
  export type ModifierGroupTranslationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroupTranslation
     */
    select?: ModifierGroupTranslationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ModifierGroupTranslation
     */
    omit?: ModifierGroupTranslationOmit<ExtArgs> | null
    /**
     * The data used to create many ModifierGroupTranslations.
     */
    data: ModifierGroupTranslationCreateManyInput | ModifierGroupTranslationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierGroupTranslationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ModifierGroupTranslation update
   */
  export type ModifierGroupTranslationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroupTranslation
     */
    select?: ModifierGroupTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ModifierGroupTranslation
     */
    omit?: ModifierGroupTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierGroupTranslationInclude<ExtArgs> | null
    /**
     * The data needed to update a ModifierGroupTranslation.
     */
    data: XOR<ModifierGroupTranslationUpdateInput, ModifierGroupTranslationUncheckedUpdateInput>
    /**
     * Choose, which ModifierGroupTranslation to update.
     */
    where: ModifierGroupTranslationWhereUniqueInput
  }

  /**
   * ModifierGroupTranslation updateMany
   */
  export type ModifierGroupTranslationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ModifierGroupTranslations.
     */
    data: XOR<ModifierGroupTranslationUpdateManyMutationInput, ModifierGroupTranslationUncheckedUpdateManyInput>
    /**
     * Filter which ModifierGroupTranslations to update
     */
    where?: ModifierGroupTranslationWhereInput
    /**
     * Limit how many ModifierGroupTranslations to update.
     */
    limit?: number
  }

  /**
   * ModifierGroupTranslation updateManyAndReturn
   */
  export type ModifierGroupTranslationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroupTranslation
     */
    select?: ModifierGroupTranslationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ModifierGroupTranslation
     */
    omit?: ModifierGroupTranslationOmit<ExtArgs> | null
    /**
     * The data used to update ModifierGroupTranslations.
     */
    data: XOR<ModifierGroupTranslationUpdateManyMutationInput, ModifierGroupTranslationUncheckedUpdateManyInput>
    /**
     * Filter which ModifierGroupTranslations to update
     */
    where?: ModifierGroupTranslationWhereInput
    /**
     * Limit how many ModifierGroupTranslations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierGroupTranslationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ModifierGroupTranslation upsert
   */
  export type ModifierGroupTranslationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroupTranslation
     */
    select?: ModifierGroupTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ModifierGroupTranslation
     */
    omit?: ModifierGroupTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierGroupTranslationInclude<ExtArgs> | null
    /**
     * The filter to search for the ModifierGroupTranslation to update in case it exists.
     */
    where: ModifierGroupTranslationWhereUniqueInput
    /**
     * In case the ModifierGroupTranslation found by the `where` argument doesn't exist, create a new ModifierGroupTranslation with this data.
     */
    create: XOR<ModifierGroupTranslationCreateInput, ModifierGroupTranslationUncheckedCreateInput>
    /**
     * In case the ModifierGroupTranslation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ModifierGroupTranslationUpdateInput, ModifierGroupTranslationUncheckedUpdateInput>
  }

  /**
   * ModifierGroupTranslation delete
   */
  export type ModifierGroupTranslationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroupTranslation
     */
    select?: ModifierGroupTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ModifierGroupTranslation
     */
    omit?: ModifierGroupTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierGroupTranslationInclude<ExtArgs> | null
    /**
     * Filter which ModifierGroupTranslation to delete.
     */
    where: ModifierGroupTranslationWhereUniqueInput
  }

  /**
   * ModifierGroupTranslation deleteMany
   */
  export type ModifierGroupTranslationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ModifierGroupTranslations to delete
     */
    where?: ModifierGroupTranslationWhereInput
    /**
     * Limit how many ModifierGroupTranslations to delete.
     */
    limit?: number
  }

  /**
   * ModifierGroupTranslation without action
   */
  export type ModifierGroupTranslationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ModifierGroupTranslation
     */
    select?: ModifierGroupTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ModifierGroupTranslation
     */
    omit?: ModifierGroupTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierGroupTranslationInclude<ExtArgs> | null
  }


  /**
   * Model Modifier
   */

  export type AggregateModifier = {
    _count: ModifierCountAggregateOutputType | null
    _avg: ModifierAvgAggregateOutputType | null
    _sum: ModifierSumAggregateOutputType | null
    _min: ModifierMinAggregateOutputType | null
    _max: ModifierMaxAggregateOutputType | null
  }

  export type ModifierAvgAggregateOutputType = {
    price: number | null
  }

  export type ModifierSumAggregateOutputType = {
    price: number | null
  }

  export type ModifierMinAggregateOutputType = {
    id: string | null
    title: string | null
    description: string | null
    sku: string | null
    price: number | null
    modifierGroupId: string | null
  }

  export type ModifierMaxAggregateOutputType = {
    id: string | null
    title: string | null
    description: string | null
    sku: string | null
    price: number | null
    modifierGroupId: string | null
  }

  export type ModifierCountAggregateOutputType = {
    id: number
    title: number
    description: number
    sku: number
    price: number
    modifierGroupId: number
    _all: number
  }


  export type ModifierAvgAggregateInputType = {
    price?: true
  }

  export type ModifierSumAggregateInputType = {
    price?: true
  }

  export type ModifierMinAggregateInputType = {
    id?: true
    title?: true
    description?: true
    sku?: true
    price?: true
    modifierGroupId?: true
  }

  export type ModifierMaxAggregateInputType = {
    id?: true
    title?: true
    description?: true
    sku?: true
    price?: true
    modifierGroupId?: true
  }

  export type ModifierCountAggregateInputType = {
    id?: true
    title?: true
    description?: true
    sku?: true
    price?: true
    modifierGroupId?: true
    _all?: true
  }

  export type ModifierAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Modifier to aggregate.
     */
    where?: ModifierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Modifiers to fetch.
     */
    orderBy?: ModifierOrderByWithRelationInput | ModifierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ModifierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Modifiers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Modifiers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Modifiers
    **/
    _count?: true | ModifierCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ModifierAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ModifierSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ModifierMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ModifierMaxAggregateInputType
  }

  export type GetModifierAggregateType<T extends ModifierAggregateArgs> = {
        [P in keyof T & keyof AggregateModifier]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateModifier[P]>
      : GetScalarType<T[P], AggregateModifier[P]>
  }




  export type ModifierGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ModifierWhereInput
    orderBy?: ModifierOrderByWithAggregationInput | ModifierOrderByWithAggregationInput[]
    by: ModifierScalarFieldEnum[] | ModifierScalarFieldEnum
    having?: ModifierScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ModifierCountAggregateInputType | true
    _avg?: ModifierAvgAggregateInputType
    _sum?: ModifierSumAggregateInputType
    _min?: ModifierMinAggregateInputType
    _max?: ModifierMaxAggregateInputType
  }

  export type ModifierGroupByOutputType = {
    id: string
    title: string
    description: string | null
    sku: string | null
    price: number
    modifierGroupId: string
    _count: ModifierCountAggregateOutputType | null
    _avg: ModifierAvgAggregateOutputType | null
    _sum: ModifierSumAggregateOutputType | null
    _min: ModifierMinAggregateOutputType | null
    _max: ModifierMaxAggregateOutputType | null
  }

  type GetModifierGroupByPayload<T extends ModifierGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ModifierGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ModifierGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ModifierGroupByOutputType[P]>
            : GetScalarType<T[P], ModifierGroupByOutputType[P]>
        }
      >
    >


  export type ModifierSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    sku?: boolean
    price?: boolean
    modifierGroupId?: boolean
    modifierGroup?: boolean | ModifierGroupDefaultArgs<ExtArgs>
    images?: boolean | Modifier$imagesArgs<ExtArgs>
    _count?: boolean | ModifierCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["modifier"]>

  export type ModifierSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    sku?: boolean
    price?: boolean
    modifierGroupId?: boolean
    modifierGroup?: boolean | ModifierGroupDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["modifier"]>

  export type ModifierSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    sku?: boolean
    price?: boolean
    modifierGroupId?: boolean
    modifierGroup?: boolean | ModifierGroupDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["modifier"]>

  export type ModifierSelectScalar = {
    id?: boolean
    title?: boolean
    description?: boolean
    sku?: boolean
    price?: boolean
    modifierGroupId?: boolean
  }

  export type ModifierOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "description" | "sku" | "price" | "modifierGroupId", ExtArgs["result"]["modifier"]>
  export type ModifierInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    modifierGroup?: boolean | ModifierGroupDefaultArgs<ExtArgs>
    images?: boolean | Modifier$imagesArgs<ExtArgs>
    _count?: boolean | ModifierCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ModifierIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    modifierGroup?: boolean | ModifierGroupDefaultArgs<ExtArgs>
  }
  export type ModifierIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    modifierGroup?: boolean | ModifierGroupDefaultArgs<ExtArgs>
  }

  export type $ModifierPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Modifier"
    objects: {
      modifierGroup: Prisma.$ModifierGroupPayload<ExtArgs>
      images: Prisma.$FilePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      description: string | null
      sku: string | null
      price: number
      modifierGroupId: string
    }, ExtArgs["result"]["modifier"]>
    composites: {}
  }

  type ModifierGetPayload<S extends boolean | null | undefined | ModifierDefaultArgs> = $Result.GetResult<Prisma.$ModifierPayload, S>

  type ModifierCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ModifierFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ModifierCountAggregateInputType | true
    }

  export interface ModifierDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Modifier'], meta: { name: 'Modifier' } }
    /**
     * Find zero or one Modifier that matches the filter.
     * @param {ModifierFindUniqueArgs} args - Arguments to find a Modifier
     * @example
     * // Get one Modifier
     * const modifier = await prisma.modifier.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ModifierFindUniqueArgs>(args: SelectSubset<T, ModifierFindUniqueArgs<ExtArgs>>): Prisma__ModifierClient<$Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Modifier that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ModifierFindUniqueOrThrowArgs} args - Arguments to find a Modifier
     * @example
     * // Get one Modifier
     * const modifier = await prisma.modifier.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ModifierFindUniqueOrThrowArgs>(args: SelectSubset<T, ModifierFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ModifierClient<$Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Modifier that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierFindFirstArgs} args - Arguments to find a Modifier
     * @example
     * // Get one Modifier
     * const modifier = await prisma.modifier.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ModifierFindFirstArgs>(args?: SelectSubset<T, ModifierFindFirstArgs<ExtArgs>>): Prisma__ModifierClient<$Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Modifier that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierFindFirstOrThrowArgs} args - Arguments to find a Modifier
     * @example
     * // Get one Modifier
     * const modifier = await prisma.modifier.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ModifierFindFirstOrThrowArgs>(args?: SelectSubset<T, ModifierFindFirstOrThrowArgs<ExtArgs>>): Prisma__ModifierClient<$Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Modifiers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Modifiers
     * const modifiers = await prisma.modifier.findMany()
     * 
     * // Get first 10 Modifiers
     * const modifiers = await prisma.modifier.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const modifierWithIdOnly = await prisma.modifier.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ModifierFindManyArgs>(args?: SelectSubset<T, ModifierFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Modifier.
     * @param {ModifierCreateArgs} args - Arguments to create a Modifier.
     * @example
     * // Create one Modifier
     * const Modifier = await prisma.modifier.create({
     *   data: {
     *     // ... data to create a Modifier
     *   }
     * })
     * 
     */
    create<T extends ModifierCreateArgs>(args: SelectSubset<T, ModifierCreateArgs<ExtArgs>>): Prisma__ModifierClient<$Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Modifiers.
     * @param {ModifierCreateManyArgs} args - Arguments to create many Modifiers.
     * @example
     * // Create many Modifiers
     * const modifier = await prisma.modifier.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ModifierCreateManyArgs>(args?: SelectSubset<T, ModifierCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Modifiers and returns the data saved in the database.
     * @param {ModifierCreateManyAndReturnArgs} args - Arguments to create many Modifiers.
     * @example
     * // Create many Modifiers
     * const modifier = await prisma.modifier.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Modifiers and only return the `id`
     * const modifierWithIdOnly = await prisma.modifier.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ModifierCreateManyAndReturnArgs>(args?: SelectSubset<T, ModifierCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Modifier.
     * @param {ModifierDeleteArgs} args - Arguments to delete one Modifier.
     * @example
     * // Delete one Modifier
     * const Modifier = await prisma.modifier.delete({
     *   where: {
     *     // ... filter to delete one Modifier
     *   }
     * })
     * 
     */
    delete<T extends ModifierDeleteArgs>(args: SelectSubset<T, ModifierDeleteArgs<ExtArgs>>): Prisma__ModifierClient<$Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Modifier.
     * @param {ModifierUpdateArgs} args - Arguments to update one Modifier.
     * @example
     * // Update one Modifier
     * const modifier = await prisma.modifier.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ModifierUpdateArgs>(args: SelectSubset<T, ModifierUpdateArgs<ExtArgs>>): Prisma__ModifierClient<$Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Modifiers.
     * @param {ModifierDeleteManyArgs} args - Arguments to filter Modifiers to delete.
     * @example
     * // Delete a few Modifiers
     * const { count } = await prisma.modifier.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ModifierDeleteManyArgs>(args?: SelectSubset<T, ModifierDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Modifiers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Modifiers
     * const modifier = await prisma.modifier.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ModifierUpdateManyArgs>(args: SelectSubset<T, ModifierUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Modifiers and returns the data updated in the database.
     * @param {ModifierUpdateManyAndReturnArgs} args - Arguments to update many Modifiers.
     * @example
     * // Update many Modifiers
     * const modifier = await prisma.modifier.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Modifiers and only return the `id`
     * const modifierWithIdOnly = await prisma.modifier.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ModifierUpdateManyAndReturnArgs>(args: SelectSubset<T, ModifierUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Modifier.
     * @param {ModifierUpsertArgs} args - Arguments to update or create a Modifier.
     * @example
     * // Update or create a Modifier
     * const modifier = await prisma.modifier.upsert({
     *   create: {
     *     // ... data to create a Modifier
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Modifier we want to update
     *   }
     * })
     */
    upsert<T extends ModifierUpsertArgs>(args: SelectSubset<T, ModifierUpsertArgs<ExtArgs>>): Prisma__ModifierClient<$Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Modifiers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierCountArgs} args - Arguments to filter Modifiers to count.
     * @example
     * // Count the number of Modifiers
     * const count = await prisma.modifier.count({
     *   where: {
     *     // ... the filter for the Modifiers we want to count
     *   }
     * })
    **/
    count<T extends ModifierCountArgs>(
      args?: Subset<T, ModifierCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ModifierCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Modifier.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ModifierAggregateArgs>(args: Subset<T, ModifierAggregateArgs>): Prisma.PrismaPromise<GetModifierAggregateType<T>>

    /**
     * Group by Modifier.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ModifierGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ModifierGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ModifierGroupByArgs['orderBy'] }
        : { orderBy?: ModifierGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ModifierGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetModifierGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Modifier model
   */
  readonly fields: ModifierFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Modifier.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ModifierClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    modifierGroup<T extends ModifierGroupDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ModifierGroupDefaultArgs<ExtArgs>>): Prisma__ModifierGroupClient<$Result.GetResult<Prisma.$ModifierGroupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    images<T extends Modifier$imagesArgs<ExtArgs> = {}>(args?: Subset<T, Modifier$imagesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Modifier model
   */
  interface ModifierFieldRefs {
    readonly id: FieldRef<"Modifier", 'String'>
    readonly title: FieldRef<"Modifier", 'String'>
    readonly description: FieldRef<"Modifier", 'String'>
    readonly sku: FieldRef<"Modifier", 'String'>
    readonly price: FieldRef<"Modifier", 'Float'>
    readonly modifierGroupId: FieldRef<"Modifier", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Modifier findUnique
   */
  export type ModifierFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Modifier
     */
    omit?: ModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierInclude<ExtArgs> | null
    /**
     * Filter, which Modifier to fetch.
     */
    where: ModifierWhereUniqueInput
  }

  /**
   * Modifier findUniqueOrThrow
   */
  export type ModifierFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Modifier
     */
    omit?: ModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierInclude<ExtArgs> | null
    /**
     * Filter, which Modifier to fetch.
     */
    where: ModifierWhereUniqueInput
  }

  /**
   * Modifier findFirst
   */
  export type ModifierFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Modifier
     */
    omit?: ModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierInclude<ExtArgs> | null
    /**
     * Filter, which Modifier to fetch.
     */
    where?: ModifierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Modifiers to fetch.
     */
    orderBy?: ModifierOrderByWithRelationInput | ModifierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Modifiers.
     */
    cursor?: ModifierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Modifiers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Modifiers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Modifiers.
     */
    distinct?: ModifierScalarFieldEnum | ModifierScalarFieldEnum[]
  }

  /**
   * Modifier findFirstOrThrow
   */
  export type ModifierFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Modifier
     */
    omit?: ModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierInclude<ExtArgs> | null
    /**
     * Filter, which Modifier to fetch.
     */
    where?: ModifierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Modifiers to fetch.
     */
    orderBy?: ModifierOrderByWithRelationInput | ModifierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Modifiers.
     */
    cursor?: ModifierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Modifiers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Modifiers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Modifiers.
     */
    distinct?: ModifierScalarFieldEnum | ModifierScalarFieldEnum[]
  }

  /**
   * Modifier findMany
   */
  export type ModifierFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Modifier
     */
    omit?: ModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierInclude<ExtArgs> | null
    /**
     * Filter, which Modifiers to fetch.
     */
    where?: ModifierWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Modifiers to fetch.
     */
    orderBy?: ModifierOrderByWithRelationInput | ModifierOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Modifiers.
     */
    cursor?: ModifierWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Modifiers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Modifiers.
     */
    skip?: number
    distinct?: ModifierScalarFieldEnum | ModifierScalarFieldEnum[]
  }

  /**
   * Modifier create
   */
  export type ModifierCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Modifier
     */
    omit?: ModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierInclude<ExtArgs> | null
    /**
     * The data needed to create a Modifier.
     */
    data: XOR<ModifierCreateInput, ModifierUncheckedCreateInput>
  }

  /**
   * Modifier createMany
   */
  export type ModifierCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Modifiers.
     */
    data: ModifierCreateManyInput | ModifierCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Modifier createManyAndReturn
   */
  export type ModifierCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Modifier
     */
    omit?: ModifierOmit<ExtArgs> | null
    /**
     * The data used to create many Modifiers.
     */
    data: ModifierCreateManyInput | ModifierCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Modifier update
   */
  export type ModifierUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Modifier
     */
    omit?: ModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierInclude<ExtArgs> | null
    /**
     * The data needed to update a Modifier.
     */
    data: XOR<ModifierUpdateInput, ModifierUncheckedUpdateInput>
    /**
     * Choose, which Modifier to update.
     */
    where: ModifierWhereUniqueInput
  }

  /**
   * Modifier updateMany
   */
  export type ModifierUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Modifiers.
     */
    data: XOR<ModifierUpdateManyMutationInput, ModifierUncheckedUpdateManyInput>
    /**
     * Filter which Modifiers to update
     */
    where?: ModifierWhereInput
    /**
     * Limit how many Modifiers to update.
     */
    limit?: number
  }

  /**
   * Modifier updateManyAndReturn
   */
  export type ModifierUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Modifier
     */
    omit?: ModifierOmit<ExtArgs> | null
    /**
     * The data used to update Modifiers.
     */
    data: XOR<ModifierUpdateManyMutationInput, ModifierUncheckedUpdateManyInput>
    /**
     * Filter which Modifiers to update
     */
    where?: ModifierWhereInput
    /**
     * Limit how many Modifiers to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Modifier upsert
   */
  export type ModifierUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Modifier
     */
    omit?: ModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierInclude<ExtArgs> | null
    /**
     * The filter to search for the Modifier to update in case it exists.
     */
    where: ModifierWhereUniqueInput
    /**
     * In case the Modifier found by the `where` argument doesn't exist, create a new Modifier with this data.
     */
    create: XOR<ModifierCreateInput, ModifierUncheckedCreateInput>
    /**
     * In case the Modifier was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ModifierUpdateInput, ModifierUncheckedUpdateInput>
  }

  /**
   * Modifier delete
   */
  export type ModifierDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Modifier
     */
    omit?: ModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierInclude<ExtArgs> | null
    /**
     * Filter which Modifier to delete.
     */
    where: ModifierWhereUniqueInput
  }

  /**
   * Modifier deleteMany
   */
  export type ModifierDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Modifiers to delete
     */
    where?: ModifierWhereInput
    /**
     * Limit how many Modifiers to delete.
     */
    limit?: number
  }

  /**
   * Modifier.images
   */
  export type Modifier$imagesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    where?: FileWhereInput
    orderBy?: FileOrderByWithRelationInput | FileOrderByWithRelationInput[]
    cursor?: FileWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FileScalarFieldEnum | FileScalarFieldEnum[]
  }

  /**
   * Modifier without action
   */
  export type ModifierDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Modifier
     */
    select?: ModifierSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Modifier
     */
    omit?: ModifierOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ModifierInclude<ExtArgs> | null
  }


  /**
   * Model Order
   */

  export type AggregateOrder = {
    _count: OrderCountAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  export type OrderMinAggregateOutputType = {
    id: string | null
    organizationId: string | null
    userId: string | null
    paymentId: string | null
    token: string | null
    expiresAt: Date | null
    referenceId: string | null
    fulfilmentMethod: $Enums.OrderFulfilmentMethod | null
    shippingMethodId: string | null
    shippingAddressId: string | null
    dateOfExecution: Date | null
    currency: $Enums.Currency | null
    sourceIp: string | null
    acceptedAt: Date | null
    readyForDispatchAt: Date | null
    dispatchedAt: Date | null
    completedAt: Date | null
    cancelledAt: Date | null
    deletedAt: Date | null
    deletedBy: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrderMaxAggregateOutputType = {
    id: string | null
    organizationId: string | null
    userId: string | null
    paymentId: string | null
    token: string | null
    expiresAt: Date | null
    referenceId: string | null
    fulfilmentMethod: $Enums.OrderFulfilmentMethod | null
    shippingMethodId: string | null
    shippingAddressId: string | null
    dateOfExecution: Date | null
    currency: $Enums.Currency | null
    sourceIp: string | null
    acceptedAt: Date | null
    readyForDispatchAt: Date | null
    dispatchedAt: Date | null
    completedAt: Date | null
    cancelledAt: Date | null
    deletedAt: Date | null
    deletedBy: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrderCountAggregateOutputType = {
    id: number
    organizationId: number
    userId: number
    paymentId: number
    token: number
    expiresAt: number
    referenceId: number
    fulfilmentMethod: number
    shippingMethodId: number
    shippingAddressId: number
    dateOfExecution: number
    currency: number
    sourceIp: number
    acceptedAt: number
    readyForDispatchAt: number
    dispatchedAt: number
    completedAt: number
    cancelledAt: number
    deletedAt: number
    deletedBy: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type OrderMinAggregateInputType = {
    id?: true
    organizationId?: true
    userId?: true
    paymentId?: true
    token?: true
    expiresAt?: true
    referenceId?: true
    fulfilmentMethod?: true
    shippingMethodId?: true
    shippingAddressId?: true
    dateOfExecution?: true
    currency?: true
    sourceIp?: true
    acceptedAt?: true
    readyForDispatchAt?: true
    dispatchedAt?: true
    completedAt?: true
    cancelledAt?: true
    deletedAt?: true
    deletedBy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrderMaxAggregateInputType = {
    id?: true
    organizationId?: true
    userId?: true
    paymentId?: true
    token?: true
    expiresAt?: true
    referenceId?: true
    fulfilmentMethod?: true
    shippingMethodId?: true
    shippingAddressId?: true
    dateOfExecution?: true
    currency?: true
    sourceIp?: true
    acceptedAt?: true
    readyForDispatchAt?: true
    dispatchedAt?: true
    completedAt?: true
    cancelledAt?: true
    deletedAt?: true
    deletedBy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrderCountAggregateInputType = {
    id?: true
    organizationId?: true
    userId?: true
    paymentId?: true
    token?: true
    expiresAt?: true
    referenceId?: true
    fulfilmentMethod?: true
    shippingMethodId?: true
    shippingAddressId?: true
    dateOfExecution?: true
    currency?: true
    sourceIp?: true
    acceptedAt?: true
    readyForDispatchAt?: true
    dispatchedAt?: true
    completedAt?: true
    cancelledAt?: true
    deletedAt?: true
    deletedBy?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type OrderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Order to aggregate.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Orders
    **/
    _count?: true | OrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderMaxAggregateInputType
  }

  export type GetOrderAggregateType<T extends OrderAggregateArgs> = {
        [P in keyof T & keyof AggregateOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrder[P]>
      : GetScalarType<T[P], AggregateOrder[P]>
  }




  export type OrderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithAggregationInput | OrderOrderByWithAggregationInput[]
    by: OrderScalarFieldEnum[] | OrderScalarFieldEnum
    having?: OrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderCountAggregateInputType | true
    _min?: OrderMinAggregateInputType
    _max?: OrderMaxAggregateInputType
  }

  export type OrderGroupByOutputType = {
    id: string
    organizationId: string
    userId: string | null
    paymentId: string | null
    token: string
    expiresAt: Date
    referenceId: string
    fulfilmentMethod: $Enums.OrderFulfilmentMethod | null
    shippingMethodId: string | null
    shippingAddressId: string | null
    dateOfExecution: Date | null
    currency: $Enums.Currency
    sourceIp: string | null
    acceptedAt: Date | null
    readyForDispatchAt: Date | null
    dispatchedAt: Date | null
    completedAt: Date | null
    cancelledAt: Date | null
    deletedAt: Date | null
    deletedBy: string | null
    createdAt: Date
    updatedAt: Date
    _count: OrderCountAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  type GetOrderGroupByPayload<T extends OrderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderGroupByOutputType[P]>
            : GetScalarType<T[P], OrderGroupByOutputType[P]>
        }
      >
    >


  export type OrderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    userId?: boolean
    paymentId?: boolean
    token?: boolean
    expiresAt?: boolean
    referenceId?: boolean
    fulfilmentMethod?: boolean
    shippingMethodId?: boolean
    shippingAddressId?: boolean
    dateOfExecution?: boolean
    currency?: boolean
    sourceIp?: boolean
    acceptedAt?: boolean
    readyForDispatchAt?: boolean
    dispatchedAt?: boolean
    completedAt?: boolean
    cancelledAt?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | Order$userArgs<ExtArgs>
    payment?: boolean | Order$paymentArgs<ExtArgs>
    shippingMethod?: boolean | Order$shippingMethodArgs<ExtArgs>
    shippingAddress?: boolean | Order$shippingAddressArgs<ExtArgs>
    items?: boolean | Order$itemsArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>

  export type OrderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    userId?: boolean
    paymentId?: boolean
    token?: boolean
    expiresAt?: boolean
    referenceId?: boolean
    fulfilmentMethod?: boolean
    shippingMethodId?: boolean
    shippingAddressId?: boolean
    dateOfExecution?: boolean
    currency?: boolean
    sourceIp?: boolean
    acceptedAt?: boolean
    readyForDispatchAt?: boolean
    dispatchedAt?: boolean
    completedAt?: boolean
    cancelledAt?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | Order$userArgs<ExtArgs>
    payment?: boolean | Order$paymentArgs<ExtArgs>
    shippingMethod?: boolean | Order$shippingMethodArgs<ExtArgs>
    shippingAddress?: boolean | Order$shippingAddressArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>

  export type OrderSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    organizationId?: boolean
    userId?: boolean
    paymentId?: boolean
    token?: boolean
    expiresAt?: boolean
    referenceId?: boolean
    fulfilmentMethod?: boolean
    shippingMethodId?: boolean
    shippingAddressId?: boolean
    dateOfExecution?: boolean
    currency?: boolean
    sourceIp?: boolean
    acceptedAt?: boolean
    readyForDispatchAt?: boolean
    dispatchedAt?: boolean
    completedAt?: boolean
    cancelledAt?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | Order$userArgs<ExtArgs>
    payment?: boolean | Order$paymentArgs<ExtArgs>
    shippingMethod?: boolean | Order$shippingMethodArgs<ExtArgs>
    shippingAddress?: boolean | Order$shippingAddressArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>

  export type OrderSelectScalar = {
    id?: boolean
    organizationId?: boolean
    userId?: boolean
    paymentId?: boolean
    token?: boolean
    expiresAt?: boolean
    referenceId?: boolean
    fulfilmentMethod?: boolean
    shippingMethodId?: boolean
    shippingAddressId?: boolean
    dateOfExecution?: boolean
    currency?: boolean
    sourceIp?: boolean
    acceptedAt?: boolean
    readyForDispatchAt?: boolean
    dispatchedAt?: boolean
    completedAt?: boolean
    cancelledAt?: boolean
    deletedAt?: boolean
    deletedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type OrderOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "organizationId" | "userId" | "paymentId" | "token" | "expiresAt" | "referenceId" | "fulfilmentMethod" | "shippingMethodId" | "shippingAddressId" | "dateOfExecution" | "currency" | "sourceIp" | "acceptedAt" | "readyForDispatchAt" | "dispatchedAt" | "completedAt" | "cancelledAt" | "deletedAt" | "deletedBy" | "createdAt" | "updatedAt", ExtArgs["result"]["order"]>
  export type OrderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | Order$userArgs<ExtArgs>
    payment?: boolean | Order$paymentArgs<ExtArgs>
    shippingMethod?: boolean | Order$shippingMethodArgs<ExtArgs>
    shippingAddress?: boolean | Order$shippingAddressArgs<ExtArgs>
    items?: boolean | Order$itemsArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OrderIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | Order$userArgs<ExtArgs>
    payment?: boolean | Order$paymentArgs<ExtArgs>
    shippingMethod?: boolean | Order$shippingMethodArgs<ExtArgs>
    shippingAddress?: boolean | Order$shippingAddressArgs<ExtArgs>
  }
  export type OrderIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    user?: boolean | Order$userArgs<ExtArgs>
    payment?: boolean | Order$paymentArgs<ExtArgs>
    shippingMethod?: boolean | Order$shippingMethodArgs<ExtArgs>
    shippingAddress?: boolean | Order$shippingAddressArgs<ExtArgs>
  }

  export type $OrderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Order"
    objects: {
      organization: Prisma.$OrganizationPayload<ExtArgs>
      user: Prisma.$UserPayload<ExtArgs> | null
      payment: Prisma.$PaymentPayload<ExtArgs> | null
      shippingMethod: Prisma.$ShippingMethodPayload<ExtArgs> | null
      shippingAddress: Prisma.$AddressPayload<ExtArgs> | null
      items: Prisma.$OrderItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      organizationId: string
      userId: string | null
      paymentId: string | null
      token: string
      expiresAt: Date
      referenceId: string
      fulfilmentMethod: $Enums.OrderFulfilmentMethod | null
      shippingMethodId: string | null
      shippingAddressId: string | null
      dateOfExecution: Date | null
      currency: $Enums.Currency
      sourceIp: string | null
      acceptedAt: Date | null
      readyForDispatchAt: Date | null
      dispatchedAt: Date | null
      completedAt: Date | null
      cancelledAt: Date | null
      deletedAt: Date | null
      deletedBy: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["order"]>
    composites: {}
  }

  type OrderGetPayload<S extends boolean | null | undefined | OrderDefaultArgs> = $Result.GetResult<Prisma.$OrderPayload, S>

  type OrderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderCountAggregateInputType | true
    }

  export interface OrderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Order'], meta: { name: 'Order' } }
    /**
     * Find zero or one Order that matches the filter.
     * @param {OrderFindUniqueArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderFindUniqueArgs>(args: SelectSubset<T, OrderFindUniqueArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Order that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderFindUniqueOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderFindFirstArgs>(args?: SelectSubset<T, OrderFindFirstArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Orders
     * const orders = await prisma.order.findMany()
     * 
     * // Get first 10 Orders
     * const orders = await prisma.order.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderWithIdOnly = await prisma.order.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderFindManyArgs>(args?: SelectSubset<T, OrderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Order.
     * @param {OrderCreateArgs} args - Arguments to create a Order.
     * @example
     * // Create one Order
     * const Order = await prisma.order.create({
     *   data: {
     *     // ... data to create a Order
     *   }
     * })
     * 
     */
    create<T extends OrderCreateArgs>(args: SelectSubset<T, OrderCreateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Orders.
     * @param {OrderCreateManyArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const order = await prisma.order.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderCreateManyArgs>(args?: SelectSubset<T, OrderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Orders and returns the data saved in the database.
     * @param {OrderCreateManyAndReturnArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const order = await prisma.order.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Orders and only return the `id`
     * const orderWithIdOnly = await prisma.order.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Order.
     * @param {OrderDeleteArgs} args - Arguments to delete one Order.
     * @example
     * // Delete one Order
     * const Order = await prisma.order.delete({
     *   where: {
     *     // ... filter to delete one Order
     *   }
     * })
     * 
     */
    delete<T extends OrderDeleteArgs>(args: SelectSubset<T, OrderDeleteArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Order.
     * @param {OrderUpdateArgs} args - Arguments to update one Order.
     * @example
     * // Update one Order
     * const order = await prisma.order.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderUpdateArgs>(args: SelectSubset<T, OrderUpdateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Orders.
     * @param {OrderDeleteManyArgs} args - Arguments to filter Orders to delete.
     * @example
     * // Delete a few Orders
     * const { count } = await prisma.order.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderDeleteManyArgs>(args?: SelectSubset<T, OrderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Orders
     * const order = await prisma.order.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderUpdateManyArgs>(args: SelectSubset<T, OrderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders and returns the data updated in the database.
     * @param {OrderUpdateManyAndReturnArgs} args - Arguments to update many Orders.
     * @example
     * // Update many Orders
     * const order = await prisma.order.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Orders and only return the `id`
     * const orderWithIdOnly = await prisma.order.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrderUpdateManyAndReturnArgs>(args: SelectSubset<T, OrderUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Order.
     * @param {OrderUpsertArgs} args - Arguments to update or create a Order.
     * @example
     * // Update or create a Order
     * const order = await prisma.order.upsert({
     *   create: {
     *     // ... data to create a Order
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Order we want to update
     *   }
     * })
     */
    upsert<T extends OrderUpsertArgs>(args: SelectSubset<T, OrderUpsertArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderCountArgs} args - Arguments to filter Orders to count.
     * @example
     * // Count the number of Orders
     * const count = await prisma.order.count({
     *   where: {
     *     // ... the filter for the Orders we want to count
     *   }
     * })
    **/
    count<T extends OrderCountArgs>(
      args?: Subset<T, OrderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderAggregateArgs>(args: Subset<T, OrderAggregateArgs>): Prisma.PrismaPromise<GetOrderAggregateType<T>>

    /**
     * Group by Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderGroupByArgs['orderBy'] }
        : { orderBy?: OrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Order model
   */
  readonly fields: OrderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Order.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organization<T extends OrganizationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationDefaultArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends Order$userArgs<ExtArgs> = {}>(args?: Subset<T, Order$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    payment<T extends Order$paymentArgs<ExtArgs> = {}>(args?: Subset<T, Order$paymentArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    shippingMethod<T extends Order$shippingMethodArgs<ExtArgs> = {}>(args?: Subset<T, Order$shippingMethodArgs<ExtArgs>>): Prisma__ShippingMethodClient<$Result.GetResult<Prisma.$ShippingMethodPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    shippingAddress<T extends Order$shippingAddressArgs<ExtArgs> = {}>(args?: Subset<T, Order$shippingAddressArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    items<T extends Order$itemsArgs<ExtArgs> = {}>(args?: Subset<T, Order$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Order model
   */
  interface OrderFieldRefs {
    readonly id: FieldRef<"Order", 'String'>
    readonly organizationId: FieldRef<"Order", 'String'>
    readonly userId: FieldRef<"Order", 'String'>
    readonly paymentId: FieldRef<"Order", 'String'>
    readonly token: FieldRef<"Order", 'String'>
    readonly expiresAt: FieldRef<"Order", 'DateTime'>
    readonly referenceId: FieldRef<"Order", 'String'>
    readonly fulfilmentMethod: FieldRef<"Order", 'OrderFulfilmentMethod'>
    readonly shippingMethodId: FieldRef<"Order", 'String'>
    readonly shippingAddressId: FieldRef<"Order", 'String'>
    readonly dateOfExecution: FieldRef<"Order", 'DateTime'>
    readonly currency: FieldRef<"Order", 'Currency'>
    readonly sourceIp: FieldRef<"Order", 'String'>
    readonly acceptedAt: FieldRef<"Order", 'DateTime'>
    readonly readyForDispatchAt: FieldRef<"Order", 'DateTime'>
    readonly dispatchedAt: FieldRef<"Order", 'DateTime'>
    readonly completedAt: FieldRef<"Order", 'DateTime'>
    readonly cancelledAt: FieldRef<"Order", 'DateTime'>
    readonly deletedAt: FieldRef<"Order", 'DateTime'>
    readonly deletedBy: FieldRef<"Order", 'String'>
    readonly createdAt: FieldRef<"Order", 'DateTime'>
    readonly updatedAt: FieldRef<"Order", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Order findUnique
   */
  export type OrderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order findUniqueOrThrow
   */
  export type OrderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order findFirst
   */
  export type OrderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order findFirstOrThrow
   */
  export type OrderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order findMany
   */
  export type OrderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Orders to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order create
   */
  export type OrderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to create a Order.
     */
    data: XOR<OrderCreateInput, OrderUncheckedCreateInput>
  }

  /**
   * Order createMany
   */
  export type OrderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Orders.
     */
    data: OrderCreateManyInput | OrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Order createManyAndReturn
   */
  export type OrderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * The data used to create many Orders.
     */
    data: OrderCreateManyInput | OrderCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Order update
   */
  export type OrderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to update a Order.
     */
    data: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
    /**
     * Choose, which Order to update.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order updateMany
   */
  export type OrderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Orders.
     */
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyInput>
    /**
     * Filter which Orders to update
     */
    where?: OrderWhereInput
    /**
     * Limit how many Orders to update.
     */
    limit?: number
  }

  /**
   * Order updateManyAndReturn
   */
  export type OrderUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * The data used to update Orders.
     */
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyInput>
    /**
     * Filter which Orders to update
     */
    where?: OrderWhereInput
    /**
     * Limit how many Orders to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Order upsert
   */
  export type OrderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The filter to search for the Order to update in case it exists.
     */
    where: OrderWhereUniqueInput
    /**
     * In case the Order found by the `where` argument doesn't exist, create a new Order with this data.
     */
    create: XOR<OrderCreateInput, OrderUncheckedCreateInput>
    /**
     * In case the Order was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
  }

  /**
   * Order delete
   */
  export type OrderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter which Order to delete.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order deleteMany
   */
  export type OrderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Orders to delete
     */
    where?: OrderWhereInput
    /**
     * Limit how many Orders to delete.
     */
    limit?: number
  }

  /**
   * Order.user
   */
  export type Order$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Order.payment
   */
  export type Order$paymentArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    where?: PaymentWhereInput
  }

  /**
   * Order.shippingMethod
   */
  export type Order$shippingMethodArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingMethod
     */
    select?: ShippingMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingMethod
     */
    omit?: ShippingMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingMethodInclude<ExtArgs> | null
    where?: ShippingMethodWhereInput
  }

  /**
   * Order.shippingAddress
   */
  export type Order$shippingAddressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    where?: AddressWhereInput
  }

  /**
   * Order.items
   */
  export type Order$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    where?: OrderItemWhereInput
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    cursor?: OrderItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * Order without action
   */
  export type OrderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
  }


  /**
   * Model OrderItem
   */

  export type AggregateOrderItem = {
    _count: OrderItemCountAggregateOutputType | null
    _avg: OrderItemAvgAggregateOutputType | null
    _sum: OrderItemSumAggregateOutputType | null
    _min: OrderItemMinAggregateOutputType | null
    _max: OrderItemMaxAggregateOutputType | null
  }

  export type OrderItemAvgAggregateOutputType = {
    quantity: number | null
    unitPrice: number | null
    totalPrice: number | null
  }

  export type OrderItemSumAggregateOutputType = {
    quantity: number | null
    unitPrice: number | null
    totalPrice: number | null
  }

  export type OrderItemMinAggregateOutputType = {
    id: string | null
    quantity: number | null
    unitPrice: number | null
    totalPrice: number | null
    orderId: string | null
    productSnapshotId: string | null
    imageId: string | null
  }

  export type OrderItemMaxAggregateOutputType = {
    id: string | null
    quantity: number | null
    unitPrice: number | null
    totalPrice: number | null
    orderId: string | null
    productSnapshotId: string | null
    imageId: string | null
  }

  export type OrderItemCountAggregateOutputType = {
    id: number
    quantity: number
    unitPrice: number
    totalPrice: number
    orderId: number
    rawData: number
    productSnapshotId: number
    imageId: number
    _all: number
  }


  export type OrderItemAvgAggregateInputType = {
    quantity?: true
    unitPrice?: true
    totalPrice?: true
  }

  export type OrderItemSumAggregateInputType = {
    quantity?: true
    unitPrice?: true
    totalPrice?: true
  }

  export type OrderItemMinAggregateInputType = {
    id?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    orderId?: true
    productSnapshotId?: true
    imageId?: true
  }

  export type OrderItemMaxAggregateInputType = {
    id?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    orderId?: true
    productSnapshotId?: true
    imageId?: true
  }

  export type OrderItemCountAggregateInputType = {
    id?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    orderId?: true
    rawData?: true
    productSnapshotId?: true
    imageId?: true
    _all?: true
  }

  export type OrderItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderItem to aggregate.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrderItems
    **/
    _count?: true | OrderItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderItemMaxAggregateInputType
  }

  export type GetOrderItemAggregateType<T extends OrderItemAggregateArgs> = {
        [P in keyof T & keyof AggregateOrderItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrderItem[P]>
      : GetScalarType<T[P], AggregateOrderItem[P]>
  }




  export type OrderItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemWhereInput
    orderBy?: OrderItemOrderByWithAggregationInput | OrderItemOrderByWithAggregationInput[]
    by: OrderItemScalarFieldEnum[] | OrderItemScalarFieldEnum
    having?: OrderItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderItemCountAggregateInputType | true
    _avg?: OrderItemAvgAggregateInputType
    _sum?: OrderItemSumAggregateInputType
    _min?: OrderItemMinAggregateInputType
    _max?: OrderItemMaxAggregateInputType
  }

  export type OrderItemGroupByOutputType = {
    id: string
    quantity: number
    unitPrice: number
    totalPrice: number
    orderId: string
    rawData: JsonValue | null
    productSnapshotId: string | null
    imageId: string | null
    _count: OrderItemCountAggregateOutputType | null
    _avg: OrderItemAvgAggregateOutputType | null
    _sum: OrderItemSumAggregateOutputType | null
    _min: OrderItemMinAggregateOutputType | null
    _max: OrderItemMaxAggregateOutputType | null
  }

  type GetOrderItemGroupByPayload<T extends OrderItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderItemGroupByOutputType[P]>
            : GetScalarType<T[P], OrderItemGroupByOutputType[P]>
        }
      >
    >


  export type OrderItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    orderId?: boolean
    rawData?: boolean
    productSnapshotId?: boolean
    imageId?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    productSnapshot?: boolean | OrderItem$productSnapshotArgs<ExtArgs>
    image?: boolean | OrderItem$imageArgs<ExtArgs>
    translations?: boolean | OrderItem$translationsArgs<ExtArgs>
    _count?: boolean | OrderItemCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderItem"]>

  export type OrderItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    orderId?: boolean
    rawData?: boolean
    productSnapshotId?: boolean
    imageId?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    productSnapshot?: boolean | OrderItem$productSnapshotArgs<ExtArgs>
    image?: boolean | OrderItem$imageArgs<ExtArgs>
  }, ExtArgs["result"]["orderItem"]>

  export type OrderItemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    orderId?: boolean
    rawData?: boolean
    productSnapshotId?: boolean
    imageId?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
    productSnapshot?: boolean | OrderItem$productSnapshotArgs<ExtArgs>
    image?: boolean | OrderItem$imageArgs<ExtArgs>
  }, ExtArgs["result"]["orderItem"]>

  export type OrderItemSelectScalar = {
    id?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    orderId?: boolean
    rawData?: boolean
    productSnapshotId?: boolean
    imageId?: boolean
  }

  export type OrderItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "quantity" | "unitPrice" | "totalPrice" | "orderId" | "rawData" | "productSnapshotId" | "imageId", ExtArgs["result"]["orderItem"]>
  export type OrderItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    productSnapshot?: boolean | OrderItem$productSnapshotArgs<ExtArgs>
    image?: boolean | OrderItem$imageArgs<ExtArgs>
    translations?: boolean | OrderItem$translationsArgs<ExtArgs>
    _count?: boolean | OrderItemCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OrderItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    productSnapshot?: boolean | OrderItem$productSnapshotArgs<ExtArgs>
    image?: boolean | OrderItem$imageArgs<ExtArgs>
  }
  export type OrderItemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
    productSnapshot?: boolean | OrderItem$productSnapshotArgs<ExtArgs>
    image?: boolean | OrderItem$imageArgs<ExtArgs>
  }

  export type $OrderItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrderItem"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs>
      productSnapshot: Prisma.$ProductSnapshotPayload<ExtArgs> | null
      image: Prisma.$FilePayload<ExtArgs> | null
      translations: Prisma.$OrderItemTranslationPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      quantity: number
      unitPrice: number
      totalPrice: number
      orderId: string
      rawData: Prisma.JsonValue | null
      productSnapshotId: string | null
      imageId: string | null
    }, ExtArgs["result"]["orderItem"]>
    composites: {}
  }

  type OrderItemGetPayload<S extends boolean | null | undefined | OrderItemDefaultArgs> = $Result.GetResult<Prisma.$OrderItemPayload, S>

  type OrderItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderItemCountAggregateInputType | true
    }

  export interface OrderItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrderItem'], meta: { name: 'OrderItem' } }
    /**
     * Find zero or one OrderItem that matches the filter.
     * @param {OrderItemFindUniqueArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderItemFindUniqueArgs>(args: SelectSubset<T, OrderItemFindUniqueArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OrderItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderItemFindUniqueOrThrowArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderItemFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemFindFirstArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderItemFindFirstArgs>(args?: SelectSubset<T, OrderItemFindFirstArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemFindFirstOrThrowArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderItemFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OrderItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrderItems
     * const orderItems = await prisma.orderItem.findMany()
     * 
     * // Get first 10 OrderItems
     * const orderItems = await prisma.orderItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderItemWithIdOnly = await prisma.orderItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderItemFindManyArgs>(args?: SelectSubset<T, OrderItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OrderItem.
     * @param {OrderItemCreateArgs} args - Arguments to create a OrderItem.
     * @example
     * // Create one OrderItem
     * const OrderItem = await prisma.orderItem.create({
     *   data: {
     *     // ... data to create a OrderItem
     *   }
     * })
     * 
     */
    create<T extends OrderItemCreateArgs>(args: SelectSubset<T, OrderItemCreateArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OrderItems.
     * @param {OrderItemCreateManyArgs} args - Arguments to create many OrderItems.
     * @example
     * // Create many OrderItems
     * const orderItem = await prisma.orderItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderItemCreateManyArgs>(args?: SelectSubset<T, OrderItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrderItems and returns the data saved in the database.
     * @param {OrderItemCreateManyAndReturnArgs} args - Arguments to create many OrderItems.
     * @example
     * // Create many OrderItems
     * const orderItem = await prisma.orderItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrderItems and only return the `id`
     * const orderItemWithIdOnly = await prisma.orderItem.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderItemCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OrderItem.
     * @param {OrderItemDeleteArgs} args - Arguments to delete one OrderItem.
     * @example
     * // Delete one OrderItem
     * const OrderItem = await prisma.orderItem.delete({
     *   where: {
     *     // ... filter to delete one OrderItem
     *   }
     * })
     * 
     */
    delete<T extends OrderItemDeleteArgs>(args: SelectSubset<T, OrderItemDeleteArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OrderItem.
     * @param {OrderItemUpdateArgs} args - Arguments to update one OrderItem.
     * @example
     * // Update one OrderItem
     * const orderItem = await prisma.orderItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderItemUpdateArgs>(args: SelectSubset<T, OrderItemUpdateArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OrderItems.
     * @param {OrderItemDeleteManyArgs} args - Arguments to filter OrderItems to delete.
     * @example
     * // Delete a few OrderItems
     * const { count } = await prisma.orderItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderItemDeleteManyArgs>(args?: SelectSubset<T, OrderItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrderItems
     * const orderItem = await prisma.orderItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderItemUpdateManyArgs>(args: SelectSubset<T, OrderItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderItems and returns the data updated in the database.
     * @param {OrderItemUpdateManyAndReturnArgs} args - Arguments to update many OrderItems.
     * @example
     * // Update many OrderItems
     * const orderItem = await prisma.orderItem.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OrderItems and only return the `id`
     * const orderItemWithIdOnly = await prisma.orderItem.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrderItemUpdateManyAndReturnArgs>(args: SelectSubset<T, OrderItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OrderItem.
     * @param {OrderItemUpsertArgs} args - Arguments to update or create a OrderItem.
     * @example
     * // Update or create a OrderItem
     * const orderItem = await prisma.orderItem.upsert({
     *   create: {
     *     // ... data to create a OrderItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrderItem we want to update
     *   }
     * })
     */
    upsert<T extends OrderItemUpsertArgs>(args: SelectSubset<T, OrderItemUpsertArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OrderItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemCountArgs} args - Arguments to filter OrderItems to count.
     * @example
     * // Count the number of OrderItems
     * const count = await prisma.orderItem.count({
     *   where: {
     *     // ... the filter for the OrderItems we want to count
     *   }
     * })
    **/
    count<T extends OrderItemCountArgs>(
      args?: Subset<T, OrderItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrderItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderItemAggregateArgs>(args: Subset<T, OrderItemAggregateArgs>): Prisma.PrismaPromise<GetOrderItemAggregateType<T>>

    /**
     * Group by OrderItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderItemGroupByArgs['orderBy'] }
        : { orderBy?: OrderItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrderItem model
   */
  readonly fields: OrderItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrderItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    productSnapshot<T extends OrderItem$productSnapshotArgs<ExtArgs> = {}>(args?: Subset<T, OrderItem$productSnapshotArgs<ExtArgs>>): Prisma__ProductSnapshotClient<$Result.GetResult<Prisma.$ProductSnapshotPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    image<T extends OrderItem$imageArgs<ExtArgs> = {}>(args?: Subset<T, OrderItem$imageArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    translations<T extends OrderItem$translationsArgs<ExtArgs> = {}>(args?: Subset<T, OrderItem$translationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrderItem model
   */
  interface OrderItemFieldRefs {
    readonly id: FieldRef<"OrderItem", 'String'>
    readonly quantity: FieldRef<"OrderItem", 'Int'>
    readonly unitPrice: FieldRef<"OrderItem", 'Float'>
    readonly totalPrice: FieldRef<"OrderItem", 'Float'>
    readonly orderId: FieldRef<"OrderItem", 'String'>
    readonly rawData: FieldRef<"OrderItem", 'Json'>
    readonly productSnapshotId: FieldRef<"OrderItem", 'String'>
    readonly imageId: FieldRef<"OrderItem", 'String'>
  }
    

  // Custom InputTypes
  /**
   * OrderItem findUnique
   */
  export type OrderItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem findUniqueOrThrow
   */
  export type OrderItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem findFirst
   */
  export type OrderItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderItems.
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderItems.
     */
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * OrderItem findFirstOrThrow
   */
  export type OrderItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderItems.
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderItems.
     */
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * OrderItem findMany
   */
  export type OrderItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItems to fetch.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrderItems.
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * OrderItem create
   */
  export type OrderItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * The data needed to create a OrderItem.
     */
    data: XOR<OrderItemCreateInput, OrderItemUncheckedCreateInput>
  }

  /**
   * OrderItem createMany
   */
  export type OrderItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrderItems.
     */
    data: OrderItemCreateManyInput | OrderItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrderItem createManyAndReturn
   */
  export type OrderItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * The data used to create many OrderItems.
     */
    data: OrderItemCreateManyInput | OrderItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderItem update
   */
  export type OrderItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * The data needed to update a OrderItem.
     */
    data: XOR<OrderItemUpdateInput, OrderItemUncheckedUpdateInput>
    /**
     * Choose, which OrderItem to update.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem updateMany
   */
  export type OrderItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrderItems.
     */
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyInput>
    /**
     * Filter which OrderItems to update
     */
    where?: OrderItemWhereInput
    /**
     * Limit how many OrderItems to update.
     */
    limit?: number
  }

  /**
   * OrderItem updateManyAndReturn
   */
  export type OrderItemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * The data used to update OrderItems.
     */
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyInput>
    /**
     * Filter which OrderItems to update
     */
    where?: OrderItemWhereInput
    /**
     * Limit how many OrderItems to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderItem upsert
   */
  export type OrderItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * The filter to search for the OrderItem to update in case it exists.
     */
    where: OrderItemWhereUniqueInput
    /**
     * In case the OrderItem found by the `where` argument doesn't exist, create a new OrderItem with this data.
     */
    create: XOR<OrderItemCreateInput, OrderItemUncheckedCreateInput>
    /**
     * In case the OrderItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderItemUpdateInput, OrderItemUncheckedUpdateInput>
  }

  /**
   * OrderItem delete
   */
  export type OrderItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter which OrderItem to delete.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem deleteMany
   */
  export type OrderItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderItems to delete
     */
    where?: OrderItemWhereInput
    /**
     * Limit how many OrderItems to delete.
     */
    limit?: number
  }

  /**
   * OrderItem.productSnapshot
   */
  export type OrderItem$productSnapshotArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductSnapshot
     */
    select?: ProductSnapshotSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductSnapshot
     */
    omit?: ProductSnapshotOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductSnapshotInclude<ExtArgs> | null
    where?: ProductSnapshotWhereInput
  }

  /**
   * OrderItem.image
   */
  export type OrderItem$imageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    where?: FileWhereInput
  }

  /**
   * OrderItem.translations
   */
  export type OrderItem$translationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemTranslation
     */
    select?: OrderItemTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemTranslation
     */
    omit?: OrderItemTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemTranslationInclude<ExtArgs> | null
    where?: OrderItemTranslationWhereInput
    orderBy?: OrderItemTranslationOrderByWithRelationInput | OrderItemTranslationOrderByWithRelationInput[]
    cursor?: OrderItemTranslationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderItemTranslationScalarFieldEnum | OrderItemTranslationScalarFieldEnum[]
  }

  /**
   * OrderItem without action
   */
  export type OrderItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
  }


  /**
   * Model OrderItemTranslation
   */

  export type AggregateOrderItemTranslation = {
    _count: OrderItemTranslationCountAggregateOutputType | null
    _min: OrderItemTranslationMinAggregateOutputType | null
    _max: OrderItemTranslationMaxAggregateOutputType | null
  }

  export type OrderItemTranslationMinAggregateOutputType = {
    id: string | null
    locale: string | null
    title: string | null
    subtitle: string | null
    orderItemId: string | null
  }

  export type OrderItemTranslationMaxAggregateOutputType = {
    id: string | null
    locale: string | null
    title: string | null
    subtitle: string | null
    orderItemId: string | null
  }

  export type OrderItemTranslationCountAggregateOutputType = {
    id: number
    locale: number
    title: number
    subtitle: number
    orderItemId: number
    _all: number
  }


  export type OrderItemTranslationMinAggregateInputType = {
    id?: true
    locale?: true
    title?: true
    subtitle?: true
    orderItemId?: true
  }

  export type OrderItemTranslationMaxAggregateInputType = {
    id?: true
    locale?: true
    title?: true
    subtitle?: true
    orderItemId?: true
  }

  export type OrderItemTranslationCountAggregateInputType = {
    id?: true
    locale?: true
    title?: true
    subtitle?: true
    orderItemId?: true
    _all?: true
  }

  export type OrderItemTranslationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderItemTranslation to aggregate.
     */
    where?: OrderItemTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItemTranslations to fetch.
     */
    orderBy?: OrderItemTranslationOrderByWithRelationInput | OrderItemTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderItemTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItemTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItemTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrderItemTranslations
    **/
    _count?: true | OrderItemTranslationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderItemTranslationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderItemTranslationMaxAggregateInputType
  }

  export type GetOrderItemTranslationAggregateType<T extends OrderItemTranslationAggregateArgs> = {
        [P in keyof T & keyof AggregateOrderItemTranslation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrderItemTranslation[P]>
      : GetScalarType<T[P], AggregateOrderItemTranslation[P]>
  }




  export type OrderItemTranslationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemTranslationWhereInput
    orderBy?: OrderItemTranslationOrderByWithAggregationInput | OrderItemTranslationOrderByWithAggregationInput[]
    by: OrderItemTranslationScalarFieldEnum[] | OrderItemTranslationScalarFieldEnum
    having?: OrderItemTranslationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderItemTranslationCountAggregateInputType | true
    _min?: OrderItemTranslationMinAggregateInputType
    _max?: OrderItemTranslationMaxAggregateInputType
  }

  export type OrderItemTranslationGroupByOutputType = {
    id: string
    locale: string
    title: string
    subtitle: string | null
    orderItemId: string
    _count: OrderItemTranslationCountAggregateOutputType | null
    _min: OrderItemTranslationMinAggregateOutputType | null
    _max: OrderItemTranslationMaxAggregateOutputType | null
  }

  type GetOrderItemTranslationGroupByPayload<T extends OrderItemTranslationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderItemTranslationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderItemTranslationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderItemTranslationGroupByOutputType[P]>
            : GetScalarType<T[P], OrderItemTranslationGroupByOutputType[P]>
        }
      >
    >


  export type OrderItemTranslationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    locale?: boolean
    title?: boolean
    subtitle?: boolean
    orderItemId?: boolean
    orderItem?: boolean | OrderItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderItemTranslation"]>

  export type OrderItemTranslationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    locale?: boolean
    title?: boolean
    subtitle?: boolean
    orderItemId?: boolean
    orderItem?: boolean | OrderItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderItemTranslation"]>

  export type OrderItemTranslationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    locale?: boolean
    title?: boolean
    subtitle?: boolean
    orderItemId?: boolean
    orderItem?: boolean | OrderItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderItemTranslation"]>

  export type OrderItemTranslationSelectScalar = {
    id?: boolean
    locale?: boolean
    title?: boolean
    subtitle?: boolean
    orderItemId?: boolean
  }

  export type OrderItemTranslationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "locale" | "title" | "subtitle" | "orderItemId", ExtArgs["result"]["orderItemTranslation"]>
  export type OrderItemTranslationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orderItem?: boolean | OrderItemDefaultArgs<ExtArgs>
  }
  export type OrderItemTranslationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orderItem?: boolean | OrderItemDefaultArgs<ExtArgs>
  }
  export type OrderItemTranslationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orderItem?: boolean | OrderItemDefaultArgs<ExtArgs>
  }

  export type $OrderItemTranslationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrderItemTranslation"
    objects: {
      orderItem: Prisma.$OrderItemPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      locale: string
      title: string
      subtitle: string | null
      orderItemId: string
    }, ExtArgs["result"]["orderItemTranslation"]>
    composites: {}
  }

  type OrderItemTranslationGetPayload<S extends boolean | null | undefined | OrderItemTranslationDefaultArgs> = $Result.GetResult<Prisma.$OrderItemTranslationPayload, S>

  type OrderItemTranslationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderItemTranslationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderItemTranslationCountAggregateInputType | true
    }

  export interface OrderItemTranslationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrderItemTranslation'], meta: { name: 'OrderItemTranslation' } }
    /**
     * Find zero or one OrderItemTranslation that matches the filter.
     * @param {OrderItemTranslationFindUniqueArgs} args - Arguments to find a OrderItemTranslation
     * @example
     * // Get one OrderItemTranslation
     * const orderItemTranslation = await prisma.orderItemTranslation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderItemTranslationFindUniqueArgs>(args: SelectSubset<T, OrderItemTranslationFindUniqueArgs<ExtArgs>>): Prisma__OrderItemTranslationClient<$Result.GetResult<Prisma.$OrderItemTranslationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OrderItemTranslation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderItemTranslationFindUniqueOrThrowArgs} args - Arguments to find a OrderItemTranslation
     * @example
     * // Get one OrderItemTranslation
     * const orderItemTranslation = await prisma.orderItemTranslation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderItemTranslationFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderItemTranslationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderItemTranslationClient<$Result.GetResult<Prisma.$OrderItemTranslationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderItemTranslation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemTranslationFindFirstArgs} args - Arguments to find a OrderItemTranslation
     * @example
     * // Get one OrderItemTranslation
     * const orderItemTranslation = await prisma.orderItemTranslation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderItemTranslationFindFirstArgs>(args?: SelectSubset<T, OrderItemTranslationFindFirstArgs<ExtArgs>>): Prisma__OrderItemTranslationClient<$Result.GetResult<Prisma.$OrderItemTranslationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderItemTranslation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemTranslationFindFirstOrThrowArgs} args - Arguments to find a OrderItemTranslation
     * @example
     * // Get one OrderItemTranslation
     * const orderItemTranslation = await prisma.orderItemTranslation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderItemTranslationFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderItemTranslationFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderItemTranslationClient<$Result.GetResult<Prisma.$OrderItemTranslationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OrderItemTranslations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemTranslationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrderItemTranslations
     * const orderItemTranslations = await prisma.orderItemTranslation.findMany()
     * 
     * // Get first 10 OrderItemTranslations
     * const orderItemTranslations = await prisma.orderItemTranslation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderItemTranslationWithIdOnly = await prisma.orderItemTranslation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderItemTranslationFindManyArgs>(args?: SelectSubset<T, OrderItemTranslationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OrderItemTranslation.
     * @param {OrderItemTranslationCreateArgs} args - Arguments to create a OrderItemTranslation.
     * @example
     * // Create one OrderItemTranslation
     * const OrderItemTranslation = await prisma.orderItemTranslation.create({
     *   data: {
     *     // ... data to create a OrderItemTranslation
     *   }
     * })
     * 
     */
    create<T extends OrderItemTranslationCreateArgs>(args: SelectSubset<T, OrderItemTranslationCreateArgs<ExtArgs>>): Prisma__OrderItemTranslationClient<$Result.GetResult<Prisma.$OrderItemTranslationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OrderItemTranslations.
     * @param {OrderItemTranslationCreateManyArgs} args - Arguments to create many OrderItemTranslations.
     * @example
     * // Create many OrderItemTranslations
     * const orderItemTranslation = await prisma.orderItemTranslation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderItemTranslationCreateManyArgs>(args?: SelectSubset<T, OrderItemTranslationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrderItemTranslations and returns the data saved in the database.
     * @param {OrderItemTranslationCreateManyAndReturnArgs} args - Arguments to create many OrderItemTranslations.
     * @example
     * // Create many OrderItemTranslations
     * const orderItemTranslation = await prisma.orderItemTranslation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrderItemTranslations and only return the `id`
     * const orderItemTranslationWithIdOnly = await prisma.orderItemTranslation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderItemTranslationCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderItemTranslationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemTranslationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OrderItemTranslation.
     * @param {OrderItemTranslationDeleteArgs} args - Arguments to delete one OrderItemTranslation.
     * @example
     * // Delete one OrderItemTranslation
     * const OrderItemTranslation = await prisma.orderItemTranslation.delete({
     *   where: {
     *     // ... filter to delete one OrderItemTranslation
     *   }
     * })
     * 
     */
    delete<T extends OrderItemTranslationDeleteArgs>(args: SelectSubset<T, OrderItemTranslationDeleteArgs<ExtArgs>>): Prisma__OrderItemTranslationClient<$Result.GetResult<Prisma.$OrderItemTranslationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OrderItemTranslation.
     * @param {OrderItemTranslationUpdateArgs} args - Arguments to update one OrderItemTranslation.
     * @example
     * // Update one OrderItemTranslation
     * const orderItemTranslation = await prisma.orderItemTranslation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderItemTranslationUpdateArgs>(args: SelectSubset<T, OrderItemTranslationUpdateArgs<ExtArgs>>): Prisma__OrderItemTranslationClient<$Result.GetResult<Prisma.$OrderItemTranslationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OrderItemTranslations.
     * @param {OrderItemTranslationDeleteManyArgs} args - Arguments to filter OrderItemTranslations to delete.
     * @example
     * // Delete a few OrderItemTranslations
     * const { count } = await prisma.orderItemTranslation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderItemTranslationDeleteManyArgs>(args?: SelectSubset<T, OrderItemTranslationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderItemTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemTranslationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrderItemTranslations
     * const orderItemTranslation = await prisma.orderItemTranslation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderItemTranslationUpdateManyArgs>(args: SelectSubset<T, OrderItemTranslationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderItemTranslations and returns the data updated in the database.
     * @param {OrderItemTranslationUpdateManyAndReturnArgs} args - Arguments to update many OrderItemTranslations.
     * @example
     * // Update many OrderItemTranslations
     * const orderItemTranslation = await prisma.orderItemTranslation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OrderItemTranslations and only return the `id`
     * const orderItemTranslationWithIdOnly = await prisma.orderItemTranslation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrderItemTranslationUpdateManyAndReturnArgs>(args: SelectSubset<T, OrderItemTranslationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemTranslationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OrderItemTranslation.
     * @param {OrderItemTranslationUpsertArgs} args - Arguments to update or create a OrderItemTranslation.
     * @example
     * // Update or create a OrderItemTranslation
     * const orderItemTranslation = await prisma.orderItemTranslation.upsert({
     *   create: {
     *     // ... data to create a OrderItemTranslation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrderItemTranslation we want to update
     *   }
     * })
     */
    upsert<T extends OrderItemTranslationUpsertArgs>(args: SelectSubset<T, OrderItemTranslationUpsertArgs<ExtArgs>>): Prisma__OrderItemTranslationClient<$Result.GetResult<Prisma.$OrderItemTranslationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OrderItemTranslations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemTranslationCountArgs} args - Arguments to filter OrderItemTranslations to count.
     * @example
     * // Count the number of OrderItemTranslations
     * const count = await prisma.orderItemTranslation.count({
     *   where: {
     *     // ... the filter for the OrderItemTranslations we want to count
     *   }
     * })
    **/
    count<T extends OrderItemTranslationCountArgs>(
      args?: Subset<T, OrderItemTranslationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderItemTranslationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrderItemTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemTranslationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderItemTranslationAggregateArgs>(args: Subset<T, OrderItemTranslationAggregateArgs>): Prisma.PrismaPromise<GetOrderItemTranslationAggregateType<T>>

    /**
     * Group by OrderItemTranslation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemTranslationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderItemTranslationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderItemTranslationGroupByArgs['orderBy'] }
        : { orderBy?: OrderItemTranslationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderItemTranslationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderItemTranslationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrderItemTranslation model
   */
  readonly fields: OrderItemTranslationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrderItemTranslation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderItemTranslationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    orderItem<T extends OrderItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderItemDefaultArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrderItemTranslation model
   */
  interface OrderItemTranslationFieldRefs {
    readonly id: FieldRef<"OrderItemTranslation", 'String'>
    readonly locale: FieldRef<"OrderItemTranslation", 'String'>
    readonly title: FieldRef<"OrderItemTranslation", 'String'>
    readonly subtitle: FieldRef<"OrderItemTranslation", 'String'>
    readonly orderItemId: FieldRef<"OrderItemTranslation", 'String'>
  }
    

  // Custom InputTypes
  /**
   * OrderItemTranslation findUnique
   */
  export type OrderItemTranslationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemTranslation
     */
    select?: OrderItemTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemTranslation
     */
    omit?: OrderItemTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemTranslationInclude<ExtArgs> | null
    /**
     * Filter, which OrderItemTranslation to fetch.
     */
    where: OrderItemTranslationWhereUniqueInput
  }

  /**
   * OrderItemTranslation findUniqueOrThrow
   */
  export type OrderItemTranslationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemTranslation
     */
    select?: OrderItemTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemTranslation
     */
    omit?: OrderItemTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemTranslationInclude<ExtArgs> | null
    /**
     * Filter, which OrderItemTranslation to fetch.
     */
    where: OrderItemTranslationWhereUniqueInput
  }

  /**
   * OrderItemTranslation findFirst
   */
  export type OrderItemTranslationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemTranslation
     */
    select?: OrderItemTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemTranslation
     */
    omit?: OrderItemTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemTranslationInclude<ExtArgs> | null
    /**
     * Filter, which OrderItemTranslation to fetch.
     */
    where?: OrderItemTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItemTranslations to fetch.
     */
    orderBy?: OrderItemTranslationOrderByWithRelationInput | OrderItemTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderItemTranslations.
     */
    cursor?: OrderItemTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItemTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItemTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderItemTranslations.
     */
    distinct?: OrderItemTranslationScalarFieldEnum | OrderItemTranslationScalarFieldEnum[]
  }

  /**
   * OrderItemTranslation findFirstOrThrow
   */
  export type OrderItemTranslationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemTranslation
     */
    select?: OrderItemTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemTranslation
     */
    omit?: OrderItemTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemTranslationInclude<ExtArgs> | null
    /**
     * Filter, which OrderItemTranslation to fetch.
     */
    where?: OrderItemTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItemTranslations to fetch.
     */
    orderBy?: OrderItemTranslationOrderByWithRelationInput | OrderItemTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderItemTranslations.
     */
    cursor?: OrderItemTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItemTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItemTranslations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderItemTranslations.
     */
    distinct?: OrderItemTranslationScalarFieldEnum | OrderItemTranslationScalarFieldEnum[]
  }

  /**
   * OrderItemTranslation findMany
   */
  export type OrderItemTranslationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemTranslation
     */
    select?: OrderItemTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemTranslation
     */
    omit?: OrderItemTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemTranslationInclude<ExtArgs> | null
    /**
     * Filter, which OrderItemTranslations to fetch.
     */
    where?: OrderItemTranslationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItemTranslations to fetch.
     */
    orderBy?: OrderItemTranslationOrderByWithRelationInput | OrderItemTranslationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrderItemTranslations.
     */
    cursor?: OrderItemTranslationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItemTranslations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItemTranslations.
     */
    skip?: number
    distinct?: OrderItemTranslationScalarFieldEnum | OrderItemTranslationScalarFieldEnum[]
  }

  /**
   * OrderItemTranslation create
   */
  export type OrderItemTranslationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemTranslation
     */
    select?: OrderItemTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemTranslation
     */
    omit?: OrderItemTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemTranslationInclude<ExtArgs> | null
    /**
     * The data needed to create a OrderItemTranslation.
     */
    data: XOR<OrderItemTranslationCreateInput, OrderItemTranslationUncheckedCreateInput>
  }

  /**
   * OrderItemTranslation createMany
   */
  export type OrderItemTranslationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrderItemTranslations.
     */
    data: OrderItemTranslationCreateManyInput | OrderItemTranslationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrderItemTranslation createManyAndReturn
   */
  export type OrderItemTranslationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemTranslation
     */
    select?: OrderItemTranslationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemTranslation
     */
    omit?: OrderItemTranslationOmit<ExtArgs> | null
    /**
     * The data used to create many OrderItemTranslations.
     */
    data: OrderItemTranslationCreateManyInput | OrderItemTranslationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemTranslationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderItemTranslation update
   */
  export type OrderItemTranslationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemTranslation
     */
    select?: OrderItemTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemTranslation
     */
    omit?: OrderItemTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemTranslationInclude<ExtArgs> | null
    /**
     * The data needed to update a OrderItemTranslation.
     */
    data: XOR<OrderItemTranslationUpdateInput, OrderItemTranslationUncheckedUpdateInput>
    /**
     * Choose, which OrderItemTranslation to update.
     */
    where: OrderItemTranslationWhereUniqueInput
  }

  /**
   * OrderItemTranslation updateMany
   */
  export type OrderItemTranslationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrderItemTranslations.
     */
    data: XOR<OrderItemTranslationUpdateManyMutationInput, OrderItemTranslationUncheckedUpdateManyInput>
    /**
     * Filter which OrderItemTranslations to update
     */
    where?: OrderItemTranslationWhereInput
    /**
     * Limit how many OrderItemTranslations to update.
     */
    limit?: number
  }

  /**
   * OrderItemTranslation updateManyAndReturn
   */
  export type OrderItemTranslationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemTranslation
     */
    select?: OrderItemTranslationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemTranslation
     */
    omit?: OrderItemTranslationOmit<ExtArgs> | null
    /**
     * The data used to update OrderItemTranslations.
     */
    data: XOR<OrderItemTranslationUpdateManyMutationInput, OrderItemTranslationUncheckedUpdateManyInput>
    /**
     * Filter which OrderItemTranslations to update
     */
    where?: OrderItemTranslationWhereInput
    /**
     * Limit how many OrderItemTranslations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemTranslationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderItemTranslation upsert
   */
  export type OrderItemTranslationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemTranslation
     */
    select?: OrderItemTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemTranslation
     */
    omit?: OrderItemTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemTranslationInclude<ExtArgs> | null
    /**
     * The filter to search for the OrderItemTranslation to update in case it exists.
     */
    where: OrderItemTranslationWhereUniqueInput
    /**
     * In case the OrderItemTranslation found by the `where` argument doesn't exist, create a new OrderItemTranslation with this data.
     */
    create: XOR<OrderItemTranslationCreateInput, OrderItemTranslationUncheckedCreateInput>
    /**
     * In case the OrderItemTranslation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderItemTranslationUpdateInput, OrderItemTranslationUncheckedUpdateInput>
  }

  /**
   * OrderItemTranslation delete
   */
  export type OrderItemTranslationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemTranslation
     */
    select?: OrderItemTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemTranslation
     */
    omit?: OrderItemTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemTranslationInclude<ExtArgs> | null
    /**
     * Filter which OrderItemTranslation to delete.
     */
    where: OrderItemTranslationWhereUniqueInput
  }

  /**
   * OrderItemTranslation deleteMany
   */
  export type OrderItemTranslationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderItemTranslations to delete
     */
    where?: OrderItemTranslationWhereInput
    /**
     * Limit how many OrderItemTranslations to delete.
     */
    limit?: number
  }

  /**
   * OrderItemTranslation without action
   */
  export type OrderItemTranslationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemTranslation
     */
    select?: OrderItemTranslationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemTranslation
     */
    omit?: OrderItemTranslationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemTranslationInclude<ExtArgs> | null
  }


  /**
   * Model Payment
   */

  export type AggregatePayment = {
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  export type PaymentAvgAggregateOutputType = {
    shipping: number | null
    subtotal: number | null
    total: number | null
    discount: number | null
  }

  export type PaymentSumAggregateOutputType = {
    shipping: number | null
    subtotal: number | null
    total: number | null
    discount: number | null
  }

  export type PaymentMinAggregateOutputType = {
    id: string | null
    method: $Enums.PaymentMethod | null
    provider: $Enums.PaymentProvider | null
    shipping: number | null
    subtotal: number | null
    total: number | null
    discount: number | null
    currency: $Enums.Currency | null
    status: $Enums.PaymentStatus | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PaymentMaxAggregateOutputType = {
    id: string | null
    method: $Enums.PaymentMethod | null
    provider: $Enums.PaymentProvider | null
    shipping: number | null
    subtotal: number | null
    total: number | null
    discount: number | null
    currency: $Enums.Currency | null
    status: $Enums.PaymentStatus | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type PaymentCountAggregateOutputType = {
    id: number
    method: number
    provider: number
    shipping: number
    subtotal: number
    total: number
    discount: number
    currency: number
    status: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type PaymentAvgAggregateInputType = {
    shipping?: true
    subtotal?: true
    total?: true
    discount?: true
  }

  export type PaymentSumAggregateInputType = {
    shipping?: true
    subtotal?: true
    total?: true
    discount?: true
  }

  export type PaymentMinAggregateInputType = {
    id?: true
    method?: true
    provider?: true
    shipping?: true
    subtotal?: true
    total?: true
    discount?: true
    currency?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PaymentMaxAggregateInputType = {
    id?: true
    method?: true
    provider?: true
    shipping?: true
    subtotal?: true
    total?: true
    discount?: true
    currency?: true
    status?: true
    createdAt?: true
    updatedAt?: true
  }

  export type PaymentCountAggregateInputType = {
    id?: true
    method?: true
    provider?: true
    shipping?: true
    subtotal?: true
    total?: true
    discount?: true
    currency?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type PaymentAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payment to aggregate.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Payments
    **/
    _count?: true | PaymentCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentMaxAggregateInputType
  }

  export type GetPaymentAggregateType<T extends PaymentAggregateArgs> = {
        [P in keyof T & keyof AggregatePayment]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePayment[P]>
      : GetScalarType<T[P], AggregatePayment[P]>
  }




  export type PaymentGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentWhereInput
    orderBy?: PaymentOrderByWithAggregationInput | PaymentOrderByWithAggregationInput[]
    by: PaymentScalarFieldEnum[] | PaymentScalarFieldEnum
    having?: PaymentScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentCountAggregateInputType | true
    _avg?: PaymentAvgAggregateInputType
    _sum?: PaymentSumAggregateInputType
    _min?: PaymentMinAggregateInputType
    _max?: PaymentMaxAggregateInputType
  }

  export type PaymentGroupByOutputType = {
    id: string
    method: $Enums.PaymentMethod
    provider: $Enums.PaymentProvider
    shipping: number
    subtotal: number
    total: number
    discount: number | null
    currency: $Enums.Currency
    status: $Enums.PaymentStatus
    createdAt: Date
    updatedAt: Date
    _count: PaymentCountAggregateOutputType | null
    _avg: PaymentAvgAggregateOutputType | null
    _sum: PaymentSumAggregateOutputType | null
    _min: PaymentMinAggregateOutputType | null
    _max: PaymentMaxAggregateOutputType | null
  }

  type GetPaymentGroupByPayload<T extends PaymentGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentGroupByOutputType[P]>
        }
      >
    >


  export type PaymentSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    method?: boolean
    provider?: boolean
    shipping?: boolean
    subtotal?: boolean
    total?: boolean
    discount?: boolean
    currency?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    sessions?: boolean | Payment$sessionsArgs<ExtArgs>
    order?: boolean | Payment$orderArgs<ExtArgs>
    _count?: boolean | PaymentCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    method?: boolean
    provider?: boolean
    shipping?: boolean
    subtotal?: boolean
    total?: boolean
    discount?: boolean
    currency?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    method?: boolean
    provider?: boolean
    shipping?: boolean
    subtotal?: boolean
    total?: boolean
    discount?: boolean
    currency?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["payment"]>

  export type PaymentSelectScalar = {
    id?: boolean
    method?: boolean
    provider?: boolean
    shipping?: boolean
    subtotal?: boolean
    total?: boolean
    discount?: boolean
    currency?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type PaymentOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "method" | "provider" | "shipping" | "subtotal" | "total" | "discount" | "currency" | "status" | "createdAt" | "updatedAt", ExtArgs["result"]["payment"]>
  export type PaymentInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sessions?: boolean | Payment$sessionsArgs<ExtArgs>
    order?: boolean | Payment$orderArgs<ExtArgs>
    _count?: boolean | PaymentCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PaymentIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type PaymentIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $PaymentPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Payment"
    objects: {
      sessions: Prisma.$PaymentSessionPayload<ExtArgs>[]
      order: Prisma.$OrderPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      method: $Enums.PaymentMethod
      provider: $Enums.PaymentProvider
      shipping: number
      subtotal: number
      total: number
      discount: number | null
      currency: $Enums.Currency
      status: $Enums.PaymentStatus
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["payment"]>
    composites: {}
  }

  type PaymentGetPayload<S extends boolean | null | undefined | PaymentDefaultArgs> = $Result.GetResult<Prisma.$PaymentPayload, S>

  type PaymentCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PaymentFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PaymentCountAggregateInputType | true
    }

  export interface PaymentDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Payment'], meta: { name: 'Payment' } }
    /**
     * Find zero or one Payment that matches the filter.
     * @param {PaymentFindUniqueArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentFindUniqueArgs>(args: SelectSubset<T, PaymentFindUniqueArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Payment that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PaymentFindUniqueOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Payment that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentFindFirstArgs>(args?: SelectSubset<T, PaymentFindFirstArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Payment that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindFirstOrThrowArgs} args - Arguments to find a Payment
     * @example
     * // Get one Payment
     * const payment = await prisma.payment.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Payments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Payments
     * const payments = await prisma.payment.findMany()
     * 
     * // Get first 10 Payments
     * const payments = await prisma.payment.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentWithIdOnly = await prisma.payment.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentFindManyArgs>(args?: SelectSubset<T, PaymentFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Payment.
     * @param {PaymentCreateArgs} args - Arguments to create a Payment.
     * @example
     * // Create one Payment
     * const Payment = await prisma.payment.create({
     *   data: {
     *     // ... data to create a Payment
     *   }
     * })
     * 
     */
    create<T extends PaymentCreateArgs>(args: SelectSubset<T, PaymentCreateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Payments.
     * @param {PaymentCreateManyArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payment = await prisma.payment.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentCreateManyArgs>(args?: SelectSubset<T, PaymentCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Payments and returns the data saved in the database.
     * @param {PaymentCreateManyAndReturnArgs} args - Arguments to create many Payments.
     * @example
     * // Create many Payments
     * const payment = await prisma.payment.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Payments and only return the `id`
     * const paymentWithIdOnly = await prisma.payment.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Payment.
     * @param {PaymentDeleteArgs} args - Arguments to delete one Payment.
     * @example
     * // Delete one Payment
     * const Payment = await prisma.payment.delete({
     *   where: {
     *     // ... filter to delete one Payment
     *   }
     * })
     * 
     */
    delete<T extends PaymentDeleteArgs>(args: SelectSubset<T, PaymentDeleteArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Payment.
     * @param {PaymentUpdateArgs} args - Arguments to update one Payment.
     * @example
     * // Update one Payment
     * const payment = await prisma.payment.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentUpdateArgs>(args: SelectSubset<T, PaymentUpdateArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Payments.
     * @param {PaymentDeleteManyArgs} args - Arguments to filter Payments to delete.
     * @example
     * // Delete a few Payments
     * const { count } = await prisma.payment.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentDeleteManyArgs>(args?: SelectSubset<T, PaymentDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Payments
     * const payment = await prisma.payment.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentUpdateManyArgs>(args: SelectSubset<T, PaymentUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Payments and returns the data updated in the database.
     * @param {PaymentUpdateManyAndReturnArgs} args - Arguments to update many Payments.
     * @example
     * // Update many Payments
     * const payment = await prisma.payment.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Payments and only return the `id`
     * const paymentWithIdOnly = await prisma.payment.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PaymentUpdateManyAndReturnArgs>(args: SelectSubset<T, PaymentUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Payment.
     * @param {PaymentUpsertArgs} args - Arguments to update or create a Payment.
     * @example
     * // Update or create a Payment
     * const payment = await prisma.payment.upsert({
     *   create: {
     *     // ... data to create a Payment
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Payment we want to update
     *   }
     * })
     */
    upsert<T extends PaymentUpsertArgs>(args: SelectSubset<T, PaymentUpsertArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Payments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentCountArgs} args - Arguments to filter Payments to count.
     * @example
     * // Count the number of Payments
     * const count = await prisma.payment.count({
     *   where: {
     *     // ... the filter for the Payments we want to count
     *   }
     * })
    **/
    count<T extends PaymentCountArgs>(
      args?: Subset<T, PaymentCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentAggregateArgs>(args: Subset<T, PaymentAggregateArgs>): Prisma.PrismaPromise<GetPaymentAggregateType<T>>

    /**
     * Group by Payment.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentGroupByArgs['orderBy'] }
        : { orderBy?: PaymentGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Payment model
   */
  readonly fields: PaymentFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Payment.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sessions<T extends Payment$sessionsArgs<ExtArgs> = {}>(args?: Subset<T, Payment$sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentSessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    order<T extends Payment$orderArgs<ExtArgs> = {}>(args?: Subset<T, Payment$orderArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Payment model
   */
  interface PaymentFieldRefs {
    readonly id: FieldRef<"Payment", 'String'>
    readonly method: FieldRef<"Payment", 'PaymentMethod'>
    readonly provider: FieldRef<"Payment", 'PaymentProvider'>
    readonly shipping: FieldRef<"Payment", 'Float'>
    readonly subtotal: FieldRef<"Payment", 'Float'>
    readonly total: FieldRef<"Payment", 'Float'>
    readonly discount: FieldRef<"Payment", 'Float'>
    readonly currency: FieldRef<"Payment", 'Currency'>
    readonly status: FieldRef<"Payment", 'PaymentStatus'>
    readonly createdAt: FieldRef<"Payment", 'DateTime'>
    readonly updatedAt: FieldRef<"Payment", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Payment findUnique
   */
  export type PaymentFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment findUniqueOrThrow
   */
  export type PaymentFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment findFirst
   */
  export type PaymentFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment findFirstOrThrow
   */
  export type PaymentFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payment to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Payments.
     */
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment findMany
   */
  export type PaymentFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter, which Payments to fetch.
     */
    where?: PaymentWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Payments to fetch.
     */
    orderBy?: PaymentOrderByWithRelationInput | PaymentOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Payments.
     */
    cursor?: PaymentWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Payments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Payments.
     */
    skip?: number
    distinct?: PaymentScalarFieldEnum | PaymentScalarFieldEnum[]
  }

  /**
   * Payment create
   */
  export type PaymentCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to create a Payment.
     */
    data: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
  }

  /**
   * Payment createMany
   */
  export type PaymentCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Payments.
     */
    data: PaymentCreateManyInput | PaymentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Payment createManyAndReturn
   */
  export type PaymentCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * The data used to create many Payments.
     */
    data: PaymentCreateManyInput | PaymentCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Payment update
   */
  export type PaymentUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The data needed to update a Payment.
     */
    data: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
    /**
     * Choose, which Payment to update.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment updateMany
   */
  export type PaymentUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Payments.
     */
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyInput>
    /**
     * Filter which Payments to update
     */
    where?: PaymentWhereInput
    /**
     * Limit how many Payments to update.
     */
    limit?: number
  }

  /**
   * Payment updateManyAndReturn
   */
  export type PaymentUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * The data used to update Payments.
     */
    data: XOR<PaymentUpdateManyMutationInput, PaymentUncheckedUpdateManyInput>
    /**
     * Filter which Payments to update
     */
    where?: PaymentWhereInput
    /**
     * Limit how many Payments to update.
     */
    limit?: number
  }

  /**
   * Payment upsert
   */
  export type PaymentUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * The filter to search for the Payment to update in case it exists.
     */
    where: PaymentWhereUniqueInput
    /**
     * In case the Payment found by the `where` argument doesn't exist, create a new Payment with this data.
     */
    create: XOR<PaymentCreateInput, PaymentUncheckedCreateInput>
    /**
     * In case the Payment was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentUpdateInput, PaymentUncheckedUpdateInput>
  }

  /**
   * Payment delete
   */
  export type PaymentDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
    /**
     * Filter which Payment to delete.
     */
    where: PaymentWhereUniqueInput
  }

  /**
   * Payment deleteMany
   */
  export type PaymentDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Payments to delete
     */
    where?: PaymentWhereInput
    /**
     * Limit how many Payments to delete.
     */
    limit?: number
  }

  /**
   * Payment.sessions
   */
  export type Payment$sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentSession
     */
    select?: PaymentSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentSession
     */
    omit?: PaymentSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentSessionInclude<ExtArgs> | null
    where?: PaymentSessionWhereInput
    orderBy?: PaymentSessionOrderByWithRelationInput | PaymentSessionOrderByWithRelationInput[]
    cursor?: PaymentSessionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentSessionScalarFieldEnum | PaymentSessionScalarFieldEnum[]
  }

  /**
   * Payment.order
   */
  export type Payment$orderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
  }

  /**
   * Payment without action
   */
  export type PaymentDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Payment
     */
    select?: PaymentSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Payment
     */
    omit?: PaymentOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentInclude<ExtArgs> | null
  }


  /**
   * Model PaymentSession
   */

  export type AggregatePaymentSession = {
    _count: PaymentSessionCountAggregateOutputType | null
    _avg: PaymentSessionAvgAggregateOutputType | null
    _sum: PaymentSessionSumAggregateOutputType | null
    _min: PaymentSessionMinAggregateOutputType | null
    _max: PaymentSessionMaxAggregateOutputType | null
  }

  export type PaymentSessionAvgAggregateOutputType = {
    amount: number | null
  }

  export type PaymentSessionSumAggregateOutputType = {
    amount: number | null
  }

  export type PaymentSessionMinAggregateOutputType = {
    id: string | null
    referenceId: string | null
    amount: number | null
    currency: $Enums.Currency | null
    capturedAt: Date | null
    expiredAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    paymentId: string | null
  }

  export type PaymentSessionMaxAggregateOutputType = {
    id: string | null
    referenceId: string | null
    amount: number | null
    currency: $Enums.Currency | null
    capturedAt: Date | null
    expiredAt: Date | null
    createdAt: Date | null
    updatedAt: Date | null
    paymentId: string | null
  }

  export type PaymentSessionCountAggregateOutputType = {
    id: number
    referenceId: number
    amount: number
    currency: number
    rawData: number
    capturedAt: number
    expiredAt: number
    createdAt: number
    updatedAt: number
    paymentId: number
    _all: number
  }


  export type PaymentSessionAvgAggregateInputType = {
    amount?: true
  }

  export type PaymentSessionSumAggregateInputType = {
    amount?: true
  }

  export type PaymentSessionMinAggregateInputType = {
    id?: true
    referenceId?: true
    amount?: true
    currency?: true
    capturedAt?: true
    expiredAt?: true
    createdAt?: true
    updatedAt?: true
    paymentId?: true
  }

  export type PaymentSessionMaxAggregateInputType = {
    id?: true
    referenceId?: true
    amount?: true
    currency?: true
    capturedAt?: true
    expiredAt?: true
    createdAt?: true
    updatedAt?: true
    paymentId?: true
  }

  export type PaymentSessionCountAggregateInputType = {
    id?: true
    referenceId?: true
    amount?: true
    currency?: true
    rawData?: true
    capturedAt?: true
    expiredAt?: true
    createdAt?: true
    updatedAt?: true
    paymentId?: true
    _all?: true
  }

  export type PaymentSessionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentSession to aggregate.
     */
    where?: PaymentSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentSessions to fetch.
     */
    orderBy?: PaymentSessionOrderByWithRelationInput | PaymentSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentSessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PaymentSessions
    **/
    _count?: true | PaymentSessionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentSessionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentSessionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentSessionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentSessionMaxAggregateInputType
  }

  export type GetPaymentSessionAggregateType<T extends PaymentSessionAggregateArgs> = {
        [P in keyof T & keyof AggregatePaymentSession]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePaymentSession[P]>
      : GetScalarType<T[P], AggregatePaymentSession[P]>
  }




  export type PaymentSessionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentSessionWhereInput
    orderBy?: PaymentSessionOrderByWithAggregationInput | PaymentSessionOrderByWithAggregationInput[]
    by: PaymentSessionScalarFieldEnum[] | PaymentSessionScalarFieldEnum
    having?: PaymentSessionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentSessionCountAggregateInputType | true
    _avg?: PaymentSessionAvgAggregateInputType
    _sum?: PaymentSessionSumAggregateInputType
    _min?: PaymentSessionMinAggregateInputType
    _max?: PaymentSessionMaxAggregateInputType
  }

  export type PaymentSessionGroupByOutputType = {
    id: string
    referenceId: string
    amount: number
    currency: $Enums.Currency
    rawData: JsonValue
    capturedAt: Date | null
    expiredAt: Date | null
    createdAt: Date
    updatedAt: Date
    paymentId: string
    _count: PaymentSessionCountAggregateOutputType | null
    _avg: PaymentSessionAvgAggregateOutputType | null
    _sum: PaymentSessionSumAggregateOutputType | null
    _min: PaymentSessionMinAggregateOutputType | null
    _max: PaymentSessionMaxAggregateOutputType | null
  }

  type GetPaymentSessionGroupByPayload<T extends PaymentSessionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentSessionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentSessionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentSessionGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentSessionGroupByOutputType[P]>
        }
      >
    >


  export type PaymentSessionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    referenceId?: boolean
    amount?: boolean
    currency?: boolean
    rawData?: boolean
    capturedAt?: boolean
    expiredAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    paymentId?: boolean
    payment?: boolean | PaymentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["paymentSession"]>

  export type PaymentSessionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    referenceId?: boolean
    amount?: boolean
    currency?: boolean
    rawData?: boolean
    capturedAt?: boolean
    expiredAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    paymentId?: boolean
    payment?: boolean | PaymentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["paymentSession"]>

  export type PaymentSessionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    referenceId?: boolean
    amount?: boolean
    currency?: boolean
    rawData?: boolean
    capturedAt?: boolean
    expiredAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    paymentId?: boolean
    payment?: boolean | PaymentDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["paymentSession"]>

  export type PaymentSessionSelectScalar = {
    id?: boolean
    referenceId?: boolean
    amount?: boolean
    currency?: boolean
    rawData?: boolean
    capturedAt?: boolean
    expiredAt?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    paymentId?: boolean
  }

  export type PaymentSessionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "referenceId" | "amount" | "currency" | "rawData" | "capturedAt" | "expiredAt" | "createdAt" | "updatedAt" | "paymentId", ExtArgs["result"]["paymentSession"]>
  export type PaymentSessionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    payment?: boolean | PaymentDefaultArgs<ExtArgs>
  }
  export type PaymentSessionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    payment?: boolean | PaymentDefaultArgs<ExtArgs>
  }
  export type PaymentSessionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    payment?: boolean | PaymentDefaultArgs<ExtArgs>
  }

  export type $PaymentSessionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PaymentSession"
    objects: {
      payment: Prisma.$PaymentPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      referenceId: string
      amount: number
      currency: $Enums.Currency
      rawData: Prisma.JsonValue
      capturedAt: Date | null
      expiredAt: Date | null
      createdAt: Date
      updatedAt: Date
      paymentId: string
    }, ExtArgs["result"]["paymentSession"]>
    composites: {}
  }

  type PaymentSessionGetPayload<S extends boolean | null | undefined | PaymentSessionDefaultArgs> = $Result.GetResult<Prisma.$PaymentSessionPayload, S>

  type PaymentSessionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<PaymentSessionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: PaymentSessionCountAggregateInputType | true
    }

  export interface PaymentSessionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PaymentSession'], meta: { name: 'PaymentSession' } }
    /**
     * Find zero or one PaymentSession that matches the filter.
     * @param {PaymentSessionFindUniqueArgs} args - Arguments to find a PaymentSession
     * @example
     * // Get one PaymentSession
     * const paymentSession = await prisma.paymentSession.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentSessionFindUniqueArgs>(args: SelectSubset<T, PaymentSessionFindUniqueArgs<ExtArgs>>): Prisma__PaymentSessionClient<$Result.GetResult<Prisma.$PaymentSessionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one PaymentSession that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {PaymentSessionFindUniqueOrThrowArgs} args - Arguments to find a PaymentSession
     * @example
     * // Get one PaymentSession
     * const paymentSession = await prisma.paymentSession.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentSessionFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentSessionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentSessionClient<$Result.GetResult<Prisma.$PaymentSessionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PaymentSession that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentSessionFindFirstArgs} args - Arguments to find a PaymentSession
     * @example
     * // Get one PaymentSession
     * const paymentSession = await prisma.paymentSession.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentSessionFindFirstArgs>(args?: SelectSubset<T, PaymentSessionFindFirstArgs<ExtArgs>>): Prisma__PaymentSessionClient<$Result.GetResult<Prisma.$PaymentSessionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first PaymentSession that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentSessionFindFirstOrThrowArgs} args - Arguments to find a PaymentSession
     * @example
     * // Get one PaymentSession
     * const paymentSession = await prisma.paymentSession.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentSessionFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentSessionFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentSessionClient<$Result.GetResult<Prisma.$PaymentSessionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more PaymentSessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentSessionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PaymentSessions
     * const paymentSessions = await prisma.paymentSession.findMany()
     * 
     * // Get first 10 PaymentSessions
     * const paymentSessions = await prisma.paymentSession.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentSessionWithIdOnly = await prisma.paymentSession.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentSessionFindManyArgs>(args?: SelectSubset<T, PaymentSessionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentSessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a PaymentSession.
     * @param {PaymentSessionCreateArgs} args - Arguments to create a PaymentSession.
     * @example
     * // Create one PaymentSession
     * const PaymentSession = await prisma.paymentSession.create({
     *   data: {
     *     // ... data to create a PaymentSession
     *   }
     * })
     * 
     */
    create<T extends PaymentSessionCreateArgs>(args: SelectSubset<T, PaymentSessionCreateArgs<ExtArgs>>): Prisma__PaymentSessionClient<$Result.GetResult<Prisma.$PaymentSessionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many PaymentSessions.
     * @param {PaymentSessionCreateManyArgs} args - Arguments to create many PaymentSessions.
     * @example
     * // Create many PaymentSessions
     * const paymentSession = await prisma.paymentSession.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentSessionCreateManyArgs>(args?: SelectSubset<T, PaymentSessionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many PaymentSessions and returns the data saved in the database.
     * @param {PaymentSessionCreateManyAndReturnArgs} args - Arguments to create many PaymentSessions.
     * @example
     * // Create many PaymentSessions
     * const paymentSession = await prisma.paymentSession.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many PaymentSessions and only return the `id`
     * const paymentSessionWithIdOnly = await prisma.paymentSession.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends PaymentSessionCreateManyAndReturnArgs>(args?: SelectSubset<T, PaymentSessionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentSessionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a PaymentSession.
     * @param {PaymentSessionDeleteArgs} args - Arguments to delete one PaymentSession.
     * @example
     * // Delete one PaymentSession
     * const PaymentSession = await prisma.paymentSession.delete({
     *   where: {
     *     // ... filter to delete one PaymentSession
     *   }
     * })
     * 
     */
    delete<T extends PaymentSessionDeleteArgs>(args: SelectSubset<T, PaymentSessionDeleteArgs<ExtArgs>>): Prisma__PaymentSessionClient<$Result.GetResult<Prisma.$PaymentSessionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one PaymentSession.
     * @param {PaymentSessionUpdateArgs} args - Arguments to update one PaymentSession.
     * @example
     * // Update one PaymentSession
     * const paymentSession = await prisma.paymentSession.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentSessionUpdateArgs>(args: SelectSubset<T, PaymentSessionUpdateArgs<ExtArgs>>): Prisma__PaymentSessionClient<$Result.GetResult<Prisma.$PaymentSessionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more PaymentSessions.
     * @param {PaymentSessionDeleteManyArgs} args - Arguments to filter PaymentSessions to delete.
     * @example
     * // Delete a few PaymentSessions
     * const { count } = await prisma.paymentSession.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentSessionDeleteManyArgs>(args?: SelectSubset<T, PaymentSessionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentSessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentSessionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PaymentSessions
     * const paymentSession = await prisma.paymentSession.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentSessionUpdateManyArgs>(args: SelectSubset<T, PaymentSessionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentSessions and returns the data updated in the database.
     * @param {PaymentSessionUpdateManyAndReturnArgs} args - Arguments to update many PaymentSessions.
     * @example
     * // Update many PaymentSessions
     * const paymentSession = await prisma.paymentSession.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more PaymentSessions and only return the `id`
     * const paymentSessionWithIdOnly = await prisma.paymentSession.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends PaymentSessionUpdateManyAndReturnArgs>(args: SelectSubset<T, PaymentSessionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentSessionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one PaymentSession.
     * @param {PaymentSessionUpsertArgs} args - Arguments to update or create a PaymentSession.
     * @example
     * // Update or create a PaymentSession
     * const paymentSession = await prisma.paymentSession.upsert({
     *   create: {
     *     // ... data to create a PaymentSession
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PaymentSession we want to update
     *   }
     * })
     */
    upsert<T extends PaymentSessionUpsertArgs>(args: SelectSubset<T, PaymentSessionUpsertArgs<ExtArgs>>): Prisma__PaymentSessionClient<$Result.GetResult<Prisma.$PaymentSessionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of PaymentSessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentSessionCountArgs} args - Arguments to filter PaymentSessions to count.
     * @example
     * // Count the number of PaymentSessions
     * const count = await prisma.paymentSession.count({
     *   where: {
     *     // ... the filter for the PaymentSessions we want to count
     *   }
     * })
    **/
    count<T extends PaymentSessionCountArgs>(
      args?: Subset<T, PaymentSessionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentSessionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PaymentSession.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentSessionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentSessionAggregateArgs>(args: Subset<T, PaymentSessionAggregateArgs>): Prisma.PrismaPromise<GetPaymentSessionAggregateType<T>>

    /**
     * Group by PaymentSession.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentSessionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentSessionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentSessionGroupByArgs['orderBy'] }
        : { orderBy?: PaymentSessionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentSessionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentSessionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PaymentSession model
   */
  readonly fields: PaymentSessionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PaymentSession.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentSessionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    payment<T extends PaymentDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PaymentDefaultArgs<ExtArgs>>): Prisma__PaymentClient<$Result.GetResult<Prisma.$PaymentPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PaymentSession model
   */
  interface PaymentSessionFieldRefs {
    readonly id: FieldRef<"PaymentSession", 'String'>
    readonly referenceId: FieldRef<"PaymentSession", 'String'>
    readonly amount: FieldRef<"PaymentSession", 'Float'>
    readonly currency: FieldRef<"PaymentSession", 'Currency'>
    readonly rawData: FieldRef<"PaymentSession", 'Json'>
    readonly capturedAt: FieldRef<"PaymentSession", 'DateTime'>
    readonly expiredAt: FieldRef<"PaymentSession", 'DateTime'>
    readonly createdAt: FieldRef<"PaymentSession", 'DateTime'>
    readonly updatedAt: FieldRef<"PaymentSession", 'DateTime'>
    readonly paymentId: FieldRef<"PaymentSession", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PaymentSession findUnique
   */
  export type PaymentSessionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentSession
     */
    select?: PaymentSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentSession
     */
    omit?: PaymentSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentSessionInclude<ExtArgs> | null
    /**
     * Filter, which PaymentSession to fetch.
     */
    where: PaymentSessionWhereUniqueInput
  }

  /**
   * PaymentSession findUniqueOrThrow
   */
  export type PaymentSessionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentSession
     */
    select?: PaymentSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentSession
     */
    omit?: PaymentSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentSessionInclude<ExtArgs> | null
    /**
     * Filter, which PaymentSession to fetch.
     */
    where: PaymentSessionWhereUniqueInput
  }

  /**
   * PaymentSession findFirst
   */
  export type PaymentSessionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentSession
     */
    select?: PaymentSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentSession
     */
    omit?: PaymentSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentSessionInclude<ExtArgs> | null
    /**
     * Filter, which PaymentSession to fetch.
     */
    where?: PaymentSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentSessions to fetch.
     */
    orderBy?: PaymentSessionOrderByWithRelationInput | PaymentSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentSessions.
     */
    cursor?: PaymentSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentSessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentSessions.
     */
    distinct?: PaymentSessionScalarFieldEnum | PaymentSessionScalarFieldEnum[]
  }

  /**
   * PaymentSession findFirstOrThrow
   */
  export type PaymentSessionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentSession
     */
    select?: PaymentSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentSession
     */
    omit?: PaymentSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentSessionInclude<ExtArgs> | null
    /**
     * Filter, which PaymentSession to fetch.
     */
    where?: PaymentSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentSessions to fetch.
     */
    orderBy?: PaymentSessionOrderByWithRelationInput | PaymentSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentSessions.
     */
    cursor?: PaymentSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentSessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentSessions.
     */
    distinct?: PaymentSessionScalarFieldEnum | PaymentSessionScalarFieldEnum[]
  }

  /**
   * PaymentSession findMany
   */
  export type PaymentSessionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentSession
     */
    select?: PaymentSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentSession
     */
    omit?: PaymentSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentSessionInclude<ExtArgs> | null
    /**
     * Filter, which PaymentSessions to fetch.
     */
    where?: PaymentSessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentSessions to fetch.
     */
    orderBy?: PaymentSessionOrderByWithRelationInput | PaymentSessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PaymentSessions.
     */
    cursor?: PaymentSessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentSessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentSessions.
     */
    skip?: number
    distinct?: PaymentSessionScalarFieldEnum | PaymentSessionScalarFieldEnum[]
  }

  /**
   * PaymentSession create
   */
  export type PaymentSessionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentSession
     */
    select?: PaymentSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentSession
     */
    omit?: PaymentSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentSessionInclude<ExtArgs> | null
    /**
     * The data needed to create a PaymentSession.
     */
    data: XOR<PaymentSessionCreateInput, PaymentSessionUncheckedCreateInput>
  }

  /**
   * PaymentSession createMany
   */
  export type PaymentSessionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PaymentSessions.
     */
    data: PaymentSessionCreateManyInput | PaymentSessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PaymentSession createManyAndReturn
   */
  export type PaymentSessionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentSession
     */
    select?: PaymentSessionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentSession
     */
    omit?: PaymentSessionOmit<ExtArgs> | null
    /**
     * The data used to create many PaymentSessions.
     */
    data: PaymentSessionCreateManyInput | PaymentSessionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentSessionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * PaymentSession update
   */
  export type PaymentSessionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentSession
     */
    select?: PaymentSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentSession
     */
    omit?: PaymentSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentSessionInclude<ExtArgs> | null
    /**
     * The data needed to update a PaymentSession.
     */
    data: XOR<PaymentSessionUpdateInput, PaymentSessionUncheckedUpdateInput>
    /**
     * Choose, which PaymentSession to update.
     */
    where: PaymentSessionWhereUniqueInput
  }

  /**
   * PaymentSession updateMany
   */
  export type PaymentSessionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PaymentSessions.
     */
    data: XOR<PaymentSessionUpdateManyMutationInput, PaymentSessionUncheckedUpdateManyInput>
    /**
     * Filter which PaymentSessions to update
     */
    where?: PaymentSessionWhereInput
    /**
     * Limit how many PaymentSessions to update.
     */
    limit?: number
  }

  /**
   * PaymentSession updateManyAndReturn
   */
  export type PaymentSessionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentSession
     */
    select?: PaymentSessionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentSession
     */
    omit?: PaymentSessionOmit<ExtArgs> | null
    /**
     * The data used to update PaymentSessions.
     */
    data: XOR<PaymentSessionUpdateManyMutationInput, PaymentSessionUncheckedUpdateManyInput>
    /**
     * Filter which PaymentSessions to update
     */
    where?: PaymentSessionWhereInput
    /**
     * Limit how many PaymentSessions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentSessionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * PaymentSession upsert
   */
  export type PaymentSessionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentSession
     */
    select?: PaymentSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentSession
     */
    omit?: PaymentSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentSessionInclude<ExtArgs> | null
    /**
     * The filter to search for the PaymentSession to update in case it exists.
     */
    where: PaymentSessionWhereUniqueInput
    /**
     * In case the PaymentSession found by the `where` argument doesn't exist, create a new PaymentSession with this data.
     */
    create: XOR<PaymentSessionCreateInput, PaymentSessionUncheckedCreateInput>
    /**
     * In case the PaymentSession was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentSessionUpdateInput, PaymentSessionUncheckedUpdateInput>
  }

  /**
   * PaymentSession delete
   */
  export type PaymentSessionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentSession
     */
    select?: PaymentSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentSession
     */
    omit?: PaymentSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentSessionInclude<ExtArgs> | null
    /**
     * Filter which PaymentSession to delete.
     */
    where: PaymentSessionWhereUniqueInput
  }

  /**
   * PaymentSession deleteMany
   */
  export type PaymentSessionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentSessions to delete
     */
    where?: PaymentSessionWhereInput
    /**
     * Limit how many PaymentSessions to delete.
     */
    limit?: number
  }

  /**
   * PaymentSession without action
   */
  export type PaymentSessionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentSession
     */
    select?: PaymentSessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the PaymentSession
     */
    omit?: PaymentSessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentSessionInclude<ExtArgs> | null
  }


  /**
   * Model Campaign
   */

  export type AggregateCampaign = {
    _count: CampaignCountAggregateOutputType | null
    _avg: CampaignAvgAggregateOutputType | null
    _sum: CampaignSumAggregateOutputType | null
    _min: CampaignMinAggregateOutputType | null
    _max: CampaignMaxAggregateOutputType | null
  }

  export type CampaignAvgAggregateOutputType = {
    amount: number | null
    percentage: number | null
  }

  export type CampaignSumAggregateOutputType = {
    amount: number | null
    percentage: number | null
  }

  export type CampaignMinAggregateOutputType = {
    id: string | null
    title: string | null
    type: $Enums.CampaignType | null
    validFrom: Date | null
    validTo: Date | null
    organizationId: string | null
    amount: number | null
    percentage: number | null
    publishedAt: Date | null
    publishedBy: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CampaignMaxAggregateOutputType = {
    id: string | null
    title: string | null
    type: $Enums.CampaignType | null
    validFrom: Date | null
    validTo: Date | null
    organizationId: string | null
    amount: number | null
    percentage: number | null
    publishedAt: Date | null
    publishedBy: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CampaignCountAggregateOutputType = {
    id: number
    title: number
    type: number
    validFrom: number
    validTo: number
    organizationId: number
    amount: number
    percentage: number
    publishedAt: number
    publishedBy: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CampaignAvgAggregateInputType = {
    amount?: true
    percentage?: true
  }

  export type CampaignSumAggregateInputType = {
    amount?: true
    percentage?: true
  }

  export type CampaignMinAggregateInputType = {
    id?: true
    title?: true
    type?: true
    validFrom?: true
    validTo?: true
    organizationId?: true
    amount?: true
    percentage?: true
    publishedAt?: true
    publishedBy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CampaignMaxAggregateInputType = {
    id?: true
    title?: true
    type?: true
    validFrom?: true
    validTo?: true
    organizationId?: true
    amount?: true
    percentage?: true
    publishedAt?: true
    publishedBy?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CampaignCountAggregateInputType = {
    id?: true
    title?: true
    type?: true
    validFrom?: true
    validTo?: true
    organizationId?: true
    amount?: true
    percentage?: true
    publishedAt?: true
    publishedBy?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CampaignAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Campaign to aggregate.
     */
    where?: CampaignWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Campaigns to fetch.
     */
    orderBy?: CampaignOrderByWithRelationInput | CampaignOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CampaignWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Campaigns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Campaigns
    **/
    _count?: true | CampaignCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CampaignAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CampaignSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CampaignMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CampaignMaxAggregateInputType
  }

  export type GetCampaignAggregateType<T extends CampaignAggregateArgs> = {
        [P in keyof T & keyof AggregateCampaign]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCampaign[P]>
      : GetScalarType<T[P], AggregateCampaign[P]>
  }




  export type CampaignGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CampaignWhereInput
    orderBy?: CampaignOrderByWithAggregationInput | CampaignOrderByWithAggregationInput[]
    by: CampaignScalarFieldEnum[] | CampaignScalarFieldEnum
    having?: CampaignScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CampaignCountAggregateInputType | true
    _avg?: CampaignAvgAggregateInputType
    _sum?: CampaignSumAggregateInputType
    _min?: CampaignMinAggregateInputType
    _max?: CampaignMaxAggregateInputType
  }

  export type CampaignGroupByOutputType = {
    id: string
    title: string
    type: $Enums.CampaignType
    validFrom: Date
    validTo: Date
    organizationId: string
    amount: number | null
    percentage: number | null
    publishedAt: Date | null
    publishedBy: string | null
    createdAt: Date
    updatedAt: Date
    _count: CampaignCountAggregateOutputType | null
    _avg: CampaignAvgAggregateOutputType | null
    _sum: CampaignSumAggregateOutputType | null
    _min: CampaignMinAggregateOutputType | null
    _max: CampaignMaxAggregateOutputType | null
  }

  type GetCampaignGroupByPayload<T extends CampaignGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CampaignGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CampaignGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CampaignGroupByOutputType[P]>
            : GetScalarType<T[P], CampaignGroupByOutputType[P]>
        }
      >
    >


  export type CampaignSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    type?: boolean
    validFrom?: boolean
    validTo?: boolean
    organizationId?: boolean
    amount?: boolean
    percentage?: boolean
    publishedAt?: boolean
    publishedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["campaign"]>

  export type CampaignSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    type?: boolean
    validFrom?: boolean
    validTo?: boolean
    organizationId?: boolean
    amount?: boolean
    percentage?: boolean
    publishedAt?: boolean
    publishedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["campaign"]>

  export type CampaignSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    type?: boolean
    validFrom?: boolean
    validTo?: boolean
    organizationId?: boolean
    amount?: boolean
    percentage?: boolean
    publishedAt?: boolean
    publishedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["campaign"]>

  export type CampaignSelectScalar = {
    id?: boolean
    title?: boolean
    type?: boolean
    validFrom?: boolean
    validTo?: boolean
    organizationId?: boolean
    amount?: boolean
    percentage?: boolean
    publishedAt?: boolean
    publishedBy?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CampaignOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "type" | "validFrom" | "validTo" | "organizationId" | "amount" | "percentage" | "publishedAt" | "publishedBy" | "createdAt" | "updatedAt", ExtArgs["result"]["campaign"]>
  export type CampaignInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }
  export type CampaignIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }
  export type CampaignIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }

  export type $CampaignPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Campaign"
    objects: {
      organization: Prisma.$OrganizationPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      type: $Enums.CampaignType
      validFrom: Date
      validTo: Date
      organizationId: string
      amount: number | null
      percentage: number | null
      publishedAt: Date | null
      publishedBy: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["campaign"]>
    composites: {}
  }

  type CampaignGetPayload<S extends boolean | null | undefined | CampaignDefaultArgs> = $Result.GetResult<Prisma.$CampaignPayload, S>

  type CampaignCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CampaignFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CampaignCountAggregateInputType | true
    }

  export interface CampaignDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Campaign'], meta: { name: 'Campaign' } }
    /**
     * Find zero or one Campaign that matches the filter.
     * @param {CampaignFindUniqueArgs} args - Arguments to find a Campaign
     * @example
     * // Get one Campaign
     * const campaign = await prisma.campaign.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CampaignFindUniqueArgs>(args: SelectSubset<T, CampaignFindUniqueArgs<ExtArgs>>): Prisma__CampaignClient<$Result.GetResult<Prisma.$CampaignPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Campaign that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CampaignFindUniqueOrThrowArgs} args - Arguments to find a Campaign
     * @example
     * // Get one Campaign
     * const campaign = await prisma.campaign.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CampaignFindUniqueOrThrowArgs>(args: SelectSubset<T, CampaignFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CampaignClient<$Result.GetResult<Prisma.$CampaignPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Campaign that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampaignFindFirstArgs} args - Arguments to find a Campaign
     * @example
     * // Get one Campaign
     * const campaign = await prisma.campaign.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CampaignFindFirstArgs>(args?: SelectSubset<T, CampaignFindFirstArgs<ExtArgs>>): Prisma__CampaignClient<$Result.GetResult<Prisma.$CampaignPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Campaign that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampaignFindFirstOrThrowArgs} args - Arguments to find a Campaign
     * @example
     * // Get one Campaign
     * const campaign = await prisma.campaign.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CampaignFindFirstOrThrowArgs>(args?: SelectSubset<T, CampaignFindFirstOrThrowArgs<ExtArgs>>): Prisma__CampaignClient<$Result.GetResult<Prisma.$CampaignPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Campaigns that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampaignFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Campaigns
     * const campaigns = await prisma.campaign.findMany()
     * 
     * // Get first 10 Campaigns
     * const campaigns = await prisma.campaign.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const campaignWithIdOnly = await prisma.campaign.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CampaignFindManyArgs>(args?: SelectSubset<T, CampaignFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CampaignPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Campaign.
     * @param {CampaignCreateArgs} args - Arguments to create a Campaign.
     * @example
     * // Create one Campaign
     * const Campaign = await prisma.campaign.create({
     *   data: {
     *     // ... data to create a Campaign
     *   }
     * })
     * 
     */
    create<T extends CampaignCreateArgs>(args: SelectSubset<T, CampaignCreateArgs<ExtArgs>>): Prisma__CampaignClient<$Result.GetResult<Prisma.$CampaignPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Campaigns.
     * @param {CampaignCreateManyArgs} args - Arguments to create many Campaigns.
     * @example
     * // Create many Campaigns
     * const campaign = await prisma.campaign.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CampaignCreateManyArgs>(args?: SelectSubset<T, CampaignCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Campaigns and returns the data saved in the database.
     * @param {CampaignCreateManyAndReturnArgs} args - Arguments to create many Campaigns.
     * @example
     * // Create many Campaigns
     * const campaign = await prisma.campaign.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Campaigns and only return the `id`
     * const campaignWithIdOnly = await prisma.campaign.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CampaignCreateManyAndReturnArgs>(args?: SelectSubset<T, CampaignCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CampaignPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Campaign.
     * @param {CampaignDeleteArgs} args - Arguments to delete one Campaign.
     * @example
     * // Delete one Campaign
     * const Campaign = await prisma.campaign.delete({
     *   where: {
     *     // ... filter to delete one Campaign
     *   }
     * })
     * 
     */
    delete<T extends CampaignDeleteArgs>(args: SelectSubset<T, CampaignDeleteArgs<ExtArgs>>): Prisma__CampaignClient<$Result.GetResult<Prisma.$CampaignPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Campaign.
     * @param {CampaignUpdateArgs} args - Arguments to update one Campaign.
     * @example
     * // Update one Campaign
     * const campaign = await prisma.campaign.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CampaignUpdateArgs>(args: SelectSubset<T, CampaignUpdateArgs<ExtArgs>>): Prisma__CampaignClient<$Result.GetResult<Prisma.$CampaignPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Campaigns.
     * @param {CampaignDeleteManyArgs} args - Arguments to filter Campaigns to delete.
     * @example
     * // Delete a few Campaigns
     * const { count } = await prisma.campaign.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CampaignDeleteManyArgs>(args?: SelectSubset<T, CampaignDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Campaigns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampaignUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Campaigns
     * const campaign = await prisma.campaign.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CampaignUpdateManyArgs>(args: SelectSubset<T, CampaignUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Campaigns and returns the data updated in the database.
     * @param {CampaignUpdateManyAndReturnArgs} args - Arguments to update many Campaigns.
     * @example
     * // Update many Campaigns
     * const campaign = await prisma.campaign.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Campaigns and only return the `id`
     * const campaignWithIdOnly = await prisma.campaign.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CampaignUpdateManyAndReturnArgs>(args: SelectSubset<T, CampaignUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CampaignPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Campaign.
     * @param {CampaignUpsertArgs} args - Arguments to update or create a Campaign.
     * @example
     * // Update or create a Campaign
     * const campaign = await prisma.campaign.upsert({
     *   create: {
     *     // ... data to create a Campaign
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Campaign we want to update
     *   }
     * })
     */
    upsert<T extends CampaignUpsertArgs>(args: SelectSubset<T, CampaignUpsertArgs<ExtArgs>>): Prisma__CampaignClient<$Result.GetResult<Prisma.$CampaignPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Campaigns.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampaignCountArgs} args - Arguments to filter Campaigns to count.
     * @example
     * // Count the number of Campaigns
     * const count = await prisma.campaign.count({
     *   where: {
     *     // ... the filter for the Campaigns we want to count
     *   }
     * })
    **/
    count<T extends CampaignCountArgs>(
      args?: Subset<T, CampaignCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CampaignCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Campaign.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampaignAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CampaignAggregateArgs>(args: Subset<T, CampaignAggregateArgs>): Prisma.PrismaPromise<GetCampaignAggregateType<T>>

    /**
     * Group by Campaign.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CampaignGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CampaignGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CampaignGroupByArgs['orderBy'] }
        : { orderBy?: CampaignGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CampaignGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCampaignGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Campaign model
   */
  readonly fields: CampaignFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Campaign.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CampaignClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    organization<T extends OrganizationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationDefaultArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Campaign model
   */
  interface CampaignFieldRefs {
    readonly id: FieldRef<"Campaign", 'String'>
    readonly title: FieldRef<"Campaign", 'String'>
    readonly type: FieldRef<"Campaign", 'CampaignType'>
    readonly validFrom: FieldRef<"Campaign", 'DateTime'>
    readonly validTo: FieldRef<"Campaign", 'DateTime'>
    readonly organizationId: FieldRef<"Campaign", 'String'>
    readonly amount: FieldRef<"Campaign", 'Float'>
    readonly percentage: FieldRef<"Campaign", 'Float'>
    readonly publishedAt: FieldRef<"Campaign", 'DateTime'>
    readonly publishedBy: FieldRef<"Campaign", 'String'>
    readonly createdAt: FieldRef<"Campaign", 'DateTime'>
    readonly updatedAt: FieldRef<"Campaign", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Campaign findUnique
   */
  export type CampaignFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campaign
     */
    select?: CampaignSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campaign
     */
    omit?: CampaignOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampaignInclude<ExtArgs> | null
    /**
     * Filter, which Campaign to fetch.
     */
    where: CampaignWhereUniqueInput
  }

  /**
   * Campaign findUniqueOrThrow
   */
  export type CampaignFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campaign
     */
    select?: CampaignSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campaign
     */
    omit?: CampaignOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampaignInclude<ExtArgs> | null
    /**
     * Filter, which Campaign to fetch.
     */
    where: CampaignWhereUniqueInput
  }

  /**
   * Campaign findFirst
   */
  export type CampaignFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campaign
     */
    select?: CampaignSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campaign
     */
    omit?: CampaignOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampaignInclude<ExtArgs> | null
    /**
     * Filter, which Campaign to fetch.
     */
    where?: CampaignWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Campaigns to fetch.
     */
    orderBy?: CampaignOrderByWithRelationInput | CampaignOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Campaigns.
     */
    cursor?: CampaignWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Campaigns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Campaigns.
     */
    distinct?: CampaignScalarFieldEnum | CampaignScalarFieldEnum[]
  }

  /**
   * Campaign findFirstOrThrow
   */
  export type CampaignFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campaign
     */
    select?: CampaignSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campaign
     */
    omit?: CampaignOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampaignInclude<ExtArgs> | null
    /**
     * Filter, which Campaign to fetch.
     */
    where?: CampaignWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Campaigns to fetch.
     */
    orderBy?: CampaignOrderByWithRelationInput | CampaignOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Campaigns.
     */
    cursor?: CampaignWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Campaigns.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Campaigns.
     */
    distinct?: CampaignScalarFieldEnum | CampaignScalarFieldEnum[]
  }

  /**
   * Campaign findMany
   */
  export type CampaignFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campaign
     */
    select?: CampaignSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campaign
     */
    omit?: CampaignOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampaignInclude<ExtArgs> | null
    /**
     * Filter, which Campaigns to fetch.
     */
    where?: CampaignWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Campaigns to fetch.
     */
    orderBy?: CampaignOrderByWithRelationInput | CampaignOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Campaigns.
     */
    cursor?: CampaignWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Campaigns from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Campaigns.
     */
    skip?: number
    distinct?: CampaignScalarFieldEnum | CampaignScalarFieldEnum[]
  }

  /**
   * Campaign create
   */
  export type CampaignCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campaign
     */
    select?: CampaignSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campaign
     */
    omit?: CampaignOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampaignInclude<ExtArgs> | null
    /**
     * The data needed to create a Campaign.
     */
    data: XOR<CampaignCreateInput, CampaignUncheckedCreateInput>
  }

  /**
   * Campaign createMany
   */
  export type CampaignCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Campaigns.
     */
    data: CampaignCreateManyInput | CampaignCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Campaign createManyAndReturn
   */
  export type CampaignCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campaign
     */
    select?: CampaignSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Campaign
     */
    omit?: CampaignOmit<ExtArgs> | null
    /**
     * The data used to create many Campaigns.
     */
    data: CampaignCreateManyInput | CampaignCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampaignIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Campaign update
   */
  export type CampaignUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campaign
     */
    select?: CampaignSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campaign
     */
    omit?: CampaignOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampaignInclude<ExtArgs> | null
    /**
     * The data needed to update a Campaign.
     */
    data: XOR<CampaignUpdateInput, CampaignUncheckedUpdateInput>
    /**
     * Choose, which Campaign to update.
     */
    where: CampaignWhereUniqueInput
  }

  /**
   * Campaign updateMany
   */
  export type CampaignUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Campaigns.
     */
    data: XOR<CampaignUpdateManyMutationInput, CampaignUncheckedUpdateManyInput>
    /**
     * Filter which Campaigns to update
     */
    where?: CampaignWhereInput
    /**
     * Limit how many Campaigns to update.
     */
    limit?: number
  }

  /**
   * Campaign updateManyAndReturn
   */
  export type CampaignUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campaign
     */
    select?: CampaignSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Campaign
     */
    omit?: CampaignOmit<ExtArgs> | null
    /**
     * The data used to update Campaigns.
     */
    data: XOR<CampaignUpdateManyMutationInput, CampaignUncheckedUpdateManyInput>
    /**
     * Filter which Campaigns to update
     */
    where?: CampaignWhereInput
    /**
     * Limit how many Campaigns to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampaignIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Campaign upsert
   */
  export type CampaignUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campaign
     */
    select?: CampaignSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campaign
     */
    omit?: CampaignOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampaignInclude<ExtArgs> | null
    /**
     * The filter to search for the Campaign to update in case it exists.
     */
    where: CampaignWhereUniqueInput
    /**
     * In case the Campaign found by the `where` argument doesn't exist, create a new Campaign with this data.
     */
    create: XOR<CampaignCreateInput, CampaignUncheckedCreateInput>
    /**
     * In case the Campaign was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CampaignUpdateInput, CampaignUncheckedUpdateInput>
  }

  /**
   * Campaign delete
   */
  export type CampaignDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campaign
     */
    select?: CampaignSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campaign
     */
    omit?: CampaignOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampaignInclude<ExtArgs> | null
    /**
     * Filter which Campaign to delete.
     */
    where: CampaignWhereUniqueInput
  }

  /**
   * Campaign deleteMany
   */
  export type CampaignDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Campaigns to delete
     */
    where?: CampaignWhereInput
    /**
     * Limit how many Campaigns to delete.
     */
    limit?: number
  }

  /**
   * Campaign without action
   */
  export type CampaignDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Campaign
     */
    select?: CampaignSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Campaign
     */
    omit?: CampaignOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CampaignInclude<ExtArgs> | null
  }


  /**
   * Model ShippingMethod
   */

  export type AggregateShippingMethod = {
    _count: ShippingMethodCountAggregateOutputType | null
    _min: ShippingMethodMinAggregateOutputType | null
    _max: ShippingMethodMaxAggregateOutputType | null
  }

  export type ShippingMethodMinAggregateOutputType = {
    id: string | null
    title: string | null
    providerName: string | null
    providerLogoId: string | null
    requireDateOfDelivery: boolean | null
    organizationId: string | null
    archivedAt: Date | null
    archivedBy: string | null
    publishedAt: Date | null
    publishedBy: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type ShippingMethodMaxAggregateOutputType = {
    id: string | null
    title: string | null
    providerName: string | null
    providerLogoId: string | null
    requireDateOfDelivery: boolean | null
    organizationId: string | null
    archivedAt: Date | null
    archivedBy: string | null
    publishedAt: Date | null
    publishedBy: string | null
    createdAt: Date | null
    createdBy: string | null
    updatedAt: Date | null
    updatedBy: string | null
  }

  export type ShippingMethodCountAggregateOutputType = {
    id: number
    title: number
    providerName: number
    providerLogoId: number
    requireDateOfDelivery: number
    organizationId: number
    archivedAt: number
    archivedBy: number
    publishedAt: number
    publishedBy: number
    createdAt: number
    createdBy: number
    updatedAt: number
    updatedBy: number
    _all: number
  }


  export type ShippingMethodMinAggregateInputType = {
    id?: true
    title?: true
    providerName?: true
    providerLogoId?: true
    requireDateOfDelivery?: true
    organizationId?: true
    archivedAt?: true
    archivedBy?: true
    publishedAt?: true
    publishedBy?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type ShippingMethodMaxAggregateInputType = {
    id?: true
    title?: true
    providerName?: true
    providerLogoId?: true
    requireDateOfDelivery?: true
    organizationId?: true
    archivedAt?: true
    archivedBy?: true
    publishedAt?: true
    publishedBy?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
  }

  export type ShippingMethodCountAggregateInputType = {
    id?: true
    title?: true
    providerName?: true
    providerLogoId?: true
    requireDateOfDelivery?: true
    organizationId?: true
    archivedAt?: true
    archivedBy?: true
    publishedAt?: true
    publishedBy?: true
    createdAt?: true
    createdBy?: true
    updatedAt?: true
    updatedBy?: true
    _all?: true
  }

  export type ShippingMethodAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ShippingMethod to aggregate.
     */
    where?: ShippingMethodWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingMethods to fetch.
     */
    orderBy?: ShippingMethodOrderByWithRelationInput | ShippingMethodOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ShippingMethodWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingMethods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingMethods.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ShippingMethods
    **/
    _count?: true | ShippingMethodCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ShippingMethodMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ShippingMethodMaxAggregateInputType
  }

  export type GetShippingMethodAggregateType<T extends ShippingMethodAggregateArgs> = {
        [P in keyof T & keyof AggregateShippingMethod]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShippingMethod[P]>
      : GetScalarType<T[P], AggregateShippingMethod[P]>
  }




  export type ShippingMethodGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShippingMethodWhereInput
    orderBy?: ShippingMethodOrderByWithAggregationInput | ShippingMethodOrderByWithAggregationInput[]
    by: ShippingMethodScalarFieldEnum[] | ShippingMethodScalarFieldEnum
    having?: ShippingMethodScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ShippingMethodCountAggregateInputType | true
    _min?: ShippingMethodMinAggregateInputType
    _max?: ShippingMethodMaxAggregateInputType
  }

  export type ShippingMethodGroupByOutputType = {
    id: string
    title: string
    providerName: string
    providerLogoId: string | null
    requireDateOfDelivery: boolean | null
    organizationId: string
    archivedAt: Date | null
    archivedBy: string | null
    publishedAt: Date | null
    publishedBy: string | null
    createdAt: Date
    createdBy: string | null
    updatedAt: Date
    updatedBy: string | null
    _count: ShippingMethodCountAggregateOutputType | null
    _min: ShippingMethodMinAggregateOutputType | null
    _max: ShippingMethodMaxAggregateOutputType | null
  }

  type GetShippingMethodGroupByPayload<T extends ShippingMethodGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ShippingMethodGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ShippingMethodGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ShippingMethodGroupByOutputType[P]>
            : GetScalarType<T[P], ShippingMethodGroupByOutputType[P]>
        }
      >
    >


  export type ShippingMethodSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    providerName?: boolean
    providerLogoId?: boolean
    requireDateOfDelivery?: boolean
    organizationId?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    publishedAt?: boolean
    publishedBy?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    providerLogo?: boolean | ShippingMethod$providerLogoArgs<ExtArgs>
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    shippingZones?: boolean | ShippingMethod$shippingZonesArgs<ExtArgs>
    orders?: boolean | ShippingMethod$ordersArgs<ExtArgs>
    _count?: boolean | ShippingMethodCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shippingMethod"]>

  export type ShippingMethodSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    providerName?: boolean
    providerLogoId?: boolean
    requireDateOfDelivery?: boolean
    organizationId?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    publishedAt?: boolean
    publishedBy?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    providerLogo?: boolean | ShippingMethod$providerLogoArgs<ExtArgs>
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shippingMethod"]>

  export type ShippingMethodSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    providerName?: boolean
    providerLogoId?: boolean
    requireDateOfDelivery?: boolean
    organizationId?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    publishedAt?: boolean
    publishedBy?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
    providerLogo?: boolean | ShippingMethod$providerLogoArgs<ExtArgs>
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shippingMethod"]>

  export type ShippingMethodSelectScalar = {
    id?: boolean
    title?: boolean
    providerName?: boolean
    providerLogoId?: boolean
    requireDateOfDelivery?: boolean
    organizationId?: boolean
    archivedAt?: boolean
    archivedBy?: boolean
    publishedAt?: boolean
    publishedBy?: boolean
    createdAt?: boolean
    createdBy?: boolean
    updatedAt?: boolean
    updatedBy?: boolean
  }

  export type ShippingMethodOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "providerName" | "providerLogoId" | "requireDateOfDelivery" | "organizationId" | "archivedAt" | "archivedBy" | "publishedAt" | "publishedBy" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy", ExtArgs["result"]["shippingMethod"]>
  export type ShippingMethodInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    providerLogo?: boolean | ShippingMethod$providerLogoArgs<ExtArgs>
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
    shippingZones?: boolean | ShippingMethod$shippingZonesArgs<ExtArgs>
    orders?: boolean | ShippingMethod$ordersArgs<ExtArgs>
    _count?: boolean | ShippingMethodCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ShippingMethodIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    providerLogo?: boolean | ShippingMethod$providerLogoArgs<ExtArgs>
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }
  export type ShippingMethodIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    providerLogo?: boolean | ShippingMethod$providerLogoArgs<ExtArgs>
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }

  export type $ShippingMethodPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ShippingMethod"
    objects: {
      providerLogo: Prisma.$FilePayload<ExtArgs> | null
      organization: Prisma.$OrganizationPayload<ExtArgs>
      shippingZones: Prisma.$ShippingZonePayload<ExtArgs>[]
      orders: Prisma.$OrderPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      providerName: string
      providerLogoId: string | null
      requireDateOfDelivery: boolean | null
      organizationId: string
      archivedAt: Date | null
      archivedBy: string | null
      publishedAt: Date | null
      publishedBy: string | null
      createdAt: Date
      createdBy: string | null
      updatedAt: Date
      updatedBy: string | null
    }, ExtArgs["result"]["shippingMethod"]>
    composites: {}
  }

  type ShippingMethodGetPayload<S extends boolean | null | undefined | ShippingMethodDefaultArgs> = $Result.GetResult<Prisma.$ShippingMethodPayload, S>

  type ShippingMethodCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ShippingMethodFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ShippingMethodCountAggregateInputType | true
    }

  export interface ShippingMethodDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ShippingMethod'], meta: { name: 'ShippingMethod' } }
    /**
     * Find zero or one ShippingMethod that matches the filter.
     * @param {ShippingMethodFindUniqueArgs} args - Arguments to find a ShippingMethod
     * @example
     * // Get one ShippingMethod
     * const shippingMethod = await prisma.shippingMethod.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ShippingMethodFindUniqueArgs>(args: SelectSubset<T, ShippingMethodFindUniqueArgs<ExtArgs>>): Prisma__ShippingMethodClient<$Result.GetResult<Prisma.$ShippingMethodPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ShippingMethod that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ShippingMethodFindUniqueOrThrowArgs} args - Arguments to find a ShippingMethod
     * @example
     * // Get one ShippingMethod
     * const shippingMethod = await prisma.shippingMethod.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ShippingMethodFindUniqueOrThrowArgs>(args: SelectSubset<T, ShippingMethodFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ShippingMethodClient<$Result.GetResult<Prisma.$ShippingMethodPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ShippingMethod that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingMethodFindFirstArgs} args - Arguments to find a ShippingMethod
     * @example
     * // Get one ShippingMethod
     * const shippingMethod = await prisma.shippingMethod.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ShippingMethodFindFirstArgs>(args?: SelectSubset<T, ShippingMethodFindFirstArgs<ExtArgs>>): Prisma__ShippingMethodClient<$Result.GetResult<Prisma.$ShippingMethodPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ShippingMethod that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingMethodFindFirstOrThrowArgs} args - Arguments to find a ShippingMethod
     * @example
     * // Get one ShippingMethod
     * const shippingMethod = await prisma.shippingMethod.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ShippingMethodFindFirstOrThrowArgs>(args?: SelectSubset<T, ShippingMethodFindFirstOrThrowArgs<ExtArgs>>): Prisma__ShippingMethodClient<$Result.GetResult<Prisma.$ShippingMethodPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ShippingMethods that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingMethodFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ShippingMethods
     * const shippingMethods = await prisma.shippingMethod.findMany()
     * 
     * // Get first 10 ShippingMethods
     * const shippingMethods = await prisma.shippingMethod.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shippingMethodWithIdOnly = await prisma.shippingMethod.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ShippingMethodFindManyArgs>(args?: SelectSubset<T, ShippingMethodFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShippingMethodPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ShippingMethod.
     * @param {ShippingMethodCreateArgs} args - Arguments to create a ShippingMethod.
     * @example
     * // Create one ShippingMethod
     * const ShippingMethod = await prisma.shippingMethod.create({
     *   data: {
     *     // ... data to create a ShippingMethod
     *   }
     * })
     * 
     */
    create<T extends ShippingMethodCreateArgs>(args: SelectSubset<T, ShippingMethodCreateArgs<ExtArgs>>): Prisma__ShippingMethodClient<$Result.GetResult<Prisma.$ShippingMethodPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ShippingMethods.
     * @param {ShippingMethodCreateManyArgs} args - Arguments to create many ShippingMethods.
     * @example
     * // Create many ShippingMethods
     * const shippingMethod = await prisma.shippingMethod.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ShippingMethodCreateManyArgs>(args?: SelectSubset<T, ShippingMethodCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ShippingMethods and returns the data saved in the database.
     * @param {ShippingMethodCreateManyAndReturnArgs} args - Arguments to create many ShippingMethods.
     * @example
     * // Create many ShippingMethods
     * const shippingMethod = await prisma.shippingMethod.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ShippingMethods and only return the `id`
     * const shippingMethodWithIdOnly = await prisma.shippingMethod.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ShippingMethodCreateManyAndReturnArgs>(args?: SelectSubset<T, ShippingMethodCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShippingMethodPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ShippingMethod.
     * @param {ShippingMethodDeleteArgs} args - Arguments to delete one ShippingMethod.
     * @example
     * // Delete one ShippingMethod
     * const ShippingMethod = await prisma.shippingMethod.delete({
     *   where: {
     *     // ... filter to delete one ShippingMethod
     *   }
     * })
     * 
     */
    delete<T extends ShippingMethodDeleteArgs>(args: SelectSubset<T, ShippingMethodDeleteArgs<ExtArgs>>): Prisma__ShippingMethodClient<$Result.GetResult<Prisma.$ShippingMethodPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ShippingMethod.
     * @param {ShippingMethodUpdateArgs} args - Arguments to update one ShippingMethod.
     * @example
     * // Update one ShippingMethod
     * const shippingMethod = await prisma.shippingMethod.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ShippingMethodUpdateArgs>(args: SelectSubset<T, ShippingMethodUpdateArgs<ExtArgs>>): Prisma__ShippingMethodClient<$Result.GetResult<Prisma.$ShippingMethodPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ShippingMethods.
     * @param {ShippingMethodDeleteManyArgs} args - Arguments to filter ShippingMethods to delete.
     * @example
     * // Delete a few ShippingMethods
     * const { count } = await prisma.shippingMethod.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ShippingMethodDeleteManyArgs>(args?: SelectSubset<T, ShippingMethodDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ShippingMethods.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingMethodUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ShippingMethods
     * const shippingMethod = await prisma.shippingMethod.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ShippingMethodUpdateManyArgs>(args: SelectSubset<T, ShippingMethodUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ShippingMethods and returns the data updated in the database.
     * @param {ShippingMethodUpdateManyAndReturnArgs} args - Arguments to update many ShippingMethods.
     * @example
     * // Update many ShippingMethods
     * const shippingMethod = await prisma.shippingMethod.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ShippingMethods and only return the `id`
     * const shippingMethodWithIdOnly = await prisma.shippingMethod.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ShippingMethodUpdateManyAndReturnArgs>(args: SelectSubset<T, ShippingMethodUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShippingMethodPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ShippingMethod.
     * @param {ShippingMethodUpsertArgs} args - Arguments to update or create a ShippingMethod.
     * @example
     * // Update or create a ShippingMethod
     * const shippingMethod = await prisma.shippingMethod.upsert({
     *   create: {
     *     // ... data to create a ShippingMethod
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ShippingMethod we want to update
     *   }
     * })
     */
    upsert<T extends ShippingMethodUpsertArgs>(args: SelectSubset<T, ShippingMethodUpsertArgs<ExtArgs>>): Prisma__ShippingMethodClient<$Result.GetResult<Prisma.$ShippingMethodPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ShippingMethods.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingMethodCountArgs} args - Arguments to filter ShippingMethods to count.
     * @example
     * // Count the number of ShippingMethods
     * const count = await prisma.shippingMethod.count({
     *   where: {
     *     // ... the filter for the ShippingMethods we want to count
     *   }
     * })
    **/
    count<T extends ShippingMethodCountArgs>(
      args?: Subset<T, ShippingMethodCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ShippingMethodCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ShippingMethod.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingMethodAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ShippingMethodAggregateArgs>(args: Subset<T, ShippingMethodAggregateArgs>): Prisma.PrismaPromise<GetShippingMethodAggregateType<T>>

    /**
     * Group by ShippingMethod.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingMethodGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ShippingMethodGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ShippingMethodGroupByArgs['orderBy'] }
        : { orderBy?: ShippingMethodGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ShippingMethodGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShippingMethodGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ShippingMethod model
   */
  readonly fields: ShippingMethodFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ShippingMethod.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ShippingMethodClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    providerLogo<T extends ShippingMethod$providerLogoArgs<ExtArgs> = {}>(args?: Subset<T, ShippingMethod$providerLogoArgs<ExtArgs>>): Prisma__FileClient<$Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    organization<T extends OrganizationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationDefaultArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    shippingZones<T extends ShippingMethod$shippingZonesArgs<ExtArgs> = {}>(args?: Subset<T, ShippingMethod$shippingZonesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShippingZonePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    orders<T extends ShippingMethod$ordersArgs<ExtArgs> = {}>(args?: Subset<T, ShippingMethod$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ShippingMethod model
   */
  interface ShippingMethodFieldRefs {
    readonly id: FieldRef<"ShippingMethod", 'String'>
    readonly title: FieldRef<"ShippingMethod", 'String'>
    readonly providerName: FieldRef<"ShippingMethod", 'String'>
    readonly providerLogoId: FieldRef<"ShippingMethod", 'String'>
    readonly requireDateOfDelivery: FieldRef<"ShippingMethod", 'Boolean'>
    readonly organizationId: FieldRef<"ShippingMethod", 'String'>
    readonly archivedAt: FieldRef<"ShippingMethod", 'DateTime'>
    readonly archivedBy: FieldRef<"ShippingMethod", 'String'>
    readonly publishedAt: FieldRef<"ShippingMethod", 'DateTime'>
    readonly publishedBy: FieldRef<"ShippingMethod", 'String'>
    readonly createdAt: FieldRef<"ShippingMethod", 'DateTime'>
    readonly createdBy: FieldRef<"ShippingMethod", 'String'>
    readonly updatedAt: FieldRef<"ShippingMethod", 'DateTime'>
    readonly updatedBy: FieldRef<"ShippingMethod", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ShippingMethod findUnique
   */
  export type ShippingMethodFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingMethod
     */
    select?: ShippingMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingMethod
     */
    omit?: ShippingMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingMethodInclude<ExtArgs> | null
    /**
     * Filter, which ShippingMethod to fetch.
     */
    where: ShippingMethodWhereUniqueInput
  }

  /**
   * ShippingMethod findUniqueOrThrow
   */
  export type ShippingMethodFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingMethod
     */
    select?: ShippingMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingMethod
     */
    omit?: ShippingMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingMethodInclude<ExtArgs> | null
    /**
     * Filter, which ShippingMethod to fetch.
     */
    where: ShippingMethodWhereUniqueInput
  }

  /**
   * ShippingMethod findFirst
   */
  export type ShippingMethodFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingMethod
     */
    select?: ShippingMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingMethod
     */
    omit?: ShippingMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingMethodInclude<ExtArgs> | null
    /**
     * Filter, which ShippingMethod to fetch.
     */
    where?: ShippingMethodWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingMethods to fetch.
     */
    orderBy?: ShippingMethodOrderByWithRelationInput | ShippingMethodOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShippingMethods.
     */
    cursor?: ShippingMethodWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingMethods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingMethods.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShippingMethods.
     */
    distinct?: ShippingMethodScalarFieldEnum | ShippingMethodScalarFieldEnum[]
  }

  /**
   * ShippingMethod findFirstOrThrow
   */
  export type ShippingMethodFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingMethod
     */
    select?: ShippingMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingMethod
     */
    omit?: ShippingMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingMethodInclude<ExtArgs> | null
    /**
     * Filter, which ShippingMethod to fetch.
     */
    where?: ShippingMethodWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingMethods to fetch.
     */
    orderBy?: ShippingMethodOrderByWithRelationInput | ShippingMethodOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShippingMethods.
     */
    cursor?: ShippingMethodWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingMethods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingMethods.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShippingMethods.
     */
    distinct?: ShippingMethodScalarFieldEnum | ShippingMethodScalarFieldEnum[]
  }

  /**
   * ShippingMethod findMany
   */
  export type ShippingMethodFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingMethod
     */
    select?: ShippingMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingMethod
     */
    omit?: ShippingMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingMethodInclude<ExtArgs> | null
    /**
     * Filter, which ShippingMethods to fetch.
     */
    where?: ShippingMethodWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingMethods to fetch.
     */
    orderBy?: ShippingMethodOrderByWithRelationInput | ShippingMethodOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ShippingMethods.
     */
    cursor?: ShippingMethodWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingMethods from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingMethods.
     */
    skip?: number
    distinct?: ShippingMethodScalarFieldEnum | ShippingMethodScalarFieldEnum[]
  }

  /**
   * ShippingMethod create
   */
  export type ShippingMethodCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingMethod
     */
    select?: ShippingMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingMethod
     */
    omit?: ShippingMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingMethodInclude<ExtArgs> | null
    /**
     * The data needed to create a ShippingMethod.
     */
    data: XOR<ShippingMethodCreateInput, ShippingMethodUncheckedCreateInput>
  }

  /**
   * ShippingMethod createMany
   */
  export type ShippingMethodCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ShippingMethods.
     */
    data: ShippingMethodCreateManyInput | ShippingMethodCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ShippingMethod createManyAndReturn
   */
  export type ShippingMethodCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingMethod
     */
    select?: ShippingMethodSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingMethod
     */
    omit?: ShippingMethodOmit<ExtArgs> | null
    /**
     * The data used to create many ShippingMethods.
     */
    data: ShippingMethodCreateManyInput | ShippingMethodCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingMethodIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ShippingMethod update
   */
  export type ShippingMethodUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingMethod
     */
    select?: ShippingMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingMethod
     */
    omit?: ShippingMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingMethodInclude<ExtArgs> | null
    /**
     * The data needed to update a ShippingMethod.
     */
    data: XOR<ShippingMethodUpdateInput, ShippingMethodUncheckedUpdateInput>
    /**
     * Choose, which ShippingMethod to update.
     */
    where: ShippingMethodWhereUniqueInput
  }

  /**
   * ShippingMethod updateMany
   */
  export type ShippingMethodUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ShippingMethods.
     */
    data: XOR<ShippingMethodUpdateManyMutationInput, ShippingMethodUncheckedUpdateManyInput>
    /**
     * Filter which ShippingMethods to update
     */
    where?: ShippingMethodWhereInput
    /**
     * Limit how many ShippingMethods to update.
     */
    limit?: number
  }

  /**
   * ShippingMethod updateManyAndReturn
   */
  export type ShippingMethodUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingMethod
     */
    select?: ShippingMethodSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingMethod
     */
    omit?: ShippingMethodOmit<ExtArgs> | null
    /**
     * The data used to update ShippingMethods.
     */
    data: XOR<ShippingMethodUpdateManyMutationInput, ShippingMethodUncheckedUpdateManyInput>
    /**
     * Filter which ShippingMethods to update
     */
    where?: ShippingMethodWhereInput
    /**
     * Limit how many ShippingMethods to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingMethodIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ShippingMethod upsert
   */
  export type ShippingMethodUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingMethod
     */
    select?: ShippingMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingMethod
     */
    omit?: ShippingMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingMethodInclude<ExtArgs> | null
    /**
     * The filter to search for the ShippingMethod to update in case it exists.
     */
    where: ShippingMethodWhereUniqueInput
    /**
     * In case the ShippingMethod found by the `where` argument doesn't exist, create a new ShippingMethod with this data.
     */
    create: XOR<ShippingMethodCreateInput, ShippingMethodUncheckedCreateInput>
    /**
     * In case the ShippingMethod was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ShippingMethodUpdateInput, ShippingMethodUncheckedUpdateInput>
  }

  /**
   * ShippingMethod delete
   */
  export type ShippingMethodDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingMethod
     */
    select?: ShippingMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingMethod
     */
    omit?: ShippingMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingMethodInclude<ExtArgs> | null
    /**
     * Filter which ShippingMethod to delete.
     */
    where: ShippingMethodWhereUniqueInput
  }

  /**
   * ShippingMethod deleteMany
   */
  export type ShippingMethodDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ShippingMethods to delete
     */
    where?: ShippingMethodWhereInput
    /**
     * Limit how many ShippingMethods to delete.
     */
    limit?: number
  }

  /**
   * ShippingMethod.providerLogo
   */
  export type ShippingMethod$providerLogoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the File
     */
    select?: FileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the File
     */
    omit?: FileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileInclude<ExtArgs> | null
    where?: FileWhereInput
  }

  /**
   * ShippingMethod.shippingZones
   */
  export type ShippingMethod$shippingZonesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingZone
     */
    select?: ShippingZoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingZone
     */
    omit?: ShippingZoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingZoneInclude<ExtArgs> | null
    where?: ShippingZoneWhereInput
    orderBy?: ShippingZoneOrderByWithRelationInput | ShippingZoneOrderByWithRelationInput[]
    cursor?: ShippingZoneWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShippingZoneScalarFieldEnum | ShippingZoneScalarFieldEnum[]
  }

  /**
   * ShippingMethod.orders
   */
  export type ShippingMethod$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * ShippingMethod without action
   */
  export type ShippingMethodDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingMethod
     */
    select?: ShippingMethodSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingMethod
     */
    omit?: ShippingMethodOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingMethodInclude<ExtArgs> | null
  }


  /**
   * Model ShippingZone
   */

  export type AggregateShippingZone = {
    _count: ShippingZoneCountAggregateOutputType | null
    _avg: ShippingZoneAvgAggregateOutputType | null
    _sum: ShippingZoneSumAggregateOutputType | null
    _min: ShippingZoneMinAggregateOutputType | null
    _max: ShippingZoneMaxAggregateOutputType | null
  }

  export type ShippingZoneAvgAggregateOutputType = {
    distanceUpto: number | null
    price: number | null
    minimumOrderAmount: number | null
  }

  export type ShippingZoneSumAggregateOutputType = {
    distanceUpto: number | null
    price: number | null
    minimumOrderAmount: number | null
  }

  export type ShippingZoneMinAggregateOutputType = {
    id: string | null
    title: string | null
    distanceUpto: number | null
    price: number | null
    minimumOrderAmount: number | null
    shippingMethodId: string | null
    eta: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ShippingZoneMaxAggregateOutputType = {
    id: string | null
    title: string | null
    distanceUpto: number | null
    price: number | null
    minimumOrderAmount: number | null
    shippingMethodId: string | null
    eta: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ShippingZoneCountAggregateOutputType = {
    id: number
    title: number
    distanceUpto: number
    price: number
    minimumOrderAmount: number
    shippingMethodId: number
    eta: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ShippingZoneAvgAggregateInputType = {
    distanceUpto?: true
    price?: true
    minimumOrderAmount?: true
  }

  export type ShippingZoneSumAggregateInputType = {
    distanceUpto?: true
    price?: true
    minimumOrderAmount?: true
  }

  export type ShippingZoneMinAggregateInputType = {
    id?: true
    title?: true
    distanceUpto?: true
    price?: true
    minimumOrderAmount?: true
    shippingMethodId?: true
    eta?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ShippingZoneMaxAggregateInputType = {
    id?: true
    title?: true
    distanceUpto?: true
    price?: true
    minimumOrderAmount?: true
    shippingMethodId?: true
    eta?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ShippingZoneCountAggregateInputType = {
    id?: true
    title?: true
    distanceUpto?: true
    price?: true
    minimumOrderAmount?: true
    shippingMethodId?: true
    eta?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ShippingZoneAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ShippingZone to aggregate.
     */
    where?: ShippingZoneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingZones to fetch.
     */
    orderBy?: ShippingZoneOrderByWithRelationInput | ShippingZoneOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ShippingZoneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingZones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingZones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ShippingZones
    **/
    _count?: true | ShippingZoneCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ShippingZoneAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ShippingZoneSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ShippingZoneMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ShippingZoneMaxAggregateInputType
  }

  export type GetShippingZoneAggregateType<T extends ShippingZoneAggregateArgs> = {
        [P in keyof T & keyof AggregateShippingZone]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShippingZone[P]>
      : GetScalarType<T[P], AggregateShippingZone[P]>
  }




  export type ShippingZoneGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShippingZoneWhereInput
    orderBy?: ShippingZoneOrderByWithAggregationInput | ShippingZoneOrderByWithAggregationInput[]
    by: ShippingZoneScalarFieldEnum[] | ShippingZoneScalarFieldEnum
    having?: ShippingZoneScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ShippingZoneCountAggregateInputType | true
    _avg?: ShippingZoneAvgAggregateInputType
    _sum?: ShippingZoneSumAggregateInputType
    _min?: ShippingZoneMinAggregateInputType
    _max?: ShippingZoneMaxAggregateInputType
  }

  export type ShippingZoneGroupByOutputType = {
    id: string
    title: string
    distanceUpto: number | null
    price: number
    minimumOrderAmount: number | null
    shippingMethodId: string
    eta: string
    createdAt: Date
    updatedAt: Date
    _count: ShippingZoneCountAggregateOutputType | null
    _avg: ShippingZoneAvgAggregateOutputType | null
    _sum: ShippingZoneSumAggregateOutputType | null
    _min: ShippingZoneMinAggregateOutputType | null
    _max: ShippingZoneMaxAggregateOutputType | null
  }

  type GetShippingZoneGroupByPayload<T extends ShippingZoneGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ShippingZoneGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ShippingZoneGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ShippingZoneGroupByOutputType[P]>
            : GetScalarType<T[P], ShippingZoneGroupByOutputType[P]>
        }
      >
    >


  export type ShippingZoneSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    distanceUpto?: boolean
    price?: boolean
    minimumOrderAmount?: boolean
    shippingMethodId?: boolean
    eta?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    shippingMethod?: boolean | ShippingMethodDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shippingZone"]>

  export type ShippingZoneSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    distanceUpto?: boolean
    price?: boolean
    minimumOrderAmount?: boolean
    shippingMethodId?: boolean
    eta?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    shippingMethod?: boolean | ShippingMethodDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shippingZone"]>

  export type ShippingZoneSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    distanceUpto?: boolean
    price?: boolean
    minimumOrderAmount?: boolean
    shippingMethodId?: boolean
    eta?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    shippingMethod?: boolean | ShippingMethodDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shippingZone"]>

  export type ShippingZoneSelectScalar = {
    id?: boolean
    title?: boolean
    distanceUpto?: boolean
    price?: boolean
    minimumOrderAmount?: boolean
    shippingMethodId?: boolean
    eta?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ShippingZoneOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "distanceUpto" | "price" | "minimumOrderAmount" | "shippingMethodId" | "eta" | "createdAt" | "updatedAt", ExtArgs["result"]["shippingZone"]>
  export type ShippingZoneInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    shippingMethod?: boolean | ShippingMethodDefaultArgs<ExtArgs>
  }
  export type ShippingZoneIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    shippingMethod?: boolean | ShippingMethodDefaultArgs<ExtArgs>
  }
  export type ShippingZoneIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    shippingMethod?: boolean | ShippingMethodDefaultArgs<ExtArgs>
  }

  export type $ShippingZonePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ShippingZone"
    objects: {
      shippingMethod: Prisma.$ShippingMethodPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      distanceUpto: number | null
      price: number
      minimumOrderAmount: number | null
      shippingMethodId: string
      eta: string
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["shippingZone"]>
    composites: {}
  }

  type ShippingZoneGetPayload<S extends boolean | null | undefined | ShippingZoneDefaultArgs> = $Result.GetResult<Prisma.$ShippingZonePayload, S>

  type ShippingZoneCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ShippingZoneFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ShippingZoneCountAggregateInputType | true
    }

  export interface ShippingZoneDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ShippingZone'], meta: { name: 'ShippingZone' } }
    /**
     * Find zero or one ShippingZone that matches the filter.
     * @param {ShippingZoneFindUniqueArgs} args - Arguments to find a ShippingZone
     * @example
     * // Get one ShippingZone
     * const shippingZone = await prisma.shippingZone.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ShippingZoneFindUniqueArgs>(args: SelectSubset<T, ShippingZoneFindUniqueArgs<ExtArgs>>): Prisma__ShippingZoneClient<$Result.GetResult<Prisma.$ShippingZonePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ShippingZone that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ShippingZoneFindUniqueOrThrowArgs} args - Arguments to find a ShippingZone
     * @example
     * // Get one ShippingZone
     * const shippingZone = await prisma.shippingZone.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ShippingZoneFindUniqueOrThrowArgs>(args: SelectSubset<T, ShippingZoneFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ShippingZoneClient<$Result.GetResult<Prisma.$ShippingZonePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ShippingZone that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingZoneFindFirstArgs} args - Arguments to find a ShippingZone
     * @example
     * // Get one ShippingZone
     * const shippingZone = await prisma.shippingZone.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ShippingZoneFindFirstArgs>(args?: SelectSubset<T, ShippingZoneFindFirstArgs<ExtArgs>>): Prisma__ShippingZoneClient<$Result.GetResult<Prisma.$ShippingZonePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ShippingZone that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingZoneFindFirstOrThrowArgs} args - Arguments to find a ShippingZone
     * @example
     * // Get one ShippingZone
     * const shippingZone = await prisma.shippingZone.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ShippingZoneFindFirstOrThrowArgs>(args?: SelectSubset<T, ShippingZoneFindFirstOrThrowArgs<ExtArgs>>): Prisma__ShippingZoneClient<$Result.GetResult<Prisma.$ShippingZonePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ShippingZones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingZoneFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ShippingZones
     * const shippingZones = await prisma.shippingZone.findMany()
     * 
     * // Get first 10 ShippingZones
     * const shippingZones = await prisma.shippingZone.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shippingZoneWithIdOnly = await prisma.shippingZone.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ShippingZoneFindManyArgs>(args?: SelectSubset<T, ShippingZoneFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShippingZonePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ShippingZone.
     * @param {ShippingZoneCreateArgs} args - Arguments to create a ShippingZone.
     * @example
     * // Create one ShippingZone
     * const ShippingZone = await prisma.shippingZone.create({
     *   data: {
     *     // ... data to create a ShippingZone
     *   }
     * })
     * 
     */
    create<T extends ShippingZoneCreateArgs>(args: SelectSubset<T, ShippingZoneCreateArgs<ExtArgs>>): Prisma__ShippingZoneClient<$Result.GetResult<Prisma.$ShippingZonePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ShippingZones.
     * @param {ShippingZoneCreateManyArgs} args - Arguments to create many ShippingZones.
     * @example
     * // Create many ShippingZones
     * const shippingZone = await prisma.shippingZone.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ShippingZoneCreateManyArgs>(args?: SelectSubset<T, ShippingZoneCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ShippingZones and returns the data saved in the database.
     * @param {ShippingZoneCreateManyAndReturnArgs} args - Arguments to create many ShippingZones.
     * @example
     * // Create many ShippingZones
     * const shippingZone = await prisma.shippingZone.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ShippingZones and only return the `id`
     * const shippingZoneWithIdOnly = await prisma.shippingZone.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ShippingZoneCreateManyAndReturnArgs>(args?: SelectSubset<T, ShippingZoneCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShippingZonePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ShippingZone.
     * @param {ShippingZoneDeleteArgs} args - Arguments to delete one ShippingZone.
     * @example
     * // Delete one ShippingZone
     * const ShippingZone = await prisma.shippingZone.delete({
     *   where: {
     *     // ... filter to delete one ShippingZone
     *   }
     * })
     * 
     */
    delete<T extends ShippingZoneDeleteArgs>(args: SelectSubset<T, ShippingZoneDeleteArgs<ExtArgs>>): Prisma__ShippingZoneClient<$Result.GetResult<Prisma.$ShippingZonePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ShippingZone.
     * @param {ShippingZoneUpdateArgs} args - Arguments to update one ShippingZone.
     * @example
     * // Update one ShippingZone
     * const shippingZone = await prisma.shippingZone.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ShippingZoneUpdateArgs>(args: SelectSubset<T, ShippingZoneUpdateArgs<ExtArgs>>): Prisma__ShippingZoneClient<$Result.GetResult<Prisma.$ShippingZonePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ShippingZones.
     * @param {ShippingZoneDeleteManyArgs} args - Arguments to filter ShippingZones to delete.
     * @example
     * // Delete a few ShippingZones
     * const { count } = await prisma.shippingZone.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ShippingZoneDeleteManyArgs>(args?: SelectSubset<T, ShippingZoneDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ShippingZones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingZoneUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ShippingZones
     * const shippingZone = await prisma.shippingZone.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ShippingZoneUpdateManyArgs>(args: SelectSubset<T, ShippingZoneUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ShippingZones and returns the data updated in the database.
     * @param {ShippingZoneUpdateManyAndReturnArgs} args - Arguments to update many ShippingZones.
     * @example
     * // Update many ShippingZones
     * const shippingZone = await prisma.shippingZone.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ShippingZones and only return the `id`
     * const shippingZoneWithIdOnly = await prisma.shippingZone.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ShippingZoneUpdateManyAndReturnArgs>(args: SelectSubset<T, ShippingZoneUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShippingZonePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ShippingZone.
     * @param {ShippingZoneUpsertArgs} args - Arguments to update or create a ShippingZone.
     * @example
     * // Update or create a ShippingZone
     * const shippingZone = await prisma.shippingZone.upsert({
     *   create: {
     *     // ... data to create a ShippingZone
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ShippingZone we want to update
     *   }
     * })
     */
    upsert<T extends ShippingZoneUpsertArgs>(args: SelectSubset<T, ShippingZoneUpsertArgs<ExtArgs>>): Prisma__ShippingZoneClient<$Result.GetResult<Prisma.$ShippingZonePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ShippingZones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingZoneCountArgs} args - Arguments to filter ShippingZones to count.
     * @example
     * // Count the number of ShippingZones
     * const count = await prisma.shippingZone.count({
     *   where: {
     *     // ... the filter for the ShippingZones we want to count
     *   }
     * })
    **/
    count<T extends ShippingZoneCountArgs>(
      args?: Subset<T, ShippingZoneCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ShippingZoneCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ShippingZone.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingZoneAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ShippingZoneAggregateArgs>(args: Subset<T, ShippingZoneAggregateArgs>): Prisma.PrismaPromise<GetShippingZoneAggregateType<T>>

    /**
     * Group by ShippingZone.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingZoneGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ShippingZoneGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ShippingZoneGroupByArgs['orderBy'] }
        : { orderBy?: ShippingZoneGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ShippingZoneGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShippingZoneGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ShippingZone model
   */
  readonly fields: ShippingZoneFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ShippingZone.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ShippingZoneClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    shippingMethod<T extends ShippingMethodDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ShippingMethodDefaultArgs<ExtArgs>>): Prisma__ShippingMethodClient<$Result.GetResult<Prisma.$ShippingMethodPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ShippingZone model
   */
  interface ShippingZoneFieldRefs {
    readonly id: FieldRef<"ShippingZone", 'String'>
    readonly title: FieldRef<"ShippingZone", 'String'>
    readonly distanceUpto: FieldRef<"ShippingZone", 'Float'>
    readonly price: FieldRef<"ShippingZone", 'Float'>
    readonly minimumOrderAmount: FieldRef<"ShippingZone", 'Float'>
    readonly shippingMethodId: FieldRef<"ShippingZone", 'String'>
    readonly eta: FieldRef<"ShippingZone", 'String'>
    readonly createdAt: FieldRef<"ShippingZone", 'DateTime'>
    readonly updatedAt: FieldRef<"ShippingZone", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ShippingZone findUnique
   */
  export type ShippingZoneFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingZone
     */
    select?: ShippingZoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingZone
     */
    omit?: ShippingZoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingZoneInclude<ExtArgs> | null
    /**
     * Filter, which ShippingZone to fetch.
     */
    where: ShippingZoneWhereUniqueInput
  }

  /**
   * ShippingZone findUniqueOrThrow
   */
  export type ShippingZoneFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingZone
     */
    select?: ShippingZoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingZone
     */
    omit?: ShippingZoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingZoneInclude<ExtArgs> | null
    /**
     * Filter, which ShippingZone to fetch.
     */
    where: ShippingZoneWhereUniqueInput
  }

  /**
   * ShippingZone findFirst
   */
  export type ShippingZoneFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingZone
     */
    select?: ShippingZoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingZone
     */
    omit?: ShippingZoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingZoneInclude<ExtArgs> | null
    /**
     * Filter, which ShippingZone to fetch.
     */
    where?: ShippingZoneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingZones to fetch.
     */
    orderBy?: ShippingZoneOrderByWithRelationInput | ShippingZoneOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShippingZones.
     */
    cursor?: ShippingZoneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingZones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingZones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShippingZones.
     */
    distinct?: ShippingZoneScalarFieldEnum | ShippingZoneScalarFieldEnum[]
  }

  /**
   * ShippingZone findFirstOrThrow
   */
  export type ShippingZoneFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingZone
     */
    select?: ShippingZoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingZone
     */
    omit?: ShippingZoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingZoneInclude<ExtArgs> | null
    /**
     * Filter, which ShippingZone to fetch.
     */
    where?: ShippingZoneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingZones to fetch.
     */
    orderBy?: ShippingZoneOrderByWithRelationInput | ShippingZoneOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShippingZones.
     */
    cursor?: ShippingZoneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingZones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingZones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShippingZones.
     */
    distinct?: ShippingZoneScalarFieldEnum | ShippingZoneScalarFieldEnum[]
  }

  /**
   * ShippingZone findMany
   */
  export type ShippingZoneFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingZone
     */
    select?: ShippingZoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingZone
     */
    omit?: ShippingZoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingZoneInclude<ExtArgs> | null
    /**
     * Filter, which ShippingZones to fetch.
     */
    where?: ShippingZoneWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingZones to fetch.
     */
    orderBy?: ShippingZoneOrderByWithRelationInput | ShippingZoneOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ShippingZones.
     */
    cursor?: ShippingZoneWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingZones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingZones.
     */
    skip?: number
    distinct?: ShippingZoneScalarFieldEnum | ShippingZoneScalarFieldEnum[]
  }

  /**
   * ShippingZone create
   */
  export type ShippingZoneCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingZone
     */
    select?: ShippingZoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingZone
     */
    omit?: ShippingZoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingZoneInclude<ExtArgs> | null
    /**
     * The data needed to create a ShippingZone.
     */
    data: XOR<ShippingZoneCreateInput, ShippingZoneUncheckedCreateInput>
  }

  /**
   * ShippingZone createMany
   */
  export type ShippingZoneCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ShippingZones.
     */
    data: ShippingZoneCreateManyInput | ShippingZoneCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ShippingZone createManyAndReturn
   */
  export type ShippingZoneCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingZone
     */
    select?: ShippingZoneSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingZone
     */
    omit?: ShippingZoneOmit<ExtArgs> | null
    /**
     * The data used to create many ShippingZones.
     */
    data: ShippingZoneCreateManyInput | ShippingZoneCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingZoneIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ShippingZone update
   */
  export type ShippingZoneUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingZone
     */
    select?: ShippingZoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingZone
     */
    omit?: ShippingZoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingZoneInclude<ExtArgs> | null
    /**
     * The data needed to update a ShippingZone.
     */
    data: XOR<ShippingZoneUpdateInput, ShippingZoneUncheckedUpdateInput>
    /**
     * Choose, which ShippingZone to update.
     */
    where: ShippingZoneWhereUniqueInput
  }

  /**
   * ShippingZone updateMany
   */
  export type ShippingZoneUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ShippingZones.
     */
    data: XOR<ShippingZoneUpdateManyMutationInput, ShippingZoneUncheckedUpdateManyInput>
    /**
     * Filter which ShippingZones to update
     */
    where?: ShippingZoneWhereInput
    /**
     * Limit how many ShippingZones to update.
     */
    limit?: number
  }

  /**
   * ShippingZone updateManyAndReturn
   */
  export type ShippingZoneUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingZone
     */
    select?: ShippingZoneSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingZone
     */
    omit?: ShippingZoneOmit<ExtArgs> | null
    /**
     * The data used to update ShippingZones.
     */
    data: XOR<ShippingZoneUpdateManyMutationInput, ShippingZoneUncheckedUpdateManyInput>
    /**
     * Filter which ShippingZones to update
     */
    where?: ShippingZoneWhereInput
    /**
     * Limit how many ShippingZones to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingZoneIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ShippingZone upsert
   */
  export type ShippingZoneUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingZone
     */
    select?: ShippingZoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingZone
     */
    omit?: ShippingZoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingZoneInclude<ExtArgs> | null
    /**
     * The filter to search for the ShippingZone to update in case it exists.
     */
    where: ShippingZoneWhereUniqueInput
    /**
     * In case the ShippingZone found by the `where` argument doesn't exist, create a new ShippingZone with this data.
     */
    create: XOR<ShippingZoneCreateInput, ShippingZoneUncheckedCreateInput>
    /**
     * In case the ShippingZone was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ShippingZoneUpdateInput, ShippingZoneUncheckedUpdateInput>
  }

  /**
   * ShippingZone delete
   */
  export type ShippingZoneDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingZone
     */
    select?: ShippingZoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingZone
     */
    omit?: ShippingZoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingZoneInclude<ExtArgs> | null
    /**
     * Filter which ShippingZone to delete.
     */
    where: ShippingZoneWhereUniqueInput
  }

  /**
   * ShippingZone deleteMany
   */
  export type ShippingZoneDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ShippingZones to delete
     */
    where?: ShippingZoneWhereInput
    /**
     * Limit how many ShippingZones to delete.
     */
    limit?: number
  }

  /**
   * ShippingZone without action
   */
  export type ShippingZoneDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingZone
     */
    select?: ShippingZoneSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ShippingZone
     */
    omit?: ShippingZoneOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShippingZoneInclude<ExtArgs> | null
  }


  /**
   * Model Reservation
   */

  export type AggregateReservation = {
    _count: ReservationCountAggregateOutputType | null
    _avg: ReservationAvgAggregateOutputType | null
    _sum: ReservationSumAggregateOutputType | null
    _min: ReservationMinAggregateOutputType | null
    _max: ReservationMaxAggregateOutputType | null
  }

  export type ReservationAvgAggregateOutputType = {
    guests: number | null
  }

  export type ReservationSumAggregateOutputType = {
    guests: number | null
  }

  export type ReservationMinAggregateOutputType = {
    id: string | null
    firstname: string | null
    lastname: string | null
    userId: string | null
    guests: number | null
    phone: string | null
    date: Date | null
    referenceId: string | null
    organizationId: string | null
    createdAt: Date | null
    acceptedAt: Date | null
    cancelledAt: Date | null
    updatedAt: Date | null
  }

  export type ReservationMaxAggregateOutputType = {
    id: string | null
    firstname: string | null
    lastname: string | null
    userId: string | null
    guests: number | null
    phone: string | null
    date: Date | null
    referenceId: string | null
    organizationId: string | null
    createdAt: Date | null
    acceptedAt: Date | null
    cancelledAt: Date | null
    updatedAt: Date | null
  }

  export type ReservationCountAggregateOutputType = {
    id: number
    firstname: number
    lastname: number
    userId: number
    guests: number
    phone: number
    date: number
    referenceId: number
    organizationId: number
    createdAt: number
    acceptedAt: number
    cancelledAt: number
    updatedAt: number
    _all: number
  }


  export type ReservationAvgAggregateInputType = {
    guests?: true
  }

  export type ReservationSumAggregateInputType = {
    guests?: true
  }

  export type ReservationMinAggregateInputType = {
    id?: true
    firstname?: true
    lastname?: true
    userId?: true
    guests?: true
    phone?: true
    date?: true
    referenceId?: true
    organizationId?: true
    createdAt?: true
    acceptedAt?: true
    cancelledAt?: true
    updatedAt?: true
  }

  export type ReservationMaxAggregateInputType = {
    id?: true
    firstname?: true
    lastname?: true
    userId?: true
    guests?: true
    phone?: true
    date?: true
    referenceId?: true
    organizationId?: true
    createdAt?: true
    acceptedAt?: true
    cancelledAt?: true
    updatedAt?: true
  }

  export type ReservationCountAggregateInputType = {
    id?: true
    firstname?: true
    lastname?: true
    userId?: true
    guests?: true
    phone?: true
    date?: true
    referenceId?: true
    organizationId?: true
    createdAt?: true
    acceptedAt?: true
    cancelledAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ReservationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reservation to aggregate.
     */
    where?: ReservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservations to fetch.
     */
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reservations
    **/
    _count?: true | ReservationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReservationAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReservationSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReservationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReservationMaxAggregateInputType
  }

  export type GetReservationAggregateType<T extends ReservationAggregateArgs> = {
        [P in keyof T & keyof AggregateReservation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReservation[P]>
      : GetScalarType<T[P], AggregateReservation[P]>
  }




  export type ReservationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReservationWhereInput
    orderBy?: ReservationOrderByWithAggregationInput | ReservationOrderByWithAggregationInput[]
    by: ReservationScalarFieldEnum[] | ReservationScalarFieldEnum
    having?: ReservationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReservationCountAggregateInputType | true
    _avg?: ReservationAvgAggregateInputType
    _sum?: ReservationSumAggregateInputType
    _min?: ReservationMinAggregateInputType
    _max?: ReservationMaxAggregateInputType
  }

  export type ReservationGroupByOutputType = {
    id: string
    firstname: string
    lastname: string
    userId: string | null
    guests: number
    phone: string
    date: Date
    referenceId: string
    organizationId: string
    createdAt: Date
    acceptedAt: Date | null
    cancelledAt: Date | null
    updatedAt: Date
    _count: ReservationCountAggregateOutputType | null
    _avg: ReservationAvgAggregateOutputType | null
    _sum: ReservationSumAggregateOutputType | null
    _min: ReservationMinAggregateOutputType | null
    _max: ReservationMaxAggregateOutputType | null
  }

  type GetReservationGroupByPayload<T extends ReservationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReservationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReservationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReservationGroupByOutputType[P]>
            : GetScalarType<T[P], ReservationGroupByOutputType[P]>
        }
      >
    >


  export type ReservationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstname?: boolean
    lastname?: boolean
    userId?: boolean
    guests?: boolean
    phone?: boolean
    date?: boolean
    referenceId?: boolean
    organizationId?: boolean
    createdAt?: boolean
    acceptedAt?: boolean
    cancelledAt?: boolean
    updatedAt?: boolean
    user?: boolean | Reservation$userArgs<ExtArgs>
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservation"]>

  export type ReservationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstname?: boolean
    lastname?: boolean
    userId?: boolean
    guests?: boolean
    phone?: boolean
    date?: boolean
    referenceId?: boolean
    organizationId?: boolean
    createdAt?: boolean
    acceptedAt?: boolean
    cancelledAt?: boolean
    updatedAt?: boolean
    user?: boolean | Reservation$userArgs<ExtArgs>
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservation"]>

  export type ReservationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstname?: boolean
    lastname?: boolean
    userId?: boolean
    guests?: boolean
    phone?: boolean
    date?: boolean
    referenceId?: boolean
    organizationId?: boolean
    createdAt?: boolean
    acceptedAt?: boolean
    cancelledAt?: boolean
    updatedAt?: boolean
    user?: boolean | Reservation$userArgs<ExtArgs>
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["reservation"]>

  export type ReservationSelectScalar = {
    id?: boolean
    firstname?: boolean
    lastname?: boolean
    userId?: boolean
    guests?: boolean
    phone?: boolean
    date?: boolean
    referenceId?: boolean
    organizationId?: boolean
    createdAt?: boolean
    acceptedAt?: boolean
    cancelledAt?: boolean
    updatedAt?: boolean
  }

  export type ReservationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "firstname" | "lastname" | "userId" | "guests" | "phone" | "date" | "referenceId" | "organizationId" | "createdAt" | "acceptedAt" | "cancelledAt" | "updatedAt", ExtArgs["result"]["reservation"]>
  export type ReservationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | Reservation$userArgs<ExtArgs>
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }
  export type ReservationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | Reservation$userArgs<ExtArgs>
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }
  export type ReservationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | Reservation$userArgs<ExtArgs>
    organization?: boolean | OrganizationDefaultArgs<ExtArgs>
  }

  export type $ReservationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Reservation"
    objects: {
      user: Prisma.$UserPayload<ExtArgs> | null
      organization: Prisma.$OrganizationPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      firstname: string
      lastname: string
      userId: string | null
      guests: number
      phone: string
      date: Date
      referenceId: string
      organizationId: string
      createdAt: Date
      acceptedAt: Date | null
      cancelledAt: Date | null
      updatedAt: Date
    }, ExtArgs["result"]["reservation"]>
    composites: {}
  }

  type ReservationGetPayload<S extends boolean | null | undefined | ReservationDefaultArgs> = $Result.GetResult<Prisma.$ReservationPayload, S>

  type ReservationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ReservationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ReservationCountAggregateInputType | true
    }

  export interface ReservationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Reservation'], meta: { name: 'Reservation' } }
    /**
     * Find zero or one Reservation that matches the filter.
     * @param {ReservationFindUniqueArgs} args - Arguments to find a Reservation
     * @example
     * // Get one Reservation
     * const reservation = await prisma.reservation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReservationFindUniqueArgs>(args: SelectSubset<T, ReservationFindUniqueArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Reservation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ReservationFindUniqueOrThrowArgs} args - Arguments to find a Reservation
     * @example
     * // Get one Reservation
     * const reservation = await prisma.reservation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReservationFindUniqueOrThrowArgs>(args: SelectSubset<T, ReservationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reservation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationFindFirstArgs} args - Arguments to find a Reservation
     * @example
     * // Get one Reservation
     * const reservation = await prisma.reservation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReservationFindFirstArgs>(args?: SelectSubset<T, ReservationFindFirstArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Reservation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationFindFirstOrThrowArgs} args - Arguments to find a Reservation
     * @example
     * // Get one Reservation
     * const reservation = await prisma.reservation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReservationFindFirstOrThrowArgs>(args?: SelectSubset<T, ReservationFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Reservations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reservations
     * const reservations = await prisma.reservation.findMany()
     * 
     * // Get first 10 Reservations
     * const reservations = await prisma.reservation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reservationWithIdOnly = await prisma.reservation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReservationFindManyArgs>(args?: SelectSubset<T, ReservationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Reservation.
     * @param {ReservationCreateArgs} args - Arguments to create a Reservation.
     * @example
     * // Create one Reservation
     * const Reservation = await prisma.reservation.create({
     *   data: {
     *     // ... data to create a Reservation
     *   }
     * })
     * 
     */
    create<T extends ReservationCreateArgs>(args: SelectSubset<T, ReservationCreateArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Reservations.
     * @param {ReservationCreateManyArgs} args - Arguments to create many Reservations.
     * @example
     * // Create many Reservations
     * const reservation = await prisma.reservation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReservationCreateManyArgs>(args?: SelectSubset<T, ReservationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Reservations and returns the data saved in the database.
     * @param {ReservationCreateManyAndReturnArgs} args - Arguments to create many Reservations.
     * @example
     * // Create many Reservations
     * const reservation = await prisma.reservation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Reservations and only return the `id`
     * const reservationWithIdOnly = await prisma.reservation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ReservationCreateManyAndReturnArgs>(args?: SelectSubset<T, ReservationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Reservation.
     * @param {ReservationDeleteArgs} args - Arguments to delete one Reservation.
     * @example
     * // Delete one Reservation
     * const Reservation = await prisma.reservation.delete({
     *   where: {
     *     // ... filter to delete one Reservation
     *   }
     * })
     * 
     */
    delete<T extends ReservationDeleteArgs>(args: SelectSubset<T, ReservationDeleteArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Reservation.
     * @param {ReservationUpdateArgs} args - Arguments to update one Reservation.
     * @example
     * // Update one Reservation
     * const reservation = await prisma.reservation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReservationUpdateArgs>(args: SelectSubset<T, ReservationUpdateArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Reservations.
     * @param {ReservationDeleteManyArgs} args - Arguments to filter Reservations to delete.
     * @example
     * // Delete a few Reservations
     * const { count } = await prisma.reservation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReservationDeleteManyArgs>(args?: SelectSubset<T, ReservationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reservations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reservations
     * const reservation = await prisma.reservation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReservationUpdateManyArgs>(args: SelectSubset<T, ReservationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reservations and returns the data updated in the database.
     * @param {ReservationUpdateManyAndReturnArgs} args - Arguments to update many Reservations.
     * @example
     * // Update many Reservations
     * const reservation = await prisma.reservation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Reservations and only return the `id`
     * const reservationWithIdOnly = await prisma.reservation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ReservationUpdateManyAndReturnArgs>(args: SelectSubset<T, ReservationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Reservation.
     * @param {ReservationUpsertArgs} args - Arguments to update or create a Reservation.
     * @example
     * // Update or create a Reservation
     * const reservation = await prisma.reservation.upsert({
     *   create: {
     *     // ... data to create a Reservation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Reservation we want to update
     *   }
     * })
     */
    upsert<T extends ReservationUpsertArgs>(args: SelectSubset<T, ReservationUpsertArgs<ExtArgs>>): Prisma__ReservationClient<$Result.GetResult<Prisma.$ReservationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Reservations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationCountArgs} args - Arguments to filter Reservations to count.
     * @example
     * // Count the number of Reservations
     * const count = await prisma.reservation.count({
     *   where: {
     *     // ... the filter for the Reservations we want to count
     *   }
     * })
    **/
    count<T extends ReservationCountArgs>(
      args?: Subset<T, ReservationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReservationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Reservation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReservationAggregateArgs>(args: Subset<T, ReservationAggregateArgs>): Prisma.PrismaPromise<GetReservationAggregateType<T>>

    /**
     * Group by Reservation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReservationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReservationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReservationGroupByArgs['orderBy'] }
        : { orderBy?: ReservationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReservationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReservationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Reservation model
   */
  readonly fields: ReservationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Reservation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReservationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends Reservation$userArgs<ExtArgs> = {}>(args?: Subset<T, Reservation$userArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    organization<T extends OrganizationDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrganizationDefaultArgs<ExtArgs>>): Prisma__OrganizationClient<$Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Reservation model
   */
  interface ReservationFieldRefs {
    readonly id: FieldRef<"Reservation", 'String'>
    readonly firstname: FieldRef<"Reservation", 'String'>
    readonly lastname: FieldRef<"Reservation", 'String'>
    readonly userId: FieldRef<"Reservation", 'String'>
    readonly guests: FieldRef<"Reservation", 'Int'>
    readonly phone: FieldRef<"Reservation", 'String'>
    readonly date: FieldRef<"Reservation", 'DateTime'>
    readonly referenceId: FieldRef<"Reservation", 'String'>
    readonly organizationId: FieldRef<"Reservation", 'String'>
    readonly createdAt: FieldRef<"Reservation", 'DateTime'>
    readonly acceptedAt: FieldRef<"Reservation", 'DateTime'>
    readonly cancelledAt: FieldRef<"Reservation", 'DateTime'>
    readonly updatedAt: FieldRef<"Reservation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Reservation findUnique
   */
  export type ReservationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * Filter, which Reservation to fetch.
     */
    where: ReservationWhereUniqueInput
  }

  /**
   * Reservation findUniqueOrThrow
   */
  export type ReservationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * Filter, which Reservation to fetch.
     */
    where: ReservationWhereUniqueInput
  }

  /**
   * Reservation findFirst
   */
  export type ReservationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * Filter, which Reservation to fetch.
     */
    where?: ReservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservations to fetch.
     */
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reservations.
     */
    cursor?: ReservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reservations.
     */
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * Reservation findFirstOrThrow
   */
  export type ReservationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * Filter, which Reservation to fetch.
     */
    where?: ReservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservations to fetch.
     */
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reservations.
     */
    cursor?: ReservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reservations.
     */
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * Reservation findMany
   */
  export type ReservationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * Filter, which Reservations to fetch.
     */
    where?: ReservationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reservations to fetch.
     */
    orderBy?: ReservationOrderByWithRelationInput | ReservationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reservations.
     */
    cursor?: ReservationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reservations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reservations.
     */
    skip?: number
    distinct?: ReservationScalarFieldEnum | ReservationScalarFieldEnum[]
  }

  /**
   * Reservation create
   */
  export type ReservationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * The data needed to create a Reservation.
     */
    data: XOR<ReservationCreateInput, ReservationUncheckedCreateInput>
  }

  /**
   * Reservation createMany
   */
  export type ReservationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reservations.
     */
    data: ReservationCreateManyInput | ReservationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Reservation createManyAndReturn
   */
  export type ReservationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * The data used to create many Reservations.
     */
    data: ReservationCreateManyInput | ReservationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Reservation update
   */
  export type ReservationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * The data needed to update a Reservation.
     */
    data: XOR<ReservationUpdateInput, ReservationUncheckedUpdateInput>
    /**
     * Choose, which Reservation to update.
     */
    where: ReservationWhereUniqueInput
  }

  /**
   * Reservation updateMany
   */
  export type ReservationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reservations.
     */
    data: XOR<ReservationUpdateManyMutationInput, ReservationUncheckedUpdateManyInput>
    /**
     * Filter which Reservations to update
     */
    where?: ReservationWhereInput
    /**
     * Limit how many Reservations to update.
     */
    limit?: number
  }

  /**
   * Reservation updateManyAndReturn
   */
  export type ReservationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * The data used to update Reservations.
     */
    data: XOR<ReservationUpdateManyMutationInput, ReservationUncheckedUpdateManyInput>
    /**
     * Filter which Reservations to update
     */
    where?: ReservationWhereInput
    /**
     * Limit how many Reservations to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Reservation upsert
   */
  export type ReservationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * The filter to search for the Reservation to update in case it exists.
     */
    where: ReservationWhereUniqueInput
    /**
     * In case the Reservation found by the `where` argument doesn't exist, create a new Reservation with this data.
     */
    create: XOR<ReservationCreateInput, ReservationUncheckedCreateInput>
    /**
     * In case the Reservation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReservationUpdateInput, ReservationUncheckedUpdateInput>
  }

  /**
   * Reservation delete
   */
  export type ReservationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
    /**
     * Filter which Reservation to delete.
     */
    where: ReservationWhereUniqueInput
  }

  /**
   * Reservation deleteMany
   */
  export type ReservationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reservations to delete
     */
    where?: ReservationWhereInput
    /**
     * Limit how many Reservations to delete.
     */
    limit?: number
  }

  /**
   * Reservation.user
   */
  export type Reservation$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * Reservation without action
   */
  export type ReservationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Reservation
     */
    select?: ReservationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Reservation
     */
    omit?: ReservationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReservationInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const UserScalarFieldEnum: {
    id: 'id',
    name: 'name',
    firstname: 'firstname',
    lastname: 'lastname',
    email: 'email',
    emailVerified: 'emailVerified',
    image: 'image',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const SessionScalarFieldEnum: {
    id: 'id',
    expiresAt: 'expiresAt',
    token: 'token',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    ipAddress: 'ipAddress',
    userAgent: 'userAgent',
    userId: 'userId',
    activeOrganizationId: 'activeOrganizationId'
  };

  export type SessionScalarFieldEnum = (typeof SessionScalarFieldEnum)[keyof typeof SessionScalarFieldEnum]


  export const AccountScalarFieldEnum: {
    id: 'id',
    accountId: 'accountId',
    providerId: 'providerId',
    userId: 'userId',
    accessToken: 'accessToken',
    refreshToken: 'refreshToken',
    idToken: 'idToken',
    accessTokenExpiresAt: 'accessTokenExpiresAt',
    refreshTokenExpiresAt: 'refreshTokenExpiresAt',
    scope: 'scope',
    password: 'password',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AccountScalarFieldEnum = (typeof AccountScalarFieldEnum)[keyof typeof AccountScalarFieldEnum]


  export const VerificationScalarFieldEnum: {
    id: 'id',
    identifier: 'identifier',
    value: 'value',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type VerificationScalarFieldEnum = (typeof VerificationScalarFieldEnum)[keyof typeof VerificationScalarFieldEnum]


  export const MemberScalarFieldEnum: {
    id: 'id',
    organizationId: 'organizationId',
    userId: 'userId',
    role: 'role',
    createdAt: 'createdAt'
  };

  export type MemberScalarFieldEnum = (typeof MemberScalarFieldEnum)[keyof typeof MemberScalarFieldEnum]


  export const InvitationScalarFieldEnum: {
    id: 'id',
    organizationId: 'organizationId',
    email: 'email',
    role: 'role',
    status: 'status',
    expiresAt: 'expiresAt',
    inviterId: 'inviterId'
  };

  export type InvitationScalarFieldEnum = (typeof InvitationScalarFieldEnum)[keyof typeof InvitationScalarFieldEnum]


  export const OrganizationScalarFieldEnum: {
    id: 'id',
    name: 'name',
    slug: 'slug',
    phone: 'phone',
    email: 'email',
    legalEntityId: 'legalEntityId',
    addressId: 'addressId',
    configurationId: 'configurationId',
    logo: 'logo',
    logoId: 'logoId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type OrganizationScalarFieldEnum = (typeof OrganizationScalarFieldEnum)[keyof typeof OrganizationScalarFieldEnum]


  export const OpeningTimesScalarFieldEnum: {
    id: 'id',
    monday: 'monday',
    tuesday: 'tuesday',
    wednesday: 'wednesday',
    thursday: 'thursday',
    friday: 'friday',
    saturday: 'saturday',
    sunday: 'sunday'
  };

  export type OpeningTimesScalarFieldEnum = (typeof OpeningTimesScalarFieldEnum)[keyof typeof OpeningTimesScalarFieldEnum]


  export const ClosingTimesScalarFieldEnum: {
    id: 'id',
    monday: 'monday',
    tuesday: 'tuesday',
    wednesday: 'wednesday',
    thursday: 'thursday',
    friday: 'friday',
    saturday: 'saturday',
    sunday: 'sunday'
  };

  export type ClosingTimesScalarFieldEnum = (typeof ClosingTimesScalarFieldEnum)[keyof typeof ClosingTimesScalarFieldEnum]


  export const OrganizationConfigurationScalarFieldEnum: {
    id: 'id',
    hostname: 'hostname',
    countriesShipping: 'countriesShipping',
    stripeAccountId: 'stripeAccountId',
    enableHostCheckout: 'enableHostCheckout',
    enableHostTracking: 'enableHostTracking',
    isAcceptingOrders: 'isAcceptingOrders',
    defaultCurrency: 'defaultCurrency',
    defaultLocale: 'defaultLocale',
    supportedLocales: 'supportedLocales',
    openingTimesId: 'openingTimesId',
    closingTimesId: 'closingTimesId',
    facebookProfile: 'facebookProfile',
    instagramProfile: 'instagramProfile',
    xProfile: 'xProfile',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type OrganizationConfigurationScalarFieldEnum = (typeof OrganizationConfigurationScalarFieldEnum)[keyof typeof OrganizationConfigurationScalarFieldEnum]


  export const AddressScalarFieldEnum: {
    id: 'id',
    firstname: 'firstname',
    lastname: 'lastname',
    phone: 'phone',
    addressLineOne: 'addressLineOne',
    doorNumber: 'doorNumber',
    addressLineTwo: 'addressLineTwo',
    zipCode: 'zipCode',
    placeId: 'placeId',
    deliveryInstructions: 'deliveryInstructions',
    city: 'city',
    country: 'country',
    latitude: 'latitude',
    longitude: 'longitude',
    isDefault: 'isDefault',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type AddressScalarFieldEnum = (typeof AddressScalarFieldEnum)[keyof typeof AddressScalarFieldEnum]


  export const LegalEntityScalarFieldEnum: {
    id: 'id',
    name: 'name',
    taxId: 'taxId',
    addressId: 'addressId',
    email: 'email',
    phone: 'phone',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type LegalEntityScalarFieldEnum = (typeof LegalEntityScalarFieldEnum)[keyof typeof LegalEntityScalarFieldEnum]


  export const FileScalarFieldEnum: {
    id: 'id',
    mimeType: 'mimeType',
    size: 'size',
    filename: 'filename',
    url: 'url',
    status: 'status',
    organizationId: 'organizationId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type FileScalarFieldEnum = (typeof FileScalarFieldEnum)[keyof typeof FileScalarFieldEnum]


  export const ManufacturerScalarFieldEnum: {
    id: 'id',
    name: 'name',
    logoId: 'logoId',
    organizationId: 'organizationId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy'
  };

  export type ManufacturerScalarFieldEnum = (typeof ManufacturerScalarFieldEnum)[keyof typeof ManufacturerScalarFieldEnum]


  export const ManufacturerTranslationScalarFieldEnum: {
    id: 'id',
    locale: 'locale',
    about: 'about',
    manufacturerId: 'manufacturerId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type ManufacturerTranslationScalarFieldEnum = (typeof ManufacturerTranslationScalarFieldEnum)[keyof typeof ManufacturerTranslationScalarFieldEnum]


  export const ProductCategoryScalarFieldEnum: {
    id: 'id',
    slug: 'slug',
    organizationId: 'organizationId',
    priority: 'priority',
    imageId: 'imageId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy',
    publishedAt: 'publishedAt',
    publishedBy: 'publishedBy'
  };

  export type ProductCategoryScalarFieldEnum = (typeof ProductCategoryScalarFieldEnum)[keyof typeof ProductCategoryScalarFieldEnum]


  export const ProductCategoryTranslationScalarFieldEnum: {
    id: 'id',
    locale: 'locale',
    title: 'title',
    description: 'description',
    productCategoryId: 'productCategoryId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type ProductCategoryTranslationScalarFieldEnum = (typeof ProductCategoryTranslationScalarFieldEnum)[keyof typeof ProductCategoryTranslationScalarFieldEnum]


  export const ProductScalarFieldEnum: {
    id: 'id',
    content: 'content',
    slug: 'slug',
    sku: 'sku',
    basePrice: 'basePrice',
    discountedBasePrice: 'discountedBasePrice',
    currency: 'currency',
    organizationId: 'organizationId',
    manufacturerId: 'manufacturerId',
    tags: 'tags',
    metadata: 'metadata',
    publishedAt: 'publishedAt',
    publishedBy: 'publishedBy',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy',
    latestSnapshotId: 'latestSnapshotId'
  };

  export type ProductScalarFieldEnum = (typeof ProductScalarFieldEnum)[keyof typeof ProductScalarFieldEnum]


  export const ProductSnapshotScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    data: 'data',
    createdAt: 'createdAt',
    createdBy: 'createdBy'
  };

  export type ProductSnapshotScalarFieldEnum = (typeof ProductSnapshotScalarFieldEnum)[keyof typeof ProductSnapshotScalarFieldEnum]


  export const ProductTranslationScalarFieldEnum: {
    id: 'id',
    locale: 'locale',
    title: 'title',
    description: 'description',
    productId: 'productId',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type ProductTranslationScalarFieldEnum = (typeof ProductTranslationScalarFieldEnum)[keyof typeof ProductTranslationScalarFieldEnum]


  export const ModifierGroupScalarFieldEnum: {
    id: 'id',
    selectMin: 'selectMin',
    selectMax: 'selectMax',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ModifierGroupScalarFieldEnum = (typeof ModifierGroupScalarFieldEnum)[keyof typeof ModifierGroupScalarFieldEnum]


  export const ModifierGroupTranslationScalarFieldEnum: {
    id: 'id',
    locale: 'locale',
    title: 'title',
    description: 'description',
    modifierGroupId: 'modifierGroupId'
  };

  export type ModifierGroupTranslationScalarFieldEnum = (typeof ModifierGroupTranslationScalarFieldEnum)[keyof typeof ModifierGroupTranslationScalarFieldEnum]


  export const ModifierScalarFieldEnum: {
    id: 'id',
    title: 'title',
    description: 'description',
    sku: 'sku',
    price: 'price',
    modifierGroupId: 'modifierGroupId'
  };

  export type ModifierScalarFieldEnum = (typeof ModifierScalarFieldEnum)[keyof typeof ModifierScalarFieldEnum]


  export const OrderScalarFieldEnum: {
    id: 'id',
    organizationId: 'organizationId',
    userId: 'userId',
    paymentId: 'paymentId',
    token: 'token',
    expiresAt: 'expiresAt',
    referenceId: 'referenceId',
    fulfilmentMethod: 'fulfilmentMethod',
    shippingMethodId: 'shippingMethodId',
    shippingAddressId: 'shippingAddressId',
    dateOfExecution: 'dateOfExecution',
    currency: 'currency',
    sourceIp: 'sourceIp',
    acceptedAt: 'acceptedAt',
    readyForDispatchAt: 'readyForDispatchAt',
    dispatchedAt: 'dispatchedAt',
    completedAt: 'completedAt',
    cancelledAt: 'cancelledAt',
    deletedAt: 'deletedAt',
    deletedBy: 'deletedBy',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type OrderScalarFieldEnum = (typeof OrderScalarFieldEnum)[keyof typeof OrderScalarFieldEnum]


  export const OrderItemScalarFieldEnum: {
    id: 'id',
    quantity: 'quantity',
    unitPrice: 'unitPrice',
    totalPrice: 'totalPrice',
    orderId: 'orderId',
    rawData: 'rawData',
    productSnapshotId: 'productSnapshotId',
    imageId: 'imageId'
  };

  export type OrderItemScalarFieldEnum = (typeof OrderItemScalarFieldEnum)[keyof typeof OrderItemScalarFieldEnum]


  export const OrderItemTranslationScalarFieldEnum: {
    id: 'id',
    locale: 'locale',
    title: 'title',
    subtitle: 'subtitle',
    orderItemId: 'orderItemId'
  };

  export type OrderItemTranslationScalarFieldEnum = (typeof OrderItemTranslationScalarFieldEnum)[keyof typeof OrderItemTranslationScalarFieldEnum]


  export const PaymentScalarFieldEnum: {
    id: 'id',
    method: 'method',
    provider: 'provider',
    shipping: 'shipping',
    subtotal: 'subtotal',
    total: 'total',
    discount: 'discount',
    currency: 'currency',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type PaymentScalarFieldEnum = (typeof PaymentScalarFieldEnum)[keyof typeof PaymentScalarFieldEnum]


  export const PaymentSessionScalarFieldEnum: {
    id: 'id',
    referenceId: 'referenceId',
    amount: 'amount',
    currency: 'currency',
    rawData: 'rawData',
    capturedAt: 'capturedAt',
    expiredAt: 'expiredAt',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    paymentId: 'paymentId'
  };

  export type PaymentSessionScalarFieldEnum = (typeof PaymentSessionScalarFieldEnum)[keyof typeof PaymentSessionScalarFieldEnum]


  export const CampaignScalarFieldEnum: {
    id: 'id',
    title: 'title',
    type: 'type',
    validFrom: 'validFrom',
    validTo: 'validTo',
    organizationId: 'organizationId',
    amount: 'amount',
    percentage: 'percentage',
    publishedAt: 'publishedAt',
    publishedBy: 'publishedBy',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CampaignScalarFieldEnum = (typeof CampaignScalarFieldEnum)[keyof typeof CampaignScalarFieldEnum]


  export const ShippingMethodScalarFieldEnum: {
    id: 'id',
    title: 'title',
    providerName: 'providerName',
    providerLogoId: 'providerLogoId',
    requireDateOfDelivery: 'requireDateOfDelivery',
    organizationId: 'organizationId',
    archivedAt: 'archivedAt',
    archivedBy: 'archivedBy',
    publishedAt: 'publishedAt',
    publishedBy: 'publishedBy',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    updatedAt: 'updatedAt',
    updatedBy: 'updatedBy'
  };

  export type ShippingMethodScalarFieldEnum = (typeof ShippingMethodScalarFieldEnum)[keyof typeof ShippingMethodScalarFieldEnum]


  export const ShippingZoneScalarFieldEnum: {
    id: 'id',
    title: 'title',
    distanceUpto: 'distanceUpto',
    price: 'price',
    minimumOrderAmount: 'minimumOrderAmount',
    shippingMethodId: 'shippingMethodId',
    eta: 'eta',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ShippingZoneScalarFieldEnum = (typeof ShippingZoneScalarFieldEnum)[keyof typeof ShippingZoneScalarFieldEnum]


  export const ReservationScalarFieldEnum: {
    id: 'id',
    firstname: 'firstname',
    lastname: 'lastname',
    userId: 'userId',
    guests: 'guests',
    phone: 'phone',
    date: 'date',
    referenceId: 'referenceId',
    organizationId: 'organizationId',
    createdAt: 'createdAt',
    acceptedAt: 'acceptedAt',
    cancelledAt: 'cancelledAt',
    updatedAt: 'updatedAt'
  };

  export type ReservationScalarFieldEnum = (typeof ReservationScalarFieldEnum)[keyof typeof ReservationScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Currency'
   */
  export type EnumCurrencyFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Currency'>
    


  /**
   * Reference to a field of type 'Currency[]'
   */
  export type ListEnumCurrencyFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Currency[]'>
    


  /**
   * Reference to a field of type 'Locale'
   */
  export type EnumLocaleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Locale'>
    


  /**
   * Reference to a field of type 'Locale[]'
   */
  export type ListEnumLocaleFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Locale[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'FileUploadStatus'
   */
  export type EnumFileUploadStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FileUploadStatus'>
    


  /**
   * Reference to a field of type 'FileUploadStatus[]'
   */
  export type ListEnumFileUploadStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FileUploadStatus[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'OrderFulfilmentMethod'
   */
  export type EnumOrderFulfilmentMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderFulfilmentMethod'>
    


  /**
   * Reference to a field of type 'OrderFulfilmentMethod[]'
   */
  export type ListEnumOrderFulfilmentMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderFulfilmentMethod[]'>
    


  /**
   * Reference to a field of type 'PaymentMethod'
   */
  export type EnumPaymentMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentMethod'>
    


  /**
   * Reference to a field of type 'PaymentMethod[]'
   */
  export type ListEnumPaymentMethodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentMethod[]'>
    


  /**
   * Reference to a field of type 'PaymentProvider'
   */
  export type EnumPaymentProviderFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentProvider'>
    


  /**
   * Reference to a field of type 'PaymentProvider[]'
   */
  export type ListEnumPaymentProviderFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentProvider[]'>
    


  /**
   * Reference to a field of type 'PaymentStatus'
   */
  export type EnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus'>
    


  /**
   * Reference to a field of type 'PaymentStatus[]'
   */
  export type ListEnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus[]'>
    


  /**
   * Reference to a field of type 'CampaignType'
   */
  export type EnumCampaignTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CampaignType'>
    


  /**
   * Reference to a field of type 'CampaignType[]'
   */
  export type ListEnumCampaignTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CampaignType[]'>
    
  /**
   * Deep Input Types
   */


  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    name?: StringFilter<"User"> | string
    firstname?: StringFilter<"User"> | string
    lastname?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    emailVerified?: BoolFilter<"User"> | boolean
    image?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    sessions?: SessionListRelationFilter
    accounts?: AccountListRelationFilter
    members?: MemberListRelationFilter
    invitations?: InvitationListRelationFilter
    shippingAddresses?: AddressListRelationFilter
    orders?: OrderListRelationFilter
    reservations?: ReservationListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    image?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    sessions?: SessionOrderByRelationAggregateInput
    accounts?: AccountOrderByRelationAggregateInput
    members?: MemberOrderByRelationAggregateInput
    invitations?: InvitationOrderByRelationAggregateInput
    shippingAddresses?: AddressOrderByRelationAggregateInput
    orders?: OrderOrderByRelationAggregateInput
    reservations?: ReservationOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    name?: StringFilter<"User"> | string
    firstname?: StringFilter<"User"> | string
    lastname?: StringFilter<"User"> | string
    emailVerified?: BoolFilter<"User"> | boolean
    image?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    sessions?: SessionListRelationFilter
    accounts?: AccountListRelationFilter
    members?: MemberListRelationFilter
    invitations?: InvitationListRelationFilter
    shippingAddresses?: AddressListRelationFilter
    orders?: OrderListRelationFilter
    reservations?: ReservationListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    image?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    name?: StringWithAggregatesFilter<"User"> | string
    firstname?: StringWithAggregatesFilter<"User"> | string
    lastname?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    emailVerified?: BoolWithAggregatesFilter<"User"> | boolean
    image?: StringNullableWithAggregatesFilter<"User"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type SessionWhereInput = {
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    id?: StringFilter<"Session"> | string
    expiresAt?: DateTimeFilter<"Session"> | Date | string
    token?: StringFilter<"Session"> | string
    createdAt?: DateTimeFilter<"Session"> | Date | string
    updatedAt?: DateTimeFilter<"Session"> | Date | string
    ipAddress?: StringNullableFilter<"Session"> | string | null
    userAgent?: StringNullableFilter<"Session"> | string | null
    userId?: StringFilter<"Session"> | string
    activeOrganizationId?: StringNullableFilter<"Session"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type SessionOrderByWithRelationInput = {
    id?: SortOrder
    expiresAt?: SortOrder
    token?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    userId?: SortOrder
    activeOrganizationId?: SortOrderInput | SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type SessionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    token?: string
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    expiresAt?: DateTimeFilter<"Session"> | Date | string
    createdAt?: DateTimeFilter<"Session"> | Date | string
    updatedAt?: DateTimeFilter<"Session"> | Date | string
    ipAddress?: StringNullableFilter<"Session"> | string | null
    userAgent?: StringNullableFilter<"Session"> | string | null
    userId?: StringFilter<"Session"> | string
    activeOrganizationId?: StringNullableFilter<"Session"> | string | null
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id" | "token">

  export type SessionOrderByWithAggregationInput = {
    id?: SortOrder
    expiresAt?: SortOrder
    token?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    ipAddress?: SortOrderInput | SortOrder
    userAgent?: SortOrderInput | SortOrder
    userId?: SortOrder
    activeOrganizationId?: SortOrderInput | SortOrder
    _count?: SessionCountOrderByAggregateInput
    _max?: SessionMaxOrderByAggregateInput
    _min?: SessionMinOrderByAggregateInput
  }

  export type SessionScalarWhereWithAggregatesInput = {
    AND?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    OR?: SessionScalarWhereWithAggregatesInput[]
    NOT?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Session"> | string
    expiresAt?: DateTimeWithAggregatesFilter<"Session"> | Date | string
    token?: StringWithAggregatesFilter<"Session"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Session"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Session"> | Date | string
    ipAddress?: StringNullableWithAggregatesFilter<"Session"> | string | null
    userAgent?: StringNullableWithAggregatesFilter<"Session"> | string | null
    userId?: StringWithAggregatesFilter<"Session"> | string
    activeOrganizationId?: StringNullableWithAggregatesFilter<"Session"> | string | null
  }

  export type AccountWhereInput = {
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    id?: StringFilter<"Account"> | string
    accountId?: StringFilter<"Account"> | string
    providerId?: StringFilter<"Account"> | string
    userId?: StringFilter<"Account"> | string
    accessToken?: StringNullableFilter<"Account"> | string | null
    refreshToken?: StringNullableFilter<"Account"> | string | null
    idToken?: StringNullableFilter<"Account"> | string | null
    accessTokenExpiresAt?: DateTimeNullableFilter<"Account"> | Date | string | null
    refreshTokenExpiresAt?: DateTimeNullableFilter<"Account"> | Date | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    password?: StringNullableFilter<"Account"> | string | null
    createdAt?: DateTimeFilter<"Account"> | Date | string
    updatedAt?: DateTimeFilter<"Account"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type AccountOrderByWithRelationInput = {
    id?: SortOrder
    accountId?: SortOrder
    providerId?: SortOrder
    userId?: SortOrder
    accessToken?: SortOrderInput | SortOrder
    refreshToken?: SortOrderInput | SortOrder
    idToken?: SortOrderInput | SortOrder
    accessTokenExpiresAt?: SortOrderInput | SortOrder
    refreshTokenExpiresAt?: SortOrderInput | SortOrder
    scope?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type AccountWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    accountId?: StringFilter<"Account"> | string
    providerId?: StringFilter<"Account"> | string
    userId?: StringFilter<"Account"> | string
    accessToken?: StringNullableFilter<"Account"> | string | null
    refreshToken?: StringNullableFilter<"Account"> | string | null
    idToken?: StringNullableFilter<"Account"> | string | null
    accessTokenExpiresAt?: DateTimeNullableFilter<"Account"> | Date | string | null
    refreshTokenExpiresAt?: DateTimeNullableFilter<"Account"> | Date | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    password?: StringNullableFilter<"Account"> | string | null
    createdAt?: DateTimeFilter<"Account"> | Date | string
    updatedAt?: DateTimeFilter<"Account"> | Date | string
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type AccountOrderByWithAggregationInput = {
    id?: SortOrder
    accountId?: SortOrder
    providerId?: SortOrder
    userId?: SortOrder
    accessToken?: SortOrderInput | SortOrder
    refreshToken?: SortOrderInput | SortOrder
    idToken?: SortOrderInput | SortOrder
    accessTokenExpiresAt?: SortOrderInput | SortOrder
    refreshTokenExpiresAt?: SortOrderInput | SortOrder
    scope?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AccountCountOrderByAggregateInput
    _max?: AccountMaxOrderByAggregateInput
    _min?: AccountMinOrderByAggregateInput
  }

  export type AccountScalarWhereWithAggregatesInput = {
    AND?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    OR?: AccountScalarWhereWithAggregatesInput[]
    NOT?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Account"> | string
    accountId?: StringWithAggregatesFilter<"Account"> | string
    providerId?: StringWithAggregatesFilter<"Account"> | string
    userId?: StringWithAggregatesFilter<"Account"> | string
    accessToken?: StringNullableWithAggregatesFilter<"Account"> | string | null
    refreshToken?: StringNullableWithAggregatesFilter<"Account"> | string | null
    idToken?: StringNullableWithAggregatesFilter<"Account"> | string | null
    accessTokenExpiresAt?: DateTimeNullableWithAggregatesFilter<"Account"> | Date | string | null
    refreshTokenExpiresAt?: DateTimeNullableWithAggregatesFilter<"Account"> | Date | string | null
    scope?: StringNullableWithAggregatesFilter<"Account"> | string | null
    password?: StringNullableWithAggregatesFilter<"Account"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Account"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Account"> | Date | string
  }

  export type VerificationWhereInput = {
    AND?: VerificationWhereInput | VerificationWhereInput[]
    OR?: VerificationWhereInput[]
    NOT?: VerificationWhereInput | VerificationWhereInput[]
    id?: StringFilter<"Verification"> | string
    identifier?: StringFilter<"Verification"> | string
    value?: StringFilter<"Verification"> | string
    expiresAt?: DateTimeFilter<"Verification"> | Date | string
    createdAt?: DateTimeNullableFilter<"Verification"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Verification"> | Date | string | null
  }

  export type VerificationOrderByWithRelationInput = {
    id?: SortOrder
    identifier?: SortOrder
    value?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
  }

  export type VerificationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: VerificationWhereInput | VerificationWhereInput[]
    OR?: VerificationWhereInput[]
    NOT?: VerificationWhereInput | VerificationWhereInput[]
    identifier?: StringFilter<"Verification"> | string
    value?: StringFilter<"Verification"> | string
    expiresAt?: DateTimeFilter<"Verification"> | Date | string
    createdAt?: DateTimeNullableFilter<"Verification"> | Date | string | null
    updatedAt?: DateTimeNullableFilter<"Verification"> | Date | string | null
  }, "id">

  export type VerificationOrderByWithAggregationInput = {
    id?: SortOrder
    identifier?: SortOrder
    value?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrderInput | SortOrder
    _count?: VerificationCountOrderByAggregateInput
    _max?: VerificationMaxOrderByAggregateInput
    _min?: VerificationMinOrderByAggregateInput
  }

  export type VerificationScalarWhereWithAggregatesInput = {
    AND?: VerificationScalarWhereWithAggregatesInput | VerificationScalarWhereWithAggregatesInput[]
    OR?: VerificationScalarWhereWithAggregatesInput[]
    NOT?: VerificationScalarWhereWithAggregatesInput | VerificationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Verification"> | string
    identifier?: StringWithAggregatesFilter<"Verification"> | string
    value?: StringWithAggregatesFilter<"Verification"> | string
    expiresAt?: DateTimeWithAggregatesFilter<"Verification"> | Date | string
    createdAt?: DateTimeNullableWithAggregatesFilter<"Verification"> | Date | string | null
    updatedAt?: DateTimeNullableWithAggregatesFilter<"Verification"> | Date | string | null
  }

  export type MemberWhereInput = {
    AND?: MemberWhereInput | MemberWhereInput[]
    OR?: MemberWhereInput[]
    NOT?: MemberWhereInput | MemberWhereInput[]
    id?: StringFilter<"Member"> | string
    organizationId?: StringFilter<"Member"> | string
    userId?: StringFilter<"Member"> | string
    role?: StringFilter<"Member"> | string
    createdAt?: DateTimeFilter<"Member"> | Date | string
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type MemberOrderByWithRelationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    organization?: OrganizationOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type MemberWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: MemberWhereInput | MemberWhereInput[]
    OR?: MemberWhereInput[]
    NOT?: MemberWhereInput | MemberWhereInput[]
    organizationId?: StringFilter<"Member"> | string
    userId?: StringFilter<"Member"> | string
    role?: StringFilter<"Member"> | string
    createdAt?: DateTimeFilter<"Member"> | Date | string
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type MemberOrderByWithAggregationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
    _count?: MemberCountOrderByAggregateInput
    _max?: MemberMaxOrderByAggregateInput
    _min?: MemberMinOrderByAggregateInput
  }

  export type MemberScalarWhereWithAggregatesInput = {
    AND?: MemberScalarWhereWithAggregatesInput | MemberScalarWhereWithAggregatesInput[]
    OR?: MemberScalarWhereWithAggregatesInput[]
    NOT?: MemberScalarWhereWithAggregatesInput | MemberScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Member"> | string
    organizationId?: StringWithAggregatesFilter<"Member"> | string
    userId?: StringWithAggregatesFilter<"Member"> | string
    role?: StringWithAggregatesFilter<"Member"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Member"> | Date | string
  }

  export type InvitationWhereInput = {
    AND?: InvitationWhereInput | InvitationWhereInput[]
    OR?: InvitationWhereInput[]
    NOT?: InvitationWhereInput | InvitationWhereInput[]
    id?: StringFilter<"Invitation"> | string
    organizationId?: StringFilter<"Invitation"> | string
    email?: StringFilter<"Invitation"> | string
    role?: StringNullableFilter<"Invitation"> | string | null
    status?: StringFilter<"Invitation"> | string
    expiresAt?: DateTimeFilter<"Invitation"> | Date | string
    inviterId?: StringFilter<"Invitation"> | string
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type InvitationOrderByWithRelationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    email?: SortOrder
    role?: SortOrderInput | SortOrder
    status?: SortOrder
    expiresAt?: SortOrder
    inviterId?: SortOrder
    organization?: OrganizationOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
  }

  export type InvitationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: InvitationWhereInput | InvitationWhereInput[]
    OR?: InvitationWhereInput[]
    NOT?: InvitationWhereInput | InvitationWhereInput[]
    organizationId?: StringFilter<"Invitation"> | string
    email?: StringFilter<"Invitation"> | string
    role?: StringNullableFilter<"Invitation"> | string | null
    status?: StringFilter<"Invitation"> | string
    expiresAt?: DateTimeFilter<"Invitation"> | Date | string
    inviterId?: StringFilter<"Invitation"> | string
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
    user?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type InvitationOrderByWithAggregationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    email?: SortOrder
    role?: SortOrderInput | SortOrder
    status?: SortOrder
    expiresAt?: SortOrder
    inviterId?: SortOrder
    _count?: InvitationCountOrderByAggregateInput
    _max?: InvitationMaxOrderByAggregateInput
    _min?: InvitationMinOrderByAggregateInput
  }

  export type InvitationScalarWhereWithAggregatesInput = {
    AND?: InvitationScalarWhereWithAggregatesInput | InvitationScalarWhereWithAggregatesInput[]
    OR?: InvitationScalarWhereWithAggregatesInput[]
    NOT?: InvitationScalarWhereWithAggregatesInput | InvitationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Invitation"> | string
    organizationId?: StringWithAggregatesFilter<"Invitation"> | string
    email?: StringWithAggregatesFilter<"Invitation"> | string
    role?: StringNullableWithAggregatesFilter<"Invitation"> | string | null
    status?: StringWithAggregatesFilter<"Invitation"> | string
    expiresAt?: DateTimeWithAggregatesFilter<"Invitation"> | Date | string
    inviterId?: StringWithAggregatesFilter<"Invitation"> | string
  }

  export type OrganizationWhereInput = {
    AND?: OrganizationWhereInput | OrganizationWhereInput[]
    OR?: OrganizationWhereInput[]
    NOT?: OrganizationWhereInput | OrganizationWhereInput[]
    id?: StringFilter<"Organization"> | string
    name?: StringFilter<"Organization"> | string
    slug?: StringNullableFilter<"Organization"> | string | null
    phone?: StringNullableFilter<"Organization"> | string | null
    email?: StringNullableFilter<"Organization"> | string | null
    legalEntityId?: StringNullableFilter<"Organization"> | string | null
    addressId?: StringFilter<"Organization"> | string
    configurationId?: StringFilter<"Organization"> | string
    logo?: StringNullableFilter<"Organization"> | string | null
    logoId?: StringNullableFilter<"Organization"> | string | null
    createdAt?: DateTimeFilter<"Organization"> | Date | string
    createdBy?: StringNullableFilter<"Organization"> | string | null
    updatedAt?: DateTimeFilter<"Organization"> | Date | string
    updatedBy?: StringNullableFilter<"Organization"> | string | null
    deletedAt?: DateTimeNullableFilter<"Organization"> | Date | string | null
    deletedBy?: StringNullableFilter<"Organization"> | string | null
    legalEntity?: XOR<LegalEntityNullableScalarRelationFilter, LegalEntityWhereInput> | null
    address?: XOR<AddressScalarRelationFilter, AddressWhereInput>
    configuration?: XOR<OrganizationConfigurationScalarRelationFilter, OrganizationConfigurationWhereInput>
    logoFile?: XOR<FileNullableScalarRelationFilter, FileWhereInput> | null
    files?: FileListRelationFilter
    members?: MemberListRelationFilter
    invitations?: InvitationListRelationFilter
    orders?: OrderListRelationFilter
    campaigns?: CampaignListRelationFilter
    shippingMethods?: ShippingMethodListRelationFilter
    manufacturers?: ManufacturerListRelationFilter
    productCategories?: ProductCategoryListRelationFilter
    products?: ProductListRelationFilter
    reservations?: ReservationListRelationFilter
  }

  export type OrganizationOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    legalEntityId?: SortOrderInput | SortOrder
    addressId?: SortOrder
    configurationId?: SortOrder
    logo?: SortOrderInput | SortOrder
    logoId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    legalEntity?: LegalEntityOrderByWithRelationInput
    address?: AddressOrderByWithRelationInput
    configuration?: OrganizationConfigurationOrderByWithRelationInput
    logoFile?: FileOrderByWithRelationInput
    files?: FileOrderByRelationAggregateInput
    members?: MemberOrderByRelationAggregateInput
    invitations?: InvitationOrderByRelationAggregateInput
    orders?: OrderOrderByRelationAggregateInput
    campaigns?: CampaignOrderByRelationAggregateInput
    shippingMethods?: ShippingMethodOrderByRelationAggregateInput
    manufacturers?: ManufacturerOrderByRelationAggregateInput
    productCategories?: ProductCategoryOrderByRelationAggregateInput
    products?: ProductOrderByRelationAggregateInput
    reservations?: ReservationOrderByRelationAggregateInput
  }

  export type OrganizationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    slug?: string
    logoId?: string
    AND?: OrganizationWhereInput | OrganizationWhereInput[]
    OR?: OrganizationWhereInput[]
    NOT?: OrganizationWhereInput | OrganizationWhereInput[]
    name?: StringFilter<"Organization"> | string
    phone?: StringNullableFilter<"Organization"> | string | null
    email?: StringNullableFilter<"Organization"> | string | null
    legalEntityId?: StringNullableFilter<"Organization"> | string | null
    addressId?: StringFilter<"Organization"> | string
    configurationId?: StringFilter<"Organization"> | string
    logo?: StringNullableFilter<"Organization"> | string | null
    createdAt?: DateTimeFilter<"Organization"> | Date | string
    createdBy?: StringNullableFilter<"Organization"> | string | null
    updatedAt?: DateTimeFilter<"Organization"> | Date | string
    updatedBy?: StringNullableFilter<"Organization"> | string | null
    deletedAt?: DateTimeNullableFilter<"Organization"> | Date | string | null
    deletedBy?: StringNullableFilter<"Organization"> | string | null
    legalEntity?: XOR<LegalEntityNullableScalarRelationFilter, LegalEntityWhereInput> | null
    address?: XOR<AddressScalarRelationFilter, AddressWhereInput>
    configuration?: XOR<OrganizationConfigurationScalarRelationFilter, OrganizationConfigurationWhereInput>
    logoFile?: XOR<FileNullableScalarRelationFilter, FileWhereInput> | null
    files?: FileListRelationFilter
    members?: MemberListRelationFilter
    invitations?: InvitationListRelationFilter
    orders?: OrderListRelationFilter
    campaigns?: CampaignListRelationFilter
    shippingMethods?: ShippingMethodListRelationFilter
    manufacturers?: ManufacturerListRelationFilter
    productCategories?: ProductCategoryListRelationFilter
    products?: ProductListRelationFilter
    reservations?: ReservationListRelationFilter
  }, "id" | "logoId" | "slug">

  export type OrganizationOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    legalEntityId?: SortOrderInput | SortOrder
    addressId?: SortOrder
    configurationId?: SortOrder
    logo?: SortOrderInput | SortOrder
    logoId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: OrganizationCountOrderByAggregateInput
    _max?: OrganizationMaxOrderByAggregateInput
    _min?: OrganizationMinOrderByAggregateInput
  }

  export type OrganizationScalarWhereWithAggregatesInput = {
    AND?: OrganizationScalarWhereWithAggregatesInput | OrganizationScalarWhereWithAggregatesInput[]
    OR?: OrganizationScalarWhereWithAggregatesInput[]
    NOT?: OrganizationScalarWhereWithAggregatesInput | OrganizationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Organization"> | string
    name?: StringWithAggregatesFilter<"Organization"> | string
    slug?: StringNullableWithAggregatesFilter<"Organization"> | string | null
    phone?: StringNullableWithAggregatesFilter<"Organization"> | string | null
    email?: StringNullableWithAggregatesFilter<"Organization"> | string | null
    legalEntityId?: StringNullableWithAggregatesFilter<"Organization"> | string | null
    addressId?: StringWithAggregatesFilter<"Organization"> | string
    configurationId?: StringWithAggregatesFilter<"Organization"> | string
    logo?: StringNullableWithAggregatesFilter<"Organization"> | string | null
    logoId?: StringNullableWithAggregatesFilter<"Organization"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Organization"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"Organization"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"Organization"> | Date | string
    updatedBy?: StringNullableWithAggregatesFilter<"Organization"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Organization"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"Organization"> | string | null
  }

  export type OpeningTimesWhereInput = {
    AND?: OpeningTimesWhereInput | OpeningTimesWhereInput[]
    OR?: OpeningTimesWhereInput[]
    NOT?: OpeningTimesWhereInput | OpeningTimesWhereInput[]
    id?: StringFilter<"OpeningTimes"> | string
    monday?: DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
    tuesday?: DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
    wednesday?: DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
    thursday?: DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
    friday?: DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
    saturday?: DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
    sunday?: DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
    organizationConfiguration?: XOR<OrganizationConfigurationNullableScalarRelationFilter, OrganizationConfigurationWhereInput> | null
  }

  export type OpeningTimesOrderByWithRelationInput = {
    id?: SortOrder
    monday?: SortOrderInput | SortOrder
    tuesday?: SortOrderInput | SortOrder
    wednesday?: SortOrderInput | SortOrder
    thursday?: SortOrderInput | SortOrder
    friday?: SortOrderInput | SortOrder
    saturday?: SortOrderInput | SortOrder
    sunday?: SortOrderInput | SortOrder
    organizationConfiguration?: OrganizationConfigurationOrderByWithRelationInput
  }

  export type OpeningTimesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: OpeningTimesWhereInput | OpeningTimesWhereInput[]
    OR?: OpeningTimesWhereInput[]
    NOT?: OpeningTimesWhereInput | OpeningTimesWhereInput[]
    monday?: DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
    tuesday?: DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
    wednesday?: DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
    thursday?: DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
    friday?: DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
    saturday?: DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
    sunday?: DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
    organizationConfiguration?: XOR<OrganizationConfigurationNullableScalarRelationFilter, OrganizationConfigurationWhereInput> | null
  }, "id">

  export type OpeningTimesOrderByWithAggregationInput = {
    id?: SortOrder
    monday?: SortOrderInput | SortOrder
    tuesday?: SortOrderInput | SortOrder
    wednesday?: SortOrderInput | SortOrder
    thursday?: SortOrderInput | SortOrder
    friday?: SortOrderInput | SortOrder
    saturday?: SortOrderInput | SortOrder
    sunday?: SortOrderInput | SortOrder
    _count?: OpeningTimesCountOrderByAggregateInput
    _max?: OpeningTimesMaxOrderByAggregateInput
    _min?: OpeningTimesMinOrderByAggregateInput
  }

  export type OpeningTimesScalarWhereWithAggregatesInput = {
    AND?: OpeningTimesScalarWhereWithAggregatesInput | OpeningTimesScalarWhereWithAggregatesInput[]
    OR?: OpeningTimesScalarWhereWithAggregatesInput[]
    NOT?: OpeningTimesScalarWhereWithAggregatesInput | OpeningTimesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"OpeningTimes"> | string
    monday?: DateTimeNullableWithAggregatesFilter<"OpeningTimes"> | Date | string | null
    tuesday?: DateTimeNullableWithAggregatesFilter<"OpeningTimes"> | Date | string | null
    wednesday?: DateTimeNullableWithAggregatesFilter<"OpeningTimes"> | Date | string | null
    thursday?: DateTimeNullableWithAggregatesFilter<"OpeningTimes"> | Date | string | null
    friday?: DateTimeNullableWithAggregatesFilter<"OpeningTimes"> | Date | string | null
    saturday?: DateTimeNullableWithAggregatesFilter<"OpeningTimes"> | Date | string | null
    sunday?: DateTimeNullableWithAggregatesFilter<"OpeningTimes"> | Date | string | null
  }

  export type ClosingTimesWhereInput = {
    AND?: ClosingTimesWhereInput | ClosingTimesWhereInput[]
    OR?: ClosingTimesWhereInput[]
    NOT?: ClosingTimesWhereInput | ClosingTimesWhereInput[]
    id?: StringFilter<"ClosingTimes"> | string
    monday?: DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
    tuesday?: DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
    wednesday?: DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
    thursday?: DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
    friday?: DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
    saturday?: DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
    sunday?: DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
    organizationConfiguration?: XOR<OrganizationConfigurationNullableScalarRelationFilter, OrganizationConfigurationWhereInput> | null
  }

  export type ClosingTimesOrderByWithRelationInput = {
    id?: SortOrder
    monday?: SortOrderInput | SortOrder
    tuesday?: SortOrderInput | SortOrder
    wednesday?: SortOrderInput | SortOrder
    thursday?: SortOrderInput | SortOrder
    friday?: SortOrderInput | SortOrder
    saturday?: SortOrderInput | SortOrder
    sunday?: SortOrderInput | SortOrder
    organizationConfiguration?: OrganizationConfigurationOrderByWithRelationInput
  }

  export type ClosingTimesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ClosingTimesWhereInput | ClosingTimesWhereInput[]
    OR?: ClosingTimesWhereInput[]
    NOT?: ClosingTimesWhereInput | ClosingTimesWhereInput[]
    monday?: DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
    tuesday?: DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
    wednesday?: DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
    thursday?: DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
    friday?: DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
    saturday?: DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
    sunday?: DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
    organizationConfiguration?: XOR<OrganizationConfigurationNullableScalarRelationFilter, OrganizationConfigurationWhereInput> | null
  }, "id">

  export type ClosingTimesOrderByWithAggregationInput = {
    id?: SortOrder
    monday?: SortOrderInput | SortOrder
    tuesday?: SortOrderInput | SortOrder
    wednesday?: SortOrderInput | SortOrder
    thursday?: SortOrderInput | SortOrder
    friday?: SortOrderInput | SortOrder
    saturday?: SortOrderInput | SortOrder
    sunday?: SortOrderInput | SortOrder
    _count?: ClosingTimesCountOrderByAggregateInput
    _max?: ClosingTimesMaxOrderByAggregateInput
    _min?: ClosingTimesMinOrderByAggregateInput
  }

  export type ClosingTimesScalarWhereWithAggregatesInput = {
    AND?: ClosingTimesScalarWhereWithAggregatesInput | ClosingTimesScalarWhereWithAggregatesInput[]
    OR?: ClosingTimesScalarWhereWithAggregatesInput[]
    NOT?: ClosingTimesScalarWhereWithAggregatesInput | ClosingTimesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ClosingTimes"> | string
    monday?: DateTimeNullableWithAggregatesFilter<"ClosingTimes"> | Date | string | null
    tuesday?: DateTimeNullableWithAggregatesFilter<"ClosingTimes"> | Date | string | null
    wednesday?: DateTimeNullableWithAggregatesFilter<"ClosingTimes"> | Date | string | null
    thursday?: DateTimeNullableWithAggregatesFilter<"ClosingTimes"> | Date | string | null
    friday?: DateTimeNullableWithAggregatesFilter<"ClosingTimes"> | Date | string | null
    saturday?: DateTimeNullableWithAggregatesFilter<"ClosingTimes"> | Date | string | null
    sunday?: DateTimeNullableWithAggregatesFilter<"ClosingTimes"> | Date | string | null
  }

  export type OrganizationConfigurationWhereInput = {
    AND?: OrganizationConfigurationWhereInput | OrganizationConfigurationWhereInput[]
    OR?: OrganizationConfigurationWhereInput[]
    NOT?: OrganizationConfigurationWhereInput | OrganizationConfigurationWhereInput[]
    id?: StringFilter<"OrganizationConfiguration"> | string
    hostname?: StringNullableFilter<"OrganizationConfiguration"> | string | null
    countriesShipping?: StringNullableListFilter<"OrganizationConfiguration">
    stripeAccountId?: StringNullableFilter<"OrganizationConfiguration"> | string | null
    enableHostCheckout?: BoolFilter<"OrganizationConfiguration"> | boolean
    enableHostTracking?: BoolFilter<"OrganizationConfiguration"> | boolean
    isAcceptingOrders?: BoolNullableFilter<"OrganizationConfiguration"> | boolean | null
    defaultCurrency?: EnumCurrencyFilter<"OrganizationConfiguration"> | $Enums.Currency
    defaultLocale?: EnumLocaleFilter<"OrganizationConfiguration"> | $Enums.Locale
    supportedLocales?: EnumLocaleNullableListFilter<"OrganizationConfiguration">
    openingTimesId?: StringNullableFilter<"OrganizationConfiguration"> | string | null
    closingTimesId?: StringNullableFilter<"OrganizationConfiguration"> | string | null
    facebookProfile?: StringNullableFilter<"OrganizationConfiguration"> | string | null
    instagramProfile?: StringNullableFilter<"OrganizationConfiguration"> | string | null
    xProfile?: StringNullableFilter<"OrganizationConfiguration"> | string | null
    createdAt?: DateTimeFilter<"OrganizationConfiguration"> | Date | string
    createdBy?: StringNullableFilter<"OrganizationConfiguration"> | string | null
    updatedAt?: DateTimeFilter<"OrganizationConfiguration"> | Date | string
    updatedBy?: StringNullableFilter<"OrganizationConfiguration"> | string | null
    openingTimes?: XOR<OpeningTimesNullableScalarRelationFilter, OpeningTimesWhereInput> | null
    closingTimes?: XOR<ClosingTimesNullableScalarRelationFilter, ClosingTimesWhereInput> | null
    organizations?: OrganizationListRelationFilter
  }

  export type OrganizationConfigurationOrderByWithRelationInput = {
    id?: SortOrder
    hostname?: SortOrderInput | SortOrder
    countriesShipping?: SortOrder
    stripeAccountId?: SortOrderInput | SortOrder
    enableHostCheckout?: SortOrder
    enableHostTracking?: SortOrder
    isAcceptingOrders?: SortOrderInput | SortOrder
    defaultCurrency?: SortOrder
    defaultLocale?: SortOrder
    supportedLocales?: SortOrder
    openingTimesId?: SortOrderInput | SortOrder
    closingTimesId?: SortOrderInput | SortOrder
    facebookProfile?: SortOrderInput | SortOrder
    instagramProfile?: SortOrderInput | SortOrder
    xProfile?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    openingTimes?: OpeningTimesOrderByWithRelationInput
    closingTimes?: ClosingTimesOrderByWithRelationInput
    organizations?: OrganizationOrderByRelationAggregateInput
  }

  export type OrganizationConfigurationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    openingTimesId?: string
    closingTimesId?: string
    AND?: OrganizationConfigurationWhereInput | OrganizationConfigurationWhereInput[]
    OR?: OrganizationConfigurationWhereInput[]
    NOT?: OrganizationConfigurationWhereInput | OrganizationConfigurationWhereInput[]
    hostname?: StringNullableFilter<"OrganizationConfiguration"> | string | null
    countriesShipping?: StringNullableListFilter<"OrganizationConfiguration">
    stripeAccountId?: StringNullableFilter<"OrganizationConfiguration"> | string | null
    enableHostCheckout?: BoolFilter<"OrganizationConfiguration"> | boolean
    enableHostTracking?: BoolFilter<"OrganizationConfiguration"> | boolean
    isAcceptingOrders?: BoolNullableFilter<"OrganizationConfiguration"> | boolean | null
    defaultCurrency?: EnumCurrencyFilter<"OrganizationConfiguration"> | $Enums.Currency
    defaultLocale?: EnumLocaleFilter<"OrganizationConfiguration"> | $Enums.Locale
    supportedLocales?: EnumLocaleNullableListFilter<"OrganizationConfiguration">
    facebookProfile?: StringNullableFilter<"OrganizationConfiguration"> | string | null
    instagramProfile?: StringNullableFilter<"OrganizationConfiguration"> | string | null
    xProfile?: StringNullableFilter<"OrganizationConfiguration"> | string | null
    createdAt?: DateTimeFilter<"OrganizationConfiguration"> | Date | string
    createdBy?: StringNullableFilter<"OrganizationConfiguration"> | string | null
    updatedAt?: DateTimeFilter<"OrganizationConfiguration"> | Date | string
    updatedBy?: StringNullableFilter<"OrganizationConfiguration"> | string | null
    openingTimes?: XOR<OpeningTimesNullableScalarRelationFilter, OpeningTimesWhereInput> | null
    closingTimes?: XOR<ClosingTimesNullableScalarRelationFilter, ClosingTimesWhereInput> | null
    organizations?: OrganizationListRelationFilter
  }, "id" | "openingTimesId" | "closingTimesId">

  export type OrganizationConfigurationOrderByWithAggregationInput = {
    id?: SortOrder
    hostname?: SortOrderInput | SortOrder
    countriesShipping?: SortOrder
    stripeAccountId?: SortOrderInput | SortOrder
    enableHostCheckout?: SortOrder
    enableHostTracking?: SortOrder
    isAcceptingOrders?: SortOrderInput | SortOrder
    defaultCurrency?: SortOrder
    defaultLocale?: SortOrder
    supportedLocales?: SortOrder
    openingTimesId?: SortOrderInput | SortOrder
    closingTimesId?: SortOrderInput | SortOrder
    facebookProfile?: SortOrderInput | SortOrder
    instagramProfile?: SortOrderInput | SortOrder
    xProfile?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: OrganizationConfigurationCountOrderByAggregateInput
    _max?: OrganizationConfigurationMaxOrderByAggregateInput
    _min?: OrganizationConfigurationMinOrderByAggregateInput
  }

  export type OrganizationConfigurationScalarWhereWithAggregatesInput = {
    AND?: OrganizationConfigurationScalarWhereWithAggregatesInput | OrganizationConfigurationScalarWhereWithAggregatesInput[]
    OR?: OrganizationConfigurationScalarWhereWithAggregatesInput[]
    NOT?: OrganizationConfigurationScalarWhereWithAggregatesInput | OrganizationConfigurationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"OrganizationConfiguration"> | string
    hostname?: StringNullableWithAggregatesFilter<"OrganizationConfiguration"> | string | null
    countriesShipping?: StringNullableListFilter<"OrganizationConfiguration">
    stripeAccountId?: StringNullableWithAggregatesFilter<"OrganizationConfiguration"> | string | null
    enableHostCheckout?: BoolWithAggregatesFilter<"OrganizationConfiguration"> | boolean
    enableHostTracking?: BoolWithAggregatesFilter<"OrganizationConfiguration"> | boolean
    isAcceptingOrders?: BoolNullableWithAggregatesFilter<"OrganizationConfiguration"> | boolean | null
    defaultCurrency?: EnumCurrencyWithAggregatesFilter<"OrganizationConfiguration"> | $Enums.Currency
    defaultLocale?: EnumLocaleWithAggregatesFilter<"OrganizationConfiguration"> | $Enums.Locale
    supportedLocales?: EnumLocaleNullableListFilter<"OrganizationConfiguration">
    openingTimesId?: StringNullableWithAggregatesFilter<"OrganizationConfiguration"> | string | null
    closingTimesId?: StringNullableWithAggregatesFilter<"OrganizationConfiguration"> | string | null
    facebookProfile?: StringNullableWithAggregatesFilter<"OrganizationConfiguration"> | string | null
    instagramProfile?: StringNullableWithAggregatesFilter<"OrganizationConfiguration"> | string | null
    xProfile?: StringNullableWithAggregatesFilter<"OrganizationConfiguration"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"OrganizationConfiguration"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"OrganizationConfiguration"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"OrganizationConfiguration"> | Date | string
    updatedBy?: StringNullableWithAggregatesFilter<"OrganizationConfiguration"> | string | null
  }

  export type AddressWhereInput = {
    AND?: AddressWhereInput | AddressWhereInput[]
    OR?: AddressWhereInput[]
    NOT?: AddressWhereInput | AddressWhereInput[]
    id?: StringFilter<"Address"> | string
    firstname?: StringNullableFilter<"Address"> | string | null
    lastname?: StringNullableFilter<"Address"> | string | null
    phone?: StringNullableFilter<"Address"> | string | null
    addressLineOne?: StringFilter<"Address"> | string
    doorNumber?: StringNullableFilter<"Address"> | string | null
    addressLineTwo?: StringNullableFilter<"Address"> | string | null
    zipCode?: StringNullableFilter<"Address"> | string | null
    placeId?: StringNullableFilter<"Address"> | string | null
    deliveryInstructions?: StringNullableFilter<"Address"> | string | null
    city?: StringFilter<"Address"> | string
    country?: StringNullableFilter<"Address"> | string | null
    latitude?: FloatNullableFilter<"Address"> | number | null
    longitude?: FloatNullableFilter<"Address"> | number | null
    isDefault?: BoolFilter<"Address"> | boolean
    createdAt?: DateTimeFilter<"Address"> | Date | string
    createdBy?: StringNullableFilter<"Address"> | string | null
    updatedAt?: DateTimeFilter<"Address"> | Date | string
    updatedBy?: StringNullableFilter<"Address"> | string | null
    deletedAt?: DateTimeNullableFilter<"Address"> | Date | string | null
    deletedBy?: StringNullableFilter<"Address"> | string | null
    LegalEntity?: LegalEntityListRelationFilter
    organizations?: OrganizationListRelationFilter
    users?: UserListRelationFilter
    orders?: OrderListRelationFilter
  }

  export type AddressOrderByWithRelationInput = {
    id?: SortOrder
    firstname?: SortOrderInput | SortOrder
    lastname?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    addressLineOne?: SortOrder
    doorNumber?: SortOrderInput | SortOrder
    addressLineTwo?: SortOrderInput | SortOrder
    zipCode?: SortOrderInput | SortOrder
    placeId?: SortOrderInput | SortOrder
    deliveryInstructions?: SortOrderInput | SortOrder
    city?: SortOrder
    country?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    isDefault?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    LegalEntity?: LegalEntityOrderByRelationAggregateInput
    organizations?: OrganizationOrderByRelationAggregateInput
    users?: UserOrderByRelationAggregateInput
    orders?: OrderOrderByRelationAggregateInput
  }

  export type AddressWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AddressWhereInput | AddressWhereInput[]
    OR?: AddressWhereInput[]
    NOT?: AddressWhereInput | AddressWhereInput[]
    firstname?: StringNullableFilter<"Address"> | string | null
    lastname?: StringNullableFilter<"Address"> | string | null
    phone?: StringNullableFilter<"Address"> | string | null
    addressLineOne?: StringFilter<"Address"> | string
    doorNumber?: StringNullableFilter<"Address"> | string | null
    addressLineTwo?: StringNullableFilter<"Address"> | string | null
    zipCode?: StringNullableFilter<"Address"> | string | null
    placeId?: StringNullableFilter<"Address"> | string | null
    deliveryInstructions?: StringNullableFilter<"Address"> | string | null
    city?: StringFilter<"Address"> | string
    country?: StringNullableFilter<"Address"> | string | null
    latitude?: FloatNullableFilter<"Address"> | number | null
    longitude?: FloatNullableFilter<"Address"> | number | null
    isDefault?: BoolFilter<"Address"> | boolean
    createdAt?: DateTimeFilter<"Address"> | Date | string
    createdBy?: StringNullableFilter<"Address"> | string | null
    updatedAt?: DateTimeFilter<"Address"> | Date | string
    updatedBy?: StringNullableFilter<"Address"> | string | null
    deletedAt?: DateTimeNullableFilter<"Address"> | Date | string | null
    deletedBy?: StringNullableFilter<"Address"> | string | null
    LegalEntity?: LegalEntityListRelationFilter
    organizations?: OrganizationListRelationFilter
    users?: UserListRelationFilter
    orders?: OrderListRelationFilter
  }, "id">

  export type AddressOrderByWithAggregationInput = {
    id?: SortOrder
    firstname?: SortOrderInput | SortOrder
    lastname?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    addressLineOne?: SortOrder
    doorNumber?: SortOrderInput | SortOrder
    addressLineTwo?: SortOrderInput | SortOrder
    zipCode?: SortOrderInput | SortOrder
    placeId?: SortOrderInput | SortOrder
    deliveryInstructions?: SortOrderInput | SortOrder
    city?: SortOrder
    country?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    isDefault?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: AddressCountOrderByAggregateInput
    _avg?: AddressAvgOrderByAggregateInput
    _max?: AddressMaxOrderByAggregateInput
    _min?: AddressMinOrderByAggregateInput
    _sum?: AddressSumOrderByAggregateInput
  }

  export type AddressScalarWhereWithAggregatesInput = {
    AND?: AddressScalarWhereWithAggregatesInput | AddressScalarWhereWithAggregatesInput[]
    OR?: AddressScalarWhereWithAggregatesInput[]
    NOT?: AddressScalarWhereWithAggregatesInput | AddressScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Address"> | string
    firstname?: StringNullableWithAggregatesFilter<"Address"> | string | null
    lastname?: StringNullableWithAggregatesFilter<"Address"> | string | null
    phone?: StringNullableWithAggregatesFilter<"Address"> | string | null
    addressLineOne?: StringWithAggregatesFilter<"Address"> | string
    doorNumber?: StringNullableWithAggregatesFilter<"Address"> | string | null
    addressLineTwo?: StringNullableWithAggregatesFilter<"Address"> | string | null
    zipCode?: StringNullableWithAggregatesFilter<"Address"> | string | null
    placeId?: StringNullableWithAggregatesFilter<"Address"> | string | null
    deliveryInstructions?: StringNullableWithAggregatesFilter<"Address"> | string | null
    city?: StringWithAggregatesFilter<"Address"> | string
    country?: StringNullableWithAggregatesFilter<"Address"> | string | null
    latitude?: FloatNullableWithAggregatesFilter<"Address"> | number | null
    longitude?: FloatNullableWithAggregatesFilter<"Address"> | number | null
    isDefault?: BoolWithAggregatesFilter<"Address"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Address"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"Address"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"Address"> | Date | string
    updatedBy?: StringNullableWithAggregatesFilter<"Address"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Address"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"Address"> | string | null
  }

  export type LegalEntityWhereInput = {
    AND?: LegalEntityWhereInput | LegalEntityWhereInput[]
    OR?: LegalEntityWhereInput[]
    NOT?: LegalEntityWhereInput | LegalEntityWhereInput[]
    id?: StringFilter<"LegalEntity"> | string
    name?: StringFilter<"LegalEntity"> | string
    taxId?: StringFilter<"LegalEntity"> | string
    addressId?: StringFilter<"LegalEntity"> | string
    email?: StringNullableFilter<"LegalEntity"> | string | null
    phone?: StringNullableFilter<"LegalEntity"> | string | null
    createdAt?: DateTimeFilter<"LegalEntity"> | Date | string
    createdBy?: StringNullableFilter<"LegalEntity"> | string | null
    updatedAt?: DateTimeFilter<"LegalEntity"> | Date | string
    updatedBy?: StringNullableFilter<"LegalEntity"> | string | null
    deletedAt?: DateTimeNullableFilter<"LegalEntity"> | Date | string | null
    deletedBy?: StringNullableFilter<"LegalEntity"> | string | null
    address?: XOR<AddressScalarRelationFilter, AddressWhereInput>
    organizations?: OrganizationListRelationFilter
  }

  export type LegalEntityOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    taxId?: SortOrder
    addressId?: SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    address?: AddressOrderByWithRelationInput
    organizations?: OrganizationOrderByRelationAggregateInput
  }

  export type LegalEntityWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: LegalEntityWhereInput | LegalEntityWhereInput[]
    OR?: LegalEntityWhereInput[]
    NOT?: LegalEntityWhereInput | LegalEntityWhereInput[]
    name?: StringFilter<"LegalEntity"> | string
    taxId?: StringFilter<"LegalEntity"> | string
    addressId?: StringFilter<"LegalEntity"> | string
    email?: StringNullableFilter<"LegalEntity"> | string | null
    phone?: StringNullableFilter<"LegalEntity"> | string | null
    createdAt?: DateTimeFilter<"LegalEntity"> | Date | string
    createdBy?: StringNullableFilter<"LegalEntity"> | string | null
    updatedAt?: DateTimeFilter<"LegalEntity"> | Date | string
    updatedBy?: StringNullableFilter<"LegalEntity"> | string | null
    deletedAt?: DateTimeNullableFilter<"LegalEntity"> | Date | string | null
    deletedBy?: StringNullableFilter<"LegalEntity"> | string | null
    address?: XOR<AddressScalarRelationFilter, AddressWhereInput>
    organizations?: OrganizationListRelationFilter
  }, "id">

  export type LegalEntityOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    taxId?: SortOrder
    addressId?: SortOrder
    email?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: LegalEntityCountOrderByAggregateInput
    _max?: LegalEntityMaxOrderByAggregateInput
    _min?: LegalEntityMinOrderByAggregateInput
  }

  export type LegalEntityScalarWhereWithAggregatesInput = {
    AND?: LegalEntityScalarWhereWithAggregatesInput | LegalEntityScalarWhereWithAggregatesInput[]
    OR?: LegalEntityScalarWhereWithAggregatesInput[]
    NOT?: LegalEntityScalarWhereWithAggregatesInput | LegalEntityScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"LegalEntity"> | string
    name?: StringWithAggregatesFilter<"LegalEntity"> | string
    taxId?: StringWithAggregatesFilter<"LegalEntity"> | string
    addressId?: StringWithAggregatesFilter<"LegalEntity"> | string
    email?: StringNullableWithAggregatesFilter<"LegalEntity"> | string | null
    phone?: StringNullableWithAggregatesFilter<"LegalEntity"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"LegalEntity"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"LegalEntity"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"LegalEntity"> | Date | string
    updatedBy?: StringNullableWithAggregatesFilter<"LegalEntity"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"LegalEntity"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"LegalEntity"> | string | null
  }

  export type FileWhereInput = {
    AND?: FileWhereInput | FileWhereInput[]
    OR?: FileWhereInput[]
    NOT?: FileWhereInput | FileWhereInput[]
    id?: StringFilter<"File"> | string
    mimeType?: StringNullableFilter<"File"> | string | null
    size?: IntNullableFilter<"File"> | number | null
    filename?: StringNullableFilter<"File"> | string | null
    url?: StringNullableFilter<"File"> | string | null
    status?: EnumFileUploadStatusFilter<"File"> | $Enums.FileUploadStatus
    organizationId?: StringNullableFilter<"File"> | string | null
    createdAt?: DateTimeFilter<"File"> | Date | string
    createdBy?: StringNullableFilter<"File"> | string | null
    updatedAt?: DateTimeFilter<"File"> | Date | string
    updatedBy?: StringNullableFilter<"File"> | string | null
    deletedAt?: DateTimeNullableFilter<"File"> | Date | string | null
    deletedBy?: StringNullableFilter<"File"> | string | null
    organization?: XOR<OrganizationNullableScalarRelationFilter, OrganizationWhereInput> | null
    manufacturerLogo?: XOR<ManufacturerNullableScalarRelationFilter, ManufacturerWhereInput> | null
    productCategoryImage?: XOR<ProductCategoryNullableScalarRelationFilter, ProductCategoryWhereInput> | null
    productImages?: ProductListRelationFilter
    modifierImages?: ModifierListRelationFilter
    shippingMethodLogoFor?: XOR<ShippingMethodNullableScalarRelationFilter, ShippingMethodWhereInput> | null
    organizationLogo?: XOR<OrganizationNullableScalarRelationFilter, OrganizationWhereInput> | null
    orderItemImages?: OrderItemListRelationFilter
  }

  export type FileOrderByWithRelationInput = {
    id?: SortOrder
    mimeType?: SortOrderInput | SortOrder
    size?: SortOrderInput | SortOrder
    filename?: SortOrderInput | SortOrder
    url?: SortOrderInput | SortOrder
    status?: SortOrder
    organizationId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    organization?: OrganizationOrderByWithRelationInput
    manufacturerLogo?: ManufacturerOrderByWithRelationInput
    productCategoryImage?: ProductCategoryOrderByWithRelationInput
    productImages?: ProductOrderByRelationAggregateInput
    modifierImages?: ModifierOrderByRelationAggregateInput
    shippingMethodLogoFor?: ShippingMethodOrderByWithRelationInput
    organizationLogo?: OrganizationOrderByWithRelationInput
    orderItemImages?: OrderItemOrderByRelationAggregateInput
  }

  export type FileWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: FileWhereInput | FileWhereInput[]
    OR?: FileWhereInput[]
    NOT?: FileWhereInput | FileWhereInput[]
    mimeType?: StringNullableFilter<"File"> | string | null
    size?: IntNullableFilter<"File"> | number | null
    filename?: StringNullableFilter<"File"> | string | null
    url?: StringNullableFilter<"File"> | string | null
    status?: EnumFileUploadStatusFilter<"File"> | $Enums.FileUploadStatus
    organizationId?: StringNullableFilter<"File"> | string | null
    createdAt?: DateTimeFilter<"File"> | Date | string
    createdBy?: StringNullableFilter<"File"> | string | null
    updatedAt?: DateTimeFilter<"File"> | Date | string
    updatedBy?: StringNullableFilter<"File"> | string | null
    deletedAt?: DateTimeNullableFilter<"File"> | Date | string | null
    deletedBy?: StringNullableFilter<"File"> | string | null
    organization?: XOR<OrganizationNullableScalarRelationFilter, OrganizationWhereInput> | null
    manufacturerLogo?: XOR<ManufacturerNullableScalarRelationFilter, ManufacturerWhereInput> | null
    productCategoryImage?: XOR<ProductCategoryNullableScalarRelationFilter, ProductCategoryWhereInput> | null
    productImages?: ProductListRelationFilter
    modifierImages?: ModifierListRelationFilter
    shippingMethodLogoFor?: XOR<ShippingMethodNullableScalarRelationFilter, ShippingMethodWhereInput> | null
    organizationLogo?: XOR<OrganizationNullableScalarRelationFilter, OrganizationWhereInput> | null
    orderItemImages?: OrderItemListRelationFilter
  }, "id">

  export type FileOrderByWithAggregationInput = {
    id?: SortOrder
    mimeType?: SortOrderInput | SortOrder
    size?: SortOrderInput | SortOrder
    filename?: SortOrderInput | SortOrder
    url?: SortOrderInput | SortOrder
    status?: SortOrder
    organizationId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: FileCountOrderByAggregateInput
    _avg?: FileAvgOrderByAggregateInput
    _max?: FileMaxOrderByAggregateInput
    _min?: FileMinOrderByAggregateInput
    _sum?: FileSumOrderByAggregateInput
  }

  export type FileScalarWhereWithAggregatesInput = {
    AND?: FileScalarWhereWithAggregatesInput | FileScalarWhereWithAggregatesInput[]
    OR?: FileScalarWhereWithAggregatesInput[]
    NOT?: FileScalarWhereWithAggregatesInput | FileScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"File"> | string
    mimeType?: StringNullableWithAggregatesFilter<"File"> | string | null
    size?: IntNullableWithAggregatesFilter<"File"> | number | null
    filename?: StringNullableWithAggregatesFilter<"File"> | string | null
    url?: StringNullableWithAggregatesFilter<"File"> | string | null
    status?: EnumFileUploadStatusWithAggregatesFilter<"File"> | $Enums.FileUploadStatus
    organizationId?: StringNullableWithAggregatesFilter<"File"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"File"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"File"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"File"> | Date | string
    updatedBy?: StringNullableWithAggregatesFilter<"File"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"File"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"File"> | string | null
  }

  export type ManufacturerWhereInput = {
    AND?: ManufacturerWhereInput | ManufacturerWhereInput[]
    OR?: ManufacturerWhereInput[]
    NOT?: ManufacturerWhereInput | ManufacturerWhereInput[]
    id?: StringFilter<"Manufacturer"> | string
    name?: StringFilter<"Manufacturer"> | string
    logoId?: StringNullableFilter<"Manufacturer"> | string | null
    organizationId?: StringFilter<"Manufacturer"> | string
    createdAt?: DateTimeFilter<"Manufacturer"> | Date | string
    createdBy?: StringNullableFilter<"Manufacturer"> | string | null
    updatedAt?: DateTimeFilter<"Manufacturer"> | Date | string
    updatedBy?: StringNullableFilter<"Manufacturer"> | string | null
    deletedAt?: DateTimeNullableFilter<"Manufacturer"> | Date | string | null
    deletedBy?: StringNullableFilter<"Manufacturer"> | string | null
    logo?: XOR<FileNullableScalarRelationFilter, FileWhereInput> | null
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
    products?: ProductListRelationFilter
    translations?: ManufacturerTranslationListRelationFilter
  }

  export type ManufacturerOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    logoId?: SortOrderInput | SortOrder
    organizationId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    logo?: FileOrderByWithRelationInput
    organization?: OrganizationOrderByWithRelationInput
    products?: ProductOrderByRelationAggregateInput
    translations?: ManufacturerTranslationOrderByRelationAggregateInput
  }

  export type ManufacturerWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    logoId?: string
    AND?: ManufacturerWhereInput | ManufacturerWhereInput[]
    OR?: ManufacturerWhereInput[]
    NOT?: ManufacturerWhereInput | ManufacturerWhereInput[]
    name?: StringFilter<"Manufacturer"> | string
    organizationId?: StringFilter<"Manufacturer"> | string
    createdAt?: DateTimeFilter<"Manufacturer"> | Date | string
    createdBy?: StringNullableFilter<"Manufacturer"> | string | null
    updatedAt?: DateTimeFilter<"Manufacturer"> | Date | string
    updatedBy?: StringNullableFilter<"Manufacturer"> | string | null
    deletedAt?: DateTimeNullableFilter<"Manufacturer"> | Date | string | null
    deletedBy?: StringNullableFilter<"Manufacturer"> | string | null
    logo?: XOR<FileNullableScalarRelationFilter, FileWhereInput> | null
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
    products?: ProductListRelationFilter
    translations?: ManufacturerTranslationListRelationFilter
  }, "id" | "logoId">

  export type ManufacturerOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    logoId?: SortOrderInput | SortOrder
    organizationId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    _count?: ManufacturerCountOrderByAggregateInput
    _max?: ManufacturerMaxOrderByAggregateInput
    _min?: ManufacturerMinOrderByAggregateInput
  }

  export type ManufacturerScalarWhereWithAggregatesInput = {
    AND?: ManufacturerScalarWhereWithAggregatesInput | ManufacturerScalarWhereWithAggregatesInput[]
    OR?: ManufacturerScalarWhereWithAggregatesInput[]
    NOT?: ManufacturerScalarWhereWithAggregatesInput | ManufacturerScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Manufacturer"> | string
    name?: StringWithAggregatesFilter<"Manufacturer"> | string
    logoId?: StringNullableWithAggregatesFilter<"Manufacturer"> | string | null
    organizationId?: StringWithAggregatesFilter<"Manufacturer"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Manufacturer"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"Manufacturer"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"Manufacturer"> | Date | string
    updatedBy?: StringNullableWithAggregatesFilter<"Manufacturer"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Manufacturer"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"Manufacturer"> | string | null
  }

  export type ManufacturerTranslationWhereInput = {
    AND?: ManufacturerTranslationWhereInput | ManufacturerTranslationWhereInput[]
    OR?: ManufacturerTranslationWhereInput[]
    NOT?: ManufacturerTranslationWhereInput | ManufacturerTranslationWhereInput[]
    id?: StringFilter<"ManufacturerTranslation"> | string
    locale?: StringFilter<"ManufacturerTranslation"> | string
    about?: StringNullableFilter<"ManufacturerTranslation"> | string | null
    manufacturerId?: StringFilter<"ManufacturerTranslation"> | string
    createdAt?: DateTimeFilter<"ManufacturerTranslation"> | Date | string
    createdBy?: StringNullableFilter<"ManufacturerTranslation"> | string | null
    updatedAt?: DateTimeFilter<"ManufacturerTranslation"> | Date | string
    updatedBy?: StringNullableFilter<"ManufacturerTranslation"> | string | null
    manufacturer?: XOR<ManufacturerScalarRelationFilter, ManufacturerWhereInput>
  }

  export type ManufacturerTranslationOrderByWithRelationInput = {
    id?: SortOrder
    locale?: SortOrder
    about?: SortOrderInput | SortOrder
    manufacturerId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    manufacturer?: ManufacturerOrderByWithRelationInput
  }

  export type ManufacturerTranslationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    locale_manufacturerId?: ManufacturerTranslationLocaleManufacturerIdCompoundUniqueInput
    AND?: ManufacturerTranslationWhereInput | ManufacturerTranslationWhereInput[]
    OR?: ManufacturerTranslationWhereInput[]
    NOT?: ManufacturerTranslationWhereInput | ManufacturerTranslationWhereInput[]
    locale?: StringFilter<"ManufacturerTranslation"> | string
    about?: StringNullableFilter<"ManufacturerTranslation"> | string | null
    manufacturerId?: StringFilter<"ManufacturerTranslation"> | string
    createdAt?: DateTimeFilter<"ManufacturerTranslation"> | Date | string
    createdBy?: StringNullableFilter<"ManufacturerTranslation"> | string | null
    updatedAt?: DateTimeFilter<"ManufacturerTranslation"> | Date | string
    updatedBy?: StringNullableFilter<"ManufacturerTranslation"> | string | null
    manufacturer?: XOR<ManufacturerScalarRelationFilter, ManufacturerWhereInput>
  }, "id" | "locale_manufacturerId">

  export type ManufacturerTranslationOrderByWithAggregationInput = {
    id?: SortOrder
    locale?: SortOrder
    about?: SortOrderInput | SortOrder
    manufacturerId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: ManufacturerTranslationCountOrderByAggregateInput
    _max?: ManufacturerTranslationMaxOrderByAggregateInput
    _min?: ManufacturerTranslationMinOrderByAggregateInput
  }

  export type ManufacturerTranslationScalarWhereWithAggregatesInput = {
    AND?: ManufacturerTranslationScalarWhereWithAggregatesInput | ManufacturerTranslationScalarWhereWithAggregatesInput[]
    OR?: ManufacturerTranslationScalarWhereWithAggregatesInput[]
    NOT?: ManufacturerTranslationScalarWhereWithAggregatesInput | ManufacturerTranslationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ManufacturerTranslation"> | string
    locale?: StringWithAggregatesFilter<"ManufacturerTranslation"> | string
    about?: StringNullableWithAggregatesFilter<"ManufacturerTranslation"> | string | null
    manufacturerId?: StringWithAggregatesFilter<"ManufacturerTranslation"> | string
    createdAt?: DateTimeWithAggregatesFilter<"ManufacturerTranslation"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"ManufacturerTranslation"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"ManufacturerTranslation"> | Date | string
    updatedBy?: StringNullableWithAggregatesFilter<"ManufacturerTranslation"> | string | null
  }

  export type ProductCategoryWhereInput = {
    AND?: ProductCategoryWhereInput | ProductCategoryWhereInput[]
    OR?: ProductCategoryWhereInput[]
    NOT?: ProductCategoryWhereInput | ProductCategoryWhereInput[]
    id?: StringFilter<"ProductCategory"> | string
    slug?: StringNullableFilter<"ProductCategory"> | string | null
    organizationId?: StringFilter<"ProductCategory"> | string
    priority?: IntNullableFilter<"ProductCategory"> | number | null
    imageId?: StringNullableFilter<"ProductCategory"> | string | null
    createdAt?: DateTimeFilter<"ProductCategory"> | Date | string
    createdBy?: StringNullableFilter<"ProductCategory"> | string | null
    updatedAt?: DateTimeFilter<"ProductCategory"> | Date | string
    updatedBy?: StringNullableFilter<"ProductCategory"> | string | null
    deletedAt?: DateTimeNullableFilter<"ProductCategory"> | Date | string | null
    deletedBy?: StringNullableFilter<"ProductCategory"> | string | null
    publishedAt?: DateTimeNullableFilter<"ProductCategory"> | Date | string | null
    publishedBy?: StringNullableFilter<"ProductCategory"> | string | null
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
    image?: XOR<FileNullableScalarRelationFilter, FileWhereInput> | null
    translations?: ProductCategoryTranslationListRelationFilter
    products?: ProductListRelationFilter
  }

  export type ProductCategoryOrderByWithRelationInput = {
    id?: SortOrder
    slug?: SortOrderInput | SortOrder
    organizationId?: SortOrder
    priority?: SortOrderInput | SortOrder
    imageId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    publishedAt?: SortOrderInput | SortOrder
    publishedBy?: SortOrderInput | SortOrder
    organization?: OrganizationOrderByWithRelationInput
    image?: FileOrderByWithRelationInput
    translations?: ProductCategoryTranslationOrderByRelationAggregateInput
    products?: ProductOrderByRelationAggregateInput
  }

  export type ProductCategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    imageId?: string
    AND?: ProductCategoryWhereInput | ProductCategoryWhereInput[]
    OR?: ProductCategoryWhereInput[]
    NOT?: ProductCategoryWhereInput | ProductCategoryWhereInput[]
    slug?: StringNullableFilter<"ProductCategory"> | string | null
    organizationId?: StringFilter<"ProductCategory"> | string
    priority?: IntNullableFilter<"ProductCategory"> | number | null
    createdAt?: DateTimeFilter<"ProductCategory"> | Date | string
    createdBy?: StringNullableFilter<"ProductCategory"> | string | null
    updatedAt?: DateTimeFilter<"ProductCategory"> | Date | string
    updatedBy?: StringNullableFilter<"ProductCategory"> | string | null
    deletedAt?: DateTimeNullableFilter<"ProductCategory"> | Date | string | null
    deletedBy?: StringNullableFilter<"ProductCategory"> | string | null
    publishedAt?: DateTimeNullableFilter<"ProductCategory"> | Date | string | null
    publishedBy?: StringNullableFilter<"ProductCategory"> | string | null
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
    image?: XOR<FileNullableScalarRelationFilter, FileWhereInput> | null
    translations?: ProductCategoryTranslationListRelationFilter
    products?: ProductListRelationFilter
  }, "id" | "imageId">

  export type ProductCategoryOrderByWithAggregationInput = {
    id?: SortOrder
    slug?: SortOrderInput | SortOrder
    organizationId?: SortOrder
    priority?: SortOrderInput | SortOrder
    imageId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    publishedAt?: SortOrderInput | SortOrder
    publishedBy?: SortOrderInput | SortOrder
    _count?: ProductCategoryCountOrderByAggregateInput
    _avg?: ProductCategoryAvgOrderByAggregateInput
    _max?: ProductCategoryMaxOrderByAggregateInput
    _min?: ProductCategoryMinOrderByAggregateInput
    _sum?: ProductCategorySumOrderByAggregateInput
  }

  export type ProductCategoryScalarWhereWithAggregatesInput = {
    AND?: ProductCategoryScalarWhereWithAggregatesInput | ProductCategoryScalarWhereWithAggregatesInput[]
    OR?: ProductCategoryScalarWhereWithAggregatesInput[]
    NOT?: ProductCategoryScalarWhereWithAggregatesInput | ProductCategoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProductCategory"> | string
    slug?: StringNullableWithAggregatesFilter<"ProductCategory"> | string | null
    organizationId?: StringWithAggregatesFilter<"ProductCategory"> | string
    priority?: IntNullableWithAggregatesFilter<"ProductCategory"> | number | null
    imageId?: StringNullableWithAggregatesFilter<"ProductCategory"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ProductCategory"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"ProductCategory"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"ProductCategory"> | Date | string
    updatedBy?: StringNullableWithAggregatesFilter<"ProductCategory"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"ProductCategory"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"ProductCategory"> | string | null
    publishedAt?: DateTimeNullableWithAggregatesFilter<"ProductCategory"> | Date | string | null
    publishedBy?: StringNullableWithAggregatesFilter<"ProductCategory"> | string | null
  }

  export type ProductCategoryTranslationWhereInput = {
    AND?: ProductCategoryTranslationWhereInput | ProductCategoryTranslationWhereInput[]
    OR?: ProductCategoryTranslationWhereInput[]
    NOT?: ProductCategoryTranslationWhereInput | ProductCategoryTranslationWhereInput[]
    id?: StringFilter<"ProductCategoryTranslation"> | string
    locale?: StringFilter<"ProductCategoryTranslation"> | string
    title?: StringNullableFilter<"ProductCategoryTranslation"> | string | null
    description?: StringNullableFilter<"ProductCategoryTranslation"> | string | null
    productCategoryId?: StringFilter<"ProductCategoryTranslation"> | string
    createdAt?: DateTimeFilter<"ProductCategoryTranslation"> | Date | string
    createdBy?: StringNullableFilter<"ProductCategoryTranslation"> | string | null
    updatedAt?: DateTimeFilter<"ProductCategoryTranslation"> | Date | string
    updatedBy?: StringNullableFilter<"ProductCategoryTranslation"> | string | null
    productCategory?: XOR<ProductCategoryScalarRelationFilter, ProductCategoryWhereInput>
  }

  export type ProductCategoryTranslationOrderByWithRelationInput = {
    id?: SortOrder
    locale?: SortOrder
    title?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    productCategoryId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    productCategory?: ProductCategoryOrderByWithRelationInput
  }

  export type ProductCategoryTranslationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    locale_productCategoryId?: ProductCategoryTranslationLocaleProductCategoryIdCompoundUniqueInput
    AND?: ProductCategoryTranslationWhereInput | ProductCategoryTranslationWhereInput[]
    OR?: ProductCategoryTranslationWhereInput[]
    NOT?: ProductCategoryTranslationWhereInput | ProductCategoryTranslationWhereInput[]
    locale?: StringFilter<"ProductCategoryTranslation"> | string
    title?: StringNullableFilter<"ProductCategoryTranslation"> | string | null
    description?: StringNullableFilter<"ProductCategoryTranslation"> | string | null
    productCategoryId?: StringFilter<"ProductCategoryTranslation"> | string
    createdAt?: DateTimeFilter<"ProductCategoryTranslation"> | Date | string
    createdBy?: StringNullableFilter<"ProductCategoryTranslation"> | string | null
    updatedAt?: DateTimeFilter<"ProductCategoryTranslation"> | Date | string
    updatedBy?: StringNullableFilter<"ProductCategoryTranslation"> | string | null
    productCategory?: XOR<ProductCategoryScalarRelationFilter, ProductCategoryWhereInput>
  }, "id" | "locale_productCategoryId">

  export type ProductCategoryTranslationOrderByWithAggregationInput = {
    id?: SortOrder
    locale?: SortOrder
    title?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    productCategoryId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: ProductCategoryTranslationCountOrderByAggregateInput
    _max?: ProductCategoryTranslationMaxOrderByAggregateInput
    _min?: ProductCategoryTranslationMinOrderByAggregateInput
  }

  export type ProductCategoryTranslationScalarWhereWithAggregatesInput = {
    AND?: ProductCategoryTranslationScalarWhereWithAggregatesInput | ProductCategoryTranslationScalarWhereWithAggregatesInput[]
    OR?: ProductCategoryTranslationScalarWhereWithAggregatesInput[]
    NOT?: ProductCategoryTranslationScalarWhereWithAggregatesInput | ProductCategoryTranslationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProductCategoryTranslation"> | string
    locale?: StringWithAggregatesFilter<"ProductCategoryTranslation"> | string
    title?: StringNullableWithAggregatesFilter<"ProductCategoryTranslation"> | string | null
    description?: StringNullableWithAggregatesFilter<"ProductCategoryTranslation"> | string | null
    productCategoryId?: StringWithAggregatesFilter<"ProductCategoryTranslation"> | string
    createdAt?: DateTimeWithAggregatesFilter<"ProductCategoryTranslation"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"ProductCategoryTranslation"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"ProductCategoryTranslation"> | Date | string
    updatedBy?: StringNullableWithAggregatesFilter<"ProductCategoryTranslation"> | string | null
  }

  export type ProductWhereInput = {
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    id?: StringFilter<"Product"> | string
    content?: StringNullableFilter<"Product"> | string | null
    slug?: StringNullableFilter<"Product"> | string | null
    sku?: StringNullableFilter<"Product"> | string | null
    basePrice?: FloatFilter<"Product"> | number
    discountedBasePrice?: FloatNullableFilter<"Product"> | number | null
    currency?: StringFilter<"Product"> | string
    organizationId?: StringFilter<"Product"> | string
    manufacturerId?: StringNullableFilter<"Product"> | string | null
    tags?: StringNullableListFilter<"Product">
    metadata?: JsonNullableFilter<"Product">
    publishedAt?: DateTimeNullableFilter<"Product"> | Date | string | null
    publishedBy?: StringNullableFilter<"Product"> | string | null
    deletedAt?: DateTimeNullableFilter<"Product"> | Date | string | null
    deletedBy?: StringNullableFilter<"Product"> | string | null
    createdAt?: DateTimeFilter<"Product"> | Date | string
    createdBy?: StringNullableFilter<"Product"> | string | null
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    updatedBy?: StringNullableFilter<"Product"> | string | null
    latestSnapshotId?: StringNullableFilter<"Product"> | string | null
    images?: FileListRelationFilter
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
    manufacturer?: XOR<ManufacturerNullableScalarRelationFilter, ManufacturerWhereInput> | null
    categories?: ProductCategoryListRelationFilter
    modifierGroups?: ModifierGroupListRelationFilter
    translations?: ProductTranslationListRelationFilter
    snapshots?: ProductSnapshotListRelationFilter
    latestSnapshot?: XOR<ProductSnapshotNullableScalarRelationFilter, ProductSnapshotWhereInput> | null
  }

  export type ProductOrderByWithRelationInput = {
    id?: SortOrder
    content?: SortOrderInput | SortOrder
    slug?: SortOrderInput | SortOrder
    sku?: SortOrderInput | SortOrder
    basePrice?: SortOrder
    discountedBasePrice?: SortOrderInput | SortOrder
    currency?: SortOrder
    organizationId?: SortOrder
    manufacturerId?: SortOrderInput | SortOrder
    tags?: SortOrder
    metadata?: SortOrderInput | SortOrder
    publishedAt?: SortOrderInput | SortOrder
    publishedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    latestSnapshotId?: SortOrderInput | SortOrder
    images?: FileOrderByRelationAggregateInput
    organization?: OrganizationOrderByWithRelationInput
    manufacturer?: ManufacturerOrderByWithRelationInput
    categories?: ProductCategoryOrderByRelationAggregateInput
    modifierGroups?: ModifierGroupOrderByRelationAggregateInput
    translations?: ProductTranslationOrderByRelationAggregateInput
    snapshots?: ProductSnapshotOrderByRelationAggregateInput
    latestSnapshot?: ProductSnapshotOrderByWithRelationInput
  }

  export type ProductWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    latestSnapshotId?: string
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    content?: StringNullableFilter<"Product"> | string | null
    slug?: StringNullableFilter<"Product"> | string | null
    sku?: StringNullableFilter<"Product"> | string | null
    basePrice?: FloatFilter<"Product"> | number
    discountedBasePrice?: FloatNullableFilter<"Product"> | number | null
    currency?: StringFilter<"Product"> | string
    organizationId?: StringFilter<"Product"> | string
    manufacturerId?: StringNullableFilter<"Product"> | string | null
    tags?: StringNullableListFilter<"Product">
    metadata?: JsonNullableFilter<"Product">
    publishedAt?: DateTimeNullableFilter<"Product"> | Date | string | null
    publishedBy?: StringNullableFilter<"Product"> | string | null
    deletedAt?: DateTimeNullableFilter<"Product"> | Date | string | null
    deletedBy?: StringNullableFilter<"Product"> | string | null
    createdAt?: DateTimeFilter<"Product"> | Date | string
    createdBy?: StringNullableFilter<"Product"> | string | null
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    updatedBy?: StringNullableFilter<"Product"> | string | null
    images?: FileListRelationFilter
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
    manufacturer?: XOR<ManufacturerNullableScalarRelationFilter, ManufacturerWhereInput> | null
    categories?: ProductCategoryListRelationFilter
    modifierGroups?: ModifierGroupListRelationFilter
    translations?: ProductTranslationListRelationFilter
    snapshots?: ProductSnapshotListRelationFilter
    latestSnapshot?: XOR<ProductSnapshotNullableScalarRelationFilter, ProductSnapshotWhereInput> | null
  }, "id" | "latestSnapshotId">

  export type ProductOrderByWithAggregationInput = {
    id?: SortOrder
    content?: SortOrderInput | SortOrder
    slug?: SortOrderInput | SortOrder
    sku?: SortOrderInput | SortOrder
    basePrice?: SortOrder
    discountedBasePrice?: SortOrderInput | SortOrder
    currency?: SortOrder
    organizationId?: SortOrder
    manufacturerId?: SortOrderInput | SortOrder
    tags?: SortOrder
    metadata?: SortOrderInput | SortOrder
    publishedAt?: SortOrderInput | SortOrder
    publishedBy?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    latestSnapshotId?: SortOrderInput | SortOrder
    _count?: ProductCountOrderByAggregateInput
    _avg?: ProductAvgOrderByAggregateInput
    _max?: ProductMaxOrderByAggregateInput
    _min?: ProductMinOrderByAggregateInput
    _sum?: ProductSumOrderByAggregateInput
  }

  export type ProductScalarWhereWithAggregatesInput = {
    AND?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    OR?: ProductScalarWhereWithAggregatesInput[]
    NOT?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Product"> | string
    content?: StringNullableWithAggregatesFilter<"Product"> | string | null
    slug?: StringNullableWithAggregatesFilter<"Product"> | string | null
    sku?: StringNullableWithAggregatesFilter<"Product"> | string | null
    basePrice?: FloatWithAggregatesFilter<"Product"> | number
    discountedBasePrice?: FloatNullableWithAggregatesFilter<"Product"> | number | null
    currency?: StringWithAggregatesFilter<"Product"> | string
    organizationId?: StringWithAggregatesFilter<"Product"> | string
    manufacturerId?: StringNullableWithAggregatesFilter<"Product"> | string | null
    tags?: StringNullableListFilter<"Product">
    metadata?: JsonNullableWithAggregatesFilter<"Product">
    publishedAt?: DateTimeNullableWithAggregatesFilter<"Product"> | Date | string | null
    publishedBy?: StringNullableWithAggregatesFilter<"Product"> | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Product"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"Product"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Product"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"Product"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"Product"> | Date | string
    updatedBy?: StringNullableWithAggregatesFilter<"Product"> | string | null
    latestSnapshotId?: StringNullableWithAggregatesFilter<"Product"> | string | null
  }

  export type ProductSnapshotWhereInput = {
    AND?: ProductSnapshotWhereInput | ProductSnapshotWhereInput[]
    OR?: ProductSnapshotWhereInput[]
    NOT?: ProductSnapshotWhereInput | ProductSnapshotWhereInput[]
    id?: StringFilter<"ProductSnapshot"> | string
    productId?: StringFilter<"ProductSnapshot"> | string
    data?: JsonFilter<"ProductSnapshot">
    createdAt?: DateTimeFilter<"ProductSnapshot"> | Date | string
    createdBy?: StringNullableFilter<"ProductSnapshot"> | string | null
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    latestForProduct?: XOR<ProductNullableScalarRelationFilter, ProductWhereInput> | null
    orderItems?: OrderItemListRelationFilter
  }

  export type ProductSnapshotOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    data?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    product?: ProductOrderByWithRelationInput
    latestForProduct?: ProductOrderByWithRelationInput
    orderItems?: OrderItemOrderByRelationAggregateInput
  }

  export type ProductSnapshotWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProductSnapshotWhereInput | ProductSnapshotWhereInput[]
    OR?: ProductSnapshotWhereInput[]
    NOT?: ProductSnapshotWhereInput | ProductSnapshotWhereInput[]
    productId?: StringFilter<"ProductSnapshot"> | string
    data?: JsonFilter<"ProductSnapshot">
    createdAt?: DateTimeFilter<"ProductSnapshot"> | Date | string
    createdBy?: StringNullableFilter<"ProductSnapshot"> | string | null
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    latestForProduct?: XOR<ProductNullableScalarRelationFilter, ProductWhereInput> | null
    orderItems?: OrderItemListRelationFilter
  }, "id">

  export type ProductSnapshotOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    data?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    _count?: ProductSnapshotCountOrderByAggregateInput
    _max?: ProductSnapshotMaxOrderByAggregateInput
    _min?: ProductSnapshotMinOrderByAggregateInput
  }

  export type ProductSnapshotScalarWhereWithAggregatesInput = {
    AND?: ProductSnapshotScalarWhereWithAggregatesInput | ProductSnapshotScalarWhereWithAggregatesInput[]
    OR?: ProductSnapshotScalarWhereWithAggregatesInput[]
    NOT?: ProductSnapshotScalarWhereWithAggregatesInput | ProductSnapshotScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProductSnapshot"> | string
    productId?: StringWithAggregatesFilter<"ProductSnapshot"> | string
    data?: JsonWithAggregatesFilter<"ProductSnapshot">
    createdAt?: DateTimeWithAggregatesFilter<"ProductSnapshot"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"ProductSnapshot"> | string | null
  }

  export type ProductTranslationWhereInput = {
    AND?: ProductTranslationWhereInput | ProductTranslationWhereInput[]
    OR?: ProductTranslationWhereInput[]
    NOT?: ProductTranslationWhereInput | ProductTranslationWhereInput[]
    id?: StringFilter<"ProductTranslation"> | string
    locale?: StringFilter<"ProductTranslation"> | string
    title?: StringNullableFilter<"ProductTranslation"> | string | null
    description?: StringNullableFilter<"ProductTranslation"> | string | null
    productId?: StringFilter<"ProductTranslation"> | string
    createdAt?: DateTimeFilter<"ProductTranslation"> | Date | string
    createdBy?: StringNullableFilter<"ProductTranslation"> | string | null
    updatedAt?: DateTimeFilter<"ProductTranslation"> | Date | string
    updatedBy?: StringNullableFilter<"ProductTranslation"> | string | null
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }

  export type ProductTranslationOrderByWithRelationInput = {
    id?: SortOrder
    locale?: SortOrder
    title?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    productId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    product?: ProductOrderByWithRelationInput
  }

  export type ProductTranslationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    locale_productId?: ProductTranslationLocaleProductIdCompoundUniqueInput
    AND?: ProductTranslationWhereInput | ProductTranslationWhereInput[]
    OR?: ProductTranslationWhereInput[]
    NOT?: ProductTranslationWhereInput | ProductTranslationWhereInput[]
    locale?: StringFilter<"ProductTranslation"> | string
    title?: StringNullableFilter<"ProductTranslation"> | string | null
    description?: StringNullableFilter<"ProductTranslation"> | string | null
    productId?: StringFilter<"ProductTranslation"> | string
    createdAt?: DateTimeFilter<"ProductTranslation"> | Date | string
    createdBy?: StringNullableFilter<"ProductTranslation"> | string | null
    updatedAt?: DateTimeFilter<"ProductTranslation"> | Date | string
    updatedBy?: StringNullableFilter<"ProductTranslation"> | string | null
    product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
  }, "id" | "locale_productId">

  export type ProductTranslationOrderByWithAggregationInput = {
    id?: SortOrder
    locale?: SortOrder
    title?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    productId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: ProductTranslationCountOrderByAggregateInput
    _max?: ProductTranslationMaxOrderByAggregateInput
    _min?: ProductTranslationMinOrderByAggregateInput
  }

  export type ProductTranslationScalarWhereWithAggregatesInput = {
    AND?: ProductTranslationScalarWhereWithAggregatesInput | ProductTranslationScalarWhereWithAggregatesInput[]
    OR?: ProductTranslationScalarWhereWithAggregatesInput[]
    NOT?: ProductTranslationScalarWhereWithAggregatesInput | ProductTranslationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProductTranslation"> | string
    locale?: StringWithAggregatesFilter<"ProductTranslation"> | string
    title?: StringNullableWithAggregatesFilter<"ProductTranslation"> | string | null
    description?: StringNullableWithAggregatesFilter<"ProductTranslation"> | string | null
    productId?: StringWithAggregatesFilter<"ProductTranslation"> | string
    createdAt?: DateTimeWithAggregatesFilter<"ProductTranslation"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"ProductTranslation"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"ProductTranslation"> | Date | string
    updatedBy?: StringNullableWithAggregatesFilter<"ProductTranslation"> | string | null
  }

  export type ModifierGroupWhereInput = {
    AND?: ModifierGroupWhereInput | ModifierGroupWhereInput[]
    OR?: ModifierGroupWhereInput[]
    NOT?: ModifierGroupWhereInput | ModifierGroupWhereInput[]
    id?: StringFilter<"ModifierGroup"> | string
    selectMin?: IntNullableFilter<"ModifierGroup"> | number | null
    selectMax?: IntNullableFilter<"ModifierGroup"> | number | null
    createdAt?: DateTimeFilter<"ModifierGroup"> | Date | string
    updatedAt?: DateTimeFilter<"ModifierGroup"> | Date | string
    modifiers?: ModifierListRelationFilter
    products?: ProductListRelationFilter
    translations?: ModifierGroupTranslationListRelationFilter
  }

  export type ModifierGroupOrderByWithRelationInput = {
    id?: SortOrder
    selectMin?: SortOrderInput | SortOrder
    selectMax?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    modifiers?: ModifierOrderByRelationAggregateInput
    products?: ProductOrderByRelationAggregateInput
    translations?: ModifierGroupTranslationOrderByRelationAggregateInput
  }

  export type ModifierGroupWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ModifierGroupWhereInput | ModifierGroupWhereInput[]
    OR?: ModifierGroupWhereInput[]
    NOT?: ModifierGroupWhereInput | ModifierGroupWhereInput[]
    selectMin?: IntNullableFilter<"ModifierGroup"> | number | null
    selectMax?: IntNullableFilter<"ModifierGroup"> | number | null
    createdAt?: DateTimeFilter<"ModifierGroup"> | Date | string
    updatedAt?: DateTimeFilter<"ModifierGroup"> | Date | string
    modifiers?: ModifierListRelationFilter
    products?: ProductListRelationFilter
    translations?: ModifierGroupTranslationListRelationFilter
  }, "id">

  export type ModifierGroupOrderByWithAggregationInput = {
    id?: SortOrder
    selectMin?: SortOrderInput | SortOrder
    selectMax?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ModifierGroupCountOrderByAggregateInput
    _avg?: ModifierGroupAvgOrderByAggregateInput
    _max?: ModifierGroupMaxOrderByAggregateInput
    _min?: ModifierGroupMinOrderByAggregateInput
    _sum?: ModifierGroupSumOrderByAggregateInput
  }

  export type ModifierGroupScalarWhereWithAggregatesInput = {
    AND?: ModifierGroupScalarWhereWithAggregatesInput | ModifierGroupScalarWhereWithAggregatesInput[]
    OR?: ModifierGroupScalarWhereWithAggregatesInput[]
    NOT?: ModifierGroupScalarWhereWithAggregatesInput | ModifierGroupScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ModifierGroup"> | string
    selectMin?: IntNullableWithAggregatesFilter<"ModifierGroup"> | number | null
    selectMax?: IntNullableWithAggregatesFilter<"ModifierGroup"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"ModifierGroup"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ModifierGroup"> | Date | string
  }

  export type ModifierGroupTranslationWhereInput = {
    AND?: ModifierGroupTranslationWhereInput | ModifierGroupTranslationWhereInput[]
    OR?: ModifierGroupTranslationWhereInput[]
    NOT?: ModifierGroupTranslationWhereInput | ModifierGroupTranslationWhereInput[]
    id?: StringFilter<"ModifierGroupTranslation"> | string
    locale?: StringFilter<"ModifierGroupTranslation"> | string
    title?: StringNullableFilter<"ModifierGroupTranslation"> | string | null
    description?: StringNullableFilter<"ModifierGroupTranslation"> | string | null
    modifierGroupId?: StringFilter<"ModifierGroupTranslation"> | string
    modifierGroup?: XOR<ModifierGroupScalarRelationFilter, ModifierGroupWhereInput>
  }

  export type ModifierGroupTranslationOrderByWithRelationInput = {
    id?: SortOrder
    locale?: SortOrder
    title?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    modifierGroupId?: SortOrder
    modifierGroup?: ModifierGroupOrderByWithRelationInput
  }

  export type ModifierGroupTranslationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    locale_modifierGroupId?: ModifierGroupTranslationLocaleModifierGroupIdCompoundUniqueInput
    AND?: ModifierGroupTranslationWhereInput | ModifierGroupTranslationWhereInput[]
    OR?: ModifierGroupTranslationWhereInput[]
    NOT?: ModifierGroupTranslationWhereInput | ModifierGroupTranslationWhereInput[]
    locale?: StringFilter<"ModifierGroupTranslation"> | string
    title?: StringNullableFilter<"ModifierGroupTranslation"> | string | null
    description?: StringNullableFilter<"ModifierGroupTranslation"> | string | null
    modifierGroupId?: StringFilter<"ModifierGroupTranslation"> | string
    modifierGroup?: XOR<ModifierGroupScalarRelationFilter, ModifierGroupWhereInput>
  }, "id" | "locale_modifierGroupId">

  export type ModifierGroupTranslationOrderByWithAggregationInput = {
    id?: SortOrder
    locale?: SortOrder
    title?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    modifierGroupId?: SortOrder
    _count?: ModifierGroupTranslationCountOrderByAggregateInput
    _max?: ModifierGroupTranslationMaxOrderByAggregateInput
    _min?: ModifierGroupTranslationMinOrderByAggregateInput
  }

  export type ModifierGroupTranslationScalarWhereWithAggregatesInput = {
    AND?: ModifierGroupTranslationScalarWhereWithAggregatesInput | ModifierGroupTranslationScalarWhereWithAggregatesInput[]
    OR?: ModifierGroupTranslationScalarWhereWithAggregatesInput[]
    NOT?: ModifierGroupTranslationScalarWhereWithAggregatesInput | ModifierGroupTranslationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ModifierGroupTranslation"> | string
    locale?: StringWithAggregatesFilter<"ModifierGroupTranslation"> | string
    title?: StringNullableWithAggregatesFilter<"ModifierGroupTranslation"> | string | null
    description?: StringNullableWithAggregatesFilter<"ModifierGroupTranslation"> | string | null
    modifierGroupId?: StringWithAggregatesFilter<"ModifierGroupTranslation"> | string
  }

  export type ModifierWhereInput = {
    AND?: ModifierWhereInput | ModifierWhereInput[]
    OR?: ModifierWhereInput[]
    NOT?: ModifierWhereInput | ModifierWhereInput[]
    id?: StringFilter<"Modifier"> | string
    title?: StringFilter<"Modifier"> | string
    description?: StringNullableFilter<"Modifier"> | string | null
    sku?: StringNullableFilter<"Modifier"> | string | null
    price?: FloatFilter<"Modifier"> | number
    modifierGroupId?: StringFilter<"Modifier"> | string
    modifierGroup?: XOR<ModifierGroupScalarRelationFilter, ModifierGroupWhereInput>
    images?: FileListRelationFilter
  }

  export type ModifierOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    sku?: SortOrderInput | SortOrder
    price?: SortOrder
    modifierGroupId?: SortOrder
    modifierGroup?: ModifierGroupOrderByWithRelationInput
    images?: FileOrderByRelationAggregateInput
  }

  export type ModifierWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ModifierWhereInput | ModifierWhereInput[]
    OR?: ModifierWhereInput[]
    NOT?: ModifierWhereInput | ModifierWhereInput[]
    title?: StringFilter<"Modifier"> | string
    description?: StringNullableFilter<"Modifier"> | string | null
    sku?: StringNullableFilter<"Modifier"> | string | null
    price?: FloatFilter<"Modifier"> | number
    modifierGroupId?: StringFilter<"Modifier"> | string
    modifierGroup?: XOR<ModifierGroupScalarRelationFilter, ModifierGroupWhereInput>
    images?: FileListRelationFilter
  }, "id">

  export type ModifierOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    sku?: SortOrderInput | SortOrder
    price?: SortOrder
    modifierGroupId?: SortOrder
    _count?: ModifierCountOrderByAggregateInput
    _avg?: ModifierAvgOrderByAggregateInput
    _max?: ModifierMaxOrderByAggregateInput
    _min?: ModifierMinOrderByAggregateInput
    _sum?: ModifierSumOrderByAggregateInput
  }

  export type ModifierScalarWhereWithAggregatesInput = {
    AND?: ModifierScalarWhereWithAggregatesInput | ModifierScalarWhereWithAggregatesInput[]
    OR?: ModifierScalarWhereWithAggregatesInput[]
    NOT?: ModifierScalarWhereWithAggregatesInput | ModifierScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Modifier"> | string
    title?: StringWithAggregatesFilter<"Modifier"> | string
    description?: StringNullableWithAggregatesFilter<"Modifier"> | string | null
    sku?: StringNullableWithAggregatesFilter<"Modifier"> | string | null
    price?: FloatWithAggregatesFilter<"Modifier"> | number
    modifierGroupId?: StringWithAggregatesFilter<"Modifier"> | string
  }

  export type OrderWhereInput = {
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    id?: StringFilter<"Order"> | string
    organizationId?: StringFilter<"Order"> | string
    userId?: StringNullableFilter<"Order"> | string | null
    paymentId?: StringNullableFilter<"Order"> | string | null
    token?: StringFilter<"Order"> | string
    expiresAt?: DateTimeFilter<"Order"> | Date | string
    referenceId?: StringFilter<"Order"> | string
    fulfilmentMethod?: EnumOrderFulfilmentMethodNullableFilter<"Order"> | $Enums.OrderFulfilmentMethod | null
    shippingMethodId?: StringNullableFilter<"Order"> | string | null
    shippingAddressId?: StringNullableFilter<"Order"> | string | null
    dateOfExecution?: DateTimeNullableFilter<"Order"> | Date | string | null
    currency?: EnumCurrencyFilter<"Order"> | $Enums.Currency
    sourceIp?: StringNullableFilter<"Order"> | string | null
    acceptedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    readyForDispatchAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    dispatchedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    cancelledAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    deletedBy?: StringNullableFilter<"Order"> | string | null
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    payment?: XOR<PaymentNullableScalarRelationFilter, PaymentWhereInput> | null
    shippingMethod?: XOR<ShippingMethodNullableScalarRelationFilter, ShippingMethodWhereInput> | null
    shippingAddress?: XOR<AddressNullableScalarRelationFilter, AddressWhereInput> | null
    items?: OrderItemListRelationFilter
  }

  export type OrderOrderByWithRelationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrderInput | SortOrder
    paymentId?: SortOrderInput | SortOrder
    token?: SortOrder
    expiresAt?: SortOrder
    referenceId?: SortOrder
    fulfilmentMethod?: SortOrderInput | SortOrder
    shippingMethodId?: SortOrderInput | SortOrder
    shippingAddressId?: SortOrderInput | SortOrder
    dateOfExecution?: SortOrderInput | SortOrder
    currency?: SortOrder
    sourceIp?: SortOrderInput | SortOrder
    acceptedAt?: SortOrderInput | SortOrder
    readyForDispatchAt?: SortOrderInput | SortOrder
    dispatchedAt?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    cancelledAt?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    organization?: OrganizationOrderByWithRelationInput
    user?: UserOrderByWithRelationInput
    payment?: PaymentOrderByWithRelationInput
    shippingMethod?: ShippingMethodOrderByWithRelationInput
    shippingAddress?: AddressOrderByWithRelationInput
    items?: OrderItemOrderByRelationAggregateInput
  }

  export type OrderWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    paymentId?: string
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    organizationId?: StringFilter<"Order"> | string
    userId?: StringNullableFilter<"Order"> | string | null
    token?: StringFilter<"Order"> | string
    expiresAt?: DateTimeFilter<"Order"> | Date | string
    referenceId?: StringFilter<"Order"> | string
    fulfilmentMethod?: EnumOrderFulfilmentMethodNullableFilter<"Order"> | $Enums.OrderFulfilmentMethod | null
    shippingMethodId?: StringNullableFilter<"Order"> | string | null
    shippingAddressId?: StringNullableFilter<"Order"> | string | null
    dateOfExecution?: DateTimeNullableFilter<"Order"> | Date | string | null
    currency?: EnumCurrencyFilter<"Order"> | $Enums.Currency
    sourceIp?: StringNullableFilter<"Order"> | string | null
    acceptedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    readyForDispatchAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    dispatchedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    cancelledAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    deletedBy?: StringNullableFilter<"Order"> | string | null
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    payment?: XOR<PaymentNullableScalarRelationFilter, PaymentWhereInput> | null
    shippingMethod?: XOR<ShippingMethodNullableScalarRelationFilter, ShippingMethodWhereInput> | null
    shippingAddress?: XOR<AddressNullableScalarRelationFilter, AddressWhereInput> | null
    items?: OrderItemListRelationFilter
  }, "id" | "paymentId">

  export type OrderOrderByWithAggregationInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrderInput | SortOrder
    paymentId?: SortOrderInput | SortOrder
    token?: SortOrder
    expiresAt?: SortOrder
    referenceId?: SortOrder
    fulfilmentMethod?: SortOrderInput | SortOrder
    shippingMethodId?: SortOrderInput | SortOrder
    shippingAddressId?: SortOrderInput | SortOrder
    dateOfExecution?: SortOrderInput | SortOrder
    currency?: SortOrder
    sourceIp?: SortOrderInput | SortOrder
    acceptedAt?: SortOrderInput | SortOrder
    readyForDispatchAt?: SortOrderInput | SortOrder
    dispatchedAt?: SortOrderInput | SortOrder
    completedAt?: SortOrderInput | SortOrder
    cancelledAt?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deletedBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: OrderCountOrderByAggregateInput
    _max?: OrderMaxOrderByAggregateInput
    _min?: OrderMinOrderByAggregateInput
  }

  export type OrderScalarWhereWithAggregatesInput = {
    AND?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    OR?: OrderScalarWhereWithAggregatesInput[]
    NOT?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Order"> | string
    organizationId?: StringWithAggregatesFilter<"Order"> | string
    userId?: StringNullableWithAggregatesFilter<"Order"> | string | null
    paymentId?: StringNullableWithAggregatesFilter<"Order"> | string | null
    token?: StringWithAggregatesFilter<"Order"> | string
    expiresAt?: DateTimeWithAggregatesFilter<"Order"> | Date | string
    referenceId?: StringWithAggregatesFilter<"Order"> | string
    fulfilmentMethod?: EnumOrderFulfilmentMethodNullableWithAggregatesFilter<"Order"> | $Enums.OrderFulfilmentMethod | null
    shippingMethodId?: StringNullableWithAggregatesFilter<"Order"> | string | null
    shippingAddressId?: StringNullableWithAggregatesFilter<"Order"> | string | null
    dateOfExecution?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    currency?: EnumCurrencyWithAggregatesFilter<"Order"> | $Enums.Currency
    sourceIp?: StringNullableWithAggregatesFilter<"Order"> | string | null
    acceptedAt?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    readyForDispatchAt?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    dispatchedAt?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    completedAt?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    cancelledAt?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    deletedBy?: StringNullableWithAggregatesFilter<"Order"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Order"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Order"> | Date | string
  }

  export type OrderItemWhereInput = {
    AND?: OrderItemWhereInput | OrderItemWhereInput[]
    OR?: OrderItemWhereInput[]
    NOT?: OrderItemWhereInput | OrderItemWhereInput[]
    id?: StringFilter<"OrderItem"> | string
    quantity?: IntFilter<"OrderItem"> | number
    unitPrice?: FloatFilter<"OrderItem"> | number
    totalPrice?: FloatFilter<"OrderItem"> | number
    orderId?: StringFilter<"OrderItem"> | string
    rawData?: JsonNullableFilter<"OrderItem">
    productSnapshotId?: StringNullableFilter<"OrderItem"> | string | null
    imageId?: StringNullableFilter<"OrderItem"> | string | null
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
    productSnapshot?: XOR<ProductSnapshotNullableScalarRelationFilter, ProductSnapshotWhereInput> | null
    image?: XOR<FileNullableScalarRelationFilter, FileWhereInput> | null
    translations?: OrderItemTranslationListRelationFilter
  }

  export type OrderItemOrderByWithRelationInput = {
    id?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    orderId?: SortOrder
    rawData?: SortOrderInput | SortOrder
    productSnapshotId?: SortOrderInput | SortOrder
    imageId?: SortOrderInput | SortOrder
    order?: OrderOrderByWithRelationInput
    productSnapshot?: ProductSnapshotOrderByWithRelationInput
    image?: FileOrderByWithRelationInput
    translations?: OrderItemTranslationOrderByRelationAggregateInput
  }

  export type OrderItemWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: OrderItemWhereInput | OrderItemWhereInput[]
    OR?: OrderItemWhereInput[]
    NOT?: OrderItemWhereInput | OrderItemWhereInput[]
    quantity?: IntFilter<"OrderItem"> | number
    unitPrice?: FloatFilter<"OrderItem"> | number
    totalPrice?: FloatFilter<"OrderItem"> | number
    orderId?: StringFilter<"OrderItem"> | string
    rawData?: JsonNullableFilter<"OrderItem">
    productSnapshotId?: StringNullableFilter<"OrderItem"> | string | null
    imageId?: StringNullableFilter<"OrderItem"> | string | null
    order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
    productSnapshot?: XOR<ProductSnapshotNullableScalarRelationFilter, ProductSnapshotWhereInput> | null
    image?: XOR<FileNullableScalarRelationFilter, FileWhereInput> | null
    translations?: OrderItemTranslationListRelationFilter
  }, "id">

  export type OrderItemOrderByWithAggregationInput = {
    id?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    orderId?: SortOrder
    rawData?: SortOrderInput | SortOrder
    productSnapshotId?: SortOrderInput | SortOrder
    imageId?: SortOrderInput | SortOrder
    _count?: OrderItemCountOrderByAggregateInput
    _avg?: OrderItemAvgOrderByAggregateInput
    _max?: OrderItemMaxOrderByAggregateInput
    _min?: OrderItemMinOrderByAggregateInput
    _sum?: OrderItemSumOrderByAggregateInput
  }

  export type OrderItemScalarWhereWithAggregatesInput = {
    AND?: OrderItemScalarWhereWithAggregatesInput | OrderItemScalarWhereWithAggregatesInput[]
    OR?: OrderItemScalarWhereWithAggregatesInput[]
    NOT?: OrderItemScalarWhereWithAggregatesInput | OrderItemScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"OrderItem"> | string
    quantity?: IntWithAggregatesFilter<"OrderItem"> | number
    unitPrice?: FloatWithAggregatesFilter<"OrderItem"> | number
    totalPrice?: FloatWithAggregatesFilter<"OrderItem"> | number
    orderId?: StringWithAggregatesFilter<"OrderItem"> | string
    rawData?: JsonNullableWithAggregatesFilter<"OrderItem">
    productSnapshotId?: StringNullableWithAggregatesFilter<"OrderItem"> | string | null
    imageId?: StringNullableWithAggregatesFilter<"OrderItem"> | string | null
  }

  export type OrderItemTranslationWhereInput = {
    AND?: OrderItemTranslationWhereInput | OrderItemTranslationWhereInput[]
    OR?: OrderItemTranslationWhereInput[]
    NOT?: OrderItemTranslationWhereInput | OrderItemTranslationWhereInput[]
    id?: StringFilter<"OrderItemTranslation"> | string
    locale?: StringFilter<"OrderItemTranslation"> | string
    title?: StringFilter<"OrderItemTranslation"> | string
    subtitle?: StringNullableFilter<"OrderItemTranslation"> | string | null
    orderItemId?: StringFilter<"OrderItemTranslation"> | string
    orderItem?: XOR<OrderItemScalarRelationFilter, OrderItemWhereInput>
  }

  export type OrderItemTranslationOrderByWithRelationInput = {
    id?: SortOrder
    locale?: SortOrder
    title?: SortOrder
    subtitle?: SortOrderInput | SortOrder
    orderItemId?: SortOrder
    orderItem?: OrderItemOrderByWithRelationInput
  }

  export type OrderItemTranslationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    locale_orderItemId?: OrderItemTranslationLocaleOrderItemIdCompoundUniqueInput
    AND?: OrderItemTranslationWhereInput | OrderItemTranslationWhereInput[]
    OR?: OrderItemTranslationWhereInput[]
    NOT?: OrderItemTranslationWhereInput | OrderItemTranslationWhereInput[]
    locale?: StringFilter<"OrderItemTranslation"> | string
    title?: StringFilter<"OrderItemTranslation"> | string
    subtitle?: StringNullableFilter<"OrderItemTranslation"> | string | null
    orderItemId?: StringFilter<"OrderItemTranslation"> | string
    orderItem?: XOR<OrderItemScalarRelationFilter, OrderItemWhereInput>
  }, "id" | "locale_orderItemId">

  export type OrderItemTranslationOrderByWithAggregationInput = {
    id?: SortOrder
    locale?: SortOrder
    title?: SortOrder
    subtitle?: SortOrderInput | SortOrder
    orderItemId?: SortOrder
    _count?: OrderItemTranslationCountOrderByAggregateInput
    _max?: OrderItemTranslationMaxOrderByAggregateInput
    _min?: OrderItemTranslationMinOrderByAggregateInput
  }

  export type OrderItemTranslationScalarWhereWithAggregatesInput = {
    AND?: OrderItemTranslationScalarWhereWithAggregatesInput | OrderItemTranslationScalarWhereWithAggregatesInput[]
    OR?: OrderItemTranslationScalarWhereWithAggregatesInput[]
    NOT?: OrderItemTranslationScalarWhereWithAggregatesInput | OrderItemTranslationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"OrderItemTranslation"> | string
    locale?: StringWithAggregatesFilter<"OrderItemTranslation"> | string
    title?: StringWithAggregatesFilter<"OrderItemTranslation"> | string
    subtitle?: StringNullableWithAggregatesFilter<"OrderItemTranslation"> | string | null
    orderItemId?: StringWithAggregatesFilter<"OrderItemTranslation"> | string
  }

  export type PaymentWhereInput = {
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    id?: StringFilter<"Payment"> | string
    method?: EnumPaymentMethodFilter<"Payment"> | $Enums.PaymentMethod
    provider?: EnumPaymentProviderFilter<"Payment"> | $Enums.PaymentProvider
    shipping?: FloatFilter<"Payment"> | number
    subtotal?: FloatFilter<"Payment"> | number
    total?: FloatFilter<"Payment"> | number
    discount?: FloatNullableFilter<"Payment"> | number | null
    currency?: EnumCurrencyFilter<"Payment"> | $Enums.Currency
    status?: EnumPaymentStatusFilter<"Payment"> | $Enums.PaymentStatus
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    updatedAt?: DateTimeFilter<"Payment"> | Date | string
    sessions?: PaymentSessionListRelationFilter
    order?: XOR<OrderNullableScalarRelationFilter, OrderWhereInput> | null
  }

  export type PaymentOrderByWithRelationInput = {
    id?: SortOrder
    method?: SortOrder
    provider?: SortOrder
    shipping?: SortOrder
    subtotal?: SortOrder
    total?: SortOrder
    discount?: SortOrderInput | SortOrder
    currency?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    sessions?: PaymentSessionOrderByRelationAggregateInput
    order?: OrderOrderByWithRelationInput
  }

  export type PaymentWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PaymentWhereInput | PaymentWhereInput[]
    OR?: PaymentWhereInput[]
    NOT?: PaymentWhereInput | PaymentWhereInput[]
    method?: EnumPaymentMethodFilter<"Payment"> | $Enums.PaymentMethod
    provider?: EnumPaymentProviderFilter<"Payment"> | $Enums.PaymentProvider
    shipping?: FloatFilter<"Payment"> | number
    subtotal?: FloatFilter<"Payment"> | number
    total?: FloatFilter<"Payment"> | number
    discount?: FloatNullableFilter<"Payment"> | number | null
    currency?: EnumCurrencyFilter<"Payment"> | $Enums.Currency
    status?: EnumPaymentStatusFilter<"Payment"> | $Enums.PaymentStatus
    createdAt?: DateTimeFilter<"Payment"> | Date | string
    updatedAt?: DateTimeFilter<"Payment"> | Date | string
    sessions?: PaymentSessionListRelationFilter
    order?: XOR<OrderNullableScalarRelationFilter, OrderWhereInput> | null
  }, "id">

  export type PaymentOrderByWithAggregationInput = {
    id?: SortOrder
    method?: SortOrder
    provider?: SortOrder
    shipping?: SortOrder
    subtotal?: SortOrder
    total?: SortOrder
    discount?: SortOrderInput | SortOrder
    currency?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: PaymentCountOrderByAggregateInput
    _avg?: PaymentAvgOrderByAggregateInput
    _max?: PaymentMaxOrderByAggregateInput
    _min?: PaymentMinOrderByAggregateInput
    _sum?: PaymentSumOrderByAggregateInput
  }

  export type PaymentScalarWhereWithAggregatesInput = {
    AND?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    OR?: PaymentScalarWhereWithAggregatesInput[]
    NOT?: PaymentScalarWhereWithAggregatesInput | PaymentScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Payment"> | string
    method?: EnumPaymentMethodWithAggregatesFilter<"Payment"> | $Enums.PaymentMethod
    provider?: EnumPaymentProviderWithAggregatesFilter<"Payment"> | $Enums.PaymentProvider
    shipping?: FloatWithAggregatesFilter<"Payment"> | number
    subtotal?: FloatWithAggregatesFilter<"Payment"> | number
    total?: FloatWithAggregatesFilter<"Payment"> | number
    discount?: FloatNullableWithAggregatesFilter<"Payment"> | number | null
    currency?: EnumCurrencyWithAggregatesFilter<"Payment"> | $Enums.Currency
    status?: EnumPaymentStatusWithAggregatesFilter<"Payment"> | $Enums.PaymentStatus
    createdAt?: DateTimeWithAggregatesFilter<"Payment"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Payment"> | Date | string
  }

  export type PaymentSessionWhereInput = {
    AND?: PaymentSessionWhereInput | PaymentSessionWhereInput[]
    OR?: PaymentSessionWhereInput[]
    NOT?: PaymentSessionWhereInput | PaymentSessionWhereInput[]
    id?: StringFilter<"PaymentSession"> | string
    referenceId?: StringFilter<"PaymentSession"> | string
    amount?: FloatFilter<"PaymentSession"> | number
    currency?: EnumCurrencyFilter<"PaymentSession"> | $Enums.Currency
    rawData?: JsonFilter<"PaymentSession">
    capturedAt?: DateTimeNullableFilter<"PaymentSession"> | Date | string | null
    expiredAt?: DateTimeNullableFilter<"PaymentSession"> | Date | string | null
    createdAt?: DateTimeFilter<"PaymentSession"> | Date | string
    updatedAt?: DateTimeFilter<"PaymentSession"> | Date | string
    paymentId?: StringFilter<"PaymentSession"> | string
    payment?: XOR<PaymentScalarRelationFilter, PaymentWhereInput>
  }

  export type PaymentSessionOrderByWithRelationInput = {
    id?: SortOrder
    referenceId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    rawData?: SortOrder
    capturedAt?: SortOrderInput | SortOrder
    expiredAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    paymentId?: SortOrder
    payment?: PaymentOrderByWithRelationInput
  }

  export type PaymentSessionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    referenceId?: string
    AND?: PaymentSessionWhereInput | PaymentSessionWhereInput[]
    OR?: PaymentSessionWhereInput[]
    NOT?: PaymentSessionWhereInput | PaymentSessionWhereInput[]
    amount?: FloatFilter<"PaymentSession"> | number
    currency?: EnumCurrencyFilter<"PaymentSession"> | $Enums.Currency
    rawData?: JsonFilter<"PaymentSession">
    capturedAt?: DateTimeNullableFilter<"PaymentSession"> | Date | string | null
    expiredAt?: DateTimeNullableFilter<"PaymentSession"> | Date | string | null
    createdAt?: DateTimeFilter<"PaymentSession"> | Date | string
    updatedAt?: DateTimeFilter<"PaymentSession"> | Date | string
    paymentId?: StringFilter<"PaymentSession"> | string
    payment?: XOR<PaymentScalarRelationFilter, PaymentWhereInput>
  }, "id" | "referenceId">

  export type PaymentSessionOrderByWithAggregationInput = {
    id?: SortOrder
    referenceId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    rawData?: SortOrder
    capturedAt?: SortOrderInput | SortOrder
    expiredAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    paymentId?: SortOrder
    _count?: PaymentSessionCountOrderByAggregateInput
    _avg?: PaymentSessionAvgOrderByAggregateInput
    _max?: PaymentSessionMaxOrderByAggregateInput
    _min?: PaymentSessionMinOrderByAggregateInput
    _sum?: PaymentSessionSumOrderByAggregateInput
  }

  export type PaymentSessionScalarWhereWithAggregatesInput = {
    AND?: PaymentSessionScalarWhereWithAggregatesInput | PaymentSessionScalarWhereWithAggregatesInput[]
    OR?: PaymentSessionScalarWhereWithAggregatesInput[]
    NOT?: PaymentSessionScalarWhereWithAggregatesInput | PaymentSessionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PaymentSession"> | string
    referenceId?: StringWithAggregatesFilter<"PaymentSession"> | string
    amount?: FloatWithAggregatesFilter<"PaymentSession"> | number
    currency?: EnumCurrencyWithAggregatesFilter<"PaymentSession"> | $Enums.Currency
    rawData?: JsonWithAggregatesFilter<"PaymentSession">
    capturedAt?: DateTimeNullableWithAggregatesFilter<"PaymentSession"> | Date | string | null
    expiredAt?: DateTimeNullableWithAggregatesFilter<"PaymentSession"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"PaymentSession"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"PaymentSession"> | Date | string
    paymentId?: StringWithAggregatesFilter<"PaymentSession"> | string
  }

  export type CampaignWhereInput = {
    AND?: CampaignWhereInput | CampaignWhereInput[]
    OR?: CampaignWhereInput[]
    NOT?: CampaignWhereInput | CampaignWhereInput[]
    id?: StringFilter<"Campaign"> | string
    title?: StringFilter<"Campaign"> | string
    type?: EnumCampaignTypeFilter<"Campaign"> | $Enums.CampaignType
    validFrom?: DateTimeFilter<"Campaign"> | Date | string
    validTo?: DateTimeFilter<"Campaign"> | Date | string
    organizationId?: StringFilter<"Campaign"> | string
    amount?: FloatNullableFilter<"Campaign"> | number | null
    percentage?: FloatNullableFilter<"Campaign"> | number | null
    publishedAt?: DateTimeNullableFilter<"Campaign"> | Date | string | null
    publishedBy?: StringNullableFilter<"Campaign"> | string | null
    createdAt?: DateTimeFilter<"Campaign"> | Date | string
    updatedAt?: DateTimeFilter<"Campaign"> | Date | string
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
  }

  export type CampaignOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    type?: SortOrder
    validFrom?: SortOrder
    validTo?: SortOrder
    organizationId?: SortOrder
    amount?: SortOrderInput | SortOrder
    percentage?: SortOrderInput | SortOrder
    publishedAt?: SortOrderInput | SortOrder
    publishedBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    organization?: OrganizationOrderByWithRelationInput
  }

  export type CampaignWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CampaignWhereInput | CampaignWhereInput[]
    OR?: CampaignWhereInput[]
    NOT?: CampaignWhereInput | CampaignWhereInput[]
    title?: StringFilter<"Campaign"> | string
    type?: EnumCampaignTypeFilter<"Campaign"> | $Enums.CampaignType
    validFrom?: DateTimeFilter<"Campaign"> | Date | string
    validTo?: DateTimeFilter<"Campaign"> | Date | string
    organizationId?: StringFilter<"Campaign"> | string
    amount?: FloatNullableFilter<"Campaign"> | number | null
    percentage?: FloatNullableFilter<"Campaign"> | number | null
    publishedAt?: DateTimeNullableFilter<"Campaign"> | Date | string | null
    publishedBy?: StringNullableFilter<"Campaign"> | string | null
    createdAt?: DateTimeFilter<"Campaign"> | Date | string
    updatedAt?: DateTimeFilter<"Campaign"> | Date | string
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
  }, "id">

  export type CampaignOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    type?: SortOrder
    validFrom?: SortOrder
    validTo?: SortOrder
    organizationId?: SortOrder
    amount?: SortOrderInput | SortOrder
    percentage?: SortOrderInput | SortOrder
    publishedAt?: SortOrderInput | SortOrder
    publishedBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CampaignCountOrderByAggregateInput
    _avg?: CampaignAvgOrderByAggregateInput
    _max?: CampaignMaxOrderByAggregateInput
    _min?: CampaignMinOrderByAggregateInput
    _sum?: CampaignSumOrderByAggregateInput
  }

  export type CampaignScalarWhereWithAggregatesInput = {
    AND?: CampaignScalarWhereWithAggregatesInput | CampaignScalarWhereWithAggregatesInput[]
    OR?: CampaignScalarWhereWithAggregatesInput[]
    NOT?: CampaignScalarWhereWithAggregatesInput | CampaignScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Campaign"> | string
    title?: StringWithAggregatesFilter<"Campaign"> | string
    type?: EnumCampaignTypeWithAggregatesFilter<"Campaign"> | $Enums.CampaignType
    validFrom?: DateTimeWithAggregatesFilter<"Campaign"> | Date | string
    validTo?: DateTimeWithAggregatesFilter<"Campaign"> | Date | string
    organizationId?: StringWithAggregatesFilter<"Campaign"> | string
    amount?: FloatNullableWithAggregatesFilter<"Campaign"> | number | null
    percentage?: FloatNullableWithAggregatesFilter<"Campaign"> | number | null
    publishedAt?: DateTimeNullableWithAggregatesFilter<"Campaign"> | Date | string | null
    publishedBy?: StringNullableWithAggregatesFilter<"Campaign"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Campaign"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Campaign"> | Date | string
  }

  export type ShippingMethodWhereInput = {
    AND?: ShippingMethodWhereInput | ShippingMethodWhereInput[]
    OR?: ShippingMethodWhereInput[]
    NOT?: ShippingMethodWhereInput | ShippingMethodWhereInput[]
    id?: StringFilter<"ShippingMethod"> | string
    title?: StringFilter<"ShippingMethod"> | string
    providerName?: StringFilter<"ShippingMethod"> | string
    providerLogoId?: StringNullableFilter<"ShippingMethod"> | string | null
    requireDateOfDelivery?: BoolNullableFilter<"ShippingMethod"> | boolean | null
    organizationId?: StringFilter<"ShippingMethod"> | string
    archivedAt?: DateTimeNullableFilter<"ShippingMethod"> | Date | string | null
    archivedBy?: StringNullableFilter<"ShippingMethod"> | string | null
    publishedAt?: DateTimeNullableFilter<"ShippingMethod"> | Date | string | null
    publishedBy?: StringNullableFilter<"ShippingMethod"> | string | null
    createdAt?: DateTimeFilter<"ShippingMethod"> | Date | string
    createdBy?: StringNullableFilter<"ShippingMethod"> | string | null
    updatedAt?: DateTimeFilter<"ShippingMethod"> | Date | string
    updatedBy?: StringNullableFilter<"ShippingMethod"> | string | null
    providerLogo?: XOR<FileNullableScalarRelationFilter, FileWhereInput> | null
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
    shippingZones?: ShippingZoneListRelationFilter
    orders?: OrderListRelationFilter
  }

  export type ShippingMethodOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    providerName?: SortOrder
    providerLogoId?: SortOrderInput | SortOrder
    requireDateOfDelivery?: SortOrderInput | SortOrder
    organizationId?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    archivedBy?: SortOrderInput | SortOrder
    publishedAt?: SortOrderInput | SortOrder
    publishedBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    providerLogo?: FileOrderByWithRelationInput
    organization?: OrganizationOrderByWithRelationInput
    shippingZones?: ShippingZoneOrderByRelationAggregateInput
    orders?: OrderOrderByRelationAggregateInput
  }

  export type ShippingMethodWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    providerLogoId?: string
    AND?: ShippingMethodWhereInput | ShippingMethodWhereInput[]
    OR?: ShippingMethodWhereInput[]
    NOT?: ShippingMethodWhereInput | ShippingMethodWhereInput[]
    title?: StringFilter<"ShippingMethod"> | string
    providerName?: StringFilter<"ShippingMethod"> | string
    requireDateOfDelivery?: BoolNullableFilter<"ShippingMethod"> | boolean | null
    organizationId?: StringFilter<"ShippingMethod"> | string
    archivedAt?: DateTimeNullableFilter<"ShippingMethod"> | Date | string | null
    archivedBy?: StringNullableFilter<"ShippingMethod"> | string | null
    publishedAt?: DateTimeNullableFilter<"ShippingMethod"> | Date | string | null
    publishedBy?: StringNullableFilter<"ShippingMethod"> | string | null
    createdAt?: DateTimeFilter<"ShippingMethod"> | Date | string
    createdBy?: StringNullableFilter<"ShippingMethod"> | string | null
    updatedAt?: DateTimeFilter<"ShippingMethod"> | Date | string
    updatedBy?: StringNullableFilter<"ShippingMethod"> | string | null
    providerLogo?: XOR<FileNullableScalarRelationFilter, FileWhereInput> | null
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
    shippingZones?: ShippingZoneListRelationFilter
    orders?: OrderListRelationFilter
  }, "id" | "providerLogoId">

  export type ShippingMethodOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    providerName?: SortOrder
    providerLogoId?: SortOrderInput | SortOrder
    requireDateOfDelivery?: SortOrderInput | SortOrder
    organizationId?: SortOrder
    archivedAt?: SortOrderInput | SortOrder
    archivedBy?: SortOrderInput | SortOrder
    publishedAt?: SortOrderInput | SortOrder
    publishedBy?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrderInput | SortOrder
    _count?: ShippingMethodCountOrderByAggregateInput
    _max?: ShippingMethodMaxOrderByAggregateInput
    _min?: ShippingMethodMinOrderByAggregateInput
  }

  export type ShippingMethodScalarWhereWithAggregatesInput = {
    AND?: ShippingMethodScalarWhereWithAggregatesInput | ShippingMethodScalarWhereWithAggregatesInput[]
    OR?: ShippingMethodScalarWhereWithAggregatesInput[]
    NOT?: ShippingMethodScalarWhereWithAggregatesInput | ShippingMethodScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ShippingMethod"> | string
    title?: StringWithAggregatesFilter<"ShippingMethod"> | string
    providerName?: StringWithAggregatesFilter<"ShippingMethod"> | string
    providerLogoId?: StringNullableWithAggregatesFilter<"ShippingMethod"> | string | null
    requireDateOfDelivery?: BoolNullableWithAggregatesFilter<"ShippingMethod"> | boolean | null
    organizationId?: StringWithAggregatesFilter<"ShippingMethod"> | string
    archivedAt?: DateTimeNullableWithAggregatesFilter<"ShippingMethod"> | Date | string | null
    archivedBy?: StringNullableWithAggregatesFilter<"ShippingMethod"> | string | null
    publishedAt?: DateTimeNullableWithAggregatesFilter<"ShippingMethod"> | Date | string | null
    publishedBy?: StringNullableWithAggregatesFilter<"ShippingMethod"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"ShippingMethod"> | Date | string
    createdBy?: StringNullableWithAggregatesFilter<"ShippingMethod"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"ShippingMethod"> | Date | string
    updatedBy?: StringNullableWithAggregatesFilter<"ShippingMethod"> | string | null
  }

  export type ShippingZoneWhereInput = {
    AND?: ShippingZoneWhereInput | ShippingZoneWhereInput[]
    OR?: ShippingZoneWhereInput[]
    NOT?: ShippingZoneWhereInput | ShippingZoneWhereInput[]
    id?: StringFilter<"ShippingZone"> | string
    title?: StringFilter<"ShippingZone"> | string
    distanceUpto?: FloatNullableFilter<"ShippingZone"> | number | null
    price?: FloatFilter<"ShippingZone"> | number
    minimumOrderAmount?: FloatNullableFilter<"ShippingZone"> | number | null
    shippingMethodId?: StringFilter<"ShippingZone"> | string
    eta?: StringFilter<"ShippingZone"> | string
    createdAt?: DateTimeFilter<"ShippingZone"> | Date | string
    updatedAt?: DateTimeFilter<"ShippingZone"> | Date | string
    shippingMethod?: XOR<ShippingMethodScalarRelationFilter, ShippingMethodWhereInput>
  }

  export type ShippingZoneOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    distanceUpto?: SortOrderInput | SortOrder
    price?: SortOrder
    minimumOrderAmount?: SortOrderInput | SortOrder
    shippingMethodId?: SortOrder
    eta?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    shippingMethod?: ShippingMethodOrderByWithRelationInput
  }

  export type ShippingZoneWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ShippingZoneWhereInput | ShippingZoneWhereInput[]
    OR?: ShippingZoneWhereInput[]
    NOT?: ShippingZoneWhereInput | ShippingZoneWhereInput[]
    title?: StringFilter<"ShippingZone"> | string
    distanceUpto?: FloatNullableFilter<"ShippingZone"> | number | null
    price?: FloatFilter<"ShippingZone"> | number
    minimumOrderAmount?: FloatNullableFilter<"ShippingZone"> | number | null
    shippingMethodId?: StringFilter<"ShippingZone"> | string
    eta?: StringFilter<"ShippingZone"> | string
    createdAt?: DateTimeFilter<"ShippingZone"> | Date | string
    updatedAt?: DateTimeFilter<"ShippingZone"> | Date | string
    shippingMethod?: XOR<ShippingMethodScalarRelationFilter, ShippingMethodWhereInput>
  }, "id">

  export type ShippingZoneOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    distanceUpto?: SortOrderInput | SortOrder
    price?: SortOrder
    minimumOrderAmount?: SortOrderInput | SortOrder
    shippingMethodId?: SortOrder
    eta?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ShippingZoneCountOrderByAggregateInput
    _avg?: ShippingZoneAvgOrderByAggregateInput
    _max?: ShippingZoneMaxOrderByAggregateInput
    _min?: ShippingZoneMinOrderByAggregateInput
    _sum?: ShippingZoneSumOrderByAggregateInput
  }

  export type ShippingZoneScalarWhereWithAggregatesInput = {
    AND?: ShippingZoneScalarWhereWithAggregatesInput | ShippingZoneScalarWhereWithAggregatesInput[]
    OR?: ShippingZoneScalarWhereWithAggregatesInput[]
    NOT?: ShippingZoneScalarWhereWithAggregatesInput | ShippingZoneScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ShippingZone"> | string
    title?: StringWithAggregatesFilter<"ShippingZone"> | string
    distanceUpto?: FloatNullableWithAggregatesFilter<"ShippingZone"> | number | null
    price?: FloatWithAggregatesFilter<"ShippingZone"> | number
    minimumOrderAmount?: FloatNullableWithAggregatesFilter<"ShippingZone"> | number | null
    shippingMethodId?: StringWithAggregatesFilter<"ShippingZone"> | string
    eta?: StringWithAggregatesFilter<"ShippingZone"> | string
    createdAt?: DateTimeWithAggregatesFilter<"ShippingZone"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ShippingZone"> | Date | string
  }

  export type ReservationWhereInput = {
    AND?: ReservationWhereInput | ReservationWhereInput[]
    OR?: ReservationWhereInput[]
    NOT?: ReservationWhereInput | ReservationWhereInput[]
    id?: StringFilter<"Reservation"> | string
    firstname?: StringFilter<"Reservation"> | string
    lastname?: StringFilter<"Reservation"> | string
    userId?: StringNullableFilter<"Reservation"> | string | null
    guests?: IntFilter<"Reservation"> | number
    phone?: StringFilter<"Reservation"> | string
    date?: DateTimeFilter<"Reservation"> | Date | string
    referenceId?: StringFilter<"Reservation"> | string
    organizationId?: StringFilter<"Reservation"> | string
    createdAt?: DateTimeFilter<"Reservation"> | Date | string
    acceptedAt?: DateTimeNullableFilter<"Reservation"> | Date | string | null
    cancelledAt?: DateTimeNullableFilter<"Reservation"> | Date | string | null
    updatedAt?: DateTimeFilter<"Reservation"> | Date | string
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
  }

  export type ReservationOrderByWithRelationInput = {
    id?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    userId?: SortOrderInput | SortOrder
    guests?: SortOrder
    phone?: SortOrder
    date?: SortOrder
    referenceId?: SortOrder
    organizationId?: SortOrder
    createdAt?: SortOrder
    acceptedAt?: SortOrderInput | SortOrder
    cancelledAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    user?: UserOrderByWithRelationInput
    organization?: OrganizationOrderByWithRelationInput
  }

  export type ReservationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ReservationWhereInput | ReservationWhereInput[]
    OR?: ReservationWhereInput[]
    NOT?: ReservationWhereInput | ReservationWhereInput[]
    firstname?: StringFilter<"Reservation"> | string
    lastname?: StringFilter<"Reservation"> | string
    userId?: StringNullableFilter<"Reservation"> | string | null
    guests?: IntFilter<"Reservation"> | number
    phone?: StringFilter<"Reservation"> | string
    date?: DateTimeFilter<"Reservation"> | Date | string
    referenceId?: StringFilter<"Reservation"> | string
    organizationId?: StringFilter<"Reservation"> | string
    createdAt?: DateTimeFilter<"Reservation"> | Date | string
    acceptedAt?: DateTimeNullableFilter<"Reservation"> | Date | string | null
    cancelledAt?: DateTimeNullableFilter<"Reservation"> | Date | string | null
    updatedAt?: DateTimeFilter<"Reservation"> | Date | string
    user?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    organization?: XOR<OrganizationScalarRelationFilter, OrganizationWhereInput>
  }, "id">

  export type ReservationOrderByWithAggregationInput = {
    id?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    userId?: SortOrderInput | SortOrder
    guests?: SortOrder
    phone?: SortOrder
    date?: SortOrder
    referenceId?: SortOrder
    organizationId?: SortOrder
    createdAt?: SortOrder
    acceptedAt?: SortOrderInput | SortOrder
    cancelledAt?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    _count?: ReservationCountOrderByAggregateInput
    _avg?: ReservationAvgOrderByAggregateInput
    _max?: ReservationMaxOrderByAggregateInput
    _min?: ReservationMinOrderByAggregateInput
    _sum?: ReservationSumOrderByAggregateInput
  }

  export type ReservationScalarWhereWithAggregatesInput = {
    AND?: ReservationScalarWhereWithAggregatesInput | ReservationScalarWhereWithAggregatesInput[]
    OR?: ReservationScalarWhereWithAggregatesInput[]
    NOT?: ReservationScalarWhereWithAggregatesInput | ReservationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Reservation"> | string
    firstname?: StringWithAggregatesFilter<"Reservation"> | string
    lastname?: StringWithAggregatesFilter<"Reservation"> | string
    userId?: StringNullableWithAggregatesFilter<"Reservation"> | string | null
    guests?: IntWithAggregatesFilter<"Reservation"> | number
    phone?: StringWithAggregatesFilter<"Reservation"> | string
    date?: DateTimeWithAggregatesFilter<"Reservation"> | Date | string
    referenceId?: StringWithAggregatesFilter<"Reservation"> | string
    organizationId?: StringWithAggregatesFilter<"Reservation"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Reservation"> | Date | string
    acceptedAt?: DateTimeNullableWithAggregatesFilter<"Reservation"> | Date | string | null
    cancelledAt?: DateTimeNullableWithAggregatesFilter<"Reservation"> | Date | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"Reservation"> | Date | string
  }

  export type UserCreateInput = {
    id: string
    name: string
    firstname: string
    lastname: string
    email: string
    emailVerified: boolean
    image?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    sessions?: SessionCreateNestedManyWithoutUserInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    members?: MemberCreateNestedManyWithoutUserInput
    invitations?: InvitationCreateNestedManyWithoutUserInput
    shippingAddresses?: AddressCreateNestedManyWithoutUsersInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reservations?: ReservationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id: string
    name: string
    firstname: string
    lastname: string
    email: string
    emailVerified: boolean
    image?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    members?: MemberUncheckedCreateNestedManyWithoutUserInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutUserInput
    shippingAddresses?: AddressUncheckedCreateNestedManyWithoutUsersInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sessions?: SessionUpdateManyWithoutUserNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    members?: MemberUpdateManyWithoutUserNestedInput
    invitations?: InvitationUpdateManyWithoutUserNestedInput
    shippingAddresses?: AddressUpdateManyWithoutUsersNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reservations?: ReservationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    members?: MemberUncheckedUpdateManyWithoutUserNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutUserNestedInput
    shippingAddresses?: AddressUncheckedUpdateManyWithoutUsersNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id: string
    name: string
    firstname: string
    lastname: string
    email: string
    emailVerified: boolean
    image?: string | null
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionCreateInput = {
    id: string
    expiresAt: Date | string
    token: string
    createdAt: Date | string
    updatedAt: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    activeOrganizationId?: string | null
    user: UserCreateNestedOneWithoutSessionsInput
  }

  export type SessionUncheckedCreateInput = {
    id: string
    expiresAt: Date | string
    token: string
    createdAt: Date | string
    updatedAt: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    userId: string
    activeOrganizationId?: string | null
  }

  export type SessionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    token?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    activeOrganizationId?: NullableStringFieldUpdateOperationsInput | string | null
    user?: UserUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type SessionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    token?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    activeOrganizationId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SessionCreateManyInput = {
    id: string
    expiresAt: Date | string
    token: string
    createdAt: Date | string
    updatedAt: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    userId: string
    activeOrganizationId?: string | null
  }

  export type SessionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    token?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    activeOrganizationId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SessionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    token?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    activeOrganizationId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountCreateInput = {
    id: string
    accountId: string
    providerId: string
    accessToken?: string | null
    refreshToken?: string | null
    idToken?: string | null
    accessTokenExpiresAt?: Date | string | null
    refreshTokenExpiresAt?: Date | string | null
    scope?: string | null
    password?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    user: UserCreateNestedOneWithoutAccountsInput
  }

  export type AccountUncheckedCreateInput = {
    id: string
    accountId: string
    providerId: string
    userId: string
    accessToken?: string | null
    refreshToken?: string | null
    idToken?: string | null
    accessTokenExpiresAt?: Date | string | null
    refreshTokenExpiresAt?: Date | string | null
    scope?: string | null
    password?: string | null
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type AccountUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    idToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutAccountsNestedInput
  }

  export type AccountUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    idToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountCreateManyInput = {
    id: string
    accountId: string
    providerId: string
    userId: string
    accessToken?: string | null
    refreshToken?: string | null
    idToken?: string | null
    accessTokenExpiresAt?: Date | string | null
    refreshTokenExpiresAt?: Date | string | null
    scope?: string | null
    password?: string | null
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type AccountUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    idToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    idToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationCreateInput = {
    id: string
    identifier: string
    value: string
    expiresAt: Date | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type VerificationUncheckedCreateInput = {
    id: string
    identifier: string
    value: string
    expiresAt: Date | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type VerificationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    identifier?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type VerificationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    identifier?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type VerificationCreateManyInput = {
    id: string
    identifier: string
    value: string
    expiresAt: Date | string
    createdAt?: Date | string | null
    updatedAt?: Date | string | null
  }

  export type VerificationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    identifier?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type VerificationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    identifier?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type MemberCreateInput = {
    id?: string
    role: string
    createdAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutMembersInput
    user: UserCreateNestedOneWithoutMembersInput
  }

  export type MemberUncheckedCreateInput = {
    id?: string
    organizationId: string
    userId: string
    role: string
    createdAt?: Date | string
  }

  export type MemberUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutMembersNestedInput
    user?: UserUpdateOneRequiredWithoutMembersNestedInput
  }

  export type MemberUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MemberCreateManyInput = {
    id?: string
    organizationId: string
    userId: string
    role: string
    createdAt?: Date | string
  }

  export type MemberUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MemberUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InvitationCreateInput = {
    id: string
    email: string
    role?: string | null
    status: string
    expiresAt: Date | string
    organization: OrganizationCreateNestedOneWithoutInvitationsInput
    user: UserCreateNestedOneWithoutInvitationsInput
  }

  export type InvitationUncheckedCreateInput = {
    id: string
    organizationId: string
    email: string
    role?: string | null
    status: string
    expiresAt: Date | string
    inviterId: string
  }

  export type InvitationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutInvitationsNestedInput
    user?: UserUpdateOneRequiredWithoutInvitationsNestedInput
  }

  export type InvitationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inviterId?: StringFieldUpdateOperationsInput | string
  }

  export type InvitationCreateManyInput = {
    id: string
    organizationId: string
    email: string
    role?: string | null
    status: string
    expiresAt: Date | string
    inviterId: string
  }

  export type InvitationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InvitationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inviterId?: StringFieldUpdateOperationsInput | string
  }

  export type OrganizationCreateInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    logo?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    legalEntity?: LegalEntityCreateNestedOneWithoutOrganizationsInput
    address: AddressCreateNestedOneWithoutOrganizationsInput
    configuration: OrganizationConfigurationCreateNestedOneWithoutOrganizationsInput
    logoFile?: FileCreateNestedOneWithoutOrganizationLogoInput
    files?: FileCreateNestedManyWithoutOrganizationInput
    members?: MemberCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationCreateNestedManyWithoutOrganizationInput
    orders?: OrderCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryCreateNestedManyWithoutOrganizationInput
    products?: ProductCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    legalEntityId?: string | null
    addressId: string
    configurationId: string
    logo?: string | null
    logoId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    files?: FileUncheckedCreateNestedManyWithoutOrganizationInput
    members?: MemberUncheckedCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganizationInput
    orders?: OrderUncheckedCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignUncheckedCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodUncheckedCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerUncheckedCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryUncheckedCreateNestedManyWithoutOrganizationInput
    products?: ProductUncheckedCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntity?: LegalEntityUpdateOneWithoutOrganizationsNestedInput
    address?: AddressUpdateOneRequiredWithoutOrganizationsNestedInput
    configuration?: OrganizationConfigurationUpdateOneRequiredWithoutOrganizationsNestedInput
    logoFile?: FileUpdateOneWithoutOrganizationLogoNestedInput
    files?: FileUpdateManyWithoutOrganizationNestedInput
    members?: MemberUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUpdateManyWithoutOrganizationNestedInput
    products?: ProductUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: StringFieldUpdateOperationsInput | string
    configurationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    logoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    files?: FileUncheckedUpdateManyWithoutOrganizationNestedInput
    members?: MemberUncheckedUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUncheckedUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUncheckedUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUncheckedUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUncheckedUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
    products?: ProductUncheckedUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationCreateManyInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    legalEntityId?: string | null
    addressId: string
    configurationId: string
    logo?: string | null
    logoId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type OrganizationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrganizationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: StringFieldUpdateOperationsInput | string
    configurationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    logoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OpeningTimesCreateInput = {
    id?: string
    monday?: Date | string | null
    tuesday?: Date | string | null
    wednesday?: Date | string | null
    thursday?: Date | string | null
    friday?: Date | string | null
    saturday?: Date | string | null
    sunday?: Date | string | null
    organizationConfiguration?: OrganizationConfigurationCreateNestedOneWithoutOpeningTimesInput
  }

  export type OpeningTimesUncheckedCreateInput = {
    id?: string
    monday?: Date | string | null
    tuesday?: Date | string | null
    wednesday?: Date | string | null
    thursday?: Date | string | null
    friday?: Date | string | null
    saturday?: Date | string | null
    sunday?: Date | string | null
    organizationConfiguration?: OrganizationConfigurationUncheckedCreateNestedOneWithoutOpeningTimesInput
  }

  export type OpeningTimesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    monday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tuesday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    wednesday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    thursday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    friday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saturday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sunday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organizationConfiguration?: OrganizationConfigurationUpdateOneWithoutOpeningTimesNestedInput
  }

  export type OpeningTimesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    monday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tuesday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    wednesday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    thursday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    friday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saturday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sunday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organizationConfiguration?: OrganizationConfigurationUncheckedUpdateOneWithoutOpeningTimesNestedInput
  }

  export type OpeningTimesCreateManyInput = {
    id?: string
    monday?: Date | string | null
    tuesday?: Date | string | null
    wednesday?: Date | string | null
    thursday?: Date | string | null
    friday?: Date | string | null
    saturday?: Date | string | null
    sunday?: Date | string | null
  }

  export type OpeningTimesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    monday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tuesday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    wednesday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    thursday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    friday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saturday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sunday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OpeningTimesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    monday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tuesday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    wednesday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    thursday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    friday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saturday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sunday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ClosingTimesCreateInput = {
    id?: string
    monday?: Date | string | null
    tuesday?: Date | string | null
    wednesday?: Date | string | null
    thursday?: Date | string | null
    friday?: Date | string | null
    saturday?: Date | string | null
    sunday?: Date | string | null
    organizationConfiguration?: OrganizationConfigurationCreateNestedOneWithoutClosingTimesInput
  }

  export type ClosingTimesUncheckedCreateInput = {
    id?: string
    monday?: Date | string | null
    tuesday?: Date | string | null
    wednesday?: Date | string | null
    thursday?: Date | string | null
    friday?: Date | string | null
    saturday?: Date | string | null
    sunday?: Date | string | null
    organizationConfiguration?: OrganizationConfigurationUncheckedCreateNestedOneWithoutClosingTimesInput
  }

  export type ClosingTimesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    monday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tuesday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    wednesday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    thursday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    friday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saturday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sunday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organizationConfiguration?: OrganizationConfigurationUpdateOneWithoutClosingTimesNestedInput
  }

  export type ClosingTimesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    monday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tuesday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    wednesday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    thursday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    friday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saturday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sunday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    organizationConfiguration?: OrganizationConfigurationUncheckedUpdateOneWithoutClosingTimesNestedInput
  }

  export type ClosingTimesCreateManyInput = {
    id?: string
    monday?: Date | string | null
    tuesday?: Date | string | null
    wednesday?: Date | string | null
    thursday?: Date | string | null
    friday?: Date | string | null
    saturday?: Date | string | null
    sunday?: Date | string | null
  }

  export type ClosingTimesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    monday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tuesday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    wednesday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    thursday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    friday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saturday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sunday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ClosingTimesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    monday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tuesday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    wednesday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    thursday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    friday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saturday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sunday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OrganizationConfigurationCreateInput = {
    id?: string
    hostname?: string | null
    countriesShipping?: OrganizationConfigurationCreatecountriesShippingInput | string[]
    stripeAccountId?: string | null
    enableHostCheckout: boolean
    enableHostTracking: boolean
    isAcceptingOrders?: boolean | null
    defaultCurrency?: $Enums.Currency
    defaultLocale?: $Enums.Locale
    supportedLocales?: OrganizationConfigurationCreatesupportedLocalesInput | $Enums.Locale[]
    facebookProfile?: string | null
    instagramProfile?: string | null
    xProfile?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    openingTimes?: OpeningTimesCreateNestedOneWithoutOrganizationConfigurationInput
    closingTimes?: ClosingTimesCreateNestedOneWithoutOrganizationConfigurationInput
    organizations?: OrganizationCreateNestedManyWithoutConfigurationInput
  }

  export type OrganizationConfigurationUncheckedCreateInput = {
    id?: string
    hostname?: string | null
    countriesShipping?: OrganizationConfigurationCreatecountriesShippingInput | string[]
    stripeAccountId?: string | null
    enableHostCheckout: boolean
    enableHostTracking: boolean
    isAcceptingOrders?: boolean | null
    defaultCurrency?: $Enums.Currency
    defaultLocale?: $Enums.Locale
    supportedLocales?: OrganizationConfigurationCreatesupportedLocalesInput | $Enums.Locale[]
    openingTimesId?: string | null
    closingTimesId?: string | null
    facebookProfile?: string | null
    instagramProfile?: string | null
    xProfile?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    organizations?: OrganizationUncheckedCreateNestedManyWithoutConfigurationInput
  }

  export type OrganizationConfigurationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    hostname?: NullableStringFieldUpdateOperationsInput | string | null
    countriesShipping?: OrganizationConfigurationUpdatecountriesShippingInput | string[]
    stripeAccountId?: NullableStringFieldUpdateOperationsInput | string | null
    enableHostCheckout?: BoolFieldUpdateOperationsInput | boolean
    enableHostTracking?: BoolFieldUpdateOperationsInput | boolean
    isAcceptingOrders?: NullableBoolFieldUpdateOperationsInput | boolean | null
    defaultCurrency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    defaultLocale?: EnumLocaleFieldUpdateOperationsInput | $Enums.Locale
    supportedLocales?: OrganizationConfigurationUpdatesupportedLocalesInput | $Enums.Locale[]
    facebookProfile?: NullableStringFieldUpdateOperationsInput | string | null
    instagramProfile?: NullableStringFieldUpdateOperationsInput | string | null
    xProfile?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    openingTimes?: OpeningTimesUpdateOneWithoutOrganizationConfigurationNestedInput
    closingTimes?: ClosingTimesUpdateOneWithoutOrganizationConfigurationNestedInput
    organizations?: OrganizationUpdateManyWithoutConfigurationNestedInput
  }

  export type OrganizationConfigurationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    hostname?: NullableStringFieldUpdateOperationsInput | string | null
    countriesShipping?: OrganizationConfigurationUpdatecountriesShippingInput | string[]
    stripeAccountId?: NullableStringFieldUpdateOperationsInput | string | null
    enableHostCheckout?: BoolFieldUpdateOperationsInput | boolean
    enableHostTracking?: BoolFieldUpdateOperationsInput | boolean
    isAcceptingOrders?: NullableBoolFieldUpdateOperationsInput | boolean | null
    defaultCurrency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    defaultLocale?: EnumLocaleFieldUpdateOperationsInput | $Enums.Locale
    supportedLocales?: OrganizationConfigurationUpdatesupportedLocalesInput | $Enums.Locale[]
    openingTimesId?: NullableStringFieldUpdateOperationsInput | string | null
    closingTimesId?: NullableStringFieldUpdateOperationsInput | string | null
    facebookProfile?: NullableStringFieldUpdateOperationsInput | string | null
    instagramProfile?: NullableStringFieldUpdateOperationsInput | string | null
    xProfile?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organizations?: OrganizationUncheckedUpdateManyWithoutConfigurationNestedInput
  }

  export type OrganizationConfigurationCreateManyInput = {
    id?: string
    hostname?: string | null
    countriesShipping?: OrganizationConfigurationCreatecountriesShippingInput | string[]
    stripeAccountId?: string | null
    enableHostCheckout: boolean
    enableHostTracking: boolean
    isAcceptingOrders?: boolean | null
    defaultCurrency?: $Enums.Currency
    defaultLocale?: $Enums.Locale
    supportedLocales?: OrganizationConfigurationCreatesupportedLocalesInput | $Enums.Locale[]
    openingTimesId?: string | null
    closingTimesId?: string | null
    facebookProfile?: string | null
    instagramProfile?: string | null
    xProfile?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
  }

  export type OrganizationConfigurationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    hostname?: NullableStringFieldUpdateOperationsInput | string | null
    countriesShipping?: OrganizationConfigurationUpdatecountriesShippingInput | string[]
    stripeAccountId?: NullableStringFieldUpdateOperationsInput | string | null
    enableHostCheckout?: BoolFieldUpdateOperationsInput | boolean
    enableHostTracking?: BoolFieldUpdateOperationsInput | boolean
    isAcceptingOrders?: NullableBoolFieldUpdateOperationsInput | boolean | null
    defaultCurrency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    defaultLocale?: EnumLocaleFieldUpdateOperationsInput | $Enums.Locale
    supportedLocales?: OrganizationConfigurationUpdatesupportedLocalesInput | $Enums.Locale[]
    facebookProfile?: NullableStringFieldUpdateOperationsInput | string | null
    instagramProfile?: NullableStringFieldUpdateOperationsInput | string | null
    xProfile?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrganizationConfigurationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    hostname?: NullableStringFieldUpdateOperationsInput | string | null
    countriesShipping?: OrganizationConfigurationUpdatecountriesShippingInput | string[]
    stripeAccountId?: NullableStringFieldUpdateOperationsInput | string | null
    enableHostCheckout?: BoolFieldUpdateOperationsInput | boolean
    enableHostTracking?: BoolFieldUpdateOperationsInput | boolean
    isAcceptingOrders?: NullableBoolFieldUpdateOperationsInput | boolean | null
    defaultCurrency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    defaultLocale?: EnumLocaleFieldUpdateOperationsInput | $Enums.Locale
    supportedLocales?: OrganizationConfigurationUpdatesupportedLocalesInput | $Enums.Locale[]
    openingTimesId?: NullableStringFieldUpdateOperationsInput | string | null
    closingTimesId?: NullableStringFieldUpdateOperationsInput | string | null
    facebookProfile?: NullableStringFieldUpdateOperationsInput | string | null
    instagramProfile?: NullableStringFieldUpdateOperationsInput | string | null
    xProfile?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AddressCreateInput = {
    id?: string
    firstname?: string | null
    lastname?: string | null
    phone?: string | null
    addressLineOne: string
    doorNumber?: string | null
    addressLineTwo?: string | null
    zipCode?: string | null
    placeId?: string | null
    deliveryInstructions?: string | null
    city: string
    country?: string | null
    latitude?: number | null
    longitude?: number | null
    isDefault?: boolean
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    LegalEntity?: LegalEntityCreateNestedManyWithoutAddressInput
    organizations?: OrganizationCreateNestedManyWithoutAddressInput
    users?: UserCreateNestedManyWithoutShippingAddressesInput
    orders?: OrderCreateNestedManyWithoutShippingAddressInput
  }

  export type AddressUncheckedCreateInput = {
    id?: string
    firstname?: string | null
    lastname?: string | null
    phone?: string | null
    addressLineOne: string
    doorNumber?: string | null
    addressLineTwo?: string | null
    zipCode?: string | null
    placeId?: string | null
    deliveryInstructions?: string | null
    city: string
    country?: string | null
    latitude?: number | null
    longitude?: number | null
    isDefault?: boolean
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    LegalEntity?: LegalEntityUncheckedCreateNestedManyWithoutAddressInput
    organizations?: OrganizationUncheckedCreateNestedManyWithoutAddressInput
    users?: UserUncheckedCreateNestedManyWithoutShippingAddressesInput
    orders?: OrderUncheckedCreateNestedManyWithoutShippingAddressInput
  }

  export type AddressUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    addressLineOne?: StringFieldUpdateOperationsInput | string
    doorNumber?: NullableStringFieldUpdateOperationsInput | string | null
    addressLineTwo?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    placeId?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    LegalEntity?: LegalEntityUpdateManyWithoutAddressNestedInput
    organizations?: OrganizationUpdateManyWithoutAddressNestedInput
    users?: UserUpdateManyWithoutShippingAddressesNestedInput
    orders?: OrderUpdateManyWithoutShippingAddressNestedInput
  }

  export type AddressUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    addressLineOne?: StringFieldUpdateOperationsInput | string
    doorNumber?: NullableStringFieldUpdateOperationsInput | string | null
    addressLineTwo?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    placeId?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    LegalEntity?: LegalEntityUncheckedUpdateManyWithoutAddressNestedInput
    organizations?: OrganizationUncheckedUpdateManyWithoutAddressNestedInput
    users?: UserUncheckedUpdateManyWithoutShippingAddressesNestedInput
    orders?: OrderUncheckedUpdateManyWithoutShippingAddressNestedInput
  }

  export type AddressCreateManyInput = {
    id?: string
    firstname?: string | null
    lastname?: string | null
    phone?: string | null
    addressLineOne: string
    doorNumber?: string | null
    addressLineTwo?: string | null
    zipCode?: string | null
    placeId?: string | null
    deliveryInstructions?: string | null
    city: string
    country?: string | null
    latitude?: number | null
    longitude?: number | null
    isDefault?: boolean
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type AddressUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    addressLineOne?: StringFieldUpdateOperationsInput | string
    doorNumber?: NullableStringFieldUpdateOperationsInput | string | null
    addressLineTwo?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    placeId?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AddressUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    addressLineOne?: StringFieldUpdateOperationsInput | string
    doorNumber?: NullableStringFieldUpdateOperationsInput | string | null
    addressLineTwo?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    placeId?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LegalEntityCreateInput = {
    id?: string
    name: string
    taxId: string
    email?: string | null
    phone?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    address: AddressCreateNestedOneWithoutLegalEntityInput
    organizations?: OrganizationCreateNestedManyWithoutLegalEntityInput
  }

  export type LegalEntityUncheckedCreateInput = {
    id?: string
    name: string
    taxId: string
    addressId: string
    email?: string | null
    phone?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    organizations?: OrganizationUncheckedCreateNestedManyWithoutLegalEntityInput
  }

  export type LegalEntityUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    address?: AddressUpdateOneRequiredWithoutLegalEntityNestedInput
    organizations?: OrganizationUpdateManyWithoutLegalEntityNestedInput
  }

  export type LegalEntityUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    addressId?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organizations?: OrganizationUncheckedUpdateManyWithoutLegalEntityNestedInput
  }

  export type LegalEntityCreateManyInput = {
    id?: string
    name: string
    taxId: string
    addressId: string
    email?: string | null
    phone?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type LegalEntityUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LegalEntityUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    addressId?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FileCreateInput = {
    id?: string
    mimeType?: string | null
    size?: number | null
    filename?: string | null
    url?: string | null
    status?: $Enums.FileUploadStatus
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    organization?: OrganizationCreateNestedOneWithoutFilesInput
    manufacturerLogo?: ManufacturerCreateNestedOneWithoutLogoInput
    productCategoryImage?: ProductCategoryCreateNestedOneWithoutImageInput
    productImages?: ProductCreateNestedManyWithoutImagesInput
    modifierImages?: ModifierCreateNestedManyWithoutImagesInput
    shippingMethodLogoFor?: ShippingMethodCreateNestedOneWithoutProviderLogoInput
    organizationLogo?: OrganizationCreateNestedOneWithoutLogoFileInput
    orderItemImages?: OrderItemCreateNestedManyWithoutImageInput
  }

  export type FileUncheckedCreateInput = {
    id?: string
    mimeType?: string | null
    size?: number | null
    filename?: string | null
    url?: string | null
    status?: $Enums.FileUploadStatus
    organizationId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    manufacturerLogo?: ManufacturerUncheckedCreateNestedOneWithoutLogoInput
    productCategoryImage?: ProductCategoryUncheckedCreateNestedOneWithoutImageInput
    productImages?: ProductUncheckedCreateNestedManyWithoutImagesInput
    modifierImages?: ModifierUncheckedCreateNestedManyWithoutImagesInput
    shippingMethodLogoFor?: ShippingMethodUncheckedCreateNestedOneWithoutProviderLogoInput
    organizationLogo?: OrganizationUncheckedCreateNestedOneWithoutLogoFileInput
    orderItemImages?: OrderItemUncheckedCreateNestedManyWithoutImageInput
  }

  export type FileUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumFileUploadStatusFieldUpdateOperationsInput | $Enums.FileUploadStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: OrganizationUpdateOneWithoutFilesNestedInput
    manufacturerLogo?: ManufacturerUpdateOneWithoutLogoNestedInput
    productCategoryImage?: ProductCategoryUpdateOneWithoutImageNestedInput
    productImages?: ProductUpdateManyWithoutImagesNestedInput
    modifierImages?: ModifierUpdateManyWithoutImagesNestedInput
    shippingMethodLogoFor?: ShippingMethodUpdateOneWithoutProviderLogoNestedInput
    organizationLogo?: OrganizationUpdateOneWithoutLogoFileNestedInput
    orderItemImages?: OrderItemUpdateManyWithoutImageNestedInput
  }

  export type FileUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumFileUploadStatusFieldUpdateOperationsInput | $Enums.FileUploadStatus
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerLogo?: ManufacturerUncheckedUpdateOneWithoutLogoNestedInput
    productCategoryImage?: ProductCategoryUncheckedUpdateOneWithoutImageNestedInput
    productImages?: ProductUncheckedUpdateManyWithoutImagesNestedInput
    modifierImages?: ModifierUncheckedUpdateManyWithoutImagesNestedInput
    shippingMethodLogoFor?: ShippingMethodUncheckedUpdateOneWithoutProviderLogoNestedInput
    organizationLogo?: OrganizationUncheckedUpdateOneWithoutLogoFileNestedInput
    orderItemImages?: OrderItemUncheckedUpdateManyWithoutImageNestedInput
  }

  export type FileCreateManyInput = {
    id?: string
    mimeType?: string | null
    size?: number | null
    filename?: string | null
    url?: string | null
    status?: $Enums.FileUploadStatus
    organizationId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type FileUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumFileUploadStatusFieldUpdateOperationsInput | $Enums.FileUploadStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FileUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumFileUploadStatusFieldUpdateOperationsInput | $Enums.FileUploadStatus
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ManufacturerCreateInput = {
    id?: string
    name: string
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    logo?: FileCreateNestedOneWithoutManufacturerLogoInput
    organization: OrganizationCreateNestedOneWithoutManufacturersInput
    products?: ProductCreateNestedManyWithoutManufacturerInput
    translations?: ManufacturerTranslationCreateNestedManyWithoutManufacturerInput
  }

  export type ManufacturerUncheckedCreateInput = {
    id?: string
    name: string
    logoId?: string | null
    organizationId: string
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    products?: ProductUncheckedCreateNestedManyWithoutManufacturerInput
    translations?: ManufacturerTranslationUncheckedCreateNestedManyWithoutManufacturerInput
  }

  export type ManufacturerUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: FileUpdateOneWithoutManufacturerLogoNestedInput
    organization?: OrganizationUpdateOneRequiredWithoutManufacturersNestedInput
    products?: ProductUpdateManyWithoutManufacturerNestedInput
    translations?: ManufacturerTranslationUpdateManyWithoutManufacturerNestedInput
  }

  export type ManufacturerUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logoId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    products?: ProductUncheckedUpdateManyWithoutManufacturerNestedInput
    translations?: ManufacturerTranslationUncheckedUpdateManyWithoutManufacturerNestedInput
  }

  export type ManufacturerCreateManyInput = {
    id?: string
    name: string
    logoId?: string | null
    organizationId: string
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ManufacturerUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ManufacturerUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logoId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ManufacturerTranslationCreateInput = {
    id?: string
    locale: string
    about?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    manufacturer: ManufacturerCreateNestedOneWithoutTranslationsInput
  }

  export type ManufacturerTranslationUncheckedCreateInput = {
    id?: string
    locale: string
    about?: string | null
    manufacturerId: string
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
  }

  export type ManufacturerTranslationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    about?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturer?: ManufacturerUpdateOneRequiredWithoutTranslationsNestedInput
  }

  export type ManufacturerTranslationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    about?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ManufacturerTranslationCreateManyInput = {
    id?: string
    locale: string
    about?: string | null
    manufacturerId: string
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
  }

  export type ManufacturerTranslationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    about?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ManufacturerTranslationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    about?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductCategoryCreateInput = {
    id?: string
    slug?: string | null
    priority?: number | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    organization: OrganizationCreateNestedOneWithoutProductCategoriesInput
    image?: FileCreateNestedOneWithoutProductCategoryImageInput
    translations?: ProductCategoryTranslationCreateNestedManyWithoutProductCategoryInput
    products?: ProductCreateNestedManyWithoutCategoriesInput
  }

  export type ProductCategoryUncheckedCreateInput = {
    id?: string
    slug?: string | null
    organizationId: string
    priority?: number | null
    imageId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    translations?: ProductCategoryTranslationUncheckedCreateNestedManyWithoutProductCategoryInput
    products?: ProductUncheckedCreateNestedManyWithoutCategoriesInput
  }

  export type ProductCategoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: OrganizationUpdateOneRequiredWithoutProductCategoriesNestedInput
    image?: FileUpdateOneWithoutProductCategoryImageNestedInput
    translations?: ProductCategoryTranslationUpdateManyWithoutProductCategoryNestedInput
    products?: ProductUpdateManyWithoutCategoriesNestedInput
  }

  export type ProductCategoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: StringFieldUpdateOperationsInput | string
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    translations?: ProductCategoryTranslationUncheckedUpdateManyWithoutProductCategoryNestedInput
    products?: ProductUncheckedUpdateManyWithoutCategoriesNestedInput
  }

  export type ProductCategoryCreateManyInput = {
    id?: string
    slug?: string | null
    organizationId: string
    priority?: number | null
    imageId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
  }

  export type ProductCategoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductCategoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: StringFieldUpdateOperationsInput | string
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductCategoryTranslationCreateInput = {
    id?: string
    locale: string
    title?: string | null
    description?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    productCategory: ProductCategoryCreateNestedOneWithoutTranslationsInput
  }

  export type ProductCategoryTranslationUncheckedCreateInput = {
    id?: string
    locale: string
    title?: string | null
    description?: string | null
    productCategoryId: string
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
  }

  export type ProductCategoryTranslationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    productCategory?: ProductCategoryUpdateOneRequiredWithoutTranslationsNestedInput
  }

  export type ProductCategoryTranslationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    productCategoryId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductCategoryTranslationCreateManyInput = {
    id?: string
    locale: string
    title?: string | null
    description?: string | null
    productCategoryId: string
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
  }

  export type ProductCategoryTranslationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductCategoryTranslationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    productCategoryId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductCreateInput = {
    id?: string
    content?: string | null
    slug?: string | null
    sku?: string | null
    basePrice: number
    discountedBasePrice?: number | null
    currency: string
    tags?: ProductCreatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: Date | string | null
    publishedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    images?: FileCreateNestedManyWithoutProductImagesInput
    organization: OrganizationCreateNestedOneWithoutProductsInput
    manufacturer?: ManufacturerCreateNestedOneWithoutProductsInput
    categories?: ProductCategoryCreateNestedManyWithoutProductsInput
    modifierGroups?: ModifierGroupCreateNestedManyWithoutProductsInput
    translations?: ProductTranslationCreateNestedManyWithoutProductInput
    snapshots?: ProductSnapshotCreateNestedManyWithoutProductInput
    latestSnapshot?: ProductSnapshotCreateNestedOneWithoutLatestForProductInput
  }

  export type ProductUncheckedCreateInput = {
    id?: string
    content?: string | null
    slug?: string | null
    sku?: string | null
    basePrice: number
    discountedBasePrice?: number | null
    currency: string
    organizationId: string
    manufacturerId?: string | null
    tags?: ProductCreatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: Date | string | null
    publishedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    latestSnapshotId?: string | null
    images?: FileUncheckedCreateNestedManyWithoutProductImagesInput
    categories?: ProductCategoryUncheckedCreateNestedManyWithoutProductsInput
    modifierGroups?: ModifierGroupUncheckedCreateNestedManyWithoutProductsInput
    translations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
    snapshots?: ProductSnapshotUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: FloatFieldUpdateOperationsInput | number
    discountedBasePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    tags?: ProductUpdatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    images?: FileUpdateManyWithoutProductImagesNestedInput
    organization?: OrganizationUpdateOneRequiredWithoutProductsNestedInput
    manufacturer?: ManufacturerUpdateOneWithoutProductsNestedInput
    categories?: ProductCategoryUpdateManyWithoutProductsNestedInput
    modifierGroups?: ModifierGroupUpdateManyWithoutProductsNestedInput
    translations?: ProductTranslationUpdateManyWithoutProductNestedInput
    snapshots?: ProductSnapshotUpdateManyWithoutProductNestedInput
    latestSnapshot?: ProductSnapshotUpdateOneWithoutLatestForProductNestedInput
  }

  export type ProductUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: FloatFieldUpdateOperationsInput | number
    discountedBasePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    manufacturerId?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: ProductUpdatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    latestSnapshotId?: NullableStringFieldUpdateOperationsInput | string | null
    images?: FileUncheckedUpdateManyWithoutProductImagesNestedInput
    categories?: ProductCategoryUncheckedUpdateManyWithoutProductsNestedInput
    modifierGroups?: ModifierGroupUncheckedUpdateManyWithoutProductsNestedInput
    translations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
    snapshots?: ProductSnapshotUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductCreateManyInput = {
    id?: string
    content?: string | null
    slug?: string | null
    sku?: string | null
    basePrice: number
    discountedBasePrice?: number | null
    currency: string
    organizationId: string
    manufacturerId?: string | null
    tags?: ProductCreatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: Date | string | null
    publishedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    latestSnapshotId?: string | null
  }

  export type ProductUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: FloatFieldUpdateOperationsInput | number
    discountedBasePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    tags?: ProductUpdatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: FloatFieldUpdateOperationsInput | number
    discountedBasePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    manufacturerId?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: ProductUpdatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    latestSnapshotId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductSnapshotCreateInput = {
    id?: string
    data: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    createdBy?: string | null
    product: ProductCreateNestedOneWithoutSnapshotsInput
    latestForProduct?: ProductCreateNestedOneWithoutLatestSnapshotInput
    orderItems?: OrderItemCreateNestedManyWithoutProductSnapshotInput
  }

  export type ProductSnapshotUncheckedCreateInput = {
    id?: string
    productId: string
    data: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    createdBy?: string | null
    latestForProduct?: ProductUncheckedCreateNestedOneWithoutLatestSnapshotInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductSnapshotInput
  }

  export type ProductSnapshotUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    product?: ProductUpdateOneRequiredWithoutSnapshotsNestedInput
    latestForProduct?: ProductUpdateOneWithoutLatestSnapshotNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductSnapshotNestedInput
  }

  export type ProductSnapshotUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    latestForProduct?: ProductUncheckedUpdateOneWithoutLatestSnapshotNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductSnapshotNestedInput
  }

  export type ProductSnapshotCreateManyInput = {
    id?: string
    productId: string
    data: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    createdBy?: string | null
  }

  export type ProductSnapshotUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductSnapshotUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductTranslationCreateInput = {
    id?: string
    locale: string
    title?: string | null
    description?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    product: ProductCreateNestedOneWithoutTranslationsInput
  }

  export type ProductTranslationUncheckedCreateInput = {
    id?: string
    locale: string
    title?: string | null
    description?: string | null
    productId: string
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
  }

  export type ProductTranslationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    product?: ProductUpdateOneRequiredWithoutTranslationsNestedInput
  }

  export type ProductTranslationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductTranslationCreateManyInput = {
    id?: string
    locale: string
    title?: string | null
    description?: string | null
    productId: string
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
  }

  export type ProductTranslationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductTranslationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ModifierGroupCreateInput = {
    id?: string
    selectMin?: number | null
    selectMax?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    modifiers?: ModifierCreateNestedManyWithoutModifierGroupInput
    products?: ProductCreateNestedManyWithoutModifierGroupsInput
    translations?: ModifierGroupTranslationCreateNestedManyWithoutModifierGroupInput
  }

  export type ModifierGroupUncheckedCreateInput = {
    id?: string
    selectMin?: number | null
    selectMax?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    modifiers?: ModifierUncheckedCreateNestedManyWithoutModifierGroupInput
    products?: ProductUncheckedCreateNestedManyWithoutModifierGroupsInput
    translations?: ModifierGroupTranslationUncheckedCreateNestedManyWithoutModifierGroupInput
  }

  export type ModifierGroupUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    selectMin?: NullableIntFieldUpdateOperationsInput | number | null
    selectMax?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modifiers?: ModifierUpdateManyWithoutModifierGroupNestedInput
    products?: ProductUpdateManyWithoutModifierGroupsNestedInput
    translations?: ModifierGroupTranslationUpdateManyWithoutModifierGroupNestedInput
  }

  export type ModifierGroupUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    selectMin?: NullableIntFieldUpdateOperationsInput | number | null
    selectMax?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modifiers?: ModifierUncheckedUpdateManyWithoutModifierGroupNestedInput
    products?: ProductUncheckedUpdateManyWithoutModifierGroupsNestedInput
    translations?: ModifierGroupTranslationUncheckedUpdateManyWithoutModifierGroupNestedInput
  }

  export type ModifierGroupCreateManyInput = {
    id?: string
    selectMin?: number | null
    selectMax?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ModifierGroupUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    selectMin?: NullableIntFieldUpdateOperationsInput | number | null
    selectMax?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ModifierGroupUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    selectMin?: NullableIntFieldUpdateOperationsInput | number | null
    selectMax?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ModifierGroupTranslationCreateInput = {
    id?: string
    locale: string
    title?: string | null
    description?: string | null
    modifierGroup: ModifierGroupCreateNestedOneWithoutTranslationsInput
  }

  export type ModifierGroupTranslationUncheckedCreateInput = {
    id?: string
    locale: string
    title?: string | null
    description?: string | null
    modifierGroupId: string
  }

  export type ModifierGroupTranslationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modifierGroup?: ModifierGroupUpdateOneRequiredWithoutTranslationsNestedInput
  }

  export type ModifierGroupTranslationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modifierGroupId?: StringFieldUpdateOperationsInput | string
  }

  export type ModifierGroupTranslationCreateManyInput = {
    id?: string
    locale: string
    title?: string | null
    description?: string | null
    modifierGroupId: string
  }

  export type ModifierGroupTranslationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ModifierGroupTranslationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    modifierGroupId?: StringFieldUpdateOperationsInput | string
  }

  export type ModifierCreateInput = {
    id?: string
    title: string
    description?: string | null
    sku?: string | null
    price: number
    modifierGroup: ModifierGroupCreateNestedOneWithoutModifiersInput
    images?: FileCreateNestedManyWithoutModifierImagesInput
  }

  export type ModifierUncheckedCreateInput = {
    id?: string
    title: string
    description?: string | null
    sku?: string | null
    price: number
    modifierGroupId: string
    images?: FileUncheckedCreateNestedManyWithoutModifierImagesInput
  }

  export type ModifierUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
    modifierGroup?: ModifierGroupUpdateOneRequiredWithoutModifiersNestedInput
    images?: FileUpdateManyWithoutModifierImagesNestedInput
  }

  export type ModifierUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
    modifierGroupId?: StringFieldUpdateOperationsInput | string
    images?: FileUncheckedUpdateManyWithoutModifierImagesNestedInput
  }

  export type ModifierCreateManyInput = {
    id?: string
    title: string
    description?: string | null
    sku?: string | null
    price: number
    modifierGroupId: string
  }

  export type ModifierUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
  }

  export type ModifierUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
    modifierGroupId?: StringFieldUpdateOperationsInput | string
  }

  export type OrderCreateInput = {
    id?: string
    token: string
    expiresAt?: Date | string
    referenceId: string
    fulfilmentMethod?: $Enums.OrderFulfilmentMethod | null
    dateOfExecution?: Date | string | null
    currency?: $Enums.Currency
    sourceIp?: string | null
    acceptedAt?: Date | string | null
    readyForDispatchAt?: Date | string | null
    dispatchedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutOrdersInput
    user?: UserCreateNestedOneWithoutOrdersInput
    payment?: PaymentCreateNestedOneWithoutOrderInput
    shippingMethod?: ShippingMethodCreateNestedOneWithoutOrdersInput
    shippingAddress?: AddressCreateNestedOneWithoutOrdersInput
    items?: OrderItemCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateInput = {
    id?: string
    organizationId: string
    userId?: string | null
    paymentId?: string | null
    token: string
    expiresAt?: Date | string
    referenceId: string
    fulfilmentMethod?: $Enums.OrderFulfilmentMethod | null
    shippingMethodId?: string | null
    shippingAddressId?: string | null
    dateOfExecution?: Date | string | null
    currency?: $Enums.Currency
    sourceIp?: string | null
    acceptedAt?: Date | string | null
    readyForDispatchAt?: Date | string | null
    dispatchedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    fulfilmentMethod?: NullableEnumOrderFulfilmentMethodFieldUpdateOperationsInput | $Enums.OrderFulfilmentMethod | null
    dateOfExecution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    sourceIp?: NullableStringFieldUpdateOperationsInput | string | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyForDispatchAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutOrdersNestedInput
    user?: UserUpdateOneWithoutOrdersNestedInput
    payment?: PaymentUpdateOneWithoutOrderNestedInput
    shippingMethod?: ShippingMethodUpdateOneWithoutOrdersNestedInput
    shippingAddress?: AddressUpdateOneWithoutOrdersNestedInput
    items?: OrderItemUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    fulfilmentMethod?: NullableEnumOrderFulfilmentMethodFieldUpdateOperationsInput | $Enums.OrderFulfilmentMethod | null
    shippingMethodId?: NullableStringFieldUpdateOperationsInput | string | null
    shippingAddressId?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfExecution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    sourceIp?: NullableStringFieldUpdateOperationsInput | string | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyForDispatchAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderCreateManyInput = {
    id?: string
    organizationId: string
    userId?: string | null
    paymentId?: string | null
    token: string
    expiresAt?: Date | string
    referenceId: string
    fulfilmentMethod?: $Enums.OrderFulfilmentMethod | null
    shippingMethodId?: string | null
    shippingAddressId?: string | null
    dateOfExecution?: Date | string | null
    currency?: $Enums.Currency
    sourceIp?: string | null
    acceptedAt?: Date | string | null
    readyForDispatchAt?: Date | string | null
    dispatchedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    fulfilmentMethod?: NullableEnumOrderFulfilmentMethodFieldUpdateOperationsInput | $Enums.OrderFulfilmentMethod | null
    dateOfExecution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    sourceIp?: NullableStringFieldUpdateOperationsInput | string | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyForDispatchAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    fulfilmentMethod?: NullableEnumOrderFulfilmentMethodFieldUpdateOperationsInput | $Enums.OrderFulfilmentMethod | null
    shippingMethodId?: NullableStringFieldUpdateOperationsInput | string | null
    shippingAddressId?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfExecution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    sourceIp?: NullableStringFieldUpdateOperationsInput | string | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyForDispatchAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemCreateInput = {
    id?: string
    quantity: number
    unitPrice: number
    totalPrice: number
    rawData?: NullableJsonNullValueInput | InputJsonValue
    order: OrderCreateNestedOneWithoutItemsInput
    productSnapshot?: ProductSnapshotCreateNestedOneWithoutOrderItemsInput
    image?: FileCreateNestedOneWithoutOrderItemImagesInput
    translations?: OrderItemTranslationCreateNestedManyWithoutOrderItemInput
  }

  export type OrderItemUncheckedCreateInput = {
    id?: string
    quantity: number
    unitPrice: number
    totalPrice: number
    orderId: string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    productSnapshotId?: string | null
    imageId?: string | null
    translations?: OrderItemTranslationUncheckedCreateNestedManyWithoutOrderItemInput
  }

  export type OrderItemUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    rawData?: NullableJsonNullValueInput | InputJsonValue
    order?: OrderUpdateOneRequiredWithoutItemsNestedInput
    productSnapshot?: ProductSnapshotUpdateOneWithoutOrderItemsNestedInput
    image?: FileUpdateOneWithoutOrderItemImagesNestedInput
    translations?: OrderItemTranslationUpdateManyWithoutOrderItemNestedInput
  }

  export type OrderItemUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    orderId?: StringFieldUpdateOperationsInput | string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    productSnapshotId?: NullableStringFieldUpdateOperationsInput | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    translations?: OrderItemTranslationUncheckedUpdateManyWithoutOrderItemNestedInput
  }

  export type OrderItemCreateManyInput = {
    id?: string
    quantity: number
    unitPrice: number
    totalPrice: number
    orderId: string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    productSnapshotId?: string | null
    imageId?: string | null
  }

  export type OrderItemUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    rawData?: NullableJsonNullValueInput | InputJsonValue
  }

  export type OrderItemUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    orderId?: StringFieldUpdateOperationsInput | string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    productSnapshotId?: NullableStringFieldUpdateOperationsInput | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderItemTranslationCreateInput = {
    id?: string
    locale: string
    title: string
    subtitle?: string | null
    orderItem: OrderItemCreateNestedOneWithoutTranslationsInput
  }

  export type OrderItemTranslationUncheckedCreateInput = {
    id?: string
    locale: string
    title: string
    subtitle?: string | null
    orderItemId: string
  }

  export type OrderItemTranslationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    orderItem?: OrderItemUpdateOneRequiredWithoutTranslationsNestedInput
  }

  export type OrderItemTranslationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    orderItemId?: StringFieldUpdateOperationsInput | string
  }

  export type OrderItemTranslationCreateManyInput = {
    id?: string
    locale: string
    title: string
    subtitle?: string | null
    orderItemId: string
  }

  export type OrderItemTranslationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderItemTranslationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    orderItemId?: StringFieldUpdateOperationsInput | string
  }

  export type PaymentCreateInput = {
    id?: string
    method: $Enums.PaymentMethod
    provider?: $Enums.PaymentProvider
    shipping?: number
    subtotal?: number
    total: number
    discount?: number | null
    currency?: $Enums.Currency
    status?: $Enums.PaymentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    sessions?: PaymentSessionCreateNestedManyWithoutPaymentInput
    order?: OrderCreateNestedOneWithoutPaymentInput
  }

  export type PaymentUncheckedCreateInput = {
    id?: string
    method: $Enums.PaymentMethod
    provider?: $Enums.PaymentProvider
    shipping?: number
    subtotal?: number
    total: number
    discount?: number | null
    currency?: $Enums.Currency
    status?: $Enums.PaymentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    sessions?: PaymentSessionUncheckedCreateNestedManyWithoutPaymentInput
    order?: OrderUncheckedCreateNestedOneWithoutPaymentInput
  }

  export type PaymentUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    method?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    provider?: EnumPaymentProviderFieldUpdateOperationsInput | $Enums.PaymentProvider
    shipping?: FloatFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    total?: FloatFieldUpdateOperationsInput | number
    discount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sessions?: PaymentSessionUpdateManyWithoutPaymentNestedInput
    order?: OrderUpdateOneWithoutPaymentNestedInput
  }

  export type PaymentUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    method?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    provider?: EnumPaymentProviderFieldUpdateOperationsInput | $Enums.PaymentProvider
    shipping?: FloatFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    total?: FloatFieldUpdateOperationsInput | number
    discount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sessions?: PaymentSessionUncheckedUpdateManyWithoutPaymentNestedInput
    order?: OrderUncheckedUpdateOneWithoutPaymentNestedInput
  }

  export type PaymentCreateManyInput = {
    id?: string
    method: $Enums.PaymentMethod
    provider?: $Enums.PaymentProvider
    shipping?: number
    subtotal?: number
    total: number
    discount?: number | null
    currency?: $Enums.Currency
    status?: $Enums.PaymentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    method?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    provider?: EnumPaymentProviderFieldUpdateOperationsInput | $Enums.PaymentProvider
    shipping?: FloatFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    total?: FloatFieldUpdateOperationsInput | number
    discount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    method?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    provider?: EnumPaymentProviderFieldUpdateOperationsInput | $Enums.PaymentProvider
    shipping?: FloatFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    total?: FloatFieldUpdateOperationsInput | number
    discount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentSessionCreateInput = {
    id?: string
    referenceId: string
    amount: number
    currency?: $Enums.Currency
    rawData: JsonNullValueInput | InputJsonValue
    capturedAt?: Date | string | null
    expiredAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    payment: PaymentCreateNestedOneWithoutSessionsInput
  }

  export type PaymentSessionUncheckedCreateInput = {
    id?: string
    referenceId: string
    amount: number
    currency?: $Enums.Currency
    rawData: JsonNullValueInput | InputJsonValue
    capturedAt?: Date | string | null
    expiredAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paymentId: string
  }

  export type PaymentSessionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    rawData?: JsonNullValueInput | InputJsonValue
    capturedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    payment?: PaymentUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type PaymentSessionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    rawData?: JsonNullValueInput | InputJsonValue
    capturedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentId?: StringFieldUpdateOperationsInput | string
  }

  export type PaymentSessionCreateManyInput = {
    id?: string
    referenceId: string
    amount: number
    currency?: $Enums.Currency
    rawData: JsonNullValueInput | InputJsonValue
    capturedAt?: Date | string | null
    expiredAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    paymentId: string
  }

  export type PaymentSessionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    rawData?: JsonNullValueInput | InputJsonValue
    capturedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentSessionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    rawData?: JsonNullValueInput | InputJsonValue
    capturedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    paymentId?: StringFieldUpdateOperationsInput | string
  }

  export type CampaignCreateInput = {
    id?: string
    title: string
    type: $Enums.CampaignType
    validFrom: Date | string
    validTo: Date | string
    amount?: number | null
    percentage?: number | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutCampaignsInput
  }

  export type CampaignUncheckedCreateInput = {
    id?: string
    title: string
    type: $Enums.CampaignType
    validFrom: Date | string
    validTo: Date | string
    organizationId: string
    amount?: number | null
    percentage?: number | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CampaignUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    type?: EnumCampaignTypeFieldUpdateOperationsInput | $Enums.CampaignType
    validFrom?: DateTimeFieldUpdateOperationsInput | Date | string
    validTo?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutCampaignsNestedInput
  }

  export type CampaignUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    type?: EnumCampaignTypeFieldUpdateOperationsInput | $Enums.CampaignType
    validFrom?: DateTimeFieldUpdateOperationsInput | Date | string
    validTo?: DateTimeFieldUpdateOperationsInput | Date | string
    organizationId?: StringFieldUpdateOperationsInput | string
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CampaignCreateManyInput = {
    id?: string
    title: string
    type: $Enums.CampaignType
    validFrom: Date | string
    validTo: Date | string
    organizationId: string
    amount?: number | null
    percentage?: number | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CampaignUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    type?: EnumCampaignTypeFieldUpdateOperationsInput | $Enums.CampaignType
    validFrom?: DateTimeFieldUpdateOperationsInput | Date | string
    validTo?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CampaignUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    type?: EnumCampaignTypeFieldUpdateOperationsInput | $Enums.CampaignType
    validFrom?: DateTimeFieldUpdateOperationsInput | Date | string
    validTo?: DateTimeFieldUpdateOperationsInput | Date | string
    organizationId?: StringFieldUpdateOperationsInput | string
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShippingMethodCreateInput = {
    id?: string
    title: string
    providerName: string
    requireDateOfDelivery?: boolean | null
    archivedAt?: Date | string | null
    archivedBy?: string | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    providerLogo?: FileCreateNestedOneWithoutShippingMethodLogoForInput
    organization: OrganizationCreateNestedOneWithoutShippingMethodsInput
    shippingZones?: ShippingZoneCreateNestedManyWithoutShippingMethodInput
    orders?: OrderCreateNestedManyWithoutShippingMethodInput
  }

  export type ShippingMethodUncheckedCreateInput = {
    id?: string
    title: string
    providerName: string
    providerLogoId?: string | null
    requireDateOfDelivery?: boolean | null
    organizationId: string
    archivedAt?: Date | string | null
    archivedBy?: string | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    shippingZones?: ShippingZoneUncheckedCreateNestedManyWithoutShippingMethodInput
    orders?: OrderUncheckedCreateNestedManyWithoutShippingMethodInput
  }

  export type ShippingMethodUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    providerName?: StringFieldUpdateOperationsInput | string
    requireDateOfDelivery?: NullableBoolFieldUpdateOperationsInput | boolean | null
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    providerLogo?: FileUpdateOneWithoutShippingMethodLogoForNestedInput
    organization?: OrganizationUpdateOneRequiredWithoutShippingMethodsNestedInput
    shippingZones?: ShippingZoneUpdateManyWithoutShippingMethodNestedInput
    orders?: OrderUpdateManyWithoutShippingMethodNestedInput
  }

  export type ShippingMethodUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    providerName?: StringFieldUpdateOperationsInput | string
    providerLogoId?: NullableStringFieldUpdateOperationsInput | string | null
    requireDateOfDelivery?: NullableBoolFieldUpdateOperationsInput | boolean | null
    organizationId?: StringFieldUpdateOperationsInput | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    shippingZones?: ShippingZoneUncheckedUpdateManyWithoutShippingMethodNestedInput
    orders?: OrderUncheckedUpdateManyWithoutShippingMethodNestedInput
  }

  export type ShippingMethodCreateManyInput = {
    id?: string
    title: string
    providerName: string
    providerLogoId?: string | null
    requireDateOfDelivery?: boolean | null
    organizationId: string
    archivedAt?: Date | string | null
    archivedBy?: string | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
  }

  export type ShippingMethodUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    providerName?: StringFieldUpdateOperationsInput | string
    requireDateOfDelivery?: NullableBoolFieldUpdateOperationsInput | boolean | null
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ShippingMethodUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    providerName?: StringFieldUpdateOperationsInput | string
    providerLogoId?: NullableStringFieldUpdateOperationsInput | string | null
    requireDateOfDelivery?: NullableBoolFieldUpdateOperationsInput | boolean | null
    organizationId?: StringFieldUpdateOperationsInput | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ShippingZoneCreateInput = {
    id?: string
    title: string
    distanceUpto?: number | null
    price: number
    minimumOrderAmount?: number | null
    eta: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shippingMethod: ShippingMethodCreateNestedOneWithoutShippingZonesInput
  }

  export type ShippingZoneUncheckedCreateInput = {
    id?: string
    title: string
    distanceUpto?: number | null
    price: number
    minimumOrderAmount?: number | null
    shippingMethodId: string
    eta: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ShippingZoneUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    distanceUpto?: NullableFloatFieldUpdateOperationsInput | number | null
    price?: FloatFieldUpdateOperationsInput | number
    minimumOrderAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    eta?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shippingMethod?: ShippingMethodUpdateOneRequiredWithoutShippingZonesNestedInput
  }

  export type ShippingZoneUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    distanceUpto?: NullableFloatFieldUpdateOperationsInput | number | null
    price?: FloatFieldUpdateOperationsInput | number
    minimumOrderAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    shippingMethodId?: StringFieldUpdateOperationsInput | string
    eta?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShippingZoneCreateManyInput = {
    id?: string
    title: string
    distanceUpto?: number | null
    price: number
    minimumOrderAmount?: number | null
    shippingMethodId: string
    eta: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ShippingZoneUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    distanceUpto?: NullableFloatFieldUpdateOperationsInput | number | null
    price?: FloatFieldUpdateOperationsInput | number
    minimumOrderAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    eta?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShippingZoneUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    distanceUpto?: NullableFloatFieldUpdateOperationsInput | number | null
    price?: FloatFieldUpdateOperationsInput | number
    minimumOrderAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    shippingMethodId?: StringFieldUpdateOperationsInput | string
    eta?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReservationCreateInput = {
    id?: string
    firstname: string
    lastname: string
    guests: number
    phone: string
    date: Date | string
    referenceId: string
    createdAt?: Date | string
    acceptedAt?: Date | string | null
    cancelledAt?: Date | string | null
    updatedAt?: Date | string
    user?: UserCreateNestedOneWithoutReservationsInput
    organization: OrganizationCreateNestedOneWithoutReservationsInput
  }

  export type ReservationUncheckedCreateInput = {
    id?: string
    firstname: string
    lastname: string
    userId?: string | null
    guests: number
    phone: string
    date: Date | string
    referenceId: string
    organizationId: string
    createdAt?: Date | string
    acceptedAt?: Date | string | null
    cancelledAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type ReservationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    guests?: IntFieldUpdateOperationsInput | number
    phone?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneWithoutReservationsNestedInput
    organization?: OrganizationUpdateOneRequiredWithoutReservationsNestedInput
  }

  export type ReservationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    guests?: IntFieldUpdateOperationsInput | number
    phone?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReservationCreateManyInput = {
    id?: string
    firstname: string
    lastname: string
    userId?: string | null
    guests: number
    phone: string
    date: Date | string
    referenceId: string
    organizationId: string
    createdAt?: Date | string
    acceptedAt?: Date | string | null
    cancelledAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type ReservationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    guests?: IntFieldUpdateOperationsInput | number
    phone?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReservationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    guests?: IntFieldUpdateOperationsInput | number
    phone?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type SessionListRelationFilter = {
    every?: SessionWhereInput
    some?: SessionWhereInput
    none?: SessionWhereInput
  }

  export type AccountListRelationFilter = {
    every?: AccountWhereInput
    some?: AccountWhereInput
    none?: AccountWhereInput
  }

  export type MemberListRelationFilter = {
    every?: MemberWhereInput
    some?: MemberWhereInput
    none?: MemberWhereInput
  }

  export type InvitationListRelationFilter = {
    every?: InvitationWhereInput
    some?: InvitationWhereInput
    none?: InvitationWhereInput
  }

  export type AddressListRelationFilter = {
    every?: AddressWhereInput
    some?: AddressWhereInput
    none?: AddressWhereInput
  }

  export type OrderListRelationFilter = {
    every?: OrderWhereInput
    some?: OrderWhereInput
    none?: OrderWhereInput
  }

  export type ReservationListRelationFilter = {
    every?: ReservationWhereInput
    some?: ReservationWhereInput
    none?: ReservationWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type SessionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AccountOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MemberOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type InvitationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AddressOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReservationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    image?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    image?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    email?: SortOrder
    emailVerified?: SortOrder
    image?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type SessionCountOrderByAggregateInput = {
    id?: SortOrder
    expiresAt?: SortOrder
    token?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    userId?: SortOrder
    activeOrganizationId?: SortOrder
  }

  export type SessionMaxOrderByAggregateInput = {
    id?: SortOrder
    expiresAt?: SortOrder
    token?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    userId?: SortOrder
    activeOrganizationId?: SortOrder
  }

  export type SessionMinOrderByAggregateInput = {
    id?: SortOrder
    expiresAt?: SortOrder
    token?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    ipAddress?: SortOrder
    userAgent?: SortOrder
    userId?: SortOrder
    activeOrganizationId?: SortOrder
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type AccountCountOrderByAggregateInput = {
    id?: SortOrder
    accountId?: SortOrder
    providerId?: SortOrder
    userId?: SortOrder
    accessToken?: SortOrder
    refreshToken?: SortOrder
    idToken?: SortOrder
    accessTokenExpiresAt?: SortOrder
    refreshTokenExpiresAt?: SortOrder
    scope?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AccountMaxOrderByAggregateInput = {
    id?: SortOrder
    accountId?: SortOrder
    providerId?: SortOrder
    userId?: SortOrder
    accessToken?: SortOrder
    refreshToken?: SortOrder
    idToken?: SortOrder
    accessTokenExpiresAt?: SortOrder
    refreshTokenExpiresAt?: SortOrder
    scope?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AccountMinOrderByAggregateInput = {
    id?: SortOrder
    accountId?: SortOrder
    providerId?: SortOrder
    userId?: SortOrder
    accessToken?: SortOrder
    refreshToken?: SortOrder
    idToken?: SortOrder
    accessTokenExpiresAt?: SortOrder
    refreshTokenExpiresAt?: SortOrder
    scope?: SortOrder
    password?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type VerificationCountOrderByAggregateInput = {
    id?: SortOrder
    identifier?: SortOrder
    value?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VerificationMaxOrderByAggregateInput = {
    id?: SortOrder
    identifier?: SortOrder
    value?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VerificationMinOrderByAggregateInput = {
    id?: SortOrder
    identifier?: SortOrder
    value?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrganizationScalarRelationFilter = {
    is?: OrganizationWhereInput
    isNot?: OrganizationWhereInput
  }

  export type MemberCountOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
  }

  export type MemberMaxOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
  }

  export type MemberMinOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    createdAt?: SortOrder
  }

  export type InvitationCountOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    email?: SortOrder
    role?: SortOrder
    status?: SortOrder
    expiresAt?: SortOrder
    inviterId?: SortOrder
  }

  export type InvitationMaxOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    email?: SortOrder
    role?: SortOrder
    status?: SortOrder
    expiresAt?: SortOrder
    inviterId?: SortOrder
  }

  export type InvitationMinOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    email?: SortOrder
    role?: SortOrder
    status?: SortOrder
    expiresAt?: SortOrder
    inviterId?: SortOrder
  }

  export type LegalEntityNullableScalarRelationFilter = {
    is?: LegalEntityWhereInput | null
    isNot?: LegalEntityWhereInput | null
  }

  export type AddressScalarRelationFilter = {
    is?: AddressWhereInput
    isNot?: AddressWhereInput
  }

  export type OrganizationConfigurationScalarRelationFilter = {
    is?: OrganizationConfigurationWhereInput
    isNot?: OrganizationConfigurationWhereInput
  }

  export type FileNullableScalarRelationFilter = {
    is?: FileWhereInput | null
    isNot?: FileWhereInput | null
  }

  export type FileListRelationFilter = {
    every?: FileWhereInput
    some?: FileWhereInput
    none?: FileWhereInput
  }

  export type CampaignListRelationFilter = {
    every?: CampaignWhereInput
    some?: CampaignWhereInput
    none?: CampaignWhereInput
  }

  export type ShippingMethodListRelationFilter = {
    every?: ShippingMethodWhereInput
    some?: ShippingMethodWhereInput
    none?: ShippingMethodWhereInput
  }

  export type ManufacturerListRelationFilter = {
    every?: ManufacturerWhereInput
    some?: ManufacturerWhereInput
    none?: ManufacturerWhereInput
  }

  export type ProductCategoryListRelationFilter = {
    every?: ProductCategoryWhereInput
    some?: ProductCategoryWhereInput
    none?: ProductCategoryWhereInput
  }

  export type ProductListRelationFilter = {
    every?: ProductWhereInput
    some?: ProductWhereInput
    none?: ProductWhereInput
  }

  export type FileOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CampaignOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ShippingMethodOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ManufacturerOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductCategoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrganizationCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    legalEntityId?: SortOrder
    addressId?: SortOrder
    configurationId?: SortOrder
    logo?: SortOrder
    logoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type OrganizationMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    legalEntityId?: SortOrder
    addressId?: SortOrder
    configurationId?: SortOrder
    logo?: SortOrder
    logoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type OrganizationMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    legalEntityId?: SortOrder
    addressId?: SortOrder
    configurationId?: SortOrder
    logo?: SortOrder
    logoId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type OrganizationConfigurationNullableScalarRelationFilter = {
    is?: OrganizationConfigurationWhereInput | null
    isNot?: OrganizationConfigurationWhereInput | null
  }

  export type OpeningTimesCountOrderByAggregateInput = {
    id?: SortOrder
    monday?: SortOrder
    tuesday?: SortOrder
    wednesday?: SortOrder
    thursday?: SortOrder
    friday?: SortOrder
    saturday?: SortOrder
    sunday?: SortOrder
  }

  export type OpeningTimesMaxOrderByAggregateInput = {
    id?: SortOrder
    monday?: SortOrder
    tuesday?: SortOrder
    wednesday?: SortOrder
    thursday?: SortOrder
    friday?: SortOrder
    saturday?: SortOrder
    sunday?: SortOrder
  }

  export type OpeningTimesMinOrderByAggregateInput = {
    id?: SortOrder
    monday?: SortOrder
    tuesday?: SortOrder
    wednesday?: SortOrder
    thursday?: SortOrder
    friday?: SortOrder
    saturday?: SortOrder
    sunday?: SortOrder
  }

  export type ClosingTimesCountOrderByAggregateInput = {
    id?: SortOrder
    monday?: SortOrder
    tuesday?: SortOrder
    wednesday?: SortOrder
    thursday?: SortOrder
    friday?: SortOrder
    saturday?: SortOrder
    sunday?: SortOrder
  }

  export type ClosingTimesMaxOrderByAggregateInput = {
    id?: SortOrder
    monday?: SortOrder
    tuesday?: SortOrder
    wednesday?: SortOrder
    thursday?: SortOrder
    friday?: SortOrder
    saturday?: SortOrder
    sunday?: SortOrder
  }

  export type ClosingTimesMinOrderByAggregateInput = {
    id?: SortOrder
    monday?: SortOrder
    tuesday?: SortOrder
    wednesday?: SortOrder
    thursday?: SortOrder
    friday?: SortOrder
    saturday?: SortOrder
    sunday?: SortOrder
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type EnumCurrencyFilter<$PrismaModel = never> = {
    equals?: $Enums.Currency | EnumCurrencyFieldRefInput<$PrismaModel>
    in?: $Enums.Currency[] | ListEnumCurrencyFieldRefInput<$PrismaModel>
    notIn?: $Enums.Currency[] | ListEnumCurrencyFieldRefInput<$PrismaModel>
    not?: NestedEnumCurrencyFilter<$PrismaModel> | $Enums.Currency
  }

  export type EnumLocaleFilter<$PrismaModel = never> = {
    equals?: $Enums.Locale | EnumLocaleFieldRefInput<$PrismaModel>
    in?: $Enums.Locale[] | ListEnumLocaleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Locale[] | ListEnumLocaleFieldRefInput<$PrismaModel>
    not?: NestedEnumLocaleFilter<$PrismaModel> | $Enums.Locale
  }

  export type EnumLocaleNullableListFilter<$PrismaModel = never> = {
    equals?: $Enums.Locale[] | ListEnumLocaleFieldRefInput<$PrismaModel> | null
    has?: $Enums.Locale | EnumLocaleFieldRefInput<$PrismaModel> | null
    hasEvery?: $Enums.Locale[] | ListEnumLocaleFieldRefInput<$PrismaModel>
    hasSome?: $Enums.Locale[] | ListEnumLocaleFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type OpeningTimesNullableScalarRelationFilter = {
    is?: OpeningTimesWhereInput | null
    isNot?: OpeningTimesWhereInput | null
  }

  export type ClosingTimesNullableScalarRelationFilter = {
    is?: ClosingTimesWhereInput | null
    isNot?: ClosingTimesWhereInput | null
  }

  export type OrganizationListRelationFilter = {
    every?: OrganizationWhereInput
    some?: OrganizationWhereInput
    none?: OrganizationWhereInput
  }

  export type OrganizationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrganizationConfigurationCountOrderByAggregateInput = {
    id?: SortOrder
    hostname?: SortOrder
    countriesShipping?: SortOrder
    stripeAccountId?: SortOrder
    enableHostCheckout?: SortOrder
    enableHostTracking?: SortOrder
    isAcceptingOrders?: SortOrder
    defaultCurrency?: SortOrder
    defaultLocale?: SortOrder
    supportedLocales?: SortOrder
    openingTimesId?: SortOrder
    closingTimesId?: SortOrder
    facebookProfile?: SortOrder
    instagramProfile?: SortOrder
    xProfile?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type OrganizationConfigurationMaxOrderByAggregateInput = {
    id?: SortOrder
    hostname?: SortOrder
    stripeAccountId?: SortOrder
    enableHostCheckout?: SortOrder
    enableHostTracking?: SortOrder
    isAcceptingOrders?: SortOrder
    defaultCurrency?: SortOrder
    defaultLocale?: SortOrder
    openingTimesId?: SortOrder
    closingTimesId?: SortOrder
    facebookProfile?: SortOrder
    instagramProfile?: SortOrder
    xProfile?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type OrganizationConfigurationMinOrderByAggregateInput = {
    id?: SortOrder
    hostname?: SortOrder
    stripeAccountId?: SortOrder
    enableHostCheckout?: SortOrder
    enableHostTracking?: SortOrder
    isAcceptingOrders?: SortOrder
    defaultCurrency?: SortOrder
    defaultLocale?: SortOrder
    openingTimesId?: SortOrder
    closingTimesId?: SortOrder
    facebookProfile?: SortOrder
    instagramProfile?: SortOrder
    xProfile?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type EnumCurrencyWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Currency | EnumCurrencyFieldRefInput<$PrismaModel>
    in?: $Enums.Currency[] | ListEnumCurrencyFieldRefInput<$PrismaModel>
    notIn?: $Enums.Currency[] | ListEnumCurrencyFieldRefInput<$PrismaModel>
    not?: NestedEnumCurrencyWithAggregatesFilter<$PrismaModel> | $Enums.Currency
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCurrencyFilter<$PrismaModel>
    _max?: NestedEnumCurrencyFilter<$PrismaModel>
  }

  export type EnumLocaleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Locale | EnumLocaleFieldRefInput<$PrismaModel>
    in?: $Enums.Locale[] | ListEnumLocaleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Locale[] | ListEnumLocaleFieldRefInput<$PrismaModel>
    not?: NestedEnumLocaleWithAggregatesFilter<$PrismaModel> | $Enums.Locale
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLocaleFilter<$PrismaModel>
    _max?: NestedEnumLocaleFilter<$PrismaModel>
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type LegalEntityListRelationFilter = {
    every?: LegalEntityWhereInput
    some?: LegalEntityWhereInput
    none?: LegalEntityWhereInput
  }

  export type UserListRelationFilter = {
    every?: UserWhereInput
    some?: UserWhereInput
    none?: UserWhereInput
  }

  export type LegalEntityOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AddressCountOrderByAggregateInput = {
    id?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    phone?: SortOrder
    addressLineOne?: SortOrder
    doorNumber?: SortOrder
    addressLineTwo?: SortOrder
    zipCode?: SortOrder
    placeId?: SortOrder
    deliveryInstructions?: SortOrder
    city?: SortOrder
    country?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    isDefault?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type AddressAvgOrderByAggregateInput = {
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type AddressMaxOrderByAggregateInput = {
    id?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    phone?: SortOrder
    addressLineOne?: SortOrder
    doorNumber?: SortOrder
    addressLineTwo?: SortOrder
    zipCode?: SortOrder
    placeId?: SortOrder
    deliveryInstructions?: SortOrder
    city?: SortOrder
    country?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    isDefault?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type AddressMinOrderByAggregateInput = {
    id?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    phone?: SortOrder
    addressLineOne?: SortOrder
    doorNumber?: SortOrder
    addressLineTwo?: SortOrder
    zipCode?: SortOrder
    placeId?: SortOrder
    deliveryInstructions?: SortOrder
    city?: SortOrder
    country?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    isDefault?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type AddressSumOrderByAggregateInput = {
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type LegalEntityCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    taxId?: SortOrder
    addressId?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type LegalEntityMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    taxId?: SortOrder
    addressId?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type LegalEntityMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    taxId?: SortOrder
    addressId?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type EnumFileUploadStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.FileUploadStatus | EnumFileUploadStatusFieldRefInput<$PrismaModel>
    in?: $Enums.FileUploadStatus[] | ListEnumFileUploadStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.FileUploadStatus[] | ListEnumFileUploadStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumFileUploadStatusFilter<$PrismaModel> | $Enums.FileUploadStatus
  }

  export type OrganizationNullableScalarRelationFilter = {
    is?: OrganizationWhereInput | null
    isNot?: OrganizationWhereInput | null
  }

  export type ManufacturerNullableScalarRelationFilter = {
    is?: ManufacturerWhereInput | null
    isNot?: ManufacturerWhereInput | null
  }

  export type ProductCategoryNullableScalarRelationFilter = {
    is?: ProductCategoryWhereInput | null
    isNot?: ProductCategoryWhereInput | null
  }

  export type ModifierListRelationFilter = {
    every?: ModifierWhereInput
    some?: ModifierWhereInput
    none?: ModifierWhereInput
  }

  export type ShippingMethodNullableScalarRelationFilter = {
    is?: ShippingMethodWhereInput | null
    isNot?: ShippingMethodWhereInput | null
  }

  export type OrderItemListRelationFilter = {
    every?: OrderItemWhereInput
    some?: OrderItemWhereInput
    none?: OrderItemWhereInput
  }

  export type ModifierOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FileCountOrderByAggregateInput = {
    id?: SortOrder
    mimeType?: SortOrder
    size?: SortOrder
    filename?: SortOrder
    url?: SortOrder
    status?: SortOrder
    organizationId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type FileAvgOrderByAggregateInput = {
    size?: SortOrder
  }

  export type FileMaxOrderByAggregateInput = {
    id?: SortOrder
    mimeType?: SortOrder
    size?: SortOrder
    filename?: SortOrder
    url?: SortOrder
    status?: SortOrder
    organizationId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type FileMinOrderByAggregateInput = {
    id?: SortOrder
    mimeType?: SortOrder
    size?: SortOrder
    filename?: SortOrder
    url?: SortOrder
    status?: SortOrder
    organizationId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type FileSumOrderByAggregateInput = {
    size?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type EnumFileUploadStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FileUploadStatus | EnumFileUploadStatusFieldRefInput<$PrismaModel>
    in?: $Enums.FileUploadStatus[] | ListEnumFileUploadStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.FileUploadStatus[] | ListEnumFileUploadStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumFileUploadStatusWithAggregatesFilter<$PrismaModel> | $Enums.FileUploadStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumFileUploadStatusFilter<$PrismaModel>
    _max?: NestedEnumFileUploadStatusFilter<$PrismaModel>
  }

  export type ManufacturerTranslationListRelationFilter = {
    every?: ManufacturerTranslationWhereInput
    some?: ManufacturerTranslationWhereInput
    none?: ManufacturerTranslationWhereInput
  }

  export type ManufacturerTranslationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ManufacturerCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    logoId?: SortOrder
    organizationId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ManufacturerMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    logoId?: SortOrder
    organizationId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ManufacturerMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    logoId?: SortOrder
    organizationId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
  }

  export type ManufacturerScalarRelationFilter = {
    is?: ManufacturerWhereInput
    isNot?: ManufacturerWhereInput
  }

  export type ManufacturerTranslationLocaleManufacturerIdCompoundUniqueInput = {
    locale: string
    manufacturerId: string
  }

  export type ManufacturerTranslationCountOrderByAggregateInput = {
    id?: SortOrder
    locale?: SortOrder
    about?: SortOrder
    manufacturerId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ManufacturerTranslationMaxOrderByAggregateInput = {
    id?: SortOrder
    locale?: SortOrder
    about?: SortOrder
    manufacturerId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ManufacturerTranslationMinOrderByAggregateInput = {
    id?: SortOrder
    locale?: SortOrder
    about?: SortOrder
    manufacturerId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ProductCategoryTranslationListRelationFilter = {
    every?: ProductCategoryTranslationWhereInput
    some?: ProductCategoryTranslationWhereInput
    none?: ProductCategoryTranslationWhereInput
  }

  export type ProductCategoryTranslationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductCategoryCountOrderByAggregateInput = {
    id?: SortOrder
    slug?: SortOrder
    organizationId?: SortOrder
    priority?: SortOrder
    imageId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    publishedAt?: SortOrder
    publishedBy?: SortOrder
  }

  export type ProductCategoryAvgOrderByAggregateInput = {
    priority?: SortOrder
  }

  export type ProductCategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    slug?: SortOrder
    organizationId?: SortOrder
    priority?: SortOrder
    imageId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    publishedAt?: SortOrder
    publishedBy?: SortOrder
  }

  export type ProductCategoryMinOrderByAggregateInput = {
    id?: SortOrder
    slug?: SortOrder
    organizationId?: SortOrder
    priority?: SortOrder
    imageId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    publishedAt?: SortOrder
    publishedBy?: SortOrder
  }

  export type ProductCategorySumOrderByAggregateInput = {
    priority?: SortOrder
  }

  export type ProductCategoryScalarRelationFilter = {
    is?: ProductCategoryWhereInput
    isNot?: ProductCategoryWhereInput
  }

  export type ProductCategoryTranslationLocaleProductCategoryIdCompoundUniqueInput = {
    locale: string
    productCategoryId: string
  }

  export type ProductCategoryTranslationCountOrderByAggregateInput = {
    id?: SortOrder
    locale?: SortOrder
    title?: SortOrder
    description?: SortOrder
    productCategoryId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ProductCategoryTranslationMaxOrderByAggregateInput = {
    id?: SortOrder
    locale?: SortOrder
    title?: SortOrder
    description?: SortOrder
    productCategoryId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ProductCategoryTranslationMinOrderByAggregateInput = {
    id?: SortOrder
    locale?: SortOrder
    title?: SortOrder
    description?: SortOrder
    productCategoryId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type ModifierGroupListRelationFilter = {
    every?: ModifierGroupWhereInput
    some?: ModifierGroupWhereInput
    none?: ModifierGroupWhereInput
  }

  export type ProductTranslationListRelationFilter = {
    every?: ProductTranslationWhereInput
    some?: ProductTranslationWhereInput
    none?: ProductTranslationWhereInput
  }

  export type ProductSnapshotListRelationFilter = {
    every?: ProductSnapshotWhereInput
    some?: ProductSnapshotWhereInput
    none?: ProductSnapshotWhereInput
  }

  export type ProductSnapshotNullableScalarRelationFilter = {
    is?: ProductSnapshotWhereInput | null
    isNot?: ProductSnapshotWhereInput | null
  }

  export type ModifierGroupOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductTranslationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductSnapshotOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductCountOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    slug?: SortOrder
    sku?: SortOrder
    basePrice?: SortOrder
    discountedBasePrice?: SortOrder
    currency?: SortOrder
    organizationId?: SortOrder
    manufacturerId?: SortOrder
    tags?: SortOrder
    metadata?: SortOrder
    publishedAt?: SortOrder
    publishedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    latestSnapshotId?: SortOrder
  }

  export type ProductAvgOrderByAggregateInput = {
    basePrice?: SortOrder
    discountedBasePrice?: SortOrder
  }

  export type ProductMaxOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    slug?: SortOrder
    sku?: SortOrder
    basePrice?: SortOrder
    discountedBasePrice?: SortOrder
    currency?: SortOrder
    organizationId?: SortOrder
    manufacturerId?: SortOrder
    publishedAt?: SortOrder
    publishedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    latestSnapshotId?: SortOrder
  }

  export type ProductMinOrderByAggregateInput = {
    id?: SortOrder
    content?: SortOrder
    slug?: SortOrder
    sku?: SortOrder
    basePrice?: SortOrder
    discountedBasePrice?: SortOrder
    currency?: SortOrder
    organizationId?: SortOrder
    manufacturerId?: SortOrder
    publishedAt?: SortOrder
    publishedBy?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
    latestSnapshotId?: SortOrder
  }

  export type ProductSumOrderByAggregateInput = {
    basePrice?: SortOrder
    discountedBasePrice?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type ProductScalarRelationFilter = {
    is?: ProductWhereInput
    isNot?: ProductWhereInput
  }

  export type ProductNullableScalarRelationFilter = {
    is?: ProductWhereInput | null
    isNot?: ProductWhereInput | null
  }

  export type ProductSnapshotCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    data?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
  }

  export type ProductSnapshotMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
  }

  export type ProductSnapshotMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type ProductTranslationLocaleProductIdCompoundUniqueInput = {
    locale: string
    productId: string
  }

  export type ProductTranslationCountOrderByAggregateInput = {
    id?: SortOrder
    locale?: SortOrder
    title?: SortOrder
    description?: SortOrder
    productId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ProductTranslationMaxOrderByAggregateInput = {
    id?: SortOrder
    locale?: SortOrder
    title?: SortOrder
    description?: SortOrder
    productId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ProductTranslationMinOrderByAggregateInput = {
    id?: SortOrder
    locale?: SortOrder
    title?: SortOrder
    description?: SortOrder
    productId?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ModifierGroupTranslationListRelationFilter = {
    every?: ModifierGroupTranslationWhereInput
    some?: ModifierGroupTranslationWhereInput
    none?: ModifierGroupTranslationWhereInput
  }

  export type ModifierGroupTranslationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ModifierGroupCountOrderByAggregateInput = {
    id?: SortOrder
    selectMin?: SortOrder
    selectMax?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ModifierGroupAvgOrderByAggregateInput = {
    selectMin?: SortOrder
    selectMax?: SortOrder
  }

  export type ModifierGroupMaxOrderByAggregateInput = {
    id?: SortOrder
    selectMin?: SortOrder
    selectMax?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ModifierGroupMinOrderByAggregateInput = {
    id?: SortOrder
    selectMin?: SortOrder
    selectMax?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ModifierGroupSumOrderByAggregateInput = {
    selectMin?: SortOrder
    selectMax?: SortOrder
  }

  export type ModifierGroupScalarRelationFilter = {
    is?: ModifierGroupWhereInput
    isNot?: ModifierGroupWhereInput
  }

  export type ModifierGroupTranslationLocaleModifierGroupIdCompoundUniqueInput = {
    locale: string
    modifierGroupId: string
  }

  export type ModifierGroupTranslationCountOrderByAggregateInput = {
    id?: SortOrder
    locale?: SortOrder
    title?: SortOrder
    description?: SortOrder
    modifierGroupId?: SortOrder
  }

  export type ModifierGroupTranslationMaxOrderByAggregateInput = {
    id?: SortOrder
    locale?: SortOrder
    title?: SortOrder
    description?: SortOrder
    modifierGroupId?: SortOrder
  }

  export type ModifierGroupTranslationMinOrderByAggregateInput = {
    id?: SortOrder
    locale?: SortOrder
    title?: SortOrder
    description?: SortOrder
    modifierGroupId?: SortOrder
  }

  export type ModifierCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    sku?: SortOrder
    price?: SortOrder
    modifierGroupId?: SortOrder
  }

  export type ModifierAvgOrderByAggregateInput = {
    price?: SortOrder
  }

  export type ModifierMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    sku?: SortOrder
    price?: SortOrder
    modifierGroupId?: SortOrder
  }

  export type ModifierMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    sku?: SortOrder
    price?: SortOrder
    modifierGroupId?: SortOrder
  }

  export type ModifierSumOrderByAggregateInput = {
    price?: SortOrder
  }

  export type EnumOrderFulfilmentMethodNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderFulfilmentMethod | EnumOrderFulfilmentMethodFieldRefInput<$PrismaModel> | null
    in?: $Enums.OrderFulfilmentMethod[] | ListEnumOrderFulfilmentMethodFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.OrderFulfilmentMethod[] | ListEnumOrderFulfilmentMethodFieldRefInput<$PrismaModel> | null
    not?: NestedEnumOrderFulfilmentMethodNullableFilter<$PrismaModel> | $Enums.OrderFulfilmentMethod | null
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type PaymentNullableScalarRelationFilter = {
    is?: PaymentWhereInput | null
    isNot?: PaymentWhereInput | null
  }

  export type AddressNullableScalarRelationFilter = {
    is?: AddressWhereInput | null
    isNot?: AddressWhereInput | null
  }

  export type OrderCountOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrder
    paymentId?: SortOrder
    token?: SortOrder
    expiresAt?: SortOrder
    referenceId?: SortOrder
    fulfilmentMethod?: SortOrder
    shippingMethodId?: SortOrder
    shippingAddressId?: SortOrder
    dateOfExecution?: SortOrder
    currency?: SortOrder
    sourceIp?: SortOrder
    acceptedAt?: SortOrder
    readyForDispatchAt?: SortOrder
    dispatchedAt?: SortOrder
    completedAt?: SortOrder
    cancelledAt?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderMaxOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrder
    paymentId?: SortOrder
    token?: SortOrder
    expiresAt?: SortOrder
    referenceId?: SortOrder
    fulfilmentMethod?: SortOrder
    shippingMethodId?: SortOrder
    shippingAddressId?: SortOrder
    dateOfExecution?: SortOrder
    currency?: SortOrder
    sourceIp?: SortOrder
    acceptedAt?: SortOrder
    readyForDispatchAt?: SortOrder
    dispatchedAt?: SortOrder
    completedAt?: SortOrder
    cancelledAt?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderMinOrderByAggregateInput = {
    id?: SortOrder
    organizationId?: SortOrder
    userId?: SortOrder
    paymentId?: SortOrder
    token?: SortOrder
    expiresAt?: SortOrder
    referenceId?: SortOrder
    fulfilmentMethod?: SortOrder
    shippingMethodId?: SortOrder
    shippingAddressId?: SortOrder
    dateOfExecution?: SortOrder
    currency?: SortOrder
    sourceIp?: SortOrder
    acceptedAt?: SortOrder
    readyForDispatchAt?: SortOrder
    dispatchedAt?: SortOrder
    completedAt?: SortOrder
    cancelledAt?: SortOrder
    deletedAt?: SortOrder
    deletedBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumOrderFulfilmentMethodNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderFulfilmentMethod | EnumOrderFulfilmentMethodFieldRefInput<$PrismaModel> | null
    in?: $Enums.OrderFulfilmentMethod[] | ListEnumOrderFulfilmentMethodFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.OrderFulfilmentMethod[] | ListEnumOrderFulfilmentMethodFieldRefInput<$PrismaModel> | null
    not?: NestedEnumOrderFulfilmentMethodNullableWithAggregatesFilter<$PrismaModel> | $Enums.OrderFulfilmentMethod | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumOrderFulfilmentMethodNullableFilter<$PrismaModel>
    _max?: NestedEnumOrderFulfilmentMethodNullableFilter<$PrismaModel>
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type OrderScalarRelationFilter = {
    is?: OrderWhereInput
    isNot?: OrderWhereInput
  }

  export type OrderItemTranslationListRelationFilter = {
    every?: OrderItemTranslationWhereInput
    some?: OrderItemTranslationWhereInput
    none?: OrderItemTranslationWhereInput
  }

  export type OrderItemTranslationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderItemCountOrderByAggregateInput = {
    id?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    orderId?: SortOrder
    rawData?: SortOrder
    productSnapshotId?: SortOrder
    imageId?: SortOrder
  }

  export type OrderItemAvgOrderByAggregateInput = {
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
  }

  export type OrderItemMaxOrderByAggregateInput = {
    id?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    orderId?: SortOrder
    productSnapshotId?: SortOrder
    imageId?: SortOrder
  }

  export type OrderItemMinOrderByAggregateInput = {
    id?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    orderId?: SortOrder
    productSnapshotId?: SortOrder
    imageId?: SortOrder
  }

  export type OrderItemSumOrderByAggregateInput = {
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type OrderItemScalarRelationFilter = {
    is?: OrderItemWhereInput
    isNot?: OrderItemWhereInput
  }

  export type OrderItemTranslationLocaleOrderItemIdCompoundUniqueInput = {
    locale: string
    orderItemId: string
  }

  export type OrderItemTranslationCountOrderByAggregateInput = {
    id?: SortOrder
    locale?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    orderItemId?: SortOrder
  }

  export type OrderItemTranslationMaxOrderByAggregateInput = {
    id?: SortOrder
    locale?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    orderItemId?: SortOrder
  }

  export type OrderItemTranslationMinOrderByAggregateInput = {
    id?: SortOrder
    locale?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    orderItemId?: SortOrder
  }

  export type EnumPaymentMethodFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodFilter<$PrismaModel> | $Enums.PaymentMethod
  }

  export type EnumPaymentProviderFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentProvider | EnumPaymentProviderFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentProvider[] | ListEnumPaymentProviderFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentProvider[] | ListEnumPaymentProviderFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentProviderFilter<$PrismaModel> | $Enums.PaymentProvider
  }

  export type EnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type PaymentSessionListRelationFilter = {
    every?: PaymentSessionWhereInput
    some?: PaymentSessionWhereInput
    none?: PaymentSessionWhereInput
  }

  export type OrderNullableScalarRelationFilter = {
    is?: OrderWhereInput | null
    isNot?: OrderWhereInput | null
  }

  export type PaymentSessionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PaymentCountOrderByAggregateInput = {
    id?: SortOrder
    method?: SortOrder
    provider?: SortOrder
    shipping?: SortOrder
    subtotal?: SortOrder
    total?: SortOrder
    discount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PaymentAvgOrderByAggregateInput = {
    shipping?: SortOrder
    subtotal?: SortOrder
    total?: SortOrder
    discount?: SortOrder
  }

  export type PaymentMaxOrderByAggregateInput = {
    id?: SortOrder
    method?: SortOrder
    provider?: SortOrder
    shipping?: SortOrder
    subtotal?: SortOrder
    total?: SortOrder
    discount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PaymentMinOrderByAggregateInput = {
    id?: SortOrder
    method?: SortOrder
    provider?: SortOrder
    shipping?: SortOrder
    subtotal?: SortOrder
    total?: SortOrder
    discount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type PaymentSumOrderByAggregateInput = {
    shipping?: SortOrder
    subtotal?: SortOrder
    total?: SortOrder
    discount?: SortOrder
  }

  export type EnumPaymentMethodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodWithAggregatesFilter<$PrismaModel> | $Enums.PaymentMethod
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentMethodFilter<$PrismaModel>
    _max?: NestedEnumPaymentMethodFilter<$PrismaModel>
  }

  export type EnumPaymentProviderWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentProvider | EnumPaymentProviderFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentProvider[] | ListEnumPaymentProviderFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentProvider[] | ListEnumPaymentProviderFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentProviderWithAggregatesFilter<$PrismaModel> | $Enums.PaymentProvider
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentProviderFilter<$PrismaModel>
    _max?: NestedEnumPaymentProviderFilter<$PrismaModel>
  }

  export type EnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }

  export type PaymentScalarRelationFilter = {
    is?: PaymentWhereInput
    isNot?: PaymentWhereInput
  }

  export type PaymentSessionCountOrderByAggregateInput = {
    id?: SortOrder
    referenceId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    rawData?: SortOrder
    capturedAt?: SortOrder
    expiredAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    paymentId?: SortOrder
  }

  export type PaymentSessionAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type PaymentSessionMaxOrderByAggregateInput = {
    id?: SortOrder
    referenceId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    capturedAt?: SortOrder
    expiredAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    paymentId?: SortOrder
  }

  export type PaymentSessionMinOrderByAggregateInput = {
    id?: SortOrder
    referenceId?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    capturedAt?: SortOrder
    expiredAt?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    paymentId?: SortOrder
  }

  export type PaymentSessionSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type EnumCampaignTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.CampaignType | EnumCampaignTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CampaignType[] | ListEnumCampaignTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CampaignType[] | ListEnumCampaignTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumCampaignTypeFilter<$PrismaModel> | $Enums.CampaignType
  }

  export type CampaignCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    type?: SortOrder
    validFrom?: SortOrder
    validTo?: SortOrder
    organizationId?: SortOrder
    amount?: SortOrder
    percentage?: SortOrder
    publishedAt?: SortOrder
    publishedBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CampaignAvgOrderByAggregateInput = {
    amount?: SortOrder
    percentage?: SortOrder
  }

  export type CampaignMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    type?: SortOrder
    validFrom?: SortOrder
    validTo?: SortOrder
    organizationId?: SortOrder
    amount?: SortOrder
    percentage?: SortOrder
    publishedAt?: SortOrder
    publishedBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CampaignMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    type?: SortOrder
    validFrom?: SortOrder
    validTo?: SortOrder
    organizationId?: SortOrder
    amount?: SortOrder
    percentage?: SortOrder
    publishedAt?: SortOrder
    publishedBy?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CampaignSumOrderByAggregateInput = {
    amount?: SortOrder
    percentage?: SortOrder
  }

  export type EnumCampaignTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CampaignType | EnumCampaignTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CampaignType[] | ListEnumCampaignTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CampaignType[] | ListEnumCampaignTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumCampaignTypeWithAggregatesFilter<$PrismaModel> | $Enums.CampaignType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCampaignTypeFilter<$PrismaModel>
    _max?: NestedEnumCampaignTypeFilter<$PrismaModel>
  }

  export type ShippingZoneListRelationFilter = {
    every?: ShippingZoneWhereInput
    some?: ShippingZoneWhereInput
    none?: ShippingZoneWhereInput
  }

  export type ShippingZoneOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ShippingMethodCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    providerName?: SortOrder
    providerLogoId?: SortOrder
    requireDateOfDelivery?: SortOrder
    organizationId?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    publishedAt?: SortOrder
    publishedBy?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ShippingMethodMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    providerName?: SortOrder
    providerLogoId?: SortOrder
    requireDateOfDelivery?: SortOrder
    organizationId?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    publishedAt?: SortOrder
    publishedBy?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ShippingMethodMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    providerName?: SortOrder
    providerLogoId?: SortOrder
    requireDateOfDelivery?: SortOrder
    organizationId?: SortOrder
    archivedAt?: SortOrder
    archivedBy?: SortOrder
    publishedAt?: SortOrder
    publishedBy?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    updatedAt?: SortOrder
    updatedBy?: SortOrder
  }

  export type ShippingMethodScalarRelationFilter = {
    is?: ShippingMethodWhereInput
    isNot?: ShippingMethodWhereInput
  }

  export type ShippingZoneCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    distanceUpto?: SortOrder
    price?: SortOrder
    minimumOrderAmount?: SortOrder
    shippingMethodId?: SortOrder
    eta?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ShippingZoneAvgOrderByAggregateInput = {
    distanceUpto?: SortOrder
    price?: SortOrder
    minimumOrderAmount?: SortOrder
  }

  export type ShippingZoneMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    distanceUpto?: SortOrder
    price?: SortOrder
    minimumOrderAmount?: SortOrder
    shippingMethodId?: SortOrder
    eta?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ShippingZoneMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    distanceUpto?: SortOrder
    price?: SortOrder
    minimumOrderAmount?: SortOrder
    shippingMethodId?: SortOrder
    eta?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ShippingZoneSumOrderByAggregateInput = {
    distanceUpto?: SortOrder
    price?: SortOrder
    minimumOrderAmount?: SortOrder
  }

  export type ReservationCountOrderByAggregateInput = {
    id?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    userId?: SortOrder
    guests?: SortOrder
    phone?: SortOrder
    date?: SortOrder
    referenceId?: SortOrder
    organizationId?: SortOrder
    createdAt?: SortOrder
    acceptedAt?: SortOrder
    cancelledAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReservationAvgOrderByAggregateInput = {
    guests?: SortOrder
  }

  export type ReservationMaxOrderByAggregateInput = {
    id?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    userId?: SortOrder
    guests?: SortOrder
    phone?: SortOrder
    date?: SortOrder
    referenceId?: SortOrder
    organizationId?: SortOrder
    createdAt?: SortOrder
    acceptedAt?: SortOrder
    cancelledAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReservationMinOrderByAggregateInput = {
    id?: SortOrder
    firstname?: SortOrder
    lastname?: SortOrder
    userId?: SortOrder
    guests?: SortOrder
    phone?: SortOrder
    date?: SortOrder
    referenceId?: SortOrder
    organizationId?: SortOrder
    createdAt?: SortOrder
    acceptedAt?: SortOrder
    cancelledAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ReservationSumOrderByAggregateInput = {
    guests?: SortOrder
  }

  export type SessionCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type AccountCreateNestedManyWithoutUserInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
  }

  export type MemberCreateNestedManyWithoutUserInput = {
    create?: XOR<MemberCreateWithoutUserInput, MemberUncheckedCreateWithoutUserInput> | MemberCreateWithoutUserInput[] | MemberUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MemberCreateOrConnectWithoutUserInput | MemberCreateOrConnectWithoutUserInput[]
    createMany?: MemberCreateManyUserInputEnvelope
    connect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
  }

  export type InvitationCreateNestedManyWithoutUserInput = {
    create?: XOR<InvitationCreateWithoutUserInput, InvitationUncheckedCreateWithoutUserInput> | InvitationCreateWithoutUserInput[] | InvitationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: InvitationCreateOrConnectWithoutUserInput | InvitationCreateOrConnectWithoutUserInput[]
    createMany?: InvitationCreateManyUserInputEnvelope
    connect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
  }

  export type AddressCreateNestedManyWithoutUsersInput = {
    create?: XOR<AddressCreateWithoutUsersInput, AddressUncheckedCreateWithoutUsersInput> | AddressCreateWithoutUsersInput[] | AddressUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: AddressCreateOrConnectWithoutUsersInput | AddressCreateOrConnectWithoutUsersInput[]
    connect?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutUserInput = {
    create?: XOR<OrderCreateWithoutUserInput, OrderUncheckedCreateWithoutUserInput> | OrderCreateWithoutUserInput[] | OrderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutUserInput | OrderCreateOrConnectWithoutUserInput[]
    createMany?: OrderCreateManyUserInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type ReservationCreateNestedManyWithoutUserInput = {
    create?: XOR<ReservationCreateWithoutUserInput, ReservationUncheckedCreateWithoutUserInput> | ReservationCreateWithoutUserInput[] | ReservationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutUserInput | ReservationCreateOrConnectWithoutUserInput[]
    createMany?: ReservationCreateManyUserInputEnvelope
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
  }

  export type SessionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type AccountUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
  }

  export type MemberUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<MemberCreateWithoutUserInput, MemberUncheckedCreateWithoutUserInput> | MemberCreateWithoutUserInput[] | MemberUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MemberCreateOrConnectWithoutUserInput | MemberCreateOrConnectWithoutUserInput[]
    createMany?: MemberCreateManyUserInputEnvelope
    connect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
  }

  export type InvitationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<InvitationCreateWithoutUserInput, InvitationUncheckedCreateWithoutUserInput> | InvitationCreateWithoutUserInput[] | InvitationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: InvitationCreateOrConnectWithoutUserInput | InvitationCreateOrConnectWithoutUserInput[]
    createMany?: InvitationCreateManyUserInputEnvelope
    connect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
  }

  export type AddressUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<AddressCreateWithoutUsersInput, AddressUncheckedCreateWithoutUsersInput> | AddressCreateWithoutUsersInput[] | AddressUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: AddressCreateOrConnectWithoutUsersInput | AddressCreateOrConnectWithoutUsersInput[]
    connect?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<OrderCreateWithoutUserInput, OrderUncheckedCreateWithoutUserInput> | OrderCreateWithoutUserInput[] | OrderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutUserInput | OrderCreateOrConnectWithoutUserInput[]
    createMany?: OrderCreateManyUserInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type ReservationUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<ReservationCreateWithoutUserInput, ReservationUncheckedCreateWithoutUserInput> | ReservationCreateWithoutUserInput[] | ReservationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutUserInput | ReservationCreateOrConnectWithoutUserInput[]
    createMany?: ReservationCreateManyUserInputEnvelope
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type SessionUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type AccountUpdateManyWithoutUserNestedInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    upsert?: AccountUpsertWithWhereUniqueWithoutUserInput | AccountUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    set?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    disconnect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    delete?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    update?: AccountUpdateWithWhereUniqueWithoutUserInput | AccountUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AccountUpdateManyWithWhereWithoutUserInput | AccountUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AccountScalarWhereInput | AccountScalarWhereInput[]
  }

  export type MemberUpdateManyWithoutUserNestedInput = {
    create?: XOR<MemberCreateWithoutUserInput, MemberUncheckedCreateWithoutUserInput> | MemberCreateWithoutUserInput[] | MemberUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MemberCreateOrConnectWithoutUserInput | MemberCreateOrConnectWithoutUserInput[]
    upsert?: MemberUpsertWithWhereUniqueWithoutUserInput | MemberUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: MemberCreateManyUserInputEnvelope
    set?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    disconnect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    delete?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    connect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    update?: MemberUpdateWithWhereUniqueWithoutUserInput | MemberUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: MemberUpdateManyWithWhereWithoutUserInput | MemberUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: MemberScalarWhereInput | MemberScalarWhereInput[]
  }

  export type InvitationUpdateManyWithoutUserNestedInput = {
    create?: XOR<InvitationCreateWithoutUserInput, InvitationUncheckedCreateWithoutUserInput> | InvitationCreateWithoutUserInput[] | InvitationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: InvitationCreateOrConnectWithoutUserInput | InvitationCreateOrConnectWithoutUserInput[]
    upsert?: InvitationUpsertWithWhereUniqueWithoutUserInput | InvitationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: InvitationCreateManyUserInputEnvelope
    set?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    disconnect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    delete?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    connect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    update?: InvitationUpdateWithWhereUniqueWithoutUserInput | InvitationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: InvitationUpdateManyWithWhereWithoutUserInput | InvitationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: InvitationScalarWhereInput | InvitationScalarWhereInput[]
  }

  export type AddressUpdateManyWithoutUsersNestedInput = {
    create?: XOR<AddressCreateWithoutUsersInput, AddressUncheckedCreateWithoutUsersInput> | AddressCreateWithoutUsersInput[] | AddressUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: AddressCreateOrConnectWithoutUsersInput | AddressCreateOrConnectWithoutUsersInput[]
    upsert?: AddressUpsertWithWhereUniqueWithoutUsersInput | AddressUpsertWithWhereUniqueWithoutUsersInput[]
    set?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    disconnect?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    delete?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    connect?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    update?: AddressUpdateWithWhereUniqueWithoutUsersInput | AddressUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: AddressUpdateManyWithWhereWithoutUsersInput | AddressUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: AddressScalarWhereInput | AddressScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutUserNestedInput = {
    create?: XOR<OrderCreateWithoutUserInput, OrderUncheckedCreateWithoutUserInput> | OrderCreateWithoutUserInput[] | OrderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutUserInput | OrderCreateOrConnectWithoutUserInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutUserInput | OrderUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: OrderCreateManyUserInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutUserInput | OrderUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutUserInput | OrderUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type ReservationUpdateManyWithoutUserNestedInput = {
    create?: XOR<ReservationCreateWithoutUserInput, ReservationUncheckedCreateWithoutUserInput> | ReservationCreateWithoutUserInput[] | ReservationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutUserInput | ReservationCreateOrConnectWithoutUserInput[]
    upsert?: ReservationUpsertWithWhereUniqueWithoutUserInput | ReservationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ReservationCreateManyUserInputEnvelope
    set?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    disconnect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    delete?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    update?: ReservationUpdateWithWhereUniqueWithoutUserInput | ReservationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ReservationUpdateManyWithWhereWithoutUserInput | ReservationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
  }

  export type SessionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type AccountUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    upsert?: AccountUpsertWithWhereUniqueWithoutUserInput | AccountUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    set?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    disconnect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    delete?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    update?: AccountUpdateWithWhereUniqueWithoutUserInput | AccountUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AccountUpdateManyWithWhereWithoutUserInput | AccountUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AccountScalarWhereInput | AccountScalarWhereInput[]
  }

  export type MemberUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<MemberCreateWithoutUserInput, MemberUncheckedCreateWithoutUserInput> | MemberCreateWithoutUserInput[] | MemberUncheckedCreateWithoutUserInput[]
    connectOrCreate?: MemberCreateOrConnectWithoutUserInput | MemberCreateOrConnectWithoutUserInput[]
    upsert?: MemberUpsertWithWhereUniqueWithoutUserInput | MemberUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: MemberCreateManyUserInputEnvelope
    set?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    disconnect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    delete?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    connect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    update?: MemberUpdateWithWhereUniqueWithoutUserInput | MemberUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: MemberUpdateManyWithWhereWithoutUserInput | MemberUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: MemberScalarWhereInput | MemberScalarWhereInput[]
  }

  export type InvitationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<InvitationCreateWithoutUserInput, InvitationUncheckedCreateWithoutUserInput> | InvitationCreateWithoutUserInput[] | InvitationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: InvitationCreateOrConnectWithoutUserInput | InvitationCreateOrConnectWithoutUserInput[]
    upsert?: InvitationUpsertWithWhereUniqueWithoutUserInput | InvitationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: InvitationCreateManyUserInputEnvelope
    set?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    disconnect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    delete?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    connect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    update?: InvitationUpdateWithWhereUniqueWithoutUserInput | InvitationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: InvitationUpdateManyWithWhereWithoutUserInput | InvitationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: InvitationScalarWhereInput | InvitationScalarWhereInput[]
  }

  export type AddressUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<AddressCreateWithoutUsersInput, AddressUncheckedCreateWithoutUsersInput> | AddressCreateWithoutUsersInput[] | AddressUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: AddressCreateOrConnectWithoutUsersInput | AddressCreateOrConnectWithoutUsersInput[]
    upsert?: AddressUpsertWithWhereUniqueWithoutUsersInput | AddressUpsertWithWhereUniqueWithoutUsersInput[]
    set?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    disconnect?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    delete?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    connect?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    update?: AddressUpdateWithWhereUniqueWithoutUsersInput | AddressUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: AddressUpdateManyWithWhereWithoutUsersInput | AddressUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: AddressScalarWhereInput | AddressScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<OrderCreateWithoutUserInput, OrderUncheckedCreateWithoutUserInput> | OrderCreateWithoutUserInput[] | OrderUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutUserInput | OrderCreateOrConnectWithoutUserInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutUserInput | OrderUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: OrderCreateManyUserInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutUserInput | OrderUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutUserInput | OrderUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type ReservationUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<ReservationCreateWithoutUserInput, ReservationUncheckedCreateWithoutUserInput> | ReservationCreateWithoutUserInput[] | ReservationUncheckedCreateWithoutUserInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutUserInput | ReservationCreateOrConnectWithoutUserInput[]
    upsert?: ReservationUpsertWithWhereUniqueWithoutUserInput | ReservationUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: ReservationCreateManyUserInputEnvelope
    set?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    disconnect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    delete?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    update?: ReservationUpdateWithWhereUniqueWithoutUserInput | ReservationUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: ReservationUpdateManyWithWhereWithoutUserInput | ReservationUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutSessionsInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutSessionsNestedInput = {
    create?: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: UserCreateOrConnectWithoutSessionsInput
    upsert?: UserUpsertWithoutSessionsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutSessionsInput, UserUpdateWithoutSessionsInput>, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type UserCreateNestedOneWithoutAccountsInput = {
    create?: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccountsInput
    connect?: UserWhereUniqueInput
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type UserUpdateOneRequiredWithoutAccountsNestedInput = {
    create?: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    connectOrCreate?: UserCreateOrConnectWithoutAccountsInput
    upsert?: UserUpsertWithoutAccountsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutAccountsInput, UserUpdateWithoutAccountsInput>, UserUncheckedUpdateWithoutAccountsInput>
  }

  export type OrganizationCreateNestedOneWithoutMembersInput = {
    create?: XOR<OrganizationCreateWithoutMembersInput, OrganizationUncheckedCreateWithoutMembersInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutMembersInput
    connect?: OrganizationWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutMembersInput = {
    create?: XOR<UserCreateWithoutMembersInput, UserUncheckedCreateWithoutMembersInput>
    connectOrCreate?: UserCreateOrConnectWithoutMembersInput
    connect?: UserWhereUniqueInput
  }

  export type OrganizationUpdateOneRequiredWithoutMembersNestedInput = {
    create?: XOR<OrganizationCreateWithoutMembersInput, OrganizationUncheckedCreateWithoutMembersInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutMembersInput
    upsert?: OrganizationUpsertWithoutMembersInput
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutMembersInput, OrganizationUpdateWithoutMembersInput>, OrganizationUncheckedUpdateWithoutMembersInput>
  }

  export type UserUpdateOneRequiredWithoutMembersNestedInput = {
    create?: XOR<UserCreateWithoutMembersInput, UserUncheckedCreateWithoutMembersInput>
    connectOrCreate?: UserCreateOrConnectWithoutMembersInput
    upsert?: UserUpsertWithoutMembersInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutMembersInput, UserUpdateWithoutMembersInput>, UserUncheckedUpdateWithoutMembersInput>
  }

  export type OrganizationCreateNestedOneWithoutInvitationsInput = {
    create?: XOR<OrganizationCreateWithoutInvitationsInput, OrganizationUncheckedCreateWithoutInvitationsInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutInvitationsInput
    connect?: OrganizationWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutInvitationsInput = {
    create?: XOR<UserCreateWithoutInvitationsInput, UserUncheckedCreateWithoutInvitationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutInvitationsInput
    connect?: UserWhereUniqueInput
  }

  export type OrganizationUpdateOneRequiredWithoutInvitationsNestedInput = {
    create?: XOR<OrganizationCreateWithoutInvitationsInput, OrganizationUncheckedCreateWithoutInvitationsInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutInvitationsInput
    upsert?: OrganizationUpsertWithoutInvitationsInput
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutInvitationsInput, OrganizationUpdateWithoutInvitationsInput>, OrganizationUncheckedUpdateWithoutInvitationsInput>
  }

  export type UserUpdateOneRequiredWithoutInvitationsNestedInput = {
    create?: XOR<UserCreateWithoutInvitationsInput, UserUncheckedCreateWithoutInvitationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutInvitationsInput
    upsert?: UserUpsertWithoutInvitationsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutInvitationsInput, UserUpdateWithoutInvitationsInput>, UserUncheckedUpdateWithoutInvitationsInput>
  }

  export type LegalEntityCreateNestedOneWithoutOrganizationsInput = {
    create?: XOR<LegalEntityCreateWithoutOrganizationsInput, LegalEntityUncheckedCreateWithoutOrganizationsInput>
    connectOrCreate?: LegalEntityCreateOrConnectWithoutOrganizationsInput
    connect?: LegalEntityWhereUniqueInput
  }

  export type AddressCreateNestedOneWithoutOrganizationsInput = {
    create?: XOR<AddressCreateWithoutOrganizationsInput, AddressUncheckedCreateWithoutOrganizationsInput>
    connectOrCreate?: AddressCreateOrConnectWithoutOrganizationsInput
    connect?: AddressWhereUniqueInput
  }

  export type OrganizationConfigurationCreateNestedOneWithoutOrganizationsInput = {
    create?: XOR<OrganizationConfigurationCreateWithoutOrganizationsInput, OrganizationConfigurationUncheckedCreateWithoutOrganizationsInput>
    connectOrCreate?: OrganizationConfigurationCreateOrConnectWithoutOrganizationsInput
    connect?: OrganizationConfigurationWhereUniqueInput
  }

  export type FileCreateNestedOneWithoutOrganizationLogoInput = {
    create?: XOR<FileCreateWithoutOrganizationLogoInput, FileUncheckedCreateWithoutOrganizationLogoInput>
    connectOrCreate?: FileCreateOrConnectWithoutOrganizationLogoInput
    connect?: FileWhereUniqueInput
  }

  export type FileCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<FileCreateWithoutOrganizationInput, FileUncheckedCreateWithoutOrganizationInput> | FileCreateWithoutOrganizationInput[] | FileUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: FileCreateOrConnectWithoutOrganizationInput | FileCreateOrConnectWithoutOrganizationInput[]
    createMany?: FileCreateManyOrganizationInputEnvelope
    connect?: FileWhereUniqueInput | FileWhereUniqueInput[]
  }

  export type MemberCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<MemberCreateWithoutOrganizationInput, MemberUncheckedCreateWithoutOrganizationInput> | MemberCreateWithoutOrganizationInput[] | MemberUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: MemberCreateOrConnectWithoutOrganizationInput | MemberCreateOrConnectWithoutOrganizationInput[]
    createMany?: MemberCreateManyOrganizationInputEnvelope
    connect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
  }

  export type InvitationCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<InvitationCreateWithoutOrganizationInput, InvitationUncheckedCreateWithoutOrganizationInput> | InvitationCreateWithoutOrganizationInput[] | InvitationUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: InvitationCreateOrConnectWithoutOrganizationInput | InvitationCreateOrConnectWithoutOrganizationInput[]
    createMany?: InvitationCreateManyOrganizationInputEnvelope
    connect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<OrderCreateWithoutOrganizationInput, OrderUncheckedCreateWithoutOrganizationInput> | OrderCreateWithoutOrganizationInput[] | OrderUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutOrganizationInput | OrderCreateOrConnectWithoutOrganizationInput[]
    createMany?: OrderCreateManyOrganizationInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type CampaignCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<CampaignCreateWithoutOrganizationInput, CampaignUncheckedCreateWithoutOrganizationInput> | CampaignCreateWithoutOrganizationInput[] | CampaignUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: CampaignCreateOrConnectWithoutOrganizationInput | CampaignCreateOrConnectWithoutOrganizationInput[]
    createMany?: CampaignCreateManyOrganizationInputEnvelope
    connect?: CampaignWhereUniqueInput | CampaignWhereUniqueInput[]
  }

  export type ShippingMethodCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<ShippingMethodCreateWithoutOrganizationInput, ShippingMethodUncheckedCreateWithoutOrganizationInput> | ShippingMethodCreateWithoutOrganizationInput[] | ShippingMethodUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ShippingMethodCreateOrConnectWithoutOrganizationInput | ShippingMethodCreateOrConnectWithoutOrganizationInput[]
    createMany?: ShippingMethodCreateManyOrganizationInputEnvelope
    connect?: ShippingMethodWhereUniqueInput | ShippingMethodWhereUniqueInput[]
  }

  export type ManufacturerCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<ManufacturerCreateWithoutOrganizationInput, ManufacturerUncheckedCreateWithoutOrganizationInput> | ManufacturerCreateWithoutOrganizationInput[] | ManufacturerUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ManufacturerCreateOrConnectWithoutOrganizationInput | ManufacturerCreateOrConnectWithoutOrganizationInput[]
    createMany?: ManufacturerCreateManyOrganizationInputEnvelope
    connect?: ManufacturerWhereUniqueInput | ManufacturerWhereUniqueInput[]
  }

  export type ProductCategoryCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<ProductCategoryCreateWithoutOrganizationInput, ProductCategoryUncheckedCreateWithoutOrganizationInput> | ProductCategoryCreateWithoutOrganizationInput[] | ProductCategoryUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutOrganizationInput | ProductCategoryCreateOrConnectWithoutOrganizationInput[]
    createMany?: ProductCategoryCreateManyOrganizationInputEnvelope
    connect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<ProductCreateWithoutOrganizationInput, ProductUncheckedCreateWithoutOrganizationInput> | ProductCreateWithoutOrganizationInput[] | ProductUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutOrganizationInput | ProductCreateOrConnectWithoutOrganizationInput[]
    createMany?: ProductCreateManyOrganizationInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ReservationCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<ReservationCreateWithoutOrganizationInput, ReservationUncheckedCreateWithoutOrganizationInput> | ReservationCreateWithoutOrganizationInput[] | ReservationUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutOrganizationInput | ReservationCreateOrConnectWithoutOrganizationInput[]
    createMany?: ReservationCreateManyOrganizationInputEnvelope
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
  }

  export type FileUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<FileCreateWithoutOrganizationInput, FileUncheckedCreateWithoutOrganizationInput> | FileCreateWithoutOrganizationInput[] | FileUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: FileCreateOrConnectWithoutOrganizationInput | FileCreateOrConnectWithoutOrganizationInput[]
    createMany?: FileCreateManyOrganizationInputEnvelope
    connect?: FileWhereUniqueInput | FileWhereUniqueInput[]
  }

  export type MemberUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<MemberCreateWithoutOrganizationInput, MemberUncheckedCreateWithoutOrganizationInput> | MemberCreateWithoutOrganizationInput[] | MemberUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: MemberCreateOrConnectWithoutOrganizationInput | MemberCreateOrConnectWithoutOrganizationInput[]
    createMany?: MemberCreateManyOrganizationInputEnvelope
    connect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
  }

  export type InvitationUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<InvitationCreateWithoutOrganizationInput, InvitationUncheckedCreateWithoutOrganizationInput> | InvitationCreateWithoutOrganizationInput[] | InvitationUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: InvitationCreateOrConnectWithoutOrganizationInput | InvitationCreateOrConnectWithoutOrganizationInput[]
    createMany?: InvitationCreateManyOrganizationInputEnvelope
    connect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<OrderCreateWithoutOrganizationInput, OrderUncheckedCreateWithoutOrganizationInput> | OrderCreateWithoutOrganizationInput[] | OrderUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutOrganizationInput | OrderCreateOrConnectWithoutOrganizationInput[]
    createMany?: OrderCreateManyOrganizationInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type CampaignUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<CampaignCreateWithoutOrganizationInput, CampaignUncheckedCreateWithoutOrganizationInput> | CampaignCreateWithoutOrganizationInput[] | CampaignUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: CampaignCreateOrConnectWithoutOrganizationInput | CampaignCreateOrConnectWithoutOrganizationInput[]
    createMany?: CampaignCreateManyOrganizationInputEnvelope
    connect?: CampaignWhereUniqueInput | CampaignWhereUniqueInput[]
  }

  export type ShippingMethodUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<ShippingMethodCreateWithoutOrganizationInput, ShippingMethodUncheckedCreateWithoutOrganizationInput> | ShippingMethodCreateWithoutOrganizationInput[] | ShippingMethodUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ShippingMethodCreateOrConnectWithoutOrganizationInput | ShippingMethodCreateOrConnectWithoutOrganizationInput[]
    createMany?: ShippingMethodCreateManyOrganizationInputEnvelope
    connect?: ShippingMethodWhereUniqueInput | ShippingMethodWhereUniqueInput[]
  }

  export type ManufacturerUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<ManufacturerCreateWithoutOrganizationInput, ManufacturerUncheckedCreateWithoutOrganizationInput> | ManufacturerCreateWithoutOrganizationInput[] | ManufacturerUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ManufacturerCreateOrConnectWithoutOrganizationInput | ManufacturerCreateOrConnectWithoutOrganizationInput[]
    createMany?: ManufacturerCreateManyOrganizationInputEnvelope
    connect?: ManufacturerWhereUniqueInput | ManufacturerWhereUniqueInput[]
  }

  export type ProductCategoryUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<ProductCategoryCreateWithoutOrganizationInput, ProductCategoryUncheckedCreateWithoutOrganizationInput> | ProductCategoryCreateWithoutOrganizationInput[] | ProductCategoryUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutOrganizationInput | ProductCategoryCreateOrConnectWithoutOrganizationInput[]
    createMany?: ProductCategoryCreateManyOrganizationInputEnvelope
    connect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<ProductCreateWithoutOrganizationInput, ProductUncheckedCreateWithoutOrganizationInput> | ProductCreateWithoutOrganizationInput[] | ProductUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutOrganizationInput | ProductCreateOrConnectWithoutOrganizationInput[]
    createMany?: ProductCreateManyOrganizationInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ReservationUncheckedCreateNestedManyWithoutOrganizationInput = {
    create?: XOR<ReservationCreateWithoutOrganizationInput, ReservationUncheckedCreateWithoutOrganizationInput> | ReservationCreateWithoutOrganizationInput[] | ReservationUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutOrganizationInput | ReservationCreateOrConnectWithoutOrganizationInput[]
    createMany?: ReservationCreateManyOrganizationInputEnvelope
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
  }

  export type LegalEntityUpdateOneWithoutOrganizationsNestedInput = {
    create?: XOR<LegalEntityCreateWithoutOrganizationsInput, LegalEntityUncheckedCreateWithoutOrganizationsInput>
    connectOrCreate?: LegalEntityCreateOrConnectWithoutOrganizationsInput
    upsert?: LegalEntityUpsertWithoutOrganizationsInput
    disconnect?: LegalEntityWhereInput | boolean
    delete?: LegalEntityWhereInput | boolean
    connect?: LegalEntityWhereUniqueInput
    update?: XOR<XOR<LegalEntityUpdateToOneWithWhereWithoutOrganizationsInput, LegalEntityUpdateWithoutOrganizationsInput>, LegalEntityUncheckedUpdateWithoutOrganizationsInput>
  }

  export type AddressUpdateOneRequiredWithoutOrganizationsNestedInput = {
    create?: XOR<AddressCreateWithoutOrganizationsInput, AddressUncheckedCreateWithoutOrganizationsInput>
    connectOrCreate?: AddressCreateOrConnectWithoutOrganizationsInput
    upsert?: AddressUpsertWithoutOrganizationsInput
    connect?: AddressWhereUniqueInput
    update?: XOR<XOR<AddressUpdateToOneWithWhereWithoutOrganizationsInput, AddressUpdateWithoutOrganizationsInput>, AddressUncheckedUpdateWithoutOrganizationsInput>
  }

  export type OrganizationConfigurationUpdateOneRequiredWithoutOrganizationsNestedInput = {
    create?: XOR<OrganizationConfigurationCreateWithoutOrganizationsInput, OrganizationConfigurationUncheckedCreateWithoutOrganizationsInput>
    connectOrCreate?: OrganizationConfigurationCreateOrConnectWithoutOrganizationsInput
    upsert?: OrganizationConfigurationUpsertWithoutOrganizationsInput
    connect?: OrganizationConfigurationWhereUniqueInput
    update?: XOR<XOR<OrganizationConfigurationUpdateToOneWithWhereWithoutOrganizationsInput, OrganizationConfigurationUpdateWithoutOrganizationsInput>, OrganizationConfigurationUncheckedUpdateWithoutOrganizationsInput>
  }

  export type FileUpdateOneWithoutOrganizationLogoNestedInput = {
    create?: XOR<FileCreateWithoutOrganizationLogoInput, FileUncheckedCreateWithoutOrganizationLogoInput>
    connectOrCreate?: FileCreateOrConnectWithoutOrganizationLogoInput
    upsert?: FileUpsertWithoutOrganizationLogoInput
    disconnect?: FileWhereInput | boolean
    delete?: FileWhereInput | boolean
    connect?: FileWhereUniqueInput
    update?: XOR<XOR<FileUpdateToOneWithWhereWithoutOrganizationLogoInput, FileUpdateWithoutOrganizationLogoInput>, FileUncheckedUpdateWithoutOrganizationLogoInput>
  }

  export type FileUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<FileCreateWithoutOrganizationInput, FileUncheckedCreateWithoutOrganizationInput> | FileCreateWithoutOrganizationInput[] | FileUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: FileCreateOrConnectWithoutOrganizationInput | FileCreateOrConnectWithoutOrganizationInput[]
    upsert?: FileUpsertWithWhereUniqueWithoutOrganizationInput | FileUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: FileCreateManyOrganizationInputEnvelope
    set?: FileWhereUniqueInput | FileWhereUniqueInput[]
    disconnect?: FileWhereUniqueInput | FileWhereUniqueInput[]
    delete?: FileWhereUniqueInput | FileWhereUniqueInput[]
    connect?: FileWhereUniqueInput | FileWhereUniqueInput[]
    update?: FileUpdateWithWhereUniqueWithoutOrganizationInput | FileUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: FileUpdateManyWithWhereWithoutOrganizationInput | FileUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: FileScalarWhereInput | FileScalarWhereInput[]
  }

  export type MemberUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<MemberCreateWithoutOrganizationInput, MemberUncheckedCreateWithoutOrganizationInput> | MemberCreateWithoutOrganizationInput[] | MemberUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: MemberCreateOrConnectWithoutOrganizationInput | MemberCreateOrConnectWithoutOrganizationInput[]
    upsert?: MemberUpsertWithWhereUniqueWithoutOrganizationInput | MemberUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: MemberCreateManyOrganizationInputEnvelope
    set?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    disconnect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    delete?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    connect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    update?: MemberUpdateWithWhereUniqueWithoutOrganizationInput | MemberUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: MemberUpdateManyWithWhereWithoutOrganizationInput | MemberUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: MemberScalarWhereInput | MemberScalarWhereInput[]
  }

  export type InvitationUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<InvitationCreateWithoutOrganizationInput, InvitationUncheckedCreateWithoutOrganizationInput> | InvitationCreateWithoutOrganizationInput[] | InvitationUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: InvitationCreateOrConnectWithoutOrganizationInput | InvitationCreateOrConnectWithoutOrganizationInput[]
    upsert?: InvitationUpsertWithWhereUniqueWithoutOrganizationInput | InvitationUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: InvitationCreateManyOrganizationInputEnvelope
    set?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    disconnect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    delete?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    connect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    update?: InvitationUpdateWithWhereUniqueWithoutOrganizationInput | InvitationUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: InvitationUpdateManyWithWhereWithoutOrganizationInput | InvitationUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: InvitationScalarWhereInput | InvitationScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<OrderCreateWithoutOrganizationInput, OrderUncheckedCreateWithoutOrganizationInput> | OrderCreateWithoutOrganizationInput[] | OrderUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutOrganizationInput | OrderCreateOrConnectWithoutOrganizationInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutOrganizationInput | OrderUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: OrderCreateManyOrganizationInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutOrganizationInput | OrderUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutOrganizationInput | OrderUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type CampaignUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<CampaignCreateWithoutOrganizationInput, CampaignUncheckedCreateWithoutOrganizationInput> | CampaignCreateWithoutOrganizationInput[] | CampaignUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: CampaignCreateOrConnectWithoutOrganizationInput | CampaignCreateOrConnectWithoutOrganizationInput[]
    upsert?: CampaignUpsertWithWhereUniqueWithoutOrganizationInput | CampaignUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: CampaignCreateManyOrganizationInputEnvelope
    set?: CampaignWhereUniqueInput | CampaignWhereUniqueInput[]
    disconnect?: CampaignWhereUniqueInput | CampaignWhereUniqueInput[]
    delete?: CampaignWhereUniqueInput | CampaignWhereUniqueInput[]
    connect?: CampaignWhereUniqueInput | CampaignWhereUniqueInput[]
    update?: CampaignUpdateWithWhereUniqueWithoutOrganizationInput | CampaignUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: CampaignUpdateManyWithWhereWithoutOrganizationInput | CampaignUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: CampaignScalarWhereInput | CampaignScalarWhereInput[]
  }

  export type ShippingMethodUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<ShippingMethodCreateWithoutOrganizationInput, ShippingMethodUncheckedCreateWithoutOrganizationInput> | ShippingMethodCreateWithoutOrganizationInput[] | ShippingMethodUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ShippingMethodCreateOrConnectWithoutOrganizationInput | ShippingMethodCreateOrConnectWithoutOrganizationInput[]
    upsert?: ShippingMethodUpsertWithWhereUniqueWithoutOrganizationInput | ShippingMethodUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: ShippingMethodCreateManyOrganizationInputEnvelope
    set?: ShippingMethodWhereUniqueInput | ShippingMethodWhereUniqueInput[]
    disconnect?: ShippingMethodWhereUniqueInput | ShippingMethodWhereUniqueInput[]
    delete?: ShippingMethodWhereUniqueInput | ShippingMethodWhereUniqueInput[]
    connect?: ShippingMethodWhereUniqueInput | ShippingMethodWhereUniqueInput[]
    update?: ShippingMethodUpdateWithWhereUniqueWithoutOrganizationInput | ShippingMethodUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: ShippingMethodUpdateManyWithWhereWithoutOrganizationInput | ShippingMethodUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: ShippingMethodScalarWhereInput | ShippingMethodScalarWhereInput[]
  }

  export type ManufacturerUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<ManufacturerCreateWithoutOrganizationInput, ManufacturerUncheckedCreateWithoutOrganizationInput> | ManufacturerCreateWithoutOrganizationInput[] | ManufacturerUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ManufacturerCreateOrConnectWithoutOrganizationInput | ManufacturerCreateOrConnectWithoutOrganizationInput[]
    upsert?: ManufacturerUpsertWithWhereUniqueWithoutOrganizationInput | ManufacturerUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: ManufacturerCreateManyOrganizationInputEnvelope
    set?: ManufacturerWhereUniqueInput | ManufacturerWhereUniqueInput[]
    disconnect?: ManufacturerWhereUniqueInput | ManufacturerWhereUniqueInput[]
    delete?: ManufacturerWhereUniqueInput | ManufacturerWhereUniqueInput[]
    connect?: ManufacturerWhereUniqueInput | ManufacturerWhereUniqueInput[]
    update?: ManufacturerUpdateWithWhereUniqueWithoutOrganizationInput | ManufacturerUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: ManufacturerUpdateManyWithWhereWithoutOrganizationInput | ManufacturerUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: ManufacturerScalarWhereInput | ManufacturerScalarWhereInput[]
  }

  export type ProductCategoryUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<ProductCategoryCreateWithoutOrganizationInput, ProductCategoryUncheckedCreateWithoutOrganizationInput> | ProductCategoryCreateWithoutOrganizationInput[] | ProductCategoryUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutOrganizationInput | ProductCategoryCreateOrConnectWithoutOrganizationInput[]
    upsert?: ProductCategoryUpsertWithWhereUniqueWithoutOrganizationInput | ProductCategoryUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: ProductCategoryCreateManyOrganizationInputEnvelope
    set?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    disconnect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    delete?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    connect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    update?: ProductCategoryUpdateWithWhereUniqueWithoutOrganizationInput | ProductCategoryUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: ProductCategoryUpdateManyWithWhereWithoutOrganizationInput | ProductCategoryUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: ProductCategoryScalarWhereInput | ProductCategoryScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<ProductCreateWithoutOrganizationInput, ProductUncheckedCreateWithoutOrganizationInput> | ProductCreateWithoutOrganizationInput[] | ProductUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutOrganizationInput | ProductCreateOrConnectWithoutOrganizationInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutOrganizationInput | ProductUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: ProductCreateManyOrganizationInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutOrganizationInput | ProductUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutOrganizationInput | ProductUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ReservationUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<ReservationCreateWithoutOrganizationInput, ReservationUncheckedCreateWithoutOrganizationInput> | ReservationCreateWithoutOrganizationInput[] | ReservationUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutOrganizationInput | ReservationCreateOrConnectWithoutOrganizationInput[]
    upsert?: ReservationUpsertWithWhereUniqueWithoutOrganizationInput | ReservationUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: ReservationCreateManyOrganizationInputEnvelope
    set?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    disconnect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    delete?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    update?: ReservationUpdateWithWhereUniqueWithoutOrganizationInput | ReservationUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: ReservationUpdateManyWithWhereWithoutOrganizationInput | ReservationUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
  }

  export type FileUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<FileCreateWithoutOrganizationInput, FileUncheckedCreateWithoutOrganizationInput> | FileCreateWithoutOrganizationInput[] | FileUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: FileCreateOrConnectWithoutOrganizationInput | FileCreateOrConnectWithoutOrganizationInput[]
    upsert?: FileUpsertWithWhereUniqueWithoutOrganizationInput | FileUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: FileCreateManyOrganizationInputEnvelope
    set?: FileWhereUniqueInput | FileWhereUniqueInput[]
    disconnect?: FileWhereUniqueInput | FileWhereUniqueInput[]
    delete?: FileWhereUniqueInput | FileWhereUniqueInput[]
    connect?: FileWhereUniqueInput | FileWhereUniqueInput[]
    update?: FileUpdateWithWhereUniqueWithoutOrganizationInput | FileUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: FileUpdateManyWithWhereWithoutOrganizationInput | FileUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: FileScalarWhereInput | FileScalarWhereInput[]
  }

  export type MemberUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<MemberCreateWithoutOrganizationInput, MemberUncheckedCreateWithoutOrganizationInput> | MemberCreateWithoutOrganizationInput[] | MemberUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: MemberCreateOrConnectWithoutOrganizationInput | MemberCreateOrConnectWithoutOrganizationInput[]
    upsert?: MemberUpsertWithWhereUniqueWithoutOrganizationInput | MemberUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: MemberCreateManyOrganizationInputEnvelope
    set?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    disconnect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    delete?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    connect?: MemberWhereUniqueInput | MemberWhereUniqueInput[]
    update?: MemberUpdateWithWhereUniqueWithoutOrganizationInput | MemberUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: MemberUpdateManyWithWhereWithoutOrganizationInput | MemberUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: MemberScalarWhereInput | MemberScalarWhereInput[]
  }

  export type InvitationUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<InvitationCreateWithoutOrganizationInput, InvitationUncheckedCreateWithoutOrganizationInput> | InvitationCreateWithoutOrganizationInput[] | InvitationUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: InvitationCreateOrConnectWithoutOrganizationInput | InvitationCreateOrConnectWithoutOrganizationInput[]
    upsert?: InvitationUpsertWithWhereUniqueWithoutOrganizationInput | InvitationUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: InvitationCreateManyOrganizationInputEnvelope
    set?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    disconnect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    delete?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    connect?: InvitationWhereUniqueInput | InvitationWhereUniqueInput[]
    update?: InvitationUpdateWithWhereUniqueWithoutOrganizationInput | InvitationUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: InvitationUpdateManyWithWhereWithoutOrganizationInput | InvitationUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: InvitationScalarWhereInput | InvitationScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<OrderCreateWithoutOrganizationInput, OrderUncheckedCreateWithoutOrganizationInput> | OrderCreateWithoutOrganizationInput[] | OrderUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutOrganizationInput | OrderCreateOrConnectWithoutOrganizationInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutOrganizationInput | OrderUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: OrderCreateManyOrganizationInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutOrganizationInput | OrderUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutOrganizationInput | OrderUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type CampaignUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<CampaignCreateWithoutOrganizationInput, CampaignUncheckedCreateWithoutOrganizationInput> | CampaignCreateWithoutOrganizationInput[] | CampaignUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: CampaignCreateOrConnectWithoutOrganizationInput | CampaignCreateOrConnectWithoutOrganizationInput[]
    upsert?: CampaignUpsertWithWhereUniqueWithoutOrganizationInput | CampaignUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: CampaignCreateManyOrganizationInputEnvelope
    set?: CampaignWhereUniqueInput | CampaignWhereUniqueInput[]
    disconnect?: CampaignWhereUniqueInput | CampaignWhereUniqueInput[]
    delete?: CampaignWhereUniqueInput | CampaignWhereUniqueInput[]
    connect?: CampaignWhereUniqueInput | CampaignWhereUniqueInput[]
    update?: CampaignUpdateWithWhereUniqueWithoutOrganizationInput | CampaignUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: CampaignUpdateManyWithWhereWithoutOrganizationInput | CampaignUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: CampaignScalarWhereInput | CampaignScalarWhereInput[]
  }

  export type ShippingMethodUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<ShippingMethodCreateWithoutOrganizationInput, ShippingMethodUncheckedCreateWithoutOrganizationInput> | ShippingMethodCreateWithoutOrganizationInput[] | ShippingMethodUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ShippingMethodCreateOrConnectWithoutOrganizationInput | ShippingMethodCreateOrConnectWithoutOrganizationInput[]
    upsert?: ShippingMethodUpsertWithWhereUniqueWithoutOrganizationInput | ShippingMethodUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: ShippingMethodCreateManyOrganizationInputEnvelope
    set?: ShippingMethodWhereUniqueInput | ShippingMethodWhereUniqueInput[]
    disconnect?: ShippingMethodWhereUniqueInput | ShippingMethodWhereUniqueInput[]
    delete?: ShippingMethodWhereUniqueInput | ShippingMethodWhereUniqueInput[]
    connect?: ShippingMethodWhereUniqueInput | ShippingMethodWhereUniqueInput[]
    update?: ShippingMethodUpdateWithWhereUniqueWithoutOrganizationInput | ShippingMethodUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: ShippingMethodUpdateManyWithWhereWithoutOrganizationInput | ShippingMethodUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: ShippingMethodScalarWhereInput | ShippingMethodScalarWhereInput[]
  }

  export type ManufacturerUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<ManufacturerCreateWithoutOrganizationInput, ManufacturerUncheckedCreateWithoutOrganizationInput> | ManufacturerCreateWithoutOrganizationInput[] | ManufacturerUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ManufacturerCreateOrConnectWithoutOrganizationInput | ManufacturerCreateOrConnectWithoutOrganizationInput[]
    upsert?: ManufacturerUpsertWithWhereUniqueWithoutOrganizationInput | ManufacturerUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: ManufacturerCreateManyOrganizationInputEnvelope
    set?: ManufacturerWhereUniqueInput | ManufacturerWhereUniqueInput[]
    disconnect?: ManufacturerWhereUniqueInput | ManufacturerWhereUniqueInput[]
    delete?: ManufacturerWhereUniqueInput | ManufacturerWhereUniqueInput[]
    connect?: ManufacturerWhereUniqueInput | ManufacturerWhereUniqueInput[]
    update?: ManufacturerUpdateWithWhereUniqueWithoutOrganizationInput | ManufacturerUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: ManufacturerUpdateManyWithWhereWithoutOrganizationInput | ManufacturerUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: ManufacturerScalarWhereInput | ManufacturerScalarWhereInput[]
  }

  export type ProductCategoryUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<ProductCategoryCreateWithoutOrganizationInput, ProductCategoryUncheckedCreateWithoutOrganizationInput> | ProductCategoryCreateWithoutOrganizationInput[] | ProductCategoryUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutOrganizationInput | ProductCategoryCreateOrConnectWithoutOrganizationInput[]
    upsert?: ProductCategoryUpsertWithWhereUniqueWithoutOrganizationInput | ProductCategoryUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: ProductCategoryCreateManyOrganizationInputEnvelope
    set?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    disconnect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    delete?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    connect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    update?: ProductCategoryUpdateWithWhereUniqueWithoutOrganizationInput | ProductCategoryUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: ProductCategoryUpdateManyWithWhereWithoutOrganizationInput | ProductCategoryUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: ProductCategoryScalarWhereInput | ProductCategoryScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<ProductCreateWithoutOrganizationInput, ProductUncheckedCreateWithoutOrganizationInput> | ProductCreateWithoutOrganizationInput[] | ProductUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutOrganizationInput | ProductCreateOrConnectWithoutOrganizationInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutOrganizationInput | ProductUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: ProductCreateManyOrganizationInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutOrganizationInput | ProductUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutOrganizationInput | ProductUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ReservationUncheckedUpdateManyWithoutOrganizationNestedInput = {
    create?: XOR<ReservationCreateWithoutOrganizationInput, ReservationUncheckedCreateWithoutOrganizationInput> | ReservationCreateWithoutOrganizationInput[] | ReservationUncheckedCreateWithoutOrganizationInput[]
    connectOrCreate?: ReservationCreateOrConnectWithoutOrganizationInput | ReservationCreateOrConnectWithoutOrganizationInput[]
    upsert?: ReservationUpsertWithWhereUniqueWithoutOrganizationInput | ReservationUpsertWithWhereUniqueWithoutOrganizationInput[]
    createMany?: ReservationCreateManyOrganizationInputEnvelope
    set?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    disconnect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    delete?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    connect?: ReservationWhereUniqueInput | ReservationWhereUniqueInput[]
    update?: ReservationUpdateWithWhereUniqueWithoutOrganizationInput | ReservationUpdateWithWhereUniqueWithoutOrganizationInput[]
    updateMany?: ReservationUpdateManyWithWhereWithoutOrganizationInput | ReservationUpdateManyWithWhereWithoutOrganizationInput[]
    deleteMany?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
  }

  export type OrganizationConfigurationCreateNestedOneWithoutOpeningTimesInput = {
    create?: XOR<OrganizationConfigurationCreateWithoutOpeningTimesInput, OrganizationConfigurationUncheckedCreateWithoutOpeningTimesInput>
    connectOrCreate?: OrganizationConfigurationCreateOrConnectWithoutOpeningTimesInput
    connect?: OrganizationConfigurationWhereUniqueInput
  }

  export type OrganizationConfigurationUncheckedCreateNestedOneWithoutOpeningTimesInput = {
    create?: XOR<OrganizationConfigurationCreateWithoutOpeningTimesInput, OrganizationConfigurationUncheckedCreateWithoutOpeningTimesInput>
    connectOrCreate?: OrganizationConfigurationCreateOrConnectWithoutOpeningTimesInput
    connect?: OrganizationConfigurationWhereUniqueInput
  }

  export type OrganizationConfigurationUpdateOneWithoutOpeningTimesNestedInput = {
    create?: XOR<OrganizationConfigurationCreateWithoutOpeningTimesInput, OrganizationConfigurationUncheckedCreateWithoutOpeningTimesInput>
    connectOrCreate?: OrganizationConfigurationCreateOrConnectWithoutOpeningTimesInput
    upsert?: OrganizationConfigurationUpsertWithoutOpeningTimesInput
    disconnect?: OrganizationConfigurationWhereInput | boolean
    delete?: OrganizationConfigurationWhereInput | boolean
    connect?: OrganizationConfigurationWhereUniqueInput
    update?: XOR<XOR<OrganizationConfigurationUpdateToOneWithWhereWithoutOpeningTimesInput, OrganizationConfigurationUpdateWithoutOpeningTimesInput>, OrganizationConfigurationUncheckedUpdateWithoutOpeningTimesInput>
  }

  export type OrganizationConfigurationUncheckedUpdateOneWithoutOpeningTimesNestedInput = {
    create?: XOR<OrganizationConfigurationCreateWithoutOpeningTimesInput, OrganizationConfigurationUncheckedCreateWithoutOpeningTimesInput>
    connectOrCreate?: OrganizationConfigurationCreateOrConnectWithoutOpeningTimesInput
    upsert?: OrganizationConfigurationUpsertWithoutOpeningTimesInput
    disconnect?: OrganizationConfigurationWhereInput | boolean
    delete?: OrganizationConfigurationWhereInput | boolean
    connect?: OrganizationConfigurationWhereUniqueInput
    update?: XOR<XOR<OrganizationConfigurationUpdateToOneWithWhereWithoutOpeningTimesInput, OrganizationConfigurationUpdateWithoutOpeningTimesInput>, OrganizationConfigurationUncheckedUpdateWithoutOpeningTimesInput>
  }

  export type OrganizationConfigurationCreateNestedOneWithoutClosingTimesInput = {
    create?: XOR<OrganizationConfigurationCreateWithoutClosingTimesInput, OrganizationConfigurationUncheckedCreateWithoutClosingTimesInput>
    connectOrCreate?: OrganizationConfigurationCreateOrConnectWithoutClosingTimesInput
    connect?: OrganizationConfigurationWhereUniqueInput
  }

  export type OrganizationConfigurationUncheckedCreateNestedOneWithoutClosingTimesInput = {
    create?: XOR<OrganizationConfigurationCreateWithoutClosingTimesInput, OrganizationConfigurationUncheckedCreateWithoutClosingTimesInput>
    connectOrCreate?: OrganizationConfigurationCreateOrConnectWithoutClosingTimesInput
    connect?: OrganizationConfigurationWhereUniqueInput
  }

  export type OrganizationConfigurationUpdateOneWithoutClosingTimesNestedInput = {
    create?: XOR<OrganizationConfigurationCreateWithoutClosingTimesInput, OrganizationConfigurationUncheckedCreateWithoutClosingTimesInput>
    connectOrCreate?: OrganizationConfigurationCreateOrConnectWithoutClosingTimesInput
    upsert?: OrganizationConfigurationUpsertWithoutClosingTimesInput
    disconnect?: OrganizationConfigurationWhereInput | boolean
    delete?: OrganizationConfigurationWhereInput | boolean
    connect?: OrganizationConfigurationWhereUniqueInput
    update?: XOR<XOR<OrganizationConfigurationUpdateToOneWithWhereWithoutClosingTimesInput, OrganizationConfigurationUpdateWithoutClosingTimesInput>, OrganizationConfigurationUncheckedUpdateWithoutClosingTimesInput>
  }

  export type OrganizationConfigurationUncheckedUpdateOneWithoutClosingTimesNestedInput = {
    create?: XOR<OrganizationConfigurationCreateWithoutClosingTimesInput, OrganizationConfigurationUncheckedCreateWithoutClosingTimesInput>
    connectOrCreate?: OrganizationConfigurationCreateOrConnectWithoutClosingTimesInput
    upsert?: OrganizationConfigurationUpsertWithoutClosingTimesInput
    disconnect?: OrganizationConfigurationWhereInput | boolean
    delete?: OrganizationConfigurationWhereInput | boolean
    connect?: OrganizationConfigurationWhereUniqueInput
    update?: XOR<XOR<OrganizationConfigurationUpdateToOneWithWhereWithoutClosingTimesInput, OrganizationConfigurationUpdateWithoutClosingTimesInput>, OrganizationConfigurationUncheckedUpdateWithoutClosingTimesInput>
  }

  export type OrganizationConfigurationCreatecountriesShippingInput = {
    set: string[]
  }

  export type OrganizationConfigurationCreatesupportedLocalesInput = {
    set: $Enums.Locale[]
  }

  export type OpeningTimesCreateNestedOneWithoutOrganizationConfigurationInput = {
    create?: XOR<OpeningTimesCreateWithoutOrganizationConfigurationInput, OpeningTimesUncheckedCreateWithoutOrganizationConfigurationInput>
    connectOrCreate?: OpeningTimesCreateOrConnectWithoutOrganizationConfigurationInput
    connect?: OpeningTimesWhereUniqueInput
  }

  export type ClosingTimesCreateNestedOneWithoutOrganizationConfigurationInput = {
    create?: XOR<ClosingTimesCreateWithoutOrganizationConfigurationInput, ClosingTimesUncheckedCreateWithoutOrganizationConfigurationInput>
    connectOrCreate?: ClosingTimesCreateOrConnectWithoutOrganizationConfigurationInput
    connect?: ClosingTimesWhereUniqueInput
  }

  export type OrganizationCreateNestedManyWithoutConfigurationInput = {
    create?: XOR<OrganizationCreateWithoutConfigurationInput, OrganizationUncheckedCreateWithoutConfigurationInput> | OrganizationCreateWithoutConfigurationInput[] | OrganizationUncheckedCreateWithoutConfigurationInput[]
    connectOrCreate?: OrganizationCreateOrConnectWithoutConfigurationInput | OrganizationCreateOrConnectWithoutConfigurationInput[]
    createMany?: OrganizationCreateManyConfigurationInputEnvelope
    connect?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
  }

  export type OrganizationUncheckedCreateNestedManyWithoutConfigurationInput = {
    create?: XOR<OrganizationCreateWithoutConfigurationInput, OrganizationUncheckedCreateWithoutConfigurationInput> | OrganizationCreateWithoutConfigurationInput[] | OrganizationUncheckedCreateWithoutConfigurationInput[]
    connectOrCreate?: OrganizationCreateOrConnectWithoutConfigurationInput | OrganizationCreateOrConnectWithoutConfigurationInput[]
    createMany?: OrganizationCreateManyConfigurationInputEnvelope
    connect?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
  }

  export type OrganizationConfigurationUpdatecountriesShippingInput = {
    set?: string[]
    push?: string | string[]
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type EnumCurrencyFieldUpdateOperationsInput = {
    set?: $Enums.Currency
  }

  export type EnumLocaleFieldUpdateOperationsInput = {
    set?: $Enums.Locale
  }

  export type OrganizationConfigurationUpdatesupportedLocalesInput = {
    set?: $Enums.Locale[]
    push?: $Enums.Locale | $Enums.Locale[]
  }

  export type OpeningTimesUpdateOneWithoutOrganizationConfigurationNestedInput = {
    create?: XOR<OpeningTimesCreateWithoutOrganizationConfigurationInput, OpeningTimesUncheckedCreateWithoutOrganizationConfigurationInput>
    connectOrCreate?: OpeningTimesCreateOrConnectWithoutOrganizationConfigurationInput
    upsert?: OpeningTimesUpsertWithoutOrganizationConfigurationInput
    disconnect?: OpeningTimesWhereInput | boolean
    delete?: OpeningTimesWhereInput | boolean
    connect?: OpeningTimesWhereUniqueInput
    update?: XOR<XOR<OpeningTimesUpdateToOneWithWhereWithoutOrganizationConfigurationInput, OpeningTimesUpdateWithoutOrganizationConfigurationInput>, OpeningTimesUncheckedUpdateWithoutOrganizationConfigurationInput>
  }

  export type ClosingTimesUpdateOneWithoutOrganizationConfigurationNestedInput = {
    create?: XOR<ClosingTimesCreateWithoutOrganizationConfigurationInput, ClosingTimesUncheckedCreateWithoutOrganizationConfigurationInput>
    connectOrCreate?: ClosingTimesCreateOrConnectWithoutOrganizationConfigurationInput
    upsert?: ClosingTimesUpsertWithoutOrganizationConfigurationInput
    disconnect?: ClosingTimesWhereInput | boolean
    delete?: ClosingTimesWhereInput | boolean
    connect?: ClosingTimesWhereUniqueInput
    update?: XOR<XOR<ClosingTimesUpdateToOneWithWhereWithoutOrganizationConfigurationInput, ClosingTimesUpdateWithoutOrganizationConfigurationInput>, ClosingTimesUncheckedUpdateWithoutOrganizationConfigurationInput>
  }

  export type OrganizationUpdateManyWithoutConfigurationNestedInput = {
    create?: XOR<OrganizationCreateWithoutConfigurationInput, OrganizationUncheckedCreateWithoutConfigurationInput> | OrganizationCreateWithoutConfigurationInput[] | OrganizationUncheckedCreateWithoutConfigurationInput[]
    connectOrCreate?: OrganizationCreateOrConnectWithoutConfigurationInput | OrganizationCreateOrConnectWithoutConfigurationInput[]
    upsert?: OrganizationUpsertWithWhereUniqueWithoutConfigurationInput | OrganizationUpsertWithWhereUniqueWithoutConfigurationInput[]
    createMany?: OrganizationCreateManyConfigurationInputEnvelope
    set?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
    disconnect?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
    delete?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
    connect?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
    update?: OrganizationUpdateWithWhereUniqueWithoutConfigurationInput | OrganizationUpdateWithWhereUniqueWithoutConfigurationInput[]
    updateMany?: OrganizationUpdateManyWithWhereWithoutConfigurationInput | OrganizationUpdateManyWithWhereWithoutConfigurationInput[]
    deleteMany?: OrganizationScalarWhereInput | OrganizationScalarWhereInput[]
  }

  export type OrganizationUncheckedUpdateManyWithoutConfigurationNestedInput = {
    create?: XOR<OrganizationCreateWithoutConfigurationInput, OrganizationUncheckedCreateWithoutConfigurationInput> | OrganizationCreateWithoutConfigurationInput[] | OrganizationUncheckedCreateWithoutConfigurationInput[]
    connectOrCreate?: OrganizationCreateOrConnectWithoutConfigurationInput | OrganizationCreateOrConnectWithoutConfigurationInput[]
    upsert?: OrganizationUpsertWithWhereUniqueWithoutConfigurationInput | OrganizationUpsertWithWhereUniqueWithoutConfigurationInput[]
    createMany?: OrganizationCreateManyConfigurationInputEnvelope
    set?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
    disconnect?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
    delete?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
    connect?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
    update?: OrganizationUpdateWithWhereUniqueWithoutConfigurationInput | OrganizationUpdateWithWhereUniqueWithoutConfigurationInput[]
    updateMany?: OrganizationUpdateManyWithWhereWithoutConfigurationInput | OrganizationUpdateManyWithWhereWithoutConfigurationInput[]
    deleteMany?: OrganizationScalarWhereInput | OrganizationScalarWhereInput[]
  }

  export type LegalEntityCreateNestedManyWithoutAddressInput = {
    create?: XOR<LegalEntityCreateWithoutAddressInput, LegalEntityUncheckedCreateWithoutAddressInput> | LegalEntityCreateWithoutAddressInput[] | LegalEntityUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: LegalEntityCreateOrConnectWithoutAddressInput | LegalEntityCreateOrConnectWithoutAddressInput[]
    createMany?: LegalEntityCreateManyAddressInputEnvelope
    connect?: LegalEntityWhereUniqueInput | LegalEntityWhereUniqueInput[]
  }

  export type OrganizationCreateNestedManyWithoutAddressInput = {
    create?: XOR<OrganizationCreateWithoutAddressInput, OrganizationUncheckedCreateWithoutAddressInput> | OrganizationCreateWithoutAddressInput[] | OrganizationUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: OrganizationCreateOrConnectWithoutAddressInput | OrganizationCreateOrConnectWithoutAddressInput[]
    createMany?: OrganizationCreateManyAddressInputEnvelope
    connect?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
  }

  export type UserCreateNestedManyWithoutShippingAddressesInput = {
    create?: XOR<UserCreateWithoutShippingAddressesInput, UserUncheckedCreateWithoutShippingAddressesInput> | UserCreateWithoutShippingAddressesInput[] | UserUncheckedCreateWithoutShippingAddressesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutShippingAddressesInput | UserCreateOrConnectWithoutShippingAddressesInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutShippingAddressInput = {
    create?: XOR<OrderCreateWithoutShippingAddressInput, OrderUncheckedCreateWithoutShippingAddressInput> | OrderCreateWithoutShippingAddressInput[] | OrderUncheckedCreateWithoutShippingAddressInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutShippingAddressInput | OrderCreateOrConnectWithoutShippingAddressInput[]
    createMany?: OrderCreateManyShippingAddressInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type LegalEntityUncheckedCreateNestedManyWithoutAddressInput = {
    create?: XOR<LegalEntityCreateWithoutAddressInput, LegalEntityUncheckedCreateWithoutAddressInput> | LegalEntityCreateWithoutAddressInput[] | LegalEntityUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: LegalEntityCreateOrConnectWithoutAddressInput | LegalEntityCreateOrConnectWithoutAddressInput[]
    createMany?: LegalEntityCreateManyAddressInputEnvelope
    connect?: LegalEntityWhereUniqueInput | LegalEntityWhereUniqueInput[]
  }

  export type OrganizationUncheckedCreateNestedManyWithoutAddressInput = {
    create?: XOR<OrganizationCreateWithoutAddressInput, OrganizationUncheckedCreateWithoutAddressInput> | OrganizationCreateWithoutAddressInput[] | OrganizationUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: OrganizationCreateOrConnectWithoutAddressInput | OrganizationCreateOrConnectWithoutAddressInput[]
    createMany?: OrganizationCreateManyAddressInputEnvelope
    connect?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
  }

  export type UserUncheckedCreateNestedManyWithoutShippingAddressesInput = {
    create?: XOR<UserCreateWithoutShippingAddressesInput, UserUncheckedCreateWithoutShippingAddressesInput> | UserCreateWithoutShippingAddressesInput[] | UserUncheckedCreateWithoutShippingAddressesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutShippingAddressesInput | UserCreateOrConnectWithoutShippingAddressesInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutShippingAddressInput = {
    create?: XOR<OrderCreateWithoutShippingAddressInput, OrderUncheckedCreateWithoutShippingAddressInput> | OrderCreateWithoutShippingAddressInput[] | OrderUncheckedCreateWithoutShippingAddressInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutShippingAddressInput | OrderCreateOrConnectWithoutShippingAddressInput[]
    createMany?: OrderCreateManyShippingAddressInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type LegalEntityUpdateManyWithoutAddressNestedInput = {
    create?: XOR<LegalEntityCreateWithoutAddressInput, LegalEntityUncheckedCreateWithoutAddressInput> | LegalEntityCreateWithoutAddressInput[] | LegalEntityUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: LegalEntityCreateOrConnectWithoutAddressInput | LegalEntityCreateOrConnectWithoutAddressInput[]
    upsert?: LegalEntityUpsertWithWhereUniqueWithoutAddressInput | LegalEntityUpsertWithWhereUniqueWithoutAddressInput[]
    createMany?: LegalEntityCreateManyAddressInputEnvelope
    set?: LegalEntityWhereUniqueInput | LegalEntityWhereUniqueInput[]
    disconnect?: LegalEntityWhereUniqueInput | LegalEntityWhereUniqueInput[]
    delete?: LegalEntityWhereUniqueInput | LegalEntityWhereUniqueInput[]
    connect?: LegalEntityWhereUniqueInput | LegalEntityWhereUniqueInput[]
    update?: LegalEntityUpdateWithWhereUniqueWithoutAddressInput | LegalEntityUpdateWithWhereUniqueWithoutAddressInput[]
    updateMany?: LegalEntityUpdateManyWithWhereWithoutAddressInput | LegalEntityUpdateManyWithWhereWithoutAddressInput[]
    deleteMany?: LegalEntityScalarWhereInput | LegalEntityScalarWhereInput[]
  }

  export type OrganizationUpdateManyWithoutAddressNestedInput = {
    create?: XOR<OrganizationCreateWithoutAddressInput, OrganizationUncheckedCreateWithoutAddressInput> | OrganizationCreateWithoutAddressInput[] | OrganizationUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: OrganizationCreateOrConnectWithoutAddressInput | OrganizationCreateOrConnectWithoutAddressInput[]
    upsert?: OrganizationUpsertWithWhereUniqueWithoutAddressInput | OrganizationUpsertWithWhereUniqueWithoutAddressInput[]
    createMany?: OrganizationCreateManyAddressInputEnvelope
    set?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
    disconnect?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
    delete?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
    connect?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
    update?: OrganizationUpdateWithWhereUniqueWithoutAddressInput | OrganizationUpdateWithWhereUniqueWithoutAddressInput[]
    updateMany?: OrganizationUpdateManyWithWhereWithoutAddressInput | OrganizationUpdateManyWithWhereWithoutAddressInput[]
    deleteMany?: OrganizationScalarWhereInput | OrganizationScalarWhereInput[]
  }

  export type UserUpdateManyWithoutShippingAddressesNestedInput = {
    create?: XOR<UserCreateWithoutShippingAddressesInput, UserUncheckedCreateWithoutShippingAddressesInput> | UserCreateWithoutShippingAddressesInput[] | UserUncheckedCreateWithoutShippingAddressesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutShippingAddressesInput | UserCreateOrConnectWithoutShippingAddressesInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutShippingAddressesInput | UserUpsertWithWhereUniqueWithoutShippingAddressesInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutShippingAddressesInput | UserUpdateWithWhereUniqueWithoutShippingAddressesInput[]
    updateMany?: UserUpdateManyWithWhereWithoutShippingAddressesInput | UserUpdateManyWithWhereWithoutShippingAddressesInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutShippingAddressNestedInput = {
    create?: XOR<OrderCreateWithoutShippingAddressInput, OrderUncheckedCreateWithoutShippingAddressInput> | OrderCreateWithoutShippingAddressInput[] | OrderUncheckedCreateWithoutShippingAddressInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutShippingAddressInput | OrderCreateOrConnectWithoutShippingAddressInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutShippingAddressInput | OrderUpsertWithWhereUniqueWithoutShippingAddressInput[]
    createMany?: OrderCreateManyShippingAddressInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutShippingAddressInput | OrderUpdateWithWhereUniqueWithoutShippingAddressInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutShippingAddressInput | OrderUpdateManyWithWhereWithoutShippingAddressInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type LegalEntityUncheckedUpdateManyWithoutAddressNestedInput = {
    create?: XOR<LegalEntityCreateWithoutAddressInput, LegalEntityUncheckedCreateWithoutAddressInput> | LegalEntityCreateWithoutAddressInput[] | LegalEntityUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: LegalEntityCreateOrConnectWithoutAddressInput | LegalEntityCreateOrConnectWithoutAddressInput[]
    upsert?: LegalEntityUpsertWithWhereUniqueWithoutAddressInput | LegalEntityUpsertWithWhereUniqueWithoutAddressInput[]
    createMany?: LegalEntityCreateManyAddressInputEnvelope
    set?: LegalEntityWhereUniqueInput | LegalEntityWhereUniqueInput[]
    disconnect?: LegalEntityWhereUniqueInput | LegalEntityWhereUniqueInput[]
    delete?: LegalEntityWhereUniqueInput | LegalEntityWhereUniqueInput[]
    connect?: LegalEntityWhereUniqueInput | LegalEntityWhereUniqueInput[]
    update?: LegalEntityUpdateWithWhereUniqueWithoutAddressInput | LegalEntityUpdateWithWhereUniqueWithoutAddressInput[]
    updateMany?: LegalEntityUpdateManyWithWhereWithoutAddressInput | LegalEntityUpdateManyWithWhereWithoutAddressInput[]
    deleteMany?: LegalEntityScalarWhereInput | LegalEntityScalarWhereInput[]
  }

  export type OrganizationUncheckedUpdateManyWithoutAddressNestedInput = {
    create?: XOR<OrganizationCreateWithoutAddressInput, OrganizationUncheckedCreateWithoutAddressInput> | OrganizationCreateWithoutAddressInput[] | OrganizationUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: OrganizationCreateOrConnectWithoutAddressInput | OrganizationCreateOrConnectWithoutAddressInput[]
    upsert?: OrganizationUpsertWithWhereUniqueWithoutAddressInput | OrganizationUpsertWithWhereUniqueWithoutAddressInput[]
    createMany?: OrganizationCreateManyAddressInputEnvelope
    set?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
    disconnect?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
    delete?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
    connect?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
    update?: OrganizationUpdateWithWhereUniqueWithoutAddressInput | OrganizationUpdateWithWhereUniqueWithoutAddressInput[]
    updateMany?: OrganizationUpdateManyWithWhereWithoutAddressInput | OrganizationUpdateManyWithWhereWithoutAddressInput[]
    deleteMany?: OrganizationScalarWhereInput | OrganizationScalarWhereInput[]
  }

  export type UserUncheckedUpdateManyWithoutShippingAddressesNestedInput = {
    create?: XOR<UserCreateWithoutShippingAddressesInput, UserUncheckedCreateWithoutShippingAddressesInput> | UserCreateWithoutShippingAddressesInput[] | UserUncheckedCreateWithoutShippingAddressesInput[]
    connectOrCreate?: UserCreateOrConnectWithoutShippingAddressesInput | UserCreateOrConnectWithoutShippingAddressesInput[]
    upsert?: UserUpsertWithWhereUniqueWithoutShippingAddressesInput | UserUpsertWithWhereUniqueWithoutShippingAddressesInput[]
    set?: UserWhereUniqueInput | UserWhereUniqueInput[]
    disconnect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    delete?: UserWhereUniqueInput | UserWhereUniqueInput[]
    connect?: UserWhereUniqueInput | UserWhereUniqueInput[]
    update?: UserUpdateWithWhereUniqueWithoutShippingAddressesInput | UserUpdateWithWhereUniqueWithoutShippingAddressesInput[]
    updateMany?: UserUpdateManyWithWhereWithoutShippingAddressesInput | UserUpdateManyWithWhereWithoutShippingAddressesInput[]
    deleteMany?: UserScalarWhereInput | UserScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutShippingAddressNestedInput = {
    create?: XOR<OrderCreateWithoutShippingAddressInput, OrderUncheckedCreateWithoutShippingAddressInput> | OrderCreateWithoutShippingAddressInput[] | OrderUncheckedCreateWithoutShippingAddressInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutShippingAddressInput | OrderCreateOrConnectWithoutShippingAddressInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutShippingAddressInput | OrderUpsertWithWhereUniqueWithoutShippingAddressInput[]
    createMany?: OrderCreateManyShippingAddressInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutShippingAddressInput | OrderUpdateWithWhereUniqueWithoutShippingAddressInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutShippingAddressInput | OrderUpdateManyWithWhereWithoutShippingAddressInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type AddressCreateNestedOneWithoutLegalEntityInput = {
    create?: XOR<AddressCreateWithoutLegalEntityInput, AddressUncheckedCreateWithoutLegalEntityInput>
    connectOrCreate?: AddressCreateOrConnectWithoutLegalEntityInput
    connect?: AddressWhereUniqueInput
  }

  export type OrganizationCreateNestedManyWithoutLegalEntityInput = {
    create?: XOR<OrganizationCreateWithoutLegalEntityInput, OrganizationUncheckedCreateWithoutLegalEntityInput> | OrganizationCreateWithoutLegalEntityInput[] | OrganizationUncheckedCreateWithoutLegalEntityInput[]
    connectOrCreate?: OrganizationCreateOrConnectWithoutLegalEntityInput | OrganizationCreateOrConnectWithoutLegalEntityInput[]
    createMany?: OrganizationCreateManyLegalEntityInputEnvelope
    connect?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
  }

  export type OrganizationUncheckedCreateNestedManyWithoutLegalEntityInput = {
    create?: XOR<OrganizationCreateWithoutLegalEntityInput, OrganizationUncheckedCreateWithoutLegalEntityInput> | OrganizationCreateWithoutLegalEntityInput[] | OrganizationUncheckedCreateWithoutLegalEntityInput[]
    connectOrCreate?: OrganizationCreateOrConnectWithoutLegalEntityInput | OrganizationCreateOrConnectWithoutLegalEntityInput[]
    createMany?: OrganizationCreateManyLegalEntityInputEnvelope
    connect?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
  }

  export type AddressUpdateOneRequiredWithoutLegalEntityNestedInput = {
    create?: XOR<AddressCreateWithoutLegalEntityInput, AddressUncheckedCreateWithoutLegalEntityInput>
    connectOrCreate?: AddressCreateOrConnectWithoutLegalEntityInput
    upsert?: AddressUpsertWithoutLegalEntityInput
    connect?: AddressWhereUniqueInput
    update?: XOR<XOR<AddressUpdateToOneWithWhereWithoutLegalEntityInput, AddressUpdateWithoutLegalEntityInput>, AddressUncheckedUpdateWithoutLegalEntityInput>
  }

  export type OrganizationUpdateManyWithoutLegalEntityNestedInput = {
    create?: XOR<OrganizationCreateWithoutLegalEntityInput, OrganizationUncheckedCreateWithoutLegalEntityInput> | OrganizationCreateWithoutLegalEntityInput[] | OrganizationUncheckedCreateWithoutLegalEntityInput[]
    connectOrCreate?: OrganizationCreateOrConnectWithoutLegalEntityInput | OrganizationCreateOrConnectWithoutLegalEntityInput[]
    upsert?: OrganizationUpsertWithWhereUniqueWithoutLegalEntityInput | OrganizationUpsertWithWhereUniqueWithoutLegalEntityInput[]
    createMany?: OrganizationCreateManyLegalEntityInputEnvelope
    set?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
    disconnect?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
    delete?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
    connect?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
    update?: OrganizationUpdateWithWhereUniqueWithoutLegalEntityInput | OrganizationUpdateWithWhereUniqueWithoutLegalEntityInput[]
    updateMany?: OrganizationUpdateManyWithWhereWithoutLegalEntityInput | OrganizationUpdateManyWithWhereWithoutLegalEntityInput[]
    deleteMany?: OrganizationScalarWhereInput | OrganizationScalarWhereInput[]
  }

  export type OrganizationUncheckedUpdateManyWithoutLegalEntityNestedInput = {
    create?: XOR<OrganizationCreateWithoutLegalEntityInput, OrganizationUncheckedCreateWithoutLegalEntityInput> | OrganizationCreateWithoutLegalEntityInput[] | OrganizationUncheckedCreateWithoutLegalEntityInput[]
    connectOrCreate?: OrganizationCreateOrConnectWithoutLegalEntityInput | OrganizationCreateOrConnectWithoutLegalEntityInput[]
    upsert?: OrganizationUpsertWithWhereUniqueWithoutLegalEntityInput | OrganizationUpsertWithWhereUniqueWithoutLegalEntityInput[]
    createMany?: OrganizationCreateManyLegalEntityInputEnvelope
    set?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
    disconnect?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
    delete?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
    connect?: OrganizationWhereUniqueInput | OrganizationWhereUniqueInput[]
    update?: OrganizationUpdateWithWhereUniqueWithoutLegalEntityInput | OrganizationUpdateWithWhereUniqueWithoutLegalEntityInput[]
    updateMany?: OrganizationUpdateManyWithWhereWithoutLegalEntityInput | OrganizationUpdateManyWithWhereWithoutLegalEntityInput[]
    deleteMany?: OrganizationScalarWhereInput | OrganizationScalarWhereInput[]
  }

  export type OrganizationCreateNestedOneWithoutFilesInput = {
    create?: XOR<OrganizationCreateWithoutFilesInput, OrganizationUncheckedCreateWithoutFilesInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutFilesInput
    connect?: OrganizationWhereUniqueInput
  }

  export type ManufacturerCreateNestedOneWithoutLogoInput = {
    create?: XOR<ManufacturerCreateWithoutLogoInput, ManufacturerUncheckedCreateWithoutLogoInput>
    connectOrCreate?: ManufacturerCreateOrConnectWithoutLogoInput
    connect?: ManufacturerWhereUniqueInput
  }

  export type ProductCategoryCreateNestedOneWithoutImageInput = {
    create?: XOR<ProductCategoryCreateWithoutImageInput, ProductCategoryUncheckedCreateWithoutImageInput>
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutImageInput
    connect?: ProductCategoryWhereUniqueInput
  }

  export type ProductCreateNestedManyWithoutImagesInput = {
    create?: XOR<ProductCreateWithoutImagesInput, ProductUncheckedCreateWithoutImagesInput> | ProductCreateWithoutImagesInput[] | ProductUncheckedCreateWithoutImagesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutImagesInput | ProductCreateOrConnectWithoutImagesInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ModifierCreateNestedManyWithoutImagesInput = {
    create?: XOR<ModifierCreateWithoutImagesInput, ModifierUncheckedCreateWithoutImagesInput> | ModifierCreateWithoutImagesInput[] | ModifierUncheckedCreateWithoutImagesInput[]
    connectOrCreate?: ModifierCreateOrConnectWithoutImagesInput | ModifierCreateOrConnectWithoutImagesInput[]
    connect?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
  }

  export type ShippingMethodCreateNestedOneWithoutProviderLogoInput = {
    create?: XOR<ShippingMethodCreateWithoutProviderLogoInput, ShippingMethodUncheckedCreateWithoutProviderLogoInput>
    connectOrCreate?: ShippingMethodCreateOrConnectWithoutProviderLogoInput
    connect?: ShippingMethodWhereUniqueInput
  }

  export type OrganizationCreateNestedOneWithoutLogoFileInput = {
    create?: XOR<OrganizationCreateWithoutLogoFileInput, OrganizationUncheckedCreateWithoutLogoFileInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutLogoFileInput
    connect?: OrganizationWhereUniqueInput
  }

  export type OrderItemCreateNestedManyWithoutImageInput = {
    create?: XOR<OrderItemCreateWithoutImageInput, OrderItemUncheckedCreateWithoutImageInput> | OrderItemCreateWithoutImageInput[] | OrderItemUncheckedCreateWithoutImageInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutImageInput | OrderItemCreateOrConnectWithoutImageInput[]
    createMany?: OrderItemCreateManyImageInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type ManufacturerUncheckedCreateNestedOneWithoutLogoInput = {
    create?: XOR<ManufacturerCreateWithoutLogoInput, ManufacturerUncheckedCreateWithoutLogoInput>
    connectOrCreate?: ManufacturerCreateOrConnectWithoutLogoInput
    connect?: ManufacturerWhereUniqueInput
  }

  export type ProductCategoryUncheckedCreateNestedOneWithoutImageInput = {
    create?: XOR<ProductCategoryCreateWithoutImageInput, ProductCategoryUncheckedCreateWithoutImageInput>
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutImageInput
    connect?: ProductCategoryWhereUniqueInput
  }

  export type ProductUncheckedCreateNestedManyWithoutImagesInput = {
    create?: XOR<ProductCreateWithoutImagesInput, ProductUncheckedCreateWithoutImagesInput> | ProductCreateWithoutImagesInput[] | ProductUncheckedCreateWithoutImagesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutImagesInput | ProductCreateOrConnectWithoutImagesInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ModifierUncheckedCreateNestedManyWithoutImagesInput = {
    create?: XOR<ModifierCreateWithoutImagesInput, ModifierUncheckedCreateWithoutImagesInput> | ModifierCreateWithoutImagesInput[] | ModifierUncheckedCreateWithoutImagesInput[]
    connectOrCreate?: ModifierCreateOrConnectWithoutImagesInput | ModifierCreateOrConnectWithoutImagesInput[]
    connect?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
  }

  export type ShippingMethodUncheckedCreateNestedOneWithoutProviderLogoInput = {
    create?: XOR<ShippingMethodCreateWithoutProviderLogoInput, ShippingMethodUncheckedCreateWithoutProviderLogoInput>
    connectOrCreate?: ShippingMethodCreateOrConnectWithoutProviderLogoInput
    connect?: ShippingMethodWhereUniqueInput
  }

  export type OrganizationUncheckedCreateNestedOneWithoutLogoFileInput = {
    create?: XOR<OrganizationCreateWithoutLogoFileInput, OrganizationUncheckedCreateWithoutLogoFileInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutLogoFileInput
    connect?: OrganizationWhereUniqueInput
  }

  export type OrderItemUncheckedCreateNestedManyWithoutImageInput = {
    create?: XOR<OrderItemCreateWithoutImageInput, OrderItemUncheckedCreateWithoutImageInput> | OrderItemCreateWithoutImageInput[] | OrderItemUncheckedCreateWithoutImageInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutImageInput | OrderItemCreateOrConnectWithoutImageInput[]
    createMany?: OrderItemCreateManyImageInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumFileUploadStatusFieldUpdateOperationsInput = {
    set?: $Enums.FileUploadStatus
  }

  export type OrganizationUpdateOneWithoutFilesNestedInput = {
    create?: XOR<OrganizationCreateWithoutFilesInput, OrganizationUncheckedCreateWithoutFilesInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutFilesInput
    upsert?: OrganizationUpsertWithoutFilesInput
    disconnect?: OrganizationWhereInput | boolean
    delete?: OrganizationWhereInput | boolean
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutFilesInput, OrganizationUpdateWithoutFilesInput>, OrganizationUncheckedUpdateWithoutFilesInput>
  }

  export type ManufacturerUpdateOneWithoutLogoNestedInput = {
    create?: XOR<ManufacturerCreateWithoutLogoInput, ManufacturerUncheckedCreateWithoutLogoInput>
    connectOrCreate?: ManufacturerCreateOrConnectWithoutLogoInput
    upsert?: ManufacturerUpsertWithoutLogoInput
    disconnect?: ManufacturerWhereInput | boolean
    delete?: ManufacturerWhereInput | boolean
    connect?: ManufacturerWhereUniqueInput
    update?: XOR<XOR<ManufacturerUpdateToOneWithWhereWithoutLogoInput, ManufacturerUpdateWithoutLogoInput>, ManufacturerUncheckedUpdateWithoutLogoInput>
  }

  export type ProductCategoryUpdateOneWithoutImageNestedInput = {
    create?: XOR<ProductCategoryCreateWithoutImageInput, ProductCategoryUncheckedCreateWithoutImageInput>
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutImageInput
    upsert?: ProductCategoryUpsertWithoutImageInput
    disconnect?: ProductCategoryWhereInput | boolean
    delete?: ProductCategoryWhereInput | boolean
    connect?: ProductCategoryWhereUniqueInput
    update?: XOR<XOR<ProductCategoryUpdateToOneWithWhereWithoutImageInput, ProductCategoryUpdateWithoutImageInput>, ProductCategoryUncheckedUpdateWithoutImageInput>
  }

  export type ProductUpdateManyWithoutImagesNestedInput = {
    create?: XOR<ProductCreateWithoutImagesInput, ProductUncheckedCreateWithoutImagesInput> | ProductCreateWithoutImagesInput[] | ProductUncheckedCreateWithoutImagesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutImagesInput | ProductCreateOrConnectWithoutImagesInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutImagesInput | ProductUpsertWithWhereUniqueWithoutImagesInput[]
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutImagesInput | ProductUpdateWithWhereUniqueWithoutImagesInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutImagesInput | ProductUpdateManyWithWhereWithoutImagesInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ModifierUpdateManyWithoutImagesNestedInput = {
    create?: XOR<ModifierCreateWithoutImagesInput, ModifierUncheckedCreateWithoutImagesInput> | ModifierCreateWithoutImagesInput[] | ModifierUncheckedCreateWithoutImagesInput[]
    connectOrCreate?: ModifierCreateOrConnectWithoutImagesInput | ModifierCreateOrConnectWithoutImagesInput[]
    upsert?: ModifierUpsertWithWhereUniqueWithoutImagesInput | ModifierUpsertWithWhereUniqueWithoutImagesInput[]
    set?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    disconnect?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    delete?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    connect?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    update?: ModifierUpdateWithWhereUniqueWithoutImagesInput | ModifierUpdateWithWhereUniqueWithoutImagesInput[]
    updateMany?: ModifierUpdateManyWithWhereWithoutImagesInput | ModifierUpdateManyWithWhereWithoutImagesInput[]
    deleteMany?: ModifierScalarWhereInput | ModifierScalarWhereInput[]
  }

  export type ShippingMethodUpdateOneWithoutProviderLogoNestedInput = {
    create?: XOR<ShippingMethodCreateWithoutProviderLogoInput, ShippingMethodUncheckedCreateWithoutProviderLogoInput>
    connectOrCreate?: ShippingMethodCreateOrConnectWithoutProviderLogoInput
    upsert?: ShippingMethodUpsertWithoutProviderLogoInput
    disconnect?: ShippingMethodWhereInput | boolean
    delete?: ShippingMethodWhereInput | boolean
    connect?: ShippingMethodWhereUniqueInput
    update?: XOR<XOR<ShippingMethodUpdateToOneWithWhereWithoutProviderLogoInput, ShippingMethodUpdateWithoutProviderLogoInput>, ShippingMethodUncheckedUpdateWithoutProviderLogoInput>
  }

  export type OrganizationUpdateOneWithoutLogoFileNestedInput = {
    create?: XOR<OrganizationCreateWithoutLogoFileInput, OrganizationUncheckedCreateWithoutLogoFileInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutLogoFileInput
    upsert?: OrganizationUpsertWithoutLogoFileInput
    disconnect?: OrganizationWhereInput | boolean
    delete?: OrganizationWhereInput | boolean
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutLogoFileInput, OrganizationUpdateWithoutLogoFileInput>, OrganizationUncheckedUpdateWithoutLogoFileInput>
  }

  export type OrderItemUpdateManyWithoutImageNestedInput = {
    create?: XOR<OrderItemCreateWithoutImageInput, OrderItemUncheckedCreateWithoutImageInput> | OrderItemCreateWithoutImageInput[] | OrderItemUncheckedCreateWithoutImageInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutImageInput | OrderItemCreateOrConnectWithoutImageInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutImageInput | OrderItemUpsertWithWhereUniqueWithoutImageInput[]
    createMany?: OrderItemCreateManyImageInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutImageInput | OrderItemUpdateWithWhereUniqueWithoutImageInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutImageInput | OrderItemUpdateManyWithWhereWithoutImageInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type ManufacturerUncheckedUpdateOneWithoutLogoNestedInput = {
    create?: XOR<ManufacturerCreateWithoutLogoInput, ManufacturerUncheckedCreateWithoutLogoInput>
    connectOrCreate?: ManufacturerCreateOrConnectWithoutLogoInput
    upsert?: ManufacturerUpsertWithoutLogoInput
    disconnect?: ManufacturerWhereInput | boolean
    delete?: ManufacturerWhereInput | boolean
    connect?: ManufacturerWhereUniqueInput
    update?: XOR<XOR<ManufacturerUpdateToOneWithWhereWithoutLogoInput, ManufacturerUpdateWithoutLogoInput>, ManufacturerUncheckedUpdateWithoutLogoInput>
  }

  export type ProductCategoryUncheckedUpdateOneWithoutImageNestedInput = {
    create?: XOR<ProductCategoryCreateWithoutImageInput, ProductCategoryUncheckedCreateWithoutImageInput>
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutImageInput
    upsert?: ProductCategoryUpsertWithoutImageInput
    disconnect?: ProductCategoryWhereInput | boolean
    delete?: ProductCategoryWhereInput | boolean
    connect?: ProductCategoryWhereUniqueInput
    update?: XOR<XOR<ProductCategoryUpdateToOneWithWhereWithoutImageInput, ProductCategoryUpdateWithoutImageInput>, ProductCategoryUncheckedUpdateWithoutImageInput>
  }

  export type ProductUncheckedUpdateManyWithoutImagesNestedInput = {
    create?: XOR<ProductCreateWithoutImagesInput, ProductUncheckedCreateWithoutImagesInput> | ProductCreateWithoutImagesInput[] | ProductUncheckedCreateWithoutImagesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutImagesInput | ProductCreateOrConnectWithoutImagesInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutImagesInput | ProductUpsertWithWhereUniqueWithoutImagesInput[]
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutImagesInput | ProductUpdateWithWhereUniqueWithoutImagesInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutImagesInput | ProductUpdateManyWithWhereWithoutImagesInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ModifierUncheckedUpdateManyWithoutImagesNestedInput = {
    create?: XOR<ModifierCreateWithoutImagesInput, ModifierUncheckedCreateWithoutImagesInput> | ModifierCreateWithoutImagesInput[] | ModifierUncheckedCreateWithoutImagesInput[]
    connectOrCreate?: ModifierCreateOrConnectWithoutImagesInput | ModifierCreateOrConnectWithoutImagesInput[]
    upsert?: ModifierUpsertWithWhereUniqueWithoutImagesInput | ModifierUpsertWithWhereUniqueWithoutImagesInput[]
    set?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    disconnect?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    delete?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    connect?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    update?: ModifierUpdateWithWhereUniqueWithoutImagesInput | ModifierUpdateWithWhereUniqueWithoutImagesInput[]
    updateMany?: ModifierUpdateManyWithWhereWithoutImagesInput | ModifierUpdateManyWithWhereWithoutImagesInput[]
    deleteMany?: ModifierScalarWhereInput | ModifierScalarWhereInput[]
  }

  export type ShippingMethodUncheckedUpdateOneWithoutProviderLogoNestedInput = {
    create?: XOR<ShippingMethodCreateWithoutProviderLogoInput, ShippingMethodUncheckedCreateWithoutProviderLogoInput>
    connectOrCreate?: ShippingMethodCreateOrConnectWithoutProviderLogoInput
    upsert?: ShippingMethodUpsertWithoutProviderLogoInput
    disconnect?: ShippingMethodWhereInput | boolean
    delete?: ShippingMethodWhereInput | boolean
    connect?: ShippingMethodWhereUniqueInput
    update?: XOR<XOR<ShippingMethodUpdateToOneWithWhereWithoutProviderLogoInput, ShippingMethodUpdateWithoutProviderLogoInput>, ShippingMethodUncheckedUpdateWithoutProviderLogoInput>
  }

  export type OrganizationUncheckedUpdateOneWithoutLogoFileNestedInput = {
    create?: XOR<OrganizationCreateWithoutLogoFileInput, OrganizationUncheckedCreateWithoutLogoFileInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutLogoFileInput
    upsert?: OrganizationUpsertWithoutLogoFileInput
    disconnect?: OrganizationWhereInput | boolean
    delete?: OrganizationWhereInput | boolean
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutLogoFileInput, OrganizationUpdateWithoutLogoFileInput>, OrganizationUncheckedUpdateWithoutLogoFileInput>
  }

  export type OrderItemUncheckedUpdateManyWithoutImageNestedInput = {
    create?: XOR<OrderItemCreateWithoutImageInput, OrderItemUncheckedCreateWithoutImageInput> | OrderItemCreateWithoutImageInput[] | OrderItemUncheckedCreateWithoutImageInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutImageInput | OrderItemCreateOrConnectWithoutImageInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutImageInput | OrderItemUpsertWithWhereUniqueWithoutImageInput[]
    createMany?: OrderItemCreateManyImageInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutImageInput | OrderItemUpdateWithWhereUniqueWithoutImageInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutImageInput | OrderItemUpdateManyWithWhereWithoutImageInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type FileCreateNestedOneWithoutManufacturerLogoInput = {
    create?: XOR<FileCreateWithoutManufacturerLogoInput, FileUncheckedCreateWithoutManufacturerLogoInput>
    connectOrCreate?: FileCreateOrConnectWithoutManufacturerLogoInput
    connect?: FileWhereUniqueInput
  }

  export type OrganizationCreateNestedOneWithoutManufacturersInput = {
    create?: XOR<OrganizationCreateWithoutManufacturersInput, OrganizationUncheckedCreateWithoutManufacturersInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutManufacturersInput
    connect?: OrganizationWhereUniqueInput
  }

  export type ProductCreateNestedManyWithoutManufacturerInput = {
    create?: XOR<ProductCreateWithoutManufacturerInput, ProductUncheckedCreateWithoutManufacturerInput> | ProductCreateWithoutManufacturerInput[] | ProductUncheckedCreateWithoutManufacturerInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutManufacturerInput | ProductCreateOrConnectWithoutManufacturerInput[]
    createMany?: ProductCreateManyManufacturerInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ManufacturerTranslationCreateNestedManyWithoutManufacturerInput = {
    create?: XOR<ManufacturerTranslationCreateWithoutManufacturerInput, ManufacturerTranslationUncheckedCreateWithoutManufacturerInput> | ManufacturerTranslationCreateWithoutManufacturerInput[] | ManufacturerTranslationUncheckedCreateWithoutManufacturerInput[]
    connectOrCreate?: ManufacturerTranslationCreateOrConnectWithoutManufacturerInput | ManufacturerTranslationCreateOrConnectWithoutManufacturerInput[]
    createMany?: ManufacturerTranslationCreateManyManufacturerInputEnvelope
    connect?: ManufacturerTranslationWhereUniqueInput | ManufacturerTranslationWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutManufacturerInput = {
    create?: XOR<ProductCreateWithoutManufacturerInput, ProductUncheckedCreateWithoutManufacturerInput> | ProductCreateWithoutManufacturerInput[] | ProductUncheckedCreateWithoutManufacturerInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutManufacturerInput | ProductCreateOrConnectWithoutManufacturerInput[]
    createMany?: ProductCreateManyManufacturerInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ManufacturerTranslationUncheckedCreateNestedManyWithoutManufacturerInput = {
    create?: XOR<ManufacturerTranslationCreateWithoutManufacturerInput, ManufacturerTranslationUncheckedCreateWithoutManufacturerInput> | ManufacturerTranslationCreateWithoutManufacturerInput[] | ManufacturerTranslationUncheckedCreateWithoutManufacturerInput[]
    connectOrCreate?: ManufacturerTranslationCreateOrConnectWithoutManufacturerInput | ManufacturerTranslationCreateOrConnectWithoutManufacturerInput[]
    createMany?: ManufacturerTranslationCreateManyManufacturerInputEnvelope
    connect?: ManufacturerTranslationWhereUniqueInput | ManufacturerTranslationWhereUniqueInput[]
  }

  export type FileUpdateOneWithoutManufacturerLogoNestedInput = {
    create?: XOR<FileCreateWithoutManufacturerLogoInput, FileUncheckedCreateWithoutManufacturerLogoInput>
    connectOrCreate?: FileCreateOrConnectWithoutManufacturerLogoInput
    upsert?: FileUpsertWithoutManufacturerLogoInput
    disconnect?: FileWhereInput | boolean
    delete?: FileWhereInput | boolean
    connect?: FileWhereUniqueInput
    update?: XOR<XOR<FileUpdateToOneWithWhereWithoutManufacturerLogoInput, FileUpdateWithoutManufacturerLogoInput>, FileUncheckedUpdateWithoutManufacturerLogoInput>
  }

  export type OrganizationUpdateOneRequiredWithoutManufacturersNestedInput = {
    create?: XOR<OrganizationCreateWithoutManufacturersInput, OrganizationUncheckedCreateWithoutManufacturersInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutManufacturersInput
    upsert?: OrganizationUpsertWithoutManufacturersInput
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutManufacturersInput, OrganizationUpdateWithoutManufacturersInput>, OrganizationUncheckedUpdateWithoutManufacturersInput>
  }

  export type ProductUpdateManyWithoutManufacturerNestedInput = {
    create?: XOR<ProductCreateWithoutManufacturerInput, ProductUncheckedCreateWithoutManufacturerInput> | ProductCreateWithoutManufacturerInput[] | ProductUncheckedCreateWithoutManufacturerInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutManufacturerInput | ProductCreateOrConnectWithoutManufacturerInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutManufacturerInput | ProductUpsertWithWhereUniqueWithoutManufacturerInput[]
    createMany?: ProductCreateManyManufacturerInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutManufacturerInput | ProductUpdateWithWhereUniqueWithoutManufacturerInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutManufacturerInput | ProductUpdateManyWithWhereWithoutManufacturerInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ManufacturerTranslationUpdateManyWithoutManufacturerNestedInput = {
    create?: XOR<ManufacturerTranslationCreateWithoutManufacturerInput, ManufacturerTranslationUncheckedCreateWithoutManufacturerInput> | ManufacturerTranslationCreateWithoutManufacturerInput[] | ManufacturerTranslationUncheckedCreateWithoutManufacturerInput[]
    connectOrCreate?: ManufacturerTranslationCreateOrConnectWithoutManufacturerInput | ManufacturerTranslationCreateOrConnectWithoutManufacturerInput[]
    upsert?: ManufacturerTranslationUpsertWithWhereUniqueWithoutManufacturerInput | ManufacturerTranslationUpsertWithWhereUniqueWithoutManufacturerInput[]
    createMany?: ManufacturerTranslationCreateManyManufacturerInputEnvelope
    set?: ManufacturerTranslationWhereUniqueInput | ManufacturerTranslationWhereUniqueInput[]
    disconnect?: ManufacturerTranslationWhereUniqueInput | ManufacturerTranslationWhereUniqueInput[]
    delete?: ManufacturerTranslationWhereUniqueInput | ManufacturerTranslationWhereUniqueInput[]
    connect?: ManufacturerTranslationWhereUniqueInput | ManufacturerTranslationWhereUniqueInput[]
    update?: ManufacturerTranslationUpdateWithWhereUniqueWithoutManufacturerInput | ManufacturerTranslationUpdateWithWhereUniqueWithoutManufacturerInput[]
    updateMany?: ManufacturerTranslationUpdateManyWithWhereWithoutManufacturerInput | ManufacturerTranslationUpdateManyWithWhereWithoutManufacturerInput[]
    deleteMany?: ManufacturerTranslationScalarWhereInput | ManufacturerTranslationScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutManufacturerNestedInput = {
    create?: XOR<ProductCreateWithoutManufacturerInput, ProductUncheckedCreateWithoutManufacturerInput> | ProductCreateWithoutManufacturerInput[] | ProductUncheckedCreateWithoutManufacturerInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutManufacturerInput | ProductCreateOrConnectWithoutManufacturerInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutManufacturerInput | ProductUpsertWithWhereUniqueWithoutManufacturerInput[]
    createMany?: ProductCreateManyManufacturerInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutManufacturerInput | ProductUpdateWithWhereUniqueWithoutManufacturerInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutManufacturerInput | ProductUpdateManyWithWhereWithoutManufacturerInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ManufacturerTranslationUncheckedUpdateManyWithoutManufacturerNestedInput = {
    create?: XOR<ManufacturerTranslationCreateWithoutManufacturerInput, ManufacturerTranslationUncheckedCreateWithoutManufacturerInput> | ManufacturerTranslationCreateWithoutManufacturerInput[] | ManufacturerTranslationUncheckedCreateWithoutManufacturerInput[]
    connectOrCreate?: ManufacturerTranslationCreateOrConnectWithoutManufacturerInput | ManufacturerTranslationCreateOrConnectWithoutManufacturerInput[]
    upsert?: ManufacturerTranslationUpsertWithWhereUniqueWithoutManufacturerInput | ManufacturerTranslationUpsertWithWhereUniqueWithoutManufacturerInput[]
    createMany?: ManufacturerTranslationCreateManyManufacturerInputEnvelope
    set?: ManufacturerTranslationWhereUniqueInput | ManufacturerTranslationWhereUniqueInput[]
    disconnect?: ManufacturerTranslationWhereUniqueInput | ManufacturerTranslationWhereUniqueInput[]
    delete?: ManufacturerTranslationWhereUniqueInput | ManufacturerTranslationWhereUniqueInput[]
    connect?: ManufacturerTranslationWhereUniqueInput | ManufacturerTranslationWhereUniqueInput[]
    update?: ManufacturerTranslationUpdateWithWhereUniqueWithoutManufacturerInput | ManufacturerTranslationUpdateWithWhereUniqueWithoutManufacturerInput[]
    updateMany?: ManufacturerTranslationUpdateManyWithWhereWithoutManufacturerInput | ManufacturerTranslationUpdateManyWithWhereWithoutManufacturerInput[]
    deleteMany?: ManufacturerTranslationScalarWhereInput | ManufacturerTranslationScalarWhereInput[]
  }

  export type ManufacturerCreateNestedOneWithoutTranslationsInput = {
    create?: XOR<ManufacturerCreateWithoutTranslationsInput, ManufacturerUncheckedCreateWithoutTranslationsInput>
    connectOrCreate?: ManufacturerCreateOrConnectWithoutTranslationsInput
    connect?: ManufacturerWhereUniqueInput
  }

  export type ManufacturerUpdateOneRequiredWithoutTranslationsNestedInput = {
    create?: XOR<ManufacturerCreateWithoutTranslationsInput, ManufacturerUncheckedCreateWithoutTranslationsInput>
    connectOrCreate?: ManufacturerCreateOrConnectWithoutTranslationsInput
    upsert?: ManufacturerUpsertWithoutTranslationsInput
    connect?: ManufacturerWhereUniqueInput
    update?: XOR<XOR<ManufacturerUpdateToOneWithWhereWithoutTranslationsInput, ManufacturerUpdateWithoutTranslationsInput>, ManufacturerUncheckedUpdateWithoutTranslationsInput>
  }

  export type OrganizationCreateNestedOneWithoutProductCategoriesInput = {
    create?: XOR<OrganizationCreateWithoutProductCategoriesInput, OrganizationUncheckedCreateWithoutProductCategoriesInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutProductCategoriesInput
    connect?: OrganizationWhereUniqueInput
  }

  export type FileCreateNestedOneWithoutProductCategoryImageInput = {
    create?: XOR<FileCreateWithoutProductCategoryImageInput, FileUncheckedCreateWithoutProductCategoryImageInput>
    connectOrCreate?: FileCreateOrConnectWithoutProductCategoryImageInput
    connect?: FileWhereUniqueInput
  }

  export type ProductCategoryTranslationCreateNestedManyWithoutProductCategoryInput = {
    create?: XOR<ProductCategoryTranslationCreateWithoutProductCategoryInput, ProductCategoryTranslationUncheckedCreateWithoutProductCategoryInput> | ProductCategoryTranslationCreateWithoutProductCategoryInput[] | ProductCategoryTranslationUncheckedCreateWithoutProductCategoryInput[]
    connectOrCreate?: ProductCategoryTranslationCreateOrConnectWithoutProductCategoryInput | ProductCategoryTranslationCreateOrConnectWithoutProductCategoryInput[]
    createMany?: ProductCategoryTranslationCreateManyProductCategoryInputEnvelope
    connect?: ProductCategoryTranslationWhereUniqueInput | ProductCategoryTranslationWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutCategoriesInput = {
    create?: XOR<ProductCreateWithoutCategoriesInput, ProductUncheckedCreateWithoutCategoriesInput> | ProductCreateWithoutCategoriesInput[] | ProductUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoriesInput | ProductCreateOrConnectWithoutCategoriesInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductCategoryTranslationUncheckedCreateNestedManyWithoutProductCategoryInput = {
    create?: XOR<ProductCategoryTranslationCreateWithoutProductCategoryInput, ProductCategoryTranslationUncheckedCreateWithoutProductCategoryInput> | ProductCategoryTranslationCreateWithoutProductCategoryInput[] | ProductCategoryTranslationUncheckedCreateWithoutProductCategoryInput[]
    connectOrCreate?: ProductCategoryTranslationCreateOrConnectWithoutProductCategoryInput | ProductCategoryTranslationCreateOrConnectWithoutProductCategoryInput[]
    createMany?: ProductCategoryTranslationCreateManyProductCategoryInputEnvelope
    connect?: ProductCategoryTranslationWhereUniqueInput | ProductCategoryTranslationWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutCategoriesInput = {
    create?: XOR<ProductCreateWithoutCategoriesInput, ProductUncheckedCreateWithoutCategoriesInput> | ProductCreateWithoutCategoriesInput[] | ProductUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoriesInput | ProductCreateOrConnectWithoutCategoriesInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type OrganizationUpdateOneRequiredWithoutProductCategoriesNestedInput = {
    create?: XOR<OrganizationCreateWithoutProductCategoriesInput, OrganizationUncheckedCreateWithoutProductCategoriesInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutProductCategoriesInput
    upsert?: OrganizationUpsertWithoutProductCategoriesInput
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutProductCategoriesInput, OrganizationUpdateWithoutProductCategoriesInput>, OrganizationUncheckedUpdateWithoutProductCategoriesInput>
  }

  export type FileUpdateOneWithoutProductCategoryImageNestedInput = {
    create?: XOR<FileCreateWithoutProductCategoryImageInput, FileUncheckedCreateWithoutProductCategoryImageInput>
    connectOrCreate?: FileCreateOrConnectWithoutProductCategoryImageInput
    upsert?: FileUpsertWithoutProductCategoryImageInput
    disconnect?: FileWhereInput | boolean
    delete?: FileWhereInput | boolean
    connect?: FileWhereUniqueInput
    update?: XOR<XOR<FileUpdateToOneWithWhereWithoutProductCategoryImageInput, FileUpdateWithoutProductCategoryImageInput>, FileUncheckedUpdateWithoutProductCategoryImageInput>
  }

  export type ProductCategoryTranslationUpdateManyWithoutProductCategoryNestedInput = {
    create?: XOR<ProductCategoryTranslationCreateWithoutProductCategoryInput, ProductCategoryTranslationUncheckedCreateWithoutProductCategoryInput> | ProductCategoryTranslationCreateWithoutProductCategoryInput[] | ProductCategoryTranslationUncheckedCreateWithoutProductCategoryInput[]
    connectOrCreate?: ProductCategoryTranslationCreateOrConnectWithoutProductCategoryInput | ProductCategoryTranslationCreateOrConnectWithoutProductCategoryInput[]
    upsert?: ProductCategoryTranslationUpsertWithWhereUniqueWithoutProductCategoryInput | ProductCategoryTranslationUpsertWithWhereUniqueWithoutProductCategoryInput[]
    createMany?: ProductCategoryTranslationCreateManyProductCategoryInputEnvelope
    set?: ProductCategoryTranslationWhereUniqueInput | ProductCategoryTranslationWhereUniqueInput[]
    disconnect?: ProductCategoryTranslationWhereUniqueInput | ProductCategoryTranslationWhereUniqueInput[]
    delete?: ProductCategoryTranslationWhereUniqueInput | ProductCategoryTranslationWhereUniqueInput[]
    connect?: ProductCategoryTranslationWhereUniqueInput | ProductCategoryTranslationWhereUniqueInput[]
    update?: ProductCategoryTranslationUpdateWithWhereUniqueWithoutProductCategoryInput | ProductCategoryTranslationUpdateWithWhereUniqueWithoutProductCategoryInput[]
    updateMany?: ProductCategoryTranslationUpdateManyWithWhereWithoutProductCategoryInput | ProductCategoryTranslationUpdateManyWithWhereWithoutProductCategoryInput[]
    deleteMany?: ProductCategoryTranslationScalarWhereInput | ProductCategoryTranslationScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutCategoriesNestedInput = {
    create?: XOR<ProductCreateWithoutCategoriesInput, ProductUncheckedCreateWithoutCategoriesInput> | ProductCreateWithoutCategoriesInput[] | ProductUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoriesInput | ProductCreateOrConnectWithoutCategoriesInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutCategoriesInput | ProductUpsertWithWhereUniqueWithoutCategoriesInput[]
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutCategoriesInput | ProductUpdateWithWhereUniqueWithoutCategoriesInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutCategoriesInput | ProductUpdateManyWithWhereWithoutCategoriesInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductCategoryTranslationUncheckedUpdateManyWithoutProductCategoryNestedInput = {
    create?: XOR<ProductCategoryTranslationCreateWithoutProductCategoryInput, ProductCategoryTranslationUncheckedCreateWithoutProductCategoryInput> | ProductCategoryTranslationCreateWithoutProductCategoryInput[] | ProductCategoryTranslationUncheckedCreateWithoutProductCategoryInput[]
    connectOrCreate?: ProductCategoryTranslationCreateOrConnectWithoutProductCategoryInput | ProductCategoryTranslationCreateOrConnectWithoutProductCategoryInput[]
    upsert?: ProductCategoryTranslationUpsertWithWhereUniqueWithoutProductCategoryInput | ProductCategoryTranslationUpsertWithWhereUniqueWithoutProductCategoryInput[]
    createMany?: ProductCategoryTranslationCreateManyProductCategoryInputEnvelope
    set?: ProductCategoryTranslationWhereUniqueInput | ProductCategoryTranslationWhereUniqueInput[]
    disconnect?: ProductCategoryTranslationWhereUniqueInput | ProductCategoryTranslationWhereUniqueInput[]
    delete?: ProductCategoryTranslationWhereUniqueInput | ProductCategoryTranslationWhereUniqueInput[]
    connect?: ProductCategoryTranslationWhereUniqueInput | ProductCategoryTranslationWhereUniqueInput[]
    update?: ProductCategoryTranslationUpdateWithWhereUniqueWithoutProductCategoryInput | ProductCategoryTranslationUpdateWithWhereUniqueWithoutProductCategoryInput[]
    updateMany?: ProductCategoryTranslationUpdateManyWithWhereWithoutProductCategoryInput | ProductCategoryTranslationUpdateManyWithWhereWithoutProductCategoryInput[]
    deleteMany?: ProductCategoryTranslationScalarWhereInput | ProductCategoryTranslationScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutCategoriesNestedInput = {
    create?: XOR<ProductCreateWithoutCategoriesInput, ProductUncheckedCreateWithoutCategoriesInput> | ProductCreateWithoutCategoriesInput[] | ProductUncheckedCreateWithoutCategoriesInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoriesInput | ProductCreateOrConnectWithoutCategoriesInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutCategoriesInput | ProductUpsertWithWhereUniqueWithoutCategoriesInput[]
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutCategoriesInput | ProductUpdateWithWhereUniqueWithoutCategoriesInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutCategoriesInput | ProductUpdateManyWithWhereWithoutCategoriesInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductCategoryCreateNestedOneWithoutTranslationsInput = {
    create?: XOR<ProductCategoryCreateWithoutTranslationsInput, ProductCategoryUncheckedCreateWithoutTranslationsInput>
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutTranslationsInput
    connect?: ProductCategoryWhereUniqueInput
  }

  export type ProductCategoryUpdateOneRequiredWithoutTranslationsNestedInput = {
    create?: XOR<ProductCategoryCreateWithoutTranslationsInput, ProductCategoryUncheckedCreateWithoutTranslationsInput>
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutTranslationsInput
    upsert?: ProductCategoryUpsertWithoutTranslationsInput
    connect?: ProductCategoryWhereUniqueInput
    update?: XOR<XOR<ProductCategoryUpdateToOneWithWhereWithoutTranslationsInput, ProductCategoryUpdateWithoutTranslationsInput>, ProductCategoryUncheckedUpdateWithoutTranslationsInput>
  }

  export type ProductCreatetagsInput = {
    set: string[]
  }

  export type FileCreateNestedManyWithoutProductImagesInput = {
    create?: XOR<FileCreateWithoutProductImagesInput, FileUncheckedCreateWithoutProductImagesInput> | FileCreateWithoutProductImagesInput[] | FileUncheckedCreateWithoutProductImagesInput[]
    connectOrCreate?: FileCreateOrConnectWithoutProductImagesInput | FileCreateOrConnectWithoutProductImagesInput[]
    connect?: FileWhereUniqueInput | FileWhereUniqueInput[]
  }

  export type OrganizationCreateNestedOneWithoutProductsInput = {
    create?: XOR<OrganizationCreateWithoutProductsInput, OrganizationUncheckedCreateWithoutProductsInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutProductsInput
    connect?: OrganizationWhereUniqueInput
  }

  export type ManufacturerCreateNestedOneWithoutProductsInput = {
    create?: XOR<ManufacturerCreateWithoutProductsInput, ManufacturerUncheckedCreateWithoutProductsInput>
    connectOrCreate?: ManufacturerCreateOrConnectWithoutProductsInput
    connect?: ManufacturerWhereUniqueInput
  }

  export type ProductCategoryCreateNestedManyWithoutProductsInput = {
    create?: XOR<ProductCategoryCreateWithoutProductsInput, ProductCategoryUncheckedCreateWithoutProductsInput> | ProductCategoryCreateWithoutProductsInput[] | ProductCategoryUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutProductsInput | ProductCategoryCreateOrConnectWithoutProductsInput[]
    connect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
  }

  export type ModifierGroupCreateNestedManyWithoutProductsInput = {
    create?: XOR<ModifierGroupCreateWithoutProductsInput, ModifierGroupUncheckedCreateWithoutProductsInput> | ModifierGroupCreateWithoutProductsInput[] | ModifierGroupUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: ModifierGroupCreateOrConnectWithoutProductsInput | ModifierGroupCreateOrConnectWithoutProductsInput[]
    connect?: ModifierGroupWhereUniqueInput | ModifierGroupWhereUniqueInput[]
  }

  export type ProductTranslationCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductTranslationCreateWithoutProductInput, ProductTranslationUncheckedCreateWithoutProductInput> | ProductTranslationCreateWithoutProductInput[] | ProductTranslationUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutProductInput | ProductTranslationCreateOrConnectWithoutProductInput[]
    createMany?: ProductTranslationCreateManyProductInputEnvelope
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
  }

  export type ProductSnapshotCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductSnapshotCreateWithoutProductInput, ProductSnapshotUncheckedCreateWithoutProductInput> | ProductSnapshotCreateWithoutProductInput[] | ProductSnapshotUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductSnapshotCreateOrConnectWithoutProductInput | ProductSnapshotCreateOrConnectWithoutProductInput[]
    createMany?: ProductSnapshotCreateManyProductInputEnvelope
    connect?: ProductSnapshotWhereUniqueInput | ProductSnapshotWhereUniqueInput[]
  }

  export type ProductSnapshotCreateNestedOneWithoutLatestForProductInput = {
    create?: XOR<ProductSnapshotCreateWithoutLatestForProductInput, ProductSnapshotUncheckedCreateWithoutLatestForProductInput>
    connectOrCreate?: ProductSnapshotCreateOrConnectWithoutLatestForProductInput
    connect?: ProductSnapshotWhereUniqueInput
  }

  export type FileUncheckedCreateNestedManyWithoutProductImagesInput = {
    create?: XOR<FileCreateWithoutProductImagesInput, FileUncheckedCreateWithoutProductImagesInput> | FileCreateWithoutProductImagesInput[] | FileUncheckedCreateWithoutProductImagesInput[]
    connectOrCreate?: FileCreateOrConnectWithoutProductImagesInput | FileCreateOrConnectWithoutProductImagesInput[]
    connect?: FileWhereUniqueInput | FileWhereUniqueInput[]
  }

  export type ProductCategoryUncheckedCreateNestedManyWithoutProductsInput = {
    create?: XOR<ProductCategoryCreateWithoutProductsInput, ProductCategoryUncheckedCreateWithoutProductsInput> | ProductCategoryCreateWithoutProductsInput[] | ProductCategoryUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutProductsInput | ProductCategoryCreateOrConnectWithoutProductsInput[]
    connect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
  }

  export type ModifierGroupUncheckedCreateNestedManyWithoutProductsInput = {
    create?: XOR<ModifierGroupCreateWithoutProductsInput, ModifierGroupUncheckedCreateWithoutProductsInput> | ModifierGroupCreateWithoutProductsInput[] | ModifierGroupUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: ModifierGroupCreateOrConnectWithoutProductsInput | ModifierGroupCreateOrConnectWithoutProductsInput[]
    connect?: ModifierGroupWhereUniqueInput | ModifierGroupWhereUniqueInput[]
  }

  export type ProductTranslationUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductTranslationCreateWithoutProductInput, ProductTranslationUncheckedCreateWithoutProductInput> | ProductTranslationCreateWithoutProductInput[] | ProductTranslationUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutProductInput | ProductTranslationCreateOrConnectWithoutProductInput[]
    createMany?: ProductTranslationCreateManyProductInputEnvelope
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
  }

  export type ProductSnapshotUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductSnapshotCreateWithoutProductInput, ProductSnapshotUncheckedCreateWithoutProductInput> | ProductSnapshotCreateWithoutProductInput[] | ProductSnapshotUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductSnapshotCreateOrConnectWithoutProductInput | ProductSnapshotCreateOrConnectWithoutProductInput[]
    createMany?: ProductSnapshotCreateManyProductInputEnvelope
    connect?: ProductSnapshotWhereUniqueInput | ProductSnapshotWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ProductUpdatetagsInput = {
    set?: string[]
    push?: string | string[]
  }

  export type FileUpdateManyWithoutProductImagesNestedInput = {
    create?: XOR<FileCreateWithoutProductImagesInput, FileUncheckedCreateWithoutProductImagesInput> | FileCreateWithoutProductImagesInput[] | FileUncheckedCreateWithoutProductImagesInput[]
    connectOrCreate?: FileCreateOrConnectWithoutProductImagesInput | FileCreateOrConnectWithoutProductImagesInput[]
    upsert?: FileUpsertWithWhereUniqueWithoutProductImagesInput | FileUpsertWithWhereUniqueWithoutProductImagesInput[]
    set?: FileWhereUniqueInput | FileWhereUniqueInput[]
    disconnect?: FileWhereUniqueInput | FileWhereUniqueInput[]
    delete?: FileWhereUniqueInput | FileWhereUniqueInput[]
    connect?: FileWhereUniqueInput | FileWhereUniqueInput[]
    update?: FileUpdateWithWhereUniqueWithoutProductImagesInput | FileUpdateWithWhereUniqueWithoutProductImagesInput[]
    updateMany?: FileUpdateManyWithWhereWithoutProductImagesInput | FileUpdateManyWithWhereWithoutProductImagesInput[]
    deleteMany?: FileScalarWhereInput | FileScalarWhereInput[]
  }

  export type OrganizationUpdateOneRequiredWithoutProductsNestedInput = {
    create?: XOR<OrganizationCreateWithoutProductsInput, OrganizationUncheckedCreateWithoutProductsInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutProductsInput
    upsert?: OrganizationUpsertWithoutProductsInput
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutProductsInput, OrganizationUpdateWithoutProductsInput>, OrganizationUncheckedUpdateWithoutProductsInput>
  }

  export type ManufacturerUpdateOneWithoutProductsNestedInput = {
    create?: XOR<ManufacturerCreateWithoutProductsInput, ManufacturerUncheckedCreateWithoutProductsInput>
    connectOrCreate?: ManufacturerCreateOrConnectWithoutProductsInput
    upsert?: ManufacturerUpsertWithoutProductsInput
    disconnect?: ManufacturerWhereInput | boolean
    delete?: ManufacturerWhereInput | boolean
    connect?: ManufacturerWhereUniqueInput
    update?: XOR<XOR<ManufacturerUpdateToOneWithWhereWithoutProductsInput, ManufacturerUpdateWithoutProductsInput>, ManufacturerUncheckedUpdateWithoutProductsInput>
  }

  export type ProductCategoryUpdateManyWithoutProductsNestedInput = {
    create?: XOR<ProductCategoryCreateWithoutProductsInput, ProductCategoryUncheckedCreateWithoutProductsInput> | ProductCategoryCreateWithoutProductsInput[] | ProductCategoryUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutProductsInput | ProductCategoryCreateOrConnectWithoutProductsInput[]
    upsert?: ProductCategoryUpsertWithWhereUniqueWithoutProductsInput | ProductCategoryUpsertWithWhereUniqueWithoutProductsInput[]
    set?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    disconnect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    delete?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    connect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    update?: ProductCategoryUpdateWithWhereUniqueWithoutProductsInput | ProductCategoryUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: ProductCategoryUpdateManyWithWhereWithoutProductsInput | ProductCategoryUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: ProductCategoryScalarWhereInput | ProductCategoryScalarWhereInput[]
  }

  export type ModifierGroupUpdateManyWithoutProductsNestedInput = {
    create?: XOR<ModifierGroupCreateWithoutProductsInput, ModifierGroupUncheckedCreateWithoutProductsInput> | ModifierGroupCreateWithoutProductsInput[] | ModifierGroupUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: ModifierGroupCreateOrConnectWithoutProductsInput | ModifierGroupCreateOrConnectWithoutProductsInput[]
    upsert?: ModifierGroupUpsertWithWhereUniqueWithoutProductsInput | ModifierGroupUpsertWithWhereUniqueWithoutProductsInput[]
    set?: ModifierGroupWhereUniqueInput | ModifierGroupWhereUniqueInput[]
    disconnect?: ModifierGroupWhereUniqueInput | ModifierGroupWhereUniqueInput[]
    delete?: ModifierGroupWhereUniqueInput | ModifierGroupWhereUniqueInput[]
    connect?: ModifierGroupWhereUniqueInput | ModifierGroupWhereUniqueInput[]
    update?: ModifierGroupUpdateWithWhereUniqueWithoutProductsInput | ModifierGroupUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: ModifierGroupUpdateManyWithWhereWithoutProductsInput | ModifierGroupUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: ModifierGroupScalarWhereInput | ModifierGroupScalarWhereInput[]
  }

  export type ProductTranslationUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductTranslationCreateWithoutProductInput, ProductTranslationUncheckedCreateWithoutProductInput> | ProductTranslationCreateWithoutProductInput[] | ProductTranslationUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutProductInput | ProductTranslationCreateOrConnectWithoutProductInput[]
    upsert?: ProductTranslationUpsertWithWhereUniqueWithoutProductInput | ProductTranslationUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductTranslationCreateManyProductInputEnvelope
    set?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    disconnect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    delete?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    update?: ProductTranslationUpdateWithWhereUniqueWithoutProductInput | ProductTranslationUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductTranslationUpdateManyWithWhereWithoutProductInput | ProductTranslationUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductTranslationScalarWhereInput | ProductTranslationScalarWhereInput[]
  }

  export type ProductSnapshotUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductSnapshotCreateWithoutProductInput, ProductSnapshotUncheckedCreateWithoutProductInput> | ProductSnapshotCreateWithoutProductInput[] | ProductSnapshotUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductSnapshotCreateOrConnectWithoutProductInput | ProductSnapshotCreateOrConnectWithoutProductInput[]
    upsert?: ProductSnapshotUpsertWithWhereUniqueWithoutProductInput | ProductSnapshotUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductSnapshotCreateManyProductInputEnvelope
    set?: ProductSnapshotWhereUniqueInput | ProductSnapshotWhereUniqueInput[]
    disconnect?: ProductSnapshotWhereUniqueInput | ProductSnapshotWhereUniqueInput[]
    delete?: ProductSnapshotWhereUniqueInput | ProductSnapshotWhereUniqueInput[]
    connect?: ProductSnapshotWhereUniqueInput | ProductSnapshotWhereUniqueInput[]
    update?: ProductSnapshotUpdateWithWhereUniqueWithoutProductInput | ProductSnapshotUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductSnapshotUpdateManyWithWhereWithoutProductInput | ProductSnapshotUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductSnapshotScalarWhereInput | ProductSnapshotScalarWhereInput[]
  }

  export type ProductSnapshotUpdateOneWithoutLatestForProductNestedInput = {
    create?: XOR<ProductSnapshotCreateWithoutLatestForProductInput, ProductSnapshotUncheckedCreateWithoutLatestForProductInput>
    connectOrCreate?: ProductSnapshotCreateOrConnectWithoutLatestForProductInput
    upsert?: ProductSnapshotUpsertWithoutLatestForProductInput
    disconnect?: ProductSnapshotWhereInput | boolean
    delete?: ProductSnapshotWhereInput | boolean
    connect?: ProductSnapshotWhereUniqueInput
    update?: XOR<XOR<ProductSnapshotUpdateToOneWithWhereWithoutLatestForProductInput, ProductSnapshotUpdateWithoutLatestForProductInput>, ProductSnapshotUncheckedUpdateWithoutLatestForProductInput>
  }

  export type FileUncheckedUpdateManyWithoutProductImagesNestedInput = {
    create?: XOR<FileCreateWithoutProductImagesInput, FileUncheckedCreateWithoutProductImagesInput> | FileCreateWithoutProductImagesInput[] | FileUncheckedCreateWithoutProductImagesInput[]
    connectOrCreate?: FileCreateOrConnectWithoutProductImagesInput | FileCreateOrConnectWithoutProductImagesInput[]
    upsert?: FileUpsertWithWhereUniqueWithoutProductImagesInput | FileUpsertWithWhereUniqueWithoutProductImagesInput[]
    set?: FileWhereUniqueInput | FileWhereUniqueInput[]
    disconnect?: FileWhereUniqueInput | FileWhereUniqueInput[]
    delete?: FileWhereUniqueInput | FileWhereUniqueInput[]
    connect?: FileWhereUniqueInput | FileWhereUniqueInput[]
    update?: FileUpdateWithWhereUniqueWithoutProductImagesInput | FileUpdateWithWhereUniqueWithoutProductImagesInput[]
    updateMany?: FileUpdateManyWithWhereWithoutProductImagesInput | FileUpdateManyWithWhereWithoutProductImagesInput[]
    deleteMany?: FileScalarWhereInput | FileScalarWhereInput[]
  }

  export type ProductCategoryUncheckedUpdateManyWithoutProductsNestedInput = {
    create?: XOR<ProductCategoryCreateWithoutProductsInput, ProductCategoryUncheckedCreateWithoutProductsInput> | ProductCategoryCreateWithoutProductsInput[] | ProductCategoryUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutProductsInput | ProductCategoryCreateOrConnectWithoutProductsInput[]
    upsert?: ProductCategoryUpsertWithWhereUniqueWithoutProductsInput | ProductCategoryUpsertWithWhereUniqueWithoutProductsInput[]
    set?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    disconnect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    delete?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    connect?: ProductCategoryWhereUniqueInput | ProductCategoryWhereUniqueInput[]
    update?: ProductCategoryUpdateWithWhereUniqueWithoutProductsInput | ProductCategoryUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: ProductCategoryUpdateManyWithWhereWithoutProductsInput | ProductCategoryUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: ProductCategoryScalarWhereInput | ProductCategoryScalarWhereInput[]
  }

  export type ModifierGroupUncheckedUpdateManyWithoutProductsNestedInput = {
    create?: XOR<ModifierGroupCreateWithoutProductsInput, ModifierGroupUncheckedCreateWithoutProductsInput> | ModifierGroupCreateWithoutProductsInput[] | ModifierGroupUncheckedCreateWithoutProductsInput[]
    connectOrCreate?: ModifierGroupCreateOrConnectWithoutProductsInput | ModifierGroupCreateOrConnectWithoutProductsInput[]
    upsert?: ModifierGroupUpsertWithWhereUniqueWithoutProductsInput | ModifierGroupUpsertWithWhereUniqueWithoutProductsInput[]
    set?: ModifierGroupWhereUniqueInput | ModifierGroupWhereUniqueInput[]
    disconnect?: ModifierGroupWhereUniqueInput | ModifierGroupWhereUniqueInput[]
    delete?: ModifierGroupWhereUniqueInput | ModifierGroupWhereUniqueInput[]
    connect?: ModifierGroupWhereUniqueInput | ModifierGroupWhereUniqueInput[]
    update?: ModifierGroupUpdateWithWhereUniqueWithoutProductsInput | ModifierGroupUpdateWithWhereUniqueWithoutProductsInput[]
    updateMany?: ModifierGroupUpdateManyWithWhereWithoutProductsInput | ModifierGroupUpdateManyWithWhereWithoutProductsInput[]
    deleteMany?: ModifierGroupScalarWhereInput | ModifierGroupScalarWhereInput[]
  }

  export type ProductTranslationUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductTranslationCreateWithoutProductInput, ProductTranslationUncheckedCreateWithoutProductInput> | ProductTranslationCreateWithoutProductInput[] | ProductTranslationUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductTranslationCreateOrConnectWithoutProductInput | ProductTranslationCreateOrConnectWithoutProductInput[]
    upsert?: ProductTranslationUpsertWithWhereUniqueWithoutProductInput | ProductTranslationUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductTranslationCreateManyProductInputEnvelope
    set?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    disconnect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    delete?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    connect?: ProductTranslationWhereUniqueInput | ProductTranslationWhereUniqueInput[]
    update?: ProductTranslationUpdateWithWhereUniqueWithoutProductInput | ProductTranslationUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductTranslationUpdateManyWithWhereWithoutProductInput | ProductTranslationUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductTranslationScalarWhereInput | ProductTranslationScalarWhereInput[]
  }

  export type ProductSnapshotUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductSnapshotCreateWithoutProductInput, ProductSnapshotUncheckedCreateWithoutProductInput> | ProductSnapshotCreateWithoutProductInput[] | ProductSnapshotUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductSnapshotCreateOrConnectWithoutProductInput | ProductSnapshotCreateOrConnectWithoutProductInput[]
    upsert?: ProductSnapshotUpsertWithWhereUniqueWithoutProductInput | ProductSnapshotUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductSnapshotCreateManyProductInputEnvelope
    set?: ProductSnapshotWhereUniqueInput | ProductSnapshotWhereUniqueInput[]
    disconnect?: ProductSnapshotWhereUniqueInput | ProductSnapshotWhereUniqueInput[]
    delete?: ProductSnapshotWhereUniqueInput | ProductSnapshotWhereUniqueInput[]
    connect?: ProductSnapshotWhereUniqueInput | ProductSnapshotWhereUniqueInput[]
    update?: ProductSnapshotUpdateWithWhereUniqueWithoutProductInput | ProductSnapshotUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductSnapshotUpdateManyWithWhereWithoutProductInput | ProductSnapshotUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductSnapshotScalarWhereInput | ProductSnapshotScalarWhereInput[]
  }

  export type ProductCreateNestedOneWithoutSnapshotsInput = {
    create?: XOR<ProductCreateWithoutSnapshotsInput, ProductUncheckedCreateWithoutSnapshotsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutSnapshotsInput
    connect?: ProductWhereUniqueInput
  }

  export type ProductCreateNestedOneWithoutLatestSnapshotInput = {
    create?: XOR<ProductCreateWithoutLatestSnapshotInput, ProductUncheckedCreateWithoutLatestSnapshotInput>
    connectOrCreate?: ProductCreateOrConnectWithoutLatestSnapshotInput
    connect?: ProductWhereUniqueInput
  }

  export type OrderItemCreateNestedManyWithoutProductSnapshotInput = {
    create?: XOR<OrderItemCreateWithoutProductSnapshotInput, OrderItemUncheckedCreateWithoutProductSnapshotInput> | OrderItemCreateWithoutProductSnapshotInput[] | OrderItemUncheckedCreateWithoutProductSnapshotInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductSnapshotInput | OrderItemCreateOrConnectWithoutProductSnapshotInput[]
    createMany?: OrderItemCreateManyProductSnapshotInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedOneWithoutLatestSnapshotInput = {
    create?: XOR<ProductCreateWithoutLatestSnapshotInput, ProductUncheckedCreateWithoutLatestSnapshotInput>
    connectOrCreate?: ProductCreateOrConnectWithoutLatestSnapshotInput
    connect?: ProductWhereUniqueInput
  }

  export type OrderItemUncheckedCreateNestedManyWithoutProductSnapshotInput = {
    create?: XOR<OrderItemCreateWithoutProductSnapshotInput, OrderItemUncheckedCreateWithoutProductSnapshotInput> | OrderItemCreateWithoutProductSnapshotInput[] | OrderItemUncheckedCreateWithoutProductSnapshotInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductSnapshotInput | OrderItemCreateOrConnectWithoutProductSnapshotInput[]
    createMany?: OrderItemCreateManyProductSnapshotInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type ProductUpdateOneRequiredWithoutSnapshotsNestedInput = {
    create?: XOR<ProductCreateWithoutSnapshotsInput, ProductUncheckedCreateWithoutSnapshotsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutSnapshotsInput
    upsert?: ProductUpsertWithoutSnapshotsInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutSnapshotsInput, ProductUpdateWithoutSnapshotsInput>, ProductUncheckedUpdateWithoutSnapshotsInput>
  }

  export type ProductUpdateOneWithoutLatestSnapshotNestedInput = {
    create?: XOR<ProductCreateWithoutLatestSnapshotInput, ProductUncheckedCreateWithoutLatestSnapshotInput>
    connectOrCreate?: ProductCreateOrConnectWithoutLatestSnapshotInput
    upsert?: ProductUpsertWithoutLatestSnapshotInput
    disconnect?: ProductWhereInput | boolean
    delete?: ProductWhereInput | boolean
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutLatestSnapshotInput, ProductUpdateWithoutLatestSnapshotInput>, ProductUncheckedUpdateWithoutLatestSnapshotInput>
  }

  export type OrderItemUpdateManyWithoutProductSnapshotNestedInput = {
    create?: XOR<OrderItemCreateWithoutProductSnapshotInput, OrderItemUncheckedCreateWithoutProductSnapshotInput> | OrderItemCreateWithoutProductSnapshotInput[] | OrderItemUncheckedCreateWithoutProductSnapshotInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductSnapshotInput | OrderItemCreateOrConnectWithoutProductSnapshotInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutProductSnapshotInput | OrderItemUpsertWithWhereUniqueWithoutProductSnapshotInput[]
    createMany?: OrderItemCreateManyProductSnapshotInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutProductSnapshotInput | OrderItemUpdateWithWhereUniqueWithoutProductSnapshotInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutProductSnapshotInput | OrderItemUpdateManyWithWhereWithoutProductSnapshotInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type ProductUncheckedUpdateOneWithoutLatestSnapshotNestedInput = {
    create?: XOR<ProductCreateWithoutLatestSnapshotInput, ProductUncheckedCreateWithoutLatestSnapshotInput>
    connectOrCreate?: ProductCreateOrConnectWithoutLatestSnapshotInput
    upsert?: ProductUpsertWithoutLatestSnapshotInput
    disconnect?: ProductWhereInput | boolean
    delete?: ProductWhereInput | boolean
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutLatestSnapshotInput, ProductUpdateWithoutLatestSnapshotInput>, ProductUncheckedUpdateWithoutLatestSnapshotInput>
  }

  export type OrderItemUncheckedUpdateManyWithoutProductSnapshotNestedInput = {
    create?: XOR<OrderItemCreateWithoutProductSnapshotInput, OrderItemUncheckedCreateWithoutProductSnapshotInput> | OrderItemCreateWithoutProductSnapshotInput[] | OrderItemUncheckedCreateWithoutProductSnapshotInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductSnapshotInput | OrderItemCreateOrConnectWithoutProductSnapshotInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutProductSnapshotInput | OrderItemUpsertWithWhereUniqueWithoutProductSnapshotInput[]
    createMany?: OrderItemCreateManyProductSnapshotInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutProductSnapshotInput | OrderItemUpdateWithWhereUniqueWithoutProductSnapshotInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutProductSnapshotInput | OrderItemUpdateManyWithWhereWithoutProductSnapshotInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type ProductCreateNestedOneWithoutTranslationsInput = {
    create?: XOR<ProductCreateWithoutTranslationsInput, ProductUncheckedCreateWithoutTranslationsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutTranslationsInput
    connect?: ProductWhereUniqueInput
  }

  export type ProductUpdateOneRequiredWithoutTranslationsNestedInput = {
    create?: XOR<ProductCreateWithoutTranslationsInput, ProductUncheckedCreateWithoutTranslationsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutTranslationsInput
    upsert?: ProductUpsertWithoutTranslationsInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutTranslationsInput, ProductUpdateWithoutTranslationsInput>, ProductUncheckedUpdateWithoutTranslationsInput>
  }

  export type ModifierCreateNestedManyWithoutModifierGroupInput = {
    create?: XOR<ModifierCreateWithoutModifierGroupInput, ModifierUncheckedCreateWithoutModifierGroupInput> | ModifierCreateWithoutModifierGroupInput[] | ModifierUncheckedCreateWithoutModifierGroupInput[]
    connectOrCreate?: ModifierCreateOrConnectWithoutModifierGroupInput | ModifierCreateOrConnectWithoutModifierGroupInput[]
    createMany?: ModifierCreateManyModifierGroupInputEnvelope
    connect?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutModifierGroupsInput = {
    create?: XOR<ProductCreateWithoutModifierGroupsInput, ProductUncheckedCreateWithoutModifierGroupsInput> | ProductCreateWithoutModifierGroupsInput[] | ProductUncheckedCreateWithoutModifierGroupsInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutModifierGroupsInput | ProductCreateOrConnectWithoutModifierGroupsInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ModifierGroupTranslationCreateNestedManyWithoutModifierGroupInput = {
    create?: XOR<ModifierGroupTranslationCreateWithoutModifierGroupInput, ModifierGroupTranslationUncheckedCreateWithoutModifierGroupInput> | ModifierGroupTranslationCreateWithoutModifierGroupInput[] | ModifierGroupTranslationUncheckedCreateWithoutModifierGroupInput[]
    connectOrCreate?: ModifierGroupTranslationCreateOrConnectWithoutModifierGroupInput | ModifierGroupTranslationCreateOrConnectWithoutModifierGroupInput[]
    createMany?: ModifierGroupTranslationCreateManyModifierGroupInputEnvelope
    connect?: ModifierGroupTranslationWhereUniqueInput | ModifierGroupTranslationWhereUniqueInput[]
  }

  export type ModifierUncheckedCreateNestedManyWithoutModifierGroupInput = {
    create?: XOR<ModifierCreateWithoutModifierGroupInput, ModifierUncheckedCreateWithoutModifierGroupInput> | ModifierCreateWithoutModifierGroupInput[] | ModifierUncheckedCreateWithoutModifierGroupInput[]
    connectOrCreate?: ModifierCreateOrConnectWithoutModifierGroupInput | ModifierCreateOrConnectWithoutModifierGroupInput[]
    createMany?: ModifierCreateManyModifierGroupInputEnvelope
    connect?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutModifierGroupsInput = {
    create?: XOR<ProductCreateWithoutModifierGroupsInput, ProductUncheckedCreateWithoutModifierGroupsInput> | ProductCreateWithoutModifierGroupsInput[] | ProductUncheckedCreateWithoutModifierGroupsInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutModifierGroupsInput | ProductCreateOrConnectWithoutModifierGroupsInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ModifierGroupTranslationUncheckedCreateNestedManyWithoutModifierGroupInput = {
    create?: XOR<ModifierGroupTranslationCreateWithoutModifierGroupInput, ModifierGroupTranslationUncheckedCreateWithoutModifierGroupInput> | ModifierGroupTranslationCreateWithoutModifierGroupInput[] | ModifierGroupTranslationUncheckedCreateWithoutModifierGroupInput[]
    connectOrCreate?: ModifierGroupTranslationCreateOrConnectWithoutModifierGroupInput | ModifierGroupTranslationCreateOrConnectWithoutModifierGroupInput[]
    createMany?: ModifierGroupTranslationCreateManyModifierGroupInputEnvelope
    connect?: ModifierGroupTranslationWhereUniqueInput | ModifierGroupTranslationWhereUniqueInput[]
  }

  export type ModifierUpdateManyWithoutModifierGroupNestedInput = {
    create?: XOR<ModifierCreateWithoutModifierGroupInput, ModifierUncheckedCreateWithoutModifierGroupInput> | ModifierCreateWithoutModifierGroupInput[] | ModifierUncheckedCreateWithoutModifierGroupInput[]
    connectOrCreate?: ModifierCreateOrConnectWithoutModifierGroupInput | ModifierCreateOrConnectWithoutModifierGroupInput[]
    upsert?: ModifierUpsertWithWhereUniqueWithoutModifierGroupInput | ModifierUpsertWithWhereUniqueWithoutModifierGroupInput[]
    createMany?: ModifierCreateManyModifierGroupInputEnvelope
    set?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    disconnect?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    delete?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    connect?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    update?: ModifierUpdateWithWhereUniqueWithoutModifierGroupInput | ModifierUpdateWithWhereUniqueWithoutModifierGroupInput[]
    updateMany?: ModifierUpdateManyWithWhereWithoutModifierGroupInput | ModifierUpdateManyWithWhereWithoutModifierGroupInput[]
    deleteMany?: ModifierScalarWhereInput | ModifierScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutModifierGroupsNestedInput = {
    create?: XOR<ProductCreateWithoutModifierGroupsInput, ProductUncheckedCreateWithoutModifierGroupsInput> | ProductCreateWithoutModifierGroupsInput[] | ProductUncheckedCreateWithoutModifierGroupsInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutModifierGroupsInput | ProductCreateOrConnectWithoutModifierGroupsInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutModifierGroupsInput | ProductUpsertWithWhereUniqueWithoutModifierGroupsInput[]
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutModifierGroupsInput | ProductUpdateWithWhereUniqueWithoutModifierGroupsInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutModifierGroupsInput | ProductUpdateManyWithWhereWithoutModifierGroupsInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ModifierGroupTranslationUpdateManyWithoutModifierGroupNestedInput = {
    create?: XOR<ModifierGroupTranslationCreateWithoutModifierGroupInput, ModifierGroupTranslationUncheckedCreateWithoutModifierGroupInput> | ModifierGroupTranslationCreateWithoutModifierGroupInput[] | ModifierGroupTranslationUncheckedCreateWithoutModifierGroupInput[]
    connectOrCreate?: ModifierGroupTranslationCreateOrConnectWithoutModifierGroupInput | ModifierGroupTranslationCreateOrConnectWithoutModifierGroupInput[]
    upsert?: ModifierGroupTranslationUpsertWithWhereUniqueWithoutModifierGroupInput | ModifierGroupTranslationUpsertWithWhereUniqueWithoutModifierGroupInput[]
    createMany?: ModifierGroupTranslationCreateManyModifierGroupInputEnvelope
    set?: ModifierGroupTranslationWhereUniqueInput | ModifierGroupTranslationWhereUniqueInput[]
    disconnect?: ModifierGroupTranslationWhereUniqueInput | ModifierGroupTranslationWhereUniqueInput[]
    delete?: ModifierGroupTranslationWhereUniqueInput | ModifierGroupTranslationWhereUniqueInput[]
    connect?: ModifierGroupTranslationWhereUniqueInput | ModifierGroupTranslationWhereUniqueInput[]
    update?: ModifierGroupTranslationUpdateWithWhereUniqueWithoutModifierGroupInput | ModifierGroupTranslationUpdateWithWhereUniqueWithoutModifierGroupInput[]
    updateMany?: ModifierGroupTranslationUpdateManyWithWhereWithoutModifierGroupInput | ModifierGroupTranslationUpdateManyWithWhereWithoutModifierGroupInput[]
    deleteMany?: ModifierGroupTranslationScalarWhereInput | ModifierGroupTranslationScalarWhereInput[]
  }

  export type ModifierUncheckedUpdateManyWithoutModifierGroupNestedInput = {
    create?: XOR<ModifierCreateWithoutModifierGroupInput, ModifierUncheckedCreateWithoutModifierGroupInput> | ModifierCreateWithoutModifierGroupInput[] | ModifierUncheckedCreateWithoutModifierGroupInput[]
    connectOrCreate?: ModifierCreateOrConnectWithoutModifierGroupInput | ModifierCreateOrConnectWithoutModifierGroupInput[]
    upsert?: ModifierUpsertWithWhereUniqueWithoutModifierGroupInput | ModifierUpsertWithWhereUniqueWithoutModifierGroupInput[]
    createMany?: ModifierCreateManyModifierGroupInputEnvelope
    set?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    disconnect?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    delete?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    connect?: ModifierWhereUniqueInput | ModifierWhereUniqueInput[]
    update?: ModifierUpdateWithWhereUniqueWithoutModifierGroupInput | ModifierUpdateWithWhereUniqueWithoutModifierGroupInput[]
    updateMany?: ModifierUpdateManyWithWhereWithoutModifierGroupInput | ModifierUpdateManyWithWhereWithoutModifierGroupInput[]
    deleteMany?: ModifierScalarWhereInput | ModifierScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutModifierGroupsNestedInput = {
    create?: XOR<ProductCreateWithoutModifierGroupsInput, ProductUncheckedCreateWithoutModifierGroupsInput> | ProductCreateWithoutModifierGroupsInput[] | ProductUncheckedCreateWithoutModifierGroupsInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutModifierGroupsInput | ProductCreateOrConnectWithoutModifierGroupsInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutModifierGroupsInput | ProductUpsertWithWhereUniqueWithoutModifierGroupsInput[]
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutModifierGroupsInput | ProductUpdateWithWhereUniqueWithoutModifierGroupsInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutModifierGroupsInput | ProductUpdateManyWithWhereWithoutModifierGroupsInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ModifierGroupTranslationUncheckedUpdateManyWithoutModifierGroupNestedInput = {
    create?: XOR<ModifierGroupTranslationCreateWithoutModifierGroupInput, ModifierGroupTranslationUncheckedCreateWithoutModifierGroupInput> | ModifierGroupTranslationCreateWithoutModifierGroupInput[] | ModifierGroupTranslationUncheckedCreateWithoutModifierGroupInput[]
    connectOrCreate?: ModifierGroupTranslationCreateOrConnectWithoutModifierGroupInput | ModifierGroupTranslationCreateOrConnectWithoutModifierGroupInput[]
    upsert?: ModifierGroupTranslationUpsertWithWhereUniqueWithoutModifierGroupInput | ModifierGroupTranslationUpsertWithWhereUniqueWithoutModifierGroupInput[]
    createMany?: ModifierGroupTranslationCreateManyModifierGroupInputEnvelope
    set?: ModifierGroupTranslationWhereUniqueInput | ModifierGroupTranslationWhereUniqueInput[]
    disconnect?: ModifierGroupTranslationWhereUniqueInput | ModifierGroupTranslationWhereUniqueInput[]
    delete?: ModifierGroupTranslationWhereUniqueInput | ModifierGroupTranslationWhereUniqueInput[]
    connect?: ModifierGroupTranslationWhereUniqueInput | ModifierGroupTranslationWhereUniqueInput[]
    update?: ModifierGroupTranslationUpdateWithWhereUniqueWithoutModifierGroupInput | ModifierGroupTranslationUpdateWithWhereUniqueWithoutModifierGroupInput[]
    updateMany?: ModifierGroupTranslationUpdateManyWithWhereWithoutModifierGroupInput | ModifierGroupTranslationUpdateManyWithWhereWithoutModifierGroupInput[]
    deleteMany?: ModifierGroupTranslationScalarWhereInput | ModifierGroupTranslationScalarWhereInput[]
  }

  export type ModifierGroupCreateNestedOneWithoutTranslationsInput = {
    create?: XOR<ModifierGroupCreateWithoutTranslationsInput, ModifierGroupUncheckedCreateWithoutTranslationsInput>
    connectOrCreate?: ModifierGroupCreateOrConnectWithoutTranslationsInput
    connect?: ModifierGroupWhereUniqueInput
  }

  export type ModifierGroupUpdateOneRequiredWithoutTranslationsNestedInput = {
    create?: XOR<ModifierGroupCreateWithoutTranslationsInput, ModifierGroupUncheckedCreateWithoutTranslationsInput>
    connectOrCreate?: ModifierGroupCreateOrConnectWithoutTranslationsInput
    upsert?: ModifierGroupUpsertWithoutTranslationsInput
    connect?: ModifierGroupWhereUniqueInput
    update?: XOR<XOR<ModifierGroupUpdateToOneWithWhereWithoutTranslationsInput, ModifierGroupUpdateWithoutTranslationsInput>, ModifierGroupUncheckedUpdateWithoutTranslationsInput>
  }

  export type ModifierGroupCreateNestedOneWithoutModifiersInput = {
    create?: XOR<ModifierGroupCreateWithoutModifiersInput, ModifierGroupUncheckedCreateWithoutModifiersInput>
    connectOrCreate?: ModifierGroupCreateOrConnectWithoutModifiersInput
    connect?: ModifierGroupWhereUniqueInput
  }

  export type FileCreateNestedManyWithoutModifierImagesInput = {
    create?: XOR<FileCreateWithoutModifierImagesInput, FileUncheckedCreateWithoutModifierImagesInput> | FileCreateWithoutModifierImagesInput[] | FileUncheckedCreateWithoutModifierImagesInput[]
    connectOrCreate?: FileCreateOrConnectWithoutModifierImagesInput | FileCreateOrConnectWithoutModifierImagesInput[]
    connect?: FileWhereUniqueInput | FileWhereUniqueInput[]
  }

  export type FileUncheckedCreateNestedManyWithoutModifierImagesInput = {
    create?: XOR<FileCreateWithoutModifierImagesInput, FileUncheckedCreateWithoutModifierImagesInput> | FileCreateWithoutModifierImagesInput[] | FileUncheckedCreateWithoutModifierImagesInput[]
    connectOrCreate?: FileCreateOrConnectWithoutModifierImagesInput | FileCreateOrConnectWithoutModifierImagesInput[]
    connect?: FileWhereUniqueInput | FileWhereUniqueInput[]
  }

  export type ModifierGroupUpdateOneRequiredWithoutModifiersNestedInput = {
    create?: XOR<ModifierGroupCreateWithoutModifiersInput, ModifierGroupUncheckedCreateWithoutModifiersInput>
    connectOrCreate?: ModifierGroupCreateOrConnectWithoutModifiersInput
    upsert?: ModifierGroupUpsertWithoutModifiersInput
    connect?: ModifierGroupWhereUniqueInput
    update?: XOR<XOR<ModifierGroupUpdateToOneWithWhereWithoutModifiersInput, ModifierGroupUpdateWithoutModifiersInput>, ModifierGroupUncheckedUpdateWithoutModifiersInput>
  }

  export type FileUpdateManyWithoutModifierImagesNestedInput = {
    create?: XOR<FileCreateWithoutModifierImagesInput, FileUncheckedCreateWithoutModifierImagesInput> | FileCreateWithoutModifierImagesInput[] | FileUncheckedCreateWithoutModifierImagesInput[]
    connectOrCreate?: FileCreateOrConnectWithoutModifierImagesInput | FileCreateOrConnectWithoutModifierImagesInput[]
    upsert?: FileUpsertWithWhereUniqueWithoutModifierImagesInput | FileUpsertWithWhereUniqueWithoutModifierImagesInput[]
    set?: FileWhereUniqueInput | FileWhereUniqueInput[]
    disconnect?: FileWhereUniqueInput | FileWhereUniqueInput[]
    delete?: FileWhereUniqueInput | FileWhereUniqueInput[]
    connect?: FileWhereUniqueInput | FileWhereUniqueInput[]
    update?: FileUpdateWithWhereUniqueWithoutModifierImagesInput | FileUpdateWithWhereUniqueWithoutModifierImagesInput[]
    updateMany?: FileUpdateManyWithWhereWithoutModifierImagesInput | FileUpdateManyWithWhereWithoutModifierImagesInput[]
    deleteMany?: FileScalarWhereInput | FileScalarWhereInput[]
  }

  export type FileUncheckedUpdateManyWithoutModifierImagesNestedInput = {
    create?: XOR<FileCreateWithoutModifierImagesInput, FileUncheckedCreateWithoutModifierImagesInput> | FileCreateWithoutModifierImagesInput[] | FileUncheckedCreateWithoutModifierImagesInput[]
    connectOrCreate?: FileCreateOrConnectWithoutModifierImagesInput | FileCreateOrConnectWithoutModifierImagesInput[]
    upsert?: FileUpsertWithWhereUniqueWithoutModifierImagesInput | FileUpsertWithWhereUniqueWithoutModifierImagesInput[]
    set?: FileWhereUniqueInput | FileWhereUniqueInput[]
    disconnect?: FileWhereUniqueInput | FileWhereUniqueInput[]
    delete?: FileWhereUniqueInput | FileWhereUniqueInput[]
    connect?: FileWhereUniqueInput | FileWhereUniqueInput[]
    update?: FileUpdateWithWhereUniqueWithoutModifierImagesInput | FileUpdateWithWhereUniqueWithoutModifierImagesInput[]
    updateMany?: FileUpdateManyWithWhereWithoutModifierImagesInput | FileUpdateManyWithWhereWithoutModifierImagesInput[]
    deleteMany?: FileScalarWhereInput | FileScalarWhereInput[]
  }

  export type OrganizationCreateNestedOneWithoutOrdersInput = {
    create?: XOR<OrganizationCreateWithoutOrdersInput, OrganizationUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutOrdersInput
    connect?: OrganizationWhereUniqueInput
  }

  export type UserCreateNestedOneWithoutOrdersInput = {
    create?: XOR<UserCreateWithoutOrdersInput, UserUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrdersInput
    connect?: UserWhereUniqueInput
  }

  export type PaymentCreateNestedOneWithoutOrderInput = {
    create?: XOR<PaymentCreateWithoutOrderInput, PaymentUncheckedCreateWithoutOrderInput>
    connectOrCreate?: PaymentCreateOrConnectWithoutOrderInput
    connect?: PaymentWhereUniqueInput
  }

  export type ShippingMethodCreateNestedOneWithoutOrdersInput = {
    create?: XOR<ShippingMethodCreateWithoutOrdersInput, ShippingMethodUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: ShippingMethodCreateOrConnectWithoutOrdersInput
    connect?: ShippingMethodWhereUniqueInput
  }

  export type AddressCreateNestedOneWithoutOrdersInput = {
    create?: XOR<AddressCreateWithoutOrdersInput, AddressUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: AddressCreateOrConnectWithoutOrdersInput
    connect?: AddressWhereUniqueInput
  }

  export type OrderItemCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type OrderItemUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type NullableEnumOrderFulfilmentMethodFieldUpdateOperationsInput = {
    set?: $Enums.OrderFulfilmentMethod | null
  }

  export type OrganizationUpdateOneRequiredWithoutOrdersNestedInput = {
    create?: XOR<OrganizationCreateWithoutOrdersInput, OrganizationUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutOrdersInput
    upsert?: OrganizationUpsertWithoutOrdersInput
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutOrdersInput, OrganizationUpdateWithoutOrdersInput>, OrganizationUncheckedUpdateWithoutOrdersInput>
  }

  export type UserUpdateOneWithoutOrdersNestedInput = {
    create?: XOR<UserCreateWithoutOrdersInput, UserUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: UserCreateOrConnectWithoutOrdersInput
    upsert?: UserUpsertWithoutOrdersInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutOrdersInput, UserUpdateWithoutOrdersInput>, UserUncheckedUpdateWithoutOrdersInput>
  }

  export type PaymentUpdateOneWithoutOrderNestedInput = {
    create?: XOR<PaymentCreateWithoutOrderInput, PaymentUncheckedCreateWithoutOrderInput>
    connectOrCreate?: PaymentCreateOrConnectWithoutOrderInput
    upsert?: PaymentUpsertWithoutOrderInput
    disconnect?: PaymentWhereInput | boolean
    delete?: PaymentWhereInput | boolean
    connect?: PaymentWhereUniqueInput
    update?: XOR<XOR<PaymentUpdateToOneWithWhereWithoutOrderInput, PaymentUpdateWithoutOrderInput>, PaymentUncheckedUpdateWithoutOrderInput>
  }

  export type ShippingMethodUpdateOneWithoutOrdersNestedInput = {
    create?: XOR<ShippingMethodCreateWithoutOrdersInput, ShippingMethodUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: ShippingMethodCreateOrConnectWithoutOrdersInput
    upsert?: ShippingMethodUpsertWithoutOrdersInput
    disconnect?: ShippingMethodWhereInput | boolean
    delete?: ShippingMethodWhereInput | boolean
    connect?: ShippingMethodWhereUniqueInput
    update?: XOR<XOR<ShippingMethodUpdateToOneWithWhereWithoutOrdersInput, ShippingMethodUpdateWithoutOrdersInput>, ShippingMethodUncheckedUpdateWithoutOrdersInput>
  }

  export type AddressUpdateOneWithoutOrdersNestedInput = {
    create?: XOR<AddressCreateWithoutOrdersInput, AddressUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: AddressCreateOrConnectWithoutOrdersInput
    upsert?: AddressUpsertWithoutOrdersInput
    disconnect?: AddressWhereInput | boolean
    delete?: AddressWhereInput | boolean
    connect?: AddressWhereUniqueInput
    update?: XOR<XOR<AddressUpdateToOneWithWhereWithoutOrdersInput, AddressUpdateWithoutOrdersInput>, AddressUncheckedUpdateWithoutOrdersInput>
  }

  export type OrderItemUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutOrderInput | OrderItemUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutOrderInput | OrderItemUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutOrderInput | OrderItemUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type OrderItemUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutOrderInput | OrderItemUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutOrderInput | OrderItemUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutOrderInput | OrderItemUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type OrderCreateNestedOneWithoutItemsInput = {
    create?: XOR<OrderCreateWithoutItemsInput, OrderUncheckedCreateWithoutItemsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutItemsInput
    connect?: OrderWhereUniqueInput
  }

  export type ProductSnapshotCreateNestedOneWithoutOrderItemsInput = {
    create?: XOR<ProductSnapshotCreateWithoutOrderItemsInput, ProductSnapshotUncheckedCreateWithoutOrderItemsInput>
    connectOrCreate?: ProductSnapshotCreateOrConnectWithoutOrderItemsInput
    connect?: ProductSnapshotWhereUniqueInput
  }

  export type FileCreateNestedOneWithoutOrderItemImagesInput = {
    create?: XOR<FileCreateWithoutOrderItemImagesInput, FileUncheckedCreateWithoutOrderItemImagesInput>
    connectOrCreate?: FileCreateOrConnectWithoutOrderItemImagesInput
    connect?: FileWhereUniqueInput
  }

  export type OrderItemTranslationCreateNestedManyWithoutOrderItemInput = {
    create?: XOR<OrderItemTranslationCreateWithoutOrderItemInput, OrderItemTranslationUncheckedCreateWithoutOrderItemInput> | OrderItemTranslationCreateWithoutOrderItemInput[] | OrderItemTranslationUncheckedCreateWithoutOrderItemInput[]
    connectOrCreate?: OrderItemTranslationCreateOrConnectWithoutOrderItemInput | OrderItemTranslationCreateOrConnectWithoutOrderItemInput[]
    createMany?: OrderItemTranslationCreateManyOrderItemInputEnvelope
    connect?: OrderItemTranslationWhereUniqueInput | OrderItemTranslationWhereUniqueInput[]
  }

  export type OrderItemTranslationUncheckedCreateNestedManyWithoutOrderItemInput = {
    create?: XOR<OrderItemTranslationCreateWithoutOrderItemInput, OrderItemTranslationUncheckedCreateWithoutOrderItemInput> | OrderItemTranslationCreateWithoutOrderItemInput[] | OrderItemTranslationUncheckedCreateWithoutOrderItemInput[]
    connectOrCreate?: OrderItemTranslationCreateOrConnectWithoutOrderItemInput | OrderItemTranslationCreateOrConnectWithoutOrderItemInput[]
    createMany?: OrderItemTranslationCreateManyOrderItemInputEnvelope
    connect?: OrderItemTranslationWhereUniqueInput | OrderItemTranslationWhereUniqueInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type OrderUpdateOneRequiredWithoutItemsNestedInput = {
    create?: XOR<OrderCreateWithoutItemsInput, OrderUncheckedCreateWithoutItemsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutItemsInput
    upsert?: OrderUpsertWithoutItemsInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutItemsInput, OrderUpdateWithoutItemsInput>, OrderUncheckedUpdateWithoutItemsInput>
  }

  export type ProductSnapshotUpdateOneWithoutOrderItemsNestedInput = {
    create?: XOR<ProductSnapshotCreateWithoutOrderItemsInput, ProductSnapshotUncheckedCreateWithoutOrderItemsInput>
    connectOrCreate?: ProductSnapshotCreateOrConnectWithoutOrderItemsInput
    upsert?: ProductSnapshotUpsertWithoutOrderItemsInput
    disconnect?: ProductSnapshotWhereInput | boolean
    delete?: ProductSnapshotWhereInput | boolean
    connect?: ProductSnapshotWhereUniqueInput
    update?: XOR<XOR<ProductSnapshotUpdateToOneWithWhereWithoutOrderItemsInput, ProductSnapshotUpdateWithoutOrderItemsInput>, ProductSnapshotUncheckedUpdateWithoutOrderItemsInput>
  }

  export type FileUpdateOneWithoutOrderItemImagesNestedInput = {
    create?: XOR<FileCreateWithoutOrderItemImagesInput, FileUncheckedCreateWithoutOrderItemImagesInput>
    connectOrCreate?: FileCreateOrConnectWithoutOrderItemImagesInput
    upsert?: FileUpsertWithoutOrderItemImagesInput
    disconnect?: FileWhereInput | boolean
    delete?: FileWhereInput | boolean
    connect?: FileWhereUniqueInput
    update?: XOR<XOR<FileUpdateToOneWithWhereWithoutOrderItemImagesInput, FileUpdateWithoutOrderItemImagesInput>, FileUncheckedUpdateWithoutOrderItemImagesInput>
  }

  export type OrderItemTranslationUpdateManyWithoutOrderItemNestedInput = {
    create?: XOR<OrderItemTranslationCreateWithoutOrderItemInput, OrderItemTranslationUncheckedCreateWithoutOrderItemInput> | OrderItemTranslationCreateWithoutOrderItemInput[] | OrderItemTranslationUncheckedCreateWithoutOrderItemInput[]
    connectOrCreate?: OrderItemTranslationCreateOrConnectWithoutOrderItemInput | OrderItemTranslationCreateOrConnectWithoutOrderItemInput[]
    upsert?: OrderItemTranslationUpsertWithWhereUniqueWithoutOrderItemInput | OrderItemTranslationUpsertWithWhereUniqueWithoutOrderItemInput[]
    createMany?: OrderItemTranslationCreateManyOrderItemInputEnvelope
    set?: OrderItemTranslationWhereUniqueInput | OrderItemTranslationWhereUniqueInput[]
    disconnect?: OrderItemTranslationWhereUniqueInput | OrderItemTranslationWhereUniqueInput[]
    delete?: OrderItemTranslationWhereUniqueInput | OrderItemTranslationWhereUniqueInput[]
    connect?: OrderItemTranslationWhereUniqueInput | OrderItemTranslationWhereUniqueInput[]
    update?: OrderItemTranslationUpdateWithWhereUniqueWithoutOrderItemInput | OrderItemTranslationUpdateWithWhereUniqueWithoutOrderItemInput[]
    updateMany?: OrderItemTranslationUpdateManyWithWhereWithoutOrderItemInput | OrderItemTranslationUpdateManyWithWhereWithoutOrderItemInput[]
    deleteMany?: OrderItemTranslationScalarWhereInput | OrderItemTranslationScalarWhereInput[]
  }

  export type OrderItemTranslationUncheckedUpdateManyWithoutOrderItemNestedInput = {
    create?: XOR<OrderItemTranslationCreateWithoutOrderItemInput, OrderItemTranslationUncheckedCreateWithoutOrderItemInput> | OrderItemTranslationCreateWithoutOrderItemInput[] | OrderItemTranslationUncheckedCreateWithoutOrderItemInput[]
    connectOrCreate?: OrderItemTranslationCreateOrConnectWithoutOrderItemInput | OrderItemTranslationCreateOrConnectWithoutOrderItemInput[]
    upsert?: OrderItemTranslationUpsertWithWhereUniqueWithoutOrderItemInput | OrderItemTranslationUpsertWithWhereUniqueWithoutOrderItemInput[]
    createMany?: OrderItemTranslationCreateManyOrderItemInputEnvelope
    set?: OrderItemTranslationWhereUniqueInput | OrderItemTranslationWhereUniqueInput[]
    disconnect?: OrderItemTranslationWhereUniqueInput | OrderItemTranslationWhereUniqueInput[]
    delete?: OrderItemTranslationWhereUniqueInput | OrderItemTranslationWhereUniqueInput[]
    connect?: OrderItemTranslationWhereUniqueInput | OrderItemTranslationWhereUniqueInput[]
    update?: OrderItemTranslationUpdateWithWhereUniqueWithoutOrderItemInput | OrderItemTranslationUpdateWithWhereUniqueWithoutOrderItemInput[]
    updateMany?: OrderItemTranslationUpdateManyWithWhereWithoutOrderItemInput | OrderItemTranslationUpdateManyWithWhereWithoutOrderItemInput[]
    deleteMany?: OrderItemTranslationScalarWhereInput | OrderItemTranslationScalarWhereInput[]
  }

  export type OrderItemCreateNestedOneWithoutTranslationsInput = {
    create?: XOR<OrderItemCreateWithoutTranslationsInput, OrderItemUncheckedCreateWithoutTranslationsInput>
    connectOrCreate?: OrderItemCreateOrConnectWithoutTranslationsInput
    connect?: OrderItemWhereUniqueInput
  }

  export type OrderItemUpdateOneRequiredWithoutTranslationsNestedInput = {
    create?: XOR<OrderItemCreateWithoutTranslationsInput, OrderItemUncheckedCreateWithoutTranslationsInput>
    connectOrCreate?: OrderItemCreateOrConnectWithoutTranslationsInput
    upsert?: OrderItemUpsertWithoutTranslationsInput
    connect?: OrderItemWhereUniqueInput
    update?: XOR<XOR<OrderItemUpdateToOneWithWhereWithoutTranslationsInput, OrderItemUpdateWithoutTranslationsInput>, OrderItemUncheckedUpdateWithoutTranslationsInput>
  }

  export type PaymentSessionCreateNestedManyWithoutPaymentInput = {
    create?: XOR<PaymentSessionCreateWithoutPaymentInput, PaymentSessionUncheckedCreateWithoutPaymentInput> | PaymentSessionCreateWithoutPaymentInput[] | PaymentSessionUncheckedCreateWithoutPaymentInput[]
    connectOrCreate?: PaymentSessionCreateOrConnectWithoutPaymentInput | PaymentSessionCreateOrConnectWithoutPaymentInput[]
    createMany?: PaymentSessionCreateManyPaymentInputEnvelope
    connect?: PaymentSessionWhereUniqueInput | PaymentSessionWhereUniqueInput[]
  }

  export type OrderCreateNestedOneWithoutPaymentInput = {
    create?: XOR<OrderCreateWithoutPaymentInput, OrderUncheckedCreateWithoutPaymentInput>
    connectOrCreate?: OrderCreateOrConnectWithoutPaymentInput
    connect?: OrderWhereUniqueInput
  }

  export type PaymentSessionUncheckedCreateNestedManyWithoutPaymentInput = {
    create?: XOR<PaymentSessionCreateWithoutPaymentInput, PaymentSessionUncheckedCreateWithoutPaymentInput> | PaymentSessionCreateWithoutPaymentInput[] | PaymentSessionUncheckedCreateWithoutPaymentInput[]
    connectOrCreate?: PaymentSessionCreateOrConnectWithoutPaymentInput | PaymentSessionCreateOrConnectWithoutPaymentInput[]
    createMany?: PaymentSessionCreateManyPaymentInputEnvelope
    connect?: PaymentSessionWhereUniqueInput | PaymentSessionWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedOneWithoutPaymentInput = {
    create?: XOR<OrderCreateWithoutPaymentInput, OrderUncheckedCreateWithoutPaymentInput>
    connectOrCreate?: OrderCreateOrConnectWithoutPaymentInput
    connect?: OrderWhereUniqueInput
  }

  export type EnumPaymentMethodFieldUpdateOperationsInput = {
    set?: $Enums.PaymentMethod
  }

  export type EnumPaymentProviderFieldUpdateOperationsInput = {
    set?: $Enums.PaymentProvider
  }

  export type EnumPaymentStatusFieldUpdateOperationsInput = {
    set?: $Enums.PaymentStatus
  }

  export type PaymentSessionUpdateManyWithoutPaymentNestedInput = {
    create?: XOR<PaymentSessionCreateWithoutPaymentInput, PaymentSessionUncheckedCreateWithoutPaymentInput> | PaymentSessionCreateWithoutPaymentInput[] | PaymentSessionUncheckedCreateWithoutPaymentInput[]
    connectOrCreate?: PaymentSessionCreateOrConnectWithoutPaymentInput | PaymentSessionCreateOrConnectWithoutPaymentInput[]
    upsert?: PaymentSessionUpsertWithWhereUniqueWithoutPaymentInput | PaymentSessionUpsertWithWhereUniqueWithoutPaymentInput[]
    createMany?: PaymentSessionCreateManyPaymentInputEnvelope
    set?: PaymentSessionWhereUniqueInput | PaymentSessionWhereUniqueInput[]
    disconnect?: PaymentSessionWhereUniqueInput | PaymentSessionWhereUniqueInput[]
    delete?: PaymentSessionWhereUniqueInput | PaymentSessionWhereUniqueInput[]
    connect?: PaymentSessionWhereUniqueInput | PaymentSessionWhereUniqueInput[]
    update?: PaymentSessionUpdateWithWhereUniqueWithoutPaymentInput | PaymentSessionUpdateWithWhereUniqueWithoutPaymentInput[]
    updateMany?: PaymentSessionUpdateManyWithWhereWithoutPaymentInput | PaymentSessionUpdateManyWithWhereWithoutPaymentInput[]
    deleteMany?: PaymentSessionScalarWhereInput | PaymentSessionScalarWhereInput[]
  }

  export type OrderUpdateOneWithoutPaymentNestedInput = {
    create?: XOR<OrderCreateWithoutPaymentInput, OrderUncheckedCreateWithoutPaymentInput>
    connectOrCreate?: OrderCreateOrConnectWithoutPaymentInput
    upsert?: OrderUpsertWithoutPaymentInput
    disconnect?: OrderWhereInput | boolean
    delete?: OrderWhereInput | boolean
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutPaymentInput, OrderUpdateWithoutPaymentInput>, OrderUncheckedUpdateWithoutPaymentInput>
  }

  export type PaymentSessionUncheckedUpdateManyWithoutPaymentNestedInput = {
    create?: XOR<PaymentSessionCreateWithoutPaymentInput, PaymentSessionUncheckedCreateWithoutPaymentInput> | PaymentSessionCreateWithoutPaymentInput[] | PaymentSessionUncheckedCreateWithoutPaymentInput[]
    connectOrCreate?: PaymentSessionCreateOrConnectWithoutPaymentInput | PaymentSessionCreateOrConnectWithoutPaymentInput[]
    upsert?: PaymentSessionUpsertWithWhereUniqueWithoutPaymentInput | PaymentSessionUpsertWithWhereUniqueWithoutPaymentInput[]
    createMany?: PaymentSessionCreateManyPaymentInputEnvelope
    set?: PaymentSessionWhereUniqueInput | PaymentSessionWhereUniqueInput[]
    disconnect?: PaymentSessionWhereUniqueInput | PaymentSessionWhereUniqueInput[]
    delete?: PaymentSessionWhereUniqueInput | PaymentSessionWhereUniqueInput[]
    connect?: PaymentSessionWhereUniqueInput | PaymentSessionWhereUniqueInput[]
    update?: PaymentSessionUpdateWithWhereUniqueWithoutPaymentInput | PaymentSessionUpdateWithWhereUniqueWithoutPaymentInput[]
    updateMany?: PaymentSessionUpdateManyWithWhereWithoutPaymentInput | PaymentSessionUpdateManyWithWhereWithoutPaymentInput[]
    deleteMany?: PaymentSessionScalarWhereInput | PaymentSessionScalarWhereInput[]
  }

  export type OrderUncheckedUpdateOneWithoutPaymentNestedInput = {
    create?: XOR<OrderCreateWithoutPaymentInput, OrderUncheckedCreateWithoutPaymentInput>
    connectOrCreate?: OrderCreateOrConnectWithoutPaymentInput
    upsert?: OrderUpsertWithoutPaymentInput
    disconnect?: OrderWhereInput | boolean
    delete?: OrderWhereInput | boolean
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutPaymentInput, OrderUpdateWithoutPaymentInput>, OrderUncheckedUpdateWithoutPaymentInput>
  }

  export type PaymentCreateNestedOneWithoutSessionsInput = {
    create?: XOR<PaymentCreateWithoutSessionsInput, PaymentUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: PaymentCreateOrConnectWithoutSessionsInput
    connect?: PaymentWhereUniqueInput
  }

  export type PaymentUpdateOneRequiredWithoutSessionsNestedInput = {
    create?: XOR<PaymentCreateWithoutSessionsInput, PaymentUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: PaymentCreateOrConnectWithoutSessionsInput
    upsert?: PaymentUpsertWithoutSessionsInput
    connect?: PaymentWhereUniqueInput
    update?: XOR<XOR<PaymentUpdateToOneWithWhereWithoutSessionsInput, PaymentUpdateWithoutSessionsInput>, PaymentUncheckedUpdateWithoutSessionsInput>
  }

  export type OrganizationCreateNestedOneWithoutCampaignsInput = {
    create?: XOR<OrganizationCreateWithoutCampaignsInput, OrganizationUncheckedCreateWithoutCampaignsInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutCampaignsInput
    connect?: OrganizationWhereUniqueInput
  }

  export type EnumCampaignTypeFieldUpdateOperationsInput = {
    set?: $Enums.CampaignType
  }

  export type OrganizationUpdateOneRequiredWithoutCampaignsNestedInput = {
    create?: XOR<OrganizationCreateWithoutCampaignsInput, OrganizationUncheckedCreateWithoutCampaignsInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutCampaignsInput
    upsert?: OrganizationUpsertWithoutCampaignsInput
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutCampaignsInput, OrganizationUpdateWithoutCampaignsInput>, OrganizationUncheckedUpdateWithoutCampaignsInput>
  }

  export type FileCreateNestedOneWithoutShippingMethodLogoForInput = {
    create?: XOR<FileCreateWithoutShippingMethodLogoForInput, FileUncheckedCreateWithoutShippingMethodLogoForInput>
    connectOrCreate?: FileCreateOrConnectWithoutShippingMethodLogoForInput
    connect?: FileWhereUniqueInput
  }

  export type OrganizationCreateNestedOneWithoutShippingMethodsInput = {
    create?: XOR<OrganizationCreateWithoutShippingMethodsInput, OrganizationUncheckedCreateWithoutShippingMethodsInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutShippingMethodsInput
    connect?: OrganizationWhereUniqueInput
  }

  export type ShippingZoneCreateNestedManyWithoutShippingMethodInput = {
    create?: XOR<ShippingZoneCreateWithoutShippingMethodInput, ShippingZoneUncheckedCreateWithoutShippingMethodInput> | ShippingZoneCreateWithoutShippingMethodInput[] | ShippingZoneUncheckedCreateWithoutShippingMethodInput[]
    connectOrCreate?: ShippingZoneCreateOrConnectWithoutShippingMethodInput | ShippingZoneCreateOrConnectWithoutShippingMethodInput[]
    createMany?: ShippingZoneCreateManyShippingMethodInputEnvelope
    connect?: ShippingZoneWhereUniqueInput | ShippingZoneWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutShippingMethodInput = {
    create?: XOR<OrderCreateWithoutShippingMethodInput, OrderUncheckedCreateWithoutShippingMethodInput> | OrderCreateWithoutShippingMethodInput[] | OrderUncheckedCreateWithoutShippingMethodInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutShippingMethodInput | OrderCreateOrConnectWithoutShippingMethodInput[]
    createMany?: OrderCreateManyShippingMethodInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type ShippingZoneUncheckedCreateNestedManyWithoutShippingMethodInput = {
    create?: XOR<ShippingZoneCreateWithoutShippingMethodInput, ShippingZoneUncheckedCreateWithoutShippingMethodInput> | ShippingZoneCreateWithoutShippingMethodInput[] | ShippingZoneUncheckedCreateWithoutShippingMethodInput[]
    connectOrCreate?: ShippingZoneCreateOrConnectWithoutShippingMethodInput | ShippingZoneCreateOrConnectWithoutShippingMethodInput[]
    createMany?: ShippingZoneCreateManyShippingMethodInputEnvelope
    connect?: ShippingZoneWhereUniqueInput | ShippingZoneWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutShippingMethodInput = {
    create?: XOR<OrderCreateWithoutShippingMethodInput, OrderUncheckedCreateWithoutShippingMethodInput> | OrderCreateWithoutShippingMethodInput[] | OrderUncheckedCreateWithoutShippingMethodInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutShippingMethodInput | OrderCreateOrConnectWithoutShippingMethodInput[]
    createMany?: OrderCreateManyShippingMethodInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type FileUpdateOneWithoutShippingMethodLogoForNestedInput = {
    create?: XOR<FileCreateWithoutShippingMethodLogoForInput, FileUncheckedCreateWithoutShippingMethodLogoForInput>
    connectOrCreate?: FileCreateOrConnectWithoutShippingMethodLogoForInput
    upsert?: FileUpsertWithoutShippingMethodLogoForInput
    disconnect?: FileWhereInput | boolean
    delete?: FileWhereInput | boolean
    connect?: FileWhereUniqueInput
    update?: XOR<XOR<FileUpdateToOneWithWhereWithoutShippingMethodLogoForInput, FileUpdateWithoutShippingMethodLogoForInput>, FileUncheckedUpdateWithoutShippingMethodLogoForInput>
  }

  export type OrganizationUpdateOneRequiredWithoutShippingMethodsNestedInput = {
    create?: XOR<OrganizationCreateWithoutShippingMethodsInput, OrganizationUncheckedCreateWithoutShippingMethodsInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutShippingMethodsInput
    upsert?: OrganizationUpsertWithoutShippingMethodsInput
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutShippingMethodsInput, OrganizationUpdateWithoutShippingMethodsInput>, OrganizationUncheckedUpdateWithoutShippingMethodsInput>
  }

  export type ShippingZoneUpdateManyWithoutShippingMethodNestedInput = {
    create?: XOR<ShippingZoneCreateWithoutShippingMethodInput, ShippingZoneUncheckedCreateWithoutShippingMethodInput> | ShippingZoneCreateWithoutShippingMethodInput[] | ShippingZoneUncheckedCreateWithoutShippingMethodInput[]
    connectOrCreate?: ShippingZoneCreateOrConnectWithoutShippingMethodInput | ShippingZoneCreateOrConnectWithoutShippingMethodInput[]
    upsert?: ShippingZoneUpsertWithWhereUniqueWithoutShippingMethodInput | ShippingZoneUpsertWithWhereUniqueWithoutShippingMethodInput[]
    createMany?: ShippingZoneCreateManyShippingMethodInputEnvelope
    set?: ShippingZoneWhereUniqueInput | ShippingZoneWhereUniqueInput[]
    disconnect?: ShippingZoneWhereUniqueInput | ShippingZoneWhereUniqueInput[]
    delete?: ShippingZoneWhereUniqueInput | ShippingZoneWhereUniqueInput[]
    connect?: ShippingZoneWhereUniqueInput | ShippingZoneWhereUniqueInput[]
    update?: ShippingZoneUpdateWithWhereUniqueWithoutShippingMethodInput | ShippingZoneUpdateWithWhereUniqueWithoutShippingMethodInput[]
    updateMany?: ShippingZoneUpdateManyWithWhereWithoutShippingMethodInput | ShippingZoneUpdateManyWithWhereWithoutShippingMethodInput[]
    deleteMany?: ShippingZoneScalarWhereInput | ShippingZoneScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutShippingMethodNestedInput = {
    create?: XOR<OrderCreateWithoutShippingMethodInput, OrderUncheckedCreateWithoutShippingMethodInput> | OrderCreateWithoutShippingMethodInput[] | OrderUncheckedCreateWithoutShippingMethodInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutShippingMethodInput | OrderCreateOrConnectWithoutShippingMethodInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutShippingMethodInput | OrderUpsertWithWhereUniqueWithoutShippingMethodInput[]
    createMany?: OrderCreateManyShippingMethodInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutShippingMethodInput | OrderUpdateWithWhereUniqueWithoutShippingMethodInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutShippingMethodInput | OrderUpdateManyWithWhereWithoutShippingMethodInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type ShippingZoneUncheckedUpdateManyWithoutShippingMethodNestedInput = {
    create?: XOR<ShippingZoneCreateWithoutShippingMethodInput, ShippingZoneUncheckedCreateWithoutShippingMethodInput> | ShippingZoneCreateWithoutShippingMethodInput[] | ShippingZoneUncheckedCreateWithoutShippingMethodInput[]
    connectOrCreate?: ShippingZoneCreateOrConnectWithoutShippingMethodInput | ShippingZoneCreateOrConnectWithoutShippingMethodInput[]
    upsert?: ShippingZoneUpsertWithWhereUniqueWithoutShippingMethodInput | ShippingZoneUpsertWithWhereUniqueWithoutShippingMethodInput[]
    createMany?: ShippingZoneCreateManyShippingMethodInputEnvelope
    set?: ShippingZoneWhereUniqueInput | ShippingZoneWhereUniqueInput[]
    disconnect?: ShippingZoneWhereUniqueInput | ShippingZoneWhereUniqueInput[]
    delete?: ShippingZoneWhereUniqueInput | ShippingZoneWhereUniqueInput[]
    connect?: ShippingZoneWhereUniqueInput | ShippingZoneWhereUniqueInput[]
    update?: ShippingZoneUpdateWithWhereUniqueWithoutShippingMethodInput | ShippingZoneUpdateWithWhereUniqueWithoutShippingMethodInput[]
    updateMany?: ShippingZoneUpdateManyWithWhereWithoutShippingMethodInput | ShippingZoneUpdateManyWithWhereWithoutShippingMethodInput[]
    deleteMany?: ShippingZoneScalarWhereInput | ShippingZoneScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutShippingMethodNestedInput = {
    create?: XOR<OrderCreateWithoutShippingMethodInput, OrderUncheckedCreateWithoutShippingMethodInput> | OrderCreateWithoutShippingMethodInput[] | OrderUncheckedCreateWithoutShippingMethodInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutShippingMethodInput | OrderCreateOrConnectWithoutShippingMethodInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutShippingMethodInput | OrderUpsertWithWhereUniqueWithoutShippingMethodInput[]
    createMany?: OrderCreateManyShippingMethodInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutShippingMethodInput | OrderUpdateWithWhereUniqueWithoutShippingMethodInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutShippingMethodInput | OrderUpdateManyWithWhereWithoutShippingMethodInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type ShippingMethodCreateNestedOneWithoutShippingZonesInput = {
    create?: XOR<ShippingMethodCreateWithoutShippingZonesInput, ShippingMethodUncheckedCreateWithoutShippingZonesInput>
    connectOrCreate?: ShippingMethodCreateOrConnectWithoutShippingZonesInput
    connect?: ShippingMethodWhereUniqueInput
  }

  export type ShippingMethodUpdateOneRequiredWithoutShippingZonesNestedInput = {
    create?: XOR<ShippingMethodCreateWithoutShippingZonesInput, ShippingMethodUncheckedCreateWithoutShippingZonesInput>
    connectOrCreate?: ShippingMethodCreateOrConnectWithoutShippingZonesInput
    upsert?: ShippingMethodUpsertWithoutShippingZonesInput
    connect?: ShippingMethodWhereUniqueInput
    update?: XOR<XOR<ShippingMethodUpdateToOneWithWhereWithoutShippingZonesInput, ShippingMethodUpdateWithoutShippingZonesInput>, ShippingMethodUncheckedUpdateWithoutShippingZonesInput>
  }

  export type UserCreateNestedOneWithoutReservationsInput = {
    create?: XOR<UserCreateWithoutReservationsInput, UserUncheckedCreateWithoutReservationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReservationsInput
    connect?: UserWhereUniqueInput
  }

  export type OrganizationCreateNestedOneWithoutReservationsInput = {
    create?: XOR<OrganizationCreateWithoutReservationsInput, OrganizationUncheckedCreateWithoutReservationsInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutReservationsInput
    connect?: OrganizationWhereUniqueInput
  }

  export type UserUpdateOneWithoutReservationsNestedInput = {
    create?: XOR<UserCreateWithoutReservationsInput, UserUncheckedCreateWithoutReservationsInput>
    connectOrCreate?: UserCreateOrConnectWithoutReservationsInput
    upsert?: UserUpsertWithoutReservationsInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutReservationsInput, UserUpdateWithoutReservationsInput>, UserUncheckedUpdateWithoutReservationsInput>
  }

  export type OrganizationUpdateOneRequiredWithoutReservationsNestedInput = {
    create?: XOR<OrganizationCreateWithoutReservationsInput, OrganizationUncheckedCreateWithoutReservationsInput>
    connectOrCreate?: OrganizationCreateOrConnectWithoutReservationsInput
    upsert?: OrganizationUpsertWithoutReservationsInput
    connect?: OrganizationWhereUniqueInput
    update?: XOR<XOR<OrganizationUpdateToOneWithWhereWithoutReservationsInput, OrganizationUpdateWithoutReservationsInput>, OrganizationUncheckedUpdateWithoutReservationsInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedEnumCurrencyFilter<$PrismaModel = never> = {
    equals?: $Enums.Currency | EnumCurrencyFieldRefInput<$PrismaModel>
    in?: $Enums.Currency[] | ListEnumCurrencyFieldRefInput<$PrismaModel>
    notIn?: $Enums.Currency[] | ListEnumCurrencyFieldRefInput<$PrismaModel>
    not?: NestedEnumCurrencyFilter<$PrismaModel> | $Enums.Currency
  }

  export type NestedEnumLocaleFilter<$PrismaModel = never> = {
    equals?: $Enums.Locale | EnumLocaleFieldRefInput<$PrismaModel>
    in?: $Enums.Locale[] | ListEnumLocaleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Locale[] | ListEnumLocaleFieldRefInput<$PrismaModel>
    not?: NestedEnumLocaleFilter<$PrismaModel> | $Enums.Locale
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedEnumCurrencyWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Currency | EnumCurrencyFieldRefInput<$PrismaModel>
    in?: $Enums.Currency[] | ListEnumCurrencyFieldRefInput<$PrismaModel>
    notIn?: $Enums.Currency[] | ListEnumCurrencyFieldRefInput<$PrismaModel>
    not?: NestedEnumCurrencyWithAggregatesFilter<$PrismaModel> | $Enums.Currency
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCurrencyFilter<$PrismaModel>
    _max?: NestedEnumCurrencyFilter<$PrismaModel>
  }

  export type NestedEnumLocaleWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.Locale | EnumLocaleFieldRefInput<$PrismaModel>
    in?: $Enums.Locale[] | ListEnumLocaleFieldRefInput<$PrismaModel>
    notIn?: $Enums.Locale[] | ListEnumLocaleFieldRefInput<$PrismaModel>
    not?: NestedEnumLocaleWithAggregatesFilter<$PrismaModel> | $Enums.Locale
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumLocaleFilter<$PrismaModel>
    _max?: NestedEnumLocaleFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumFileUploadStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.FileUploadStatus | EnumFileUploadStatusFieldRefInput<$PrismaModel>
    in?: $Enums.FileUploadStatus[] | ListEnumFileUploadStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.FileUploadStatus[] | ListEnumFileUploadStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumFileUploadStatusFilter<$PrismaModel> | $Enums.FileUploadStatus
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedEnumFileUploadStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FileUploadStatus | EnumFileUploadStatusFieldRefInput<$PrismaModel>
    in?: $Enums.FileUploadStatus[] | ListEnumFileUploadStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.FileUploadStatus[] | ListEnumFileUploadStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumFileUploadStatusWithAggregatesFilter<$PrismaModel> | $Enums.FileUploadStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumFileUploadStatusFilter<$PrismaModel>
    _max?: NestedEnumFileUploadStatusFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumOrderFulfilmentMethodNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderFulfilmentMethod | EnumOrderFulfilmentMethodFieldRefInput<$PrismaModel> | null
    in?: $Enums.OrderFulfilmentMethod[] | ListEnumOrderFulfilmentMethodFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.OrderFulfilmentMethod[] | ListEnumOrderFulfilmentMethodFieldRefInput<$PrismaModel> | null
    not?: NestedEnumOrderFulfilmentMethodNullableFilter<$PrismaModel> | $Enums.OrderFulfilmentMethod | null
  }

  export type NestedEnumOrderFulfilmentMethodNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderFulfilmentMethod | EnumOrderFulfilmentMethodFieldRefInput<$PrismaModel> | null
    in?: $Enums.OrderFulfilmentMethod[] | ListEnumOrderFulfilmentMethodFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.OrderFulfilmentMethod[] | ListEnumOrderFulfilmentMethodFieldRefInput<$PrismaModel> | null
    not?: NestedEnumOrderFulfilmentMethodNullableWithAggregatesFilter<$PrismaModel> | $Enums.OrderFulfilmentMethod | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumOrderFulfilmentMethodNullableFilter<$PrismaModel>
    _max?: NestedEnumOrderFulfilmentMethodNullableFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedEnumPaymentMethodFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodFilter<$PrismaModel> | $Enums.PaymentMethod
  }

  export type NestedEnumPaymentProviderFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentProvider | EnumPaymentProviderFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentProvider[] | ListEnumPaymentProviderFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentProvider[] | ListEnumPaymentProviderFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentProviderFilter<$PrismaModel> | $Enums.PaymentProvider
  }

  export type NestedEnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type NestedEnumPaymentMethodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentMethod | EnumPaymentMethodFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentMethod[] | ListEnumPaymentMethodFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentMethodWithAggregatesFilter<$PrismaModel> | $Enums.PaymentMethod
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentMethodFilter<$PrismaModel>
    _max?: NestedEnumPaymentMethodFilter<$PrismaModel>
  }

  export type NestedEnumPaymentProviderWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentProvider | EnumPaymentProviderFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentProvider[] | ListEnumPaymentProviderFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentProvider[] | ListEnumPaymentProviderFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentProviderWithAggregatesFilter<$PrismaModel> | $Enums.PaymentProvider
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentProviderFilter<$PrismaModel>
    _max?: NestedEnumPaymentProviderFilter<$PrismaModel>
  }

  export type NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.PaymentStatus[] | ListEnumPaymentStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }

  export type NestedEnumCampaignTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.CampaignType | EnumCampaignTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CampaignType[] | ListEnumCampaignTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CampaignType[] | ListEnumCampaignTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumCampaignTypeFilter<$PrismaModel> | $Enums.CampaignType
  }

  export type NestedEnumCampaignTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CampaignType | EnumCampaignTypeFieldRefInput<$PrismaModel>
    in?: $Enums.CampaignType[] | ListEnumCampaignTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.CampaignType[] | ListEnumCampaignTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumCampaignTypeWithAggregatesFilter<$PrismaModel> | $Enums.CampaignType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCampaignTypeFilter<$PrismaModel>
    _max?: NestedEnumCampaignTypeFilter<$PrismaModel>
  }

  export type SessionCreateWithoutUserInput = {
    id: string
    expiresAt: Date | string
    token: string
    createdAt: Date | string
    updatedAt: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    activeOrganizationId?: string | null
  }

  export type SessionUncheckedCreateWithoutUserInput = {
    id: string
    expiresAt: Date | string
    token: string
    createdAt: Date | string
    updatedAt: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    activeOrganizationId?: string | null
  }

  export type SessionCreateOrConnectWithoutUserInput = {
    where: SessionWhereUniqueInput
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionCreateManyUserInputEnvelope = {
    data: SessionCreateManyUserInput | SessionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AccountCreateWithoutUserInput = {
    id: string
    accountId: string
    providerId: string
    accessToken?: string | null
    refreshToken?: string | null
    idToken?: string | null
    accessTokenExpiresAt?: Date | string | null
    refreshTokenExpiresAt?: Date | string | null
    scope?: string | null
    password?: string | null
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type AccountUncheckedCreateWithoutUserInput = {
    id: string
    accountId: string
    providerId: string
    accessToken?: string | null
    refreshToken?: string | null
    idToken?: string | null
    accessTokenExpiresAt?: Date | string | null
    refreshTokenExpiresAt?: Date | string | null
    scope?: string | null
    password?: string | null
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type AccountCreateOrConnectWithoutUserInput = {
    where: AccountWhereUniqueInput
    create: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput>
  }

  export type AccountCreateManyUserInputEnvelope = {
    data: AccountCreateManyUserInput | AccountCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type MemberCreateWithoutUserInput = {
    id?: string
    role: string
    createdAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutMembersInput
  }

  export type MemberUncheckedCreateWithoutUserInput = {
    id?: string
    organizationId: string
    role: string
    createdAt?: Date | string
  }

  export type MemberCreateOrConnectWithoutUserInput = {
    where: MemberWhereUniqueInput
    create: XOR<MemberCreateWithoutUserInput, MemberUncheckedCreateWithoutUserInput>
  }

  export type MemberCreateManyUserInputEnvelope = {
    data: MemberCreateManyUserInput | MemberCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type InvitationCreateWithoutUserInput = {
    id: string
    email: string
    role?: string | null
    status: string
    expiresAt: Date | string
    organization: OrganizationCreateNestedOneWithoutInvitationsInput
  }

  export type InvitationUncheckedCreateWithoutUserInput = {
    id: string
    organizationId: string
    email: string
    role?: string | null
    status: string
    expiresAt: Date | string
  }

  export type InvitationCreateOrConnectWithoutUserInput = {
    where: InvitationWhereUniqueInput
    create: XOR<InvitationCreateWithoutUserInput, InvitationUncheckedCreateWithoutUserInput>
  }

  export type InvitationCreateManyUserInputEnvelope = {
    data: InvitationCreateManyUserInput | InvitationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AddressCreateWithoutUsersInput = {
    id?: string
    firstname?: string | null
    lastname?: string | null
    phone?: string | null
    addressLineOne: string
    doorNumber?: string | null
    addressLineTwo?: string | null
    zipCode?: string | null
    placeId?: string | null
    deliveryInstructions?: string | null
    city: string
    country?: string | null
    latitude?: number | null
    longitude?: number | null
    isDefault?: boolean
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    LegalEntity?: LegalEntityCreateNestedManyWithoutAddressInput
    organizations?: OrganizationCreateNestedManyWithoutAddressInput
    orders?: OrderCreateNestedManyWithoutShippingAddressInput
  }

  export type AddressUncheckedCreateWithoutUsersInput = {
    id?: string
    firstname?: string | null
    lastname?: string | null
    phone?: string | null
    addressLineOne: string
    doorNumber?: string | null
    addressLineTwo?: string | null
    zipCode?: string | null
    placeId?: string | null
    deliveryInstructions?: string | null
    city: string
    country?: string | null
    latitude?: number | null
    longitude?: number | null
    isDefault?: boolean
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    LegalEntity?: LegalEntityUncheckedCreateNestedManyWithoutAddressInput
    organizations?: OrganizationUncheckedCreateNestedManyWithoutAddressInput
    orders?: OrderUncheckedCreateNestedManyWithoutShippingAddressInput
  }

  export type AddressCreateOrConnectWithoutUsersInput = {
    where: AddressWhereUniqueInput
    create: XOR<AddressCreateWithoutUsersInput, AddressUncheckedCreateWithoutUsersInput>
  }

  export type OrderCreateWithoutUserInput = {
    id?: string
    token: string
    expiresAt?: Date | string
    referenceId: string
    fulfilmentMethod?: $Enums.OrderFulfilmentMethod | null
    dateOfExecution?: Date | string | null
    currency?: $Enums.Currency
    sourceIp?: string | null
    acceptedAt?: Date | string | null
    readyForDispatchAt?: Date | string | null
    dispatchedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutOrdersInput
    payment?: PaymentCreateNestedOneWithoutOrderInput
    shippingMethod?: ShippingMethodCreateNestedOneWithoutOrdersInput
    shippingAddress?: AddressCreateNestedOneWithoutOrdersInput
    items?: OrderItemCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutUserInput = {
    id?: string
    organizationId: string
    paymentId?: string | null
    token: string
    expiresAt?: Date | string
    referenceId: string
    fulfilmentMethod?: $Enums.OrderFulfilmentMethod | null
    shippingMethodId?: string | null
    shippingAddressId?: string | null
    dateOfExecution?: Date | string | null
    currency?: $Enums.Currency
    sourceIp?: string | null
    acceptedAt?: Date | string | null
    readyForDispatchAt?: Date | string | null
    dispatchedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutUserInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutUserInput, OrderUncheckedCreateWithoutUserInput>
  }

  export type OrderCreateManyUserInputEnvelope = {
    data: OrderCreateManyUserInput | OrderCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type ReservationCreateWithoutUserInput = {
    id?: string
    firstname: string
    lastname: string
    guests: number
    phone: string
    date: Date | string
    referenceId: string
    createdAt?: Date | string
    acceptedAt?: Date | string | null
    cancelledAt?: Date | string | null
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutReservationsInput
  }

  export type ReservationUncheckedCreateWithoutUserInput = {
    id?: string
    firstname: string
    lastname: string
    guests: number
    phone: string
    date: Date | string
    referenceId: string
    organizationId: string
    createdAt?: Date | string
    acceptedAt?: Date | string | null
    cancelledAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type ReservationCreateOrConnectWithoutUserInput = {
    where: ReservationWhereUniqueInput
    create: XOR<ReservationCreateWithoutUserInput, ReservationUncheckedCreateWithoutUserInput>
  }

  export type ReservationCreateManyUserInputEnvelope = {
    data: ReservationCreateManyUserInput | ReservationCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type SessionUpsertWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    update: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionUpdateWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    data: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
  }

  export type SessionUpdateManyWithWhereWithoutUserInput = {
    where: SessionScalarWhereInput
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyWithoutUserInput>
  }

  export type SessionScalarWhereInput = {
    AND?: SessionScalarWhereInput | SessionScalarWhereInput[]
    OR?: SessionScalarWhereInput[]
    NOT?: SessionScalarWhereInput | SessionScalarWhereInput[]
    id?: StringFilter<"Session"> | string
    expiresAt?: DateTimeFilter<"Session"> | Date | string
    token?: StringFilter<"Session"> | string
    createdAt?: DateTimeFilter<"Session"> | Date | string
    updatedAt?: DateTimeFilter<"Session"> | Date | string
    ipAddress?: StringNullableFilter<"Session"> | string | null
    userAgent?: StringNullableFilter<"Session"> | string | null
    userId?: StringFilter<"Session"> | string
    activeOrganizationId?: StringNullableFilter<"Session"> | string | null
  }

  export type AccountUpsertWithWhereUniqueWithoutUserInput = {
    where: AccountWhereUniqueInput
    update: XOR<AccountUpdateWithoutUserInput, AccountUncheckedUpdateWithoutUserInput>
    create: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput>
  }

  export type AccountUpdateWithWhereUniqueWithoutUserInput = {
    where: AccountWhereUniqueInput
    data: XOR<AccountUpdateWithoutUserInput, AccountUncheckedUpdateWithoutUserInput>
  }

  export type AccountUpdateManyWithWhereWithoutUserInput = {
    where: AccountScalarWhereInput
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyWithoutUserInput>
  }

  export type AccountScalarWhereInput = {
    AND?: AccountScalarWhereInput | AccountScalarWhereInput[]
    OR?: AccountScalarWhereInput[]
    NOT?: AccountScalarWhereInput | AccountScalarWhereInput[]
    id?: StringFilter<"Account"> | string
    accountId?: StringFilter<"Account"> | string
    providerId?: StringFilter<"Account"> | string
    userId?: StringFilter<"Account"> | string
    accessToken?: StringNullableFilter<"Account"> | string | null
    refreshToken?: StringNullableFilter<"Account"> | string | null
    idToken?: StringNullableFilter<"Account"> | string | null
    accessTokenExpiresAt?: DateTimeNullableFilter<"Account"> | Date | string | null
    refreshTokenExpiresAt?: DateTimeNullableFilter<"Account"> | Date | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    password?: StringNullableFilter<"Account"> | string | null
    createdAt?: DateTimeFilter<"Account"> | Date | string
    updatedAt?: DateTimeFilter<"Account"> | Date | string
  }

  export type MemberUpsertWithWhereUniqueWithoutUserInput = {
    where: MemberWhereUniqueInput
    update: XOR<MemberUpdateWithoutUserInput, MemberUncheckedUpdateWithoutUserInput>
    create: XOR<MemberCreateWithoutUserInput, MemberUncheckedCreateWithoutUserInput>
  }

  export type MemberUpdateWithWhereUniqueWithoutUserInput = {
    where: MemberWhereUniqueInput
    data: XOR<MemberUpdateWithoutUserInput, MemberUncheckedUpdateWithoutUserInput>
  }

  export type MemberUpdateManyWithWhereWithoutUserInput = {
    where: MemberScalarWhereInput
    data: XOR<MemberUpdateManyMutationInput, MemberUncheckedUpdateManyWithoutUserInput>
  }

  export type MemberScalarWhereInput = {
    AND?: MemberScalarWhereInput | MemberScalarWhereInput[]
    OR?: MemberScalarWhereInput[]
    NOT?: MemberScalarWhereInput | MemberScalarWhereInput[]
    id?: StringFilter<"Member"> | string
    organizationId?: StringFilter<"Member"> | string
    userId?: StringFilter<"Member"> | string
    role?: StringFilter<"Member"> | string
    createdAt?: DateTimeFilter<"Member"> | Date | string
  }

  export type InvitationUpsertWithWhereUniqueWithoutUserInput = {
    where: InvitationWhereUniqueInput
    update: XOR<InvitationUpdateWithoutUserInput, InvitationUncheckedUpdateWithoutUserInput>
    create: XOR<InvitationCreateWithoutUserInput, InvitationUncheckedCreateWithoutUserInput>
  }

  export type InvitationUpdateWithWhereUniqueWithoutUserInput = {
    where: InvitationWhereUniqueInput
    data: XOR<InvitationUpdateWithoutUserInput, InvitationUncheckedUpdateWithoutUserInput>
  }

  export type InvitationUpdateManyWithWhereWithoutUserInput = {
    where: InvitationScalarWhereInput
    data: XOR<InvitationUpdateManyMutationInput, InvitationUncheckedUpdateManyWithoutUserInput>
  }

  export type InvitationScalarWhereInput = {
    AND?: InvitationScalarWhereInput | InvitationScalarWhereInput[]
    OR?: InvitationScalarWhereInput[]
    NOT?: InvitationScalarWhereInput | InvitationScalarWhereInput[]
    id?: StringFilter<"Invitation"> | string
    organizationId?: StringFilter<"Invitation"> | string
    email?: StringFilter<"Invitation"> | string
    role?: StringNullableFilter<"Invitation"> | string | null
    status?: StringFilter<"Invitation"> | string
    expiresAt?: DateTimeFilter<"Invitation"> | Date | string
    inviterId?: StringFilter<"Invitation"> | string
  }

  export type AddressUpsertWithWhereUniqueWithoutUsersInput = {
    where: AddressWhereUniqueInput
    update: XOR<AddressUpdateWithoutUsersInput, AddressUncheckedUpdateWithoutUsersInput>
    create: XOR<AddressCreateWithoutUsersInput, AddressUncheckedCreateWithoutUsersInput>
  }

  export type AddressUpdateWithWhereUniqueWithoutUsersInput = {
    where: AddressWhereUniqueInput
    data: XOR<AddressUpdateWithoutUsersInput, AddressUncheckedUpdateWithoutUsersInput>
  }

  export type AddressUpdateManyWithWhereWithoutUsersInput = {
    where: AddressScalarWhereInput
    data: XOR<AddressUpdateManyMutationInput, AddressUncheckedUpdateManyWithoutUsersInput>
  }

  export type AddressScalarWhereInput = {
    AND?: AddressScalarWhereInput | AddressScalarWhereInput[]
    OR?: AddressScalarWhereInput[]
    NOT?: AddressScalarWhereInput | AddressScalarWhereInput[]
    id?: StringFilter<"Address"> | string
    firstname?: StringNullableFilter<"Address"> | string | null
    lastname?: StringNullableFilter<"Address"> | string | null
    phone?: StringNullableFilter<"Address"> | string | null
    addressLineOne?: StringFilter<"Address"> | string
    doorNumber?: StringNullableFilter<"Address"> | string | null
    addressLineTwo?: StringNullableFilter<"Address"> | string | null
    zipCode?: StringNullableFilter<"Address"> | string | null
    placeId?: StringNullableFilter<"Address"> | string | null
    deliveryInstructions?: StringNullableFilter<"Address"> | string | null
    city?: StringFilter<"Address"> | string
    country?: StringNullableFilter<"Address"> | string | null
    latitude?: FloatNullableFilter<"Address"> | number | null
    longitude?: FloatNullableFilter<"Address"> | number | null
    isDefault?: BoolFilter<"Address"> | boolean
    createdAt?: DateTimeFilter<"Address"> | Date | string
    createdBy?: StringNullableFilter<"Address"> | string | null
    updatedAt?: DateTimeFilter<"Address"> | Date | string
    updatedBy?: StringNullableFilter<"Address"> | string | null
    deletedAt?: DateTimeNullableFilter<"Address"> | Date | string | null
    deletedBy?: StringNullableFilter<"Address"> | string | null
  }

  export type OrderUpsertWithWhereUniqueWithoutUserInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutUserInput, OrderUncheckedUpdateWithoutUserInput>
    create: XOR<OrderCreateWithoutUserInput, OrderUncheckedCreateWithoutUserInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutUserInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutUserInput, OrderUncheckedUpdateWithoutUserInput>
  }

  export type OrderUpdateManyWithWhereWithoutUserInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutUserInput>
  }

  export type OrderScalarWhereInput = {
    AND?: OrderScalarWhereInput | OrderScalarWhereInput[]
    OR?: OrderScalarWhereInput[]
    NOT?: OrderScalarWhereInput | OrderScalarWhereInput[]
    id?: StringFilter<"Order"> | string
    organizationId?: StringFilter<"Order"> | string
    userId?: StringNullableFilter<"Order"> | string | null
    paymentId?: StringNullableFilter<"Order"> | string | null
    token?: StringFilter<"Order"> | string
    expiresAt?: DateTimeFilter<"Order"> | Date | string
    referenceId?: StringFilter<"Order"> | string
    fulfilmentMethod?: EnumOrderFulfilmentMethodNullableFilter<"Order"> | $Enums.OrderFulfilmentMethod | null
    shippingMethodId?: StringNullableFilter<"Order"> | string | null
    shippingAddressId?: StringNullableFilter<"Order"> | string | null
    dateOfExecution?: DateTimeNullableFilter<"Order"> | Date | string | null
    currency?: EnumCurrencyFilter<"Order"> | $Enums.Currency
    sourceIp?: StringNullableFilter<"Order"> | string | null
    acceptedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    readyForDispatchAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    dispatchedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    completedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    cancelledAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    deletedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    deletedBy?: StringNullableFilter<"Order"> | string | null
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
  }

  export type ReservationUpsertWithWhereUniqueWithoutUserInput = {
    where: ReservationWhereUniqueInput
    update: XOR<ReservationUpdateWithoutUserInput, ReservationUncheckedUpdateWithoutUserInput>
    create: XOR<ReservationCreateWithoutUserInput, ReservationUncheckedCreateWithoutUserInput>
  }

  export type ReservationUpdateWithWhereUniqueWithoutUserInput = {
    where: ReservationWhereUniqueInput
    data: XOR<ReservationUpdateWithoutUserInput, ReservationUncheckedUpdateWithoutUserInput>
  }

  export type ReservationUpdateManyWithWhereWithoutUserInput = {
    where: ReservationScalarWhereInput
    data: XOR<ReservationUpdateManyMutationInput, ReservationUncheckedUpdateManyWithoutUserInput>
  }

  export type ReservationScalarWhereInput = {
    AND?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
    OR?: ReservationScalarWhereInput[]
    NOT?: ReservationScalarWhereInput | ReservationScalarWhereInput[]
    id?: StringFilter<"Reservation"> | string
    firstname?: StringFilter<"Reservation"> | string
    lastname?: StringFilter<"Reservation"> | string
    userId?: StringNullableFilter<"Reservation"> | string | null
    guests?: IntFilter<"Reservation"> | number
    phone?: StringFilter<"Reservation"> | string
    date?: DateTimeFilter<"Reservation"> | Date | string
    referenceId?: StringFilter<"Reservation"> | string
    organizationId?: StringFilter<"Reservation"> | string
    createdAt?: DateTimeFilter<"Reservation"> | Date | string
    acceptedAt?: DateTimeNullableFilter<"Reservation"> | Date | string | null
    cancelledAt?: DateTimeNullableFilter<"Reservation"> | Date | string | null
    updatedAt?: DateTimeFilter<"Reservation"> | Date | string
  }

  export type UserCreateWithoutSessionsInput = {
    id: string
    name: string
    firstname: string
    lastname: string
    email: string
    emailVerified: boolean
    image?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    accounts?: AccountCreateNestedManyWithoutUserInput
    members?: MemberCreateNestedManyWithoutUserInput
    invitations?: InvitationCreateNestedManyWithoutUserInput
    shippingAddresses?: AddressCreateNestedManyWithoutUsersInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reservations?: ReservationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutSessionsInput = {
    id: string
    name: string
    firstname: string
    lastname: string
    email: string
    emailVerified: boolean
    image?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    members?: MemberUncheckedCreateNestedManyWithoutUserInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutUserInput
    shippingAddresses?: AddressUncheckedCreateNestedManyWithoutUsersInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutSessionsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
  }

  export type UserUpsertWithoutSessionsInput = {
    update: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
    create: XOR<UserCreateWithoutSessionsInput, UserUncheckedCreateWithoutSessionsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutSessionsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutSessionsInput, UserUncheckedUpdateWithoutSessionsInput>
  }

  export type UserUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUpdateManyWithoutUserNestedInput
    members?: MemberUpdateManyWithoutUserNestedInput
    invitations?: InvitationUpdateManyWithoutUserNestedInput
    shippingAddresses?: AddressUpdateManyWithoutUsersNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reservations?: ReservationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    members?: MemberUncheckedUpdateManyWithoutUserNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutUserNestedInput
    shippingAddresses?: AddressUncheckedUpdateManyWithoutUsersNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateWithoutAccountsInput = {
    id: string
    name: string
    firstname: string
    lastname: string
    email: string
    emailVerified: boolean
    image?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    sessions?: SessionCreateNestedManyWithoutUserInput
    members?: MemberCreateNestedManyWithoutUserInput
    invitations?: InvitationCreateNestedManyWithoutUserInput
    shippingAddresses?: AddressCreateNestedManyWithoutUsersInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reservations?: ReservationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutAccountsInput = {
    id: string
    name: string
    firstname: string
    lastname: string
    email: string
    emailVerified: boolean
    image?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    members?: MemberUncheckedCreateNestedManyWithoutUserInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutUserInput
    shippingAddresses?: AddressUncheckedCreateNestedManyWithoutUsersInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutAccountsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
  }

  export type UserUpsertWithoutAccountsInput = {
    update: XOR<UserUpdateWithoutAccountsInput, UserUncheckedUpdateWithoutAccountsInput>
    create: XOR<UserCreateWithoutAccountsInput, UserUncheckedCreateWithoutAccountsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutAccountsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutAccountsInput, UserUncheckedUpdateWithoutAccountsInput>
  }

  export type UserUpdateWithoutAccountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sessions?: SessionUpdateManyWithoutUserNestedInput
    members?: MemberUpdateManyWithoutUserNestedInput
    invitations?: InvitationUpdateManyWithoutUserNestedInput
    shippingAddresses?: AddressUpdateManyWithoutUsersNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reservations?: ReservationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutAccountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    members?: MemberUncheckedUpdateManyWithoutUserNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutUserNestedInput
    shippingAddresses?: AddressUncheckedUpdateManyWithoutUsersNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type OrganizationCreateWithoutMembersInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    logo?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    legalEntity?: LegalEntityCreateNestedOneWithoutOrganizationsInput
    address: AddressCreateNestedOneWithoutOrganizationsInput
    configuration: OrganizationConfigurationCreateNestedOneWithoutOrganizationsInput
    logoFile?: FileCreateNestedOneWithoutOrganizationLogoInput
    files?: FileCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationCreateNestedManyWithoutOrganizationInput
    orders?: OrderCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryCreateNestedManyWithoutOrganizationInput
    products?: ProductCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutMembersInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    legalEntityId?: string | null
    addressId: string
    configurationId: string
    logo?: string | null
    logoId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    files?: FileUncheckedCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganizationInput
    orders?: OrderUncheckedCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignUncheckedCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodUncheckedCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerUncheckedCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryUncheckedCreateNestedManyWithoutOrganizationInput
    products?: ProductUncheckedCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutMembersInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutMembersInput, OrganizationUncheckedCreateWithoutMembersInput>
  }

  export type UserCreateWithoutMembersInput = {
    id: string
    name: string
    firstname: string
    lastname: string
    email: string
    emailVerified: boolean
    image?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    sessions?: SessionCreateNestedManyWithoutUserInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    invitations?: InvitationCreateNestedManyWithoutUserInput
    shippingAddresses?: AddressCreateNestedManyWithoutUsersInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reservations?: ReservationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutMembersInput = {
    id: string
    name: string
    firstname: string
    lastname: string
    email: string
    emailVerified: boolean
    image?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutUserInput
    shippingAddresses?: AddressUncheckedCreateNestedManyWithoutUsersInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutMembersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutMembersInput, UserUncheckedCreateWithoutMembersInput>
  }

  export type OrganizationUpsertWithoutMembersInput = {
    update: XOR<OrganizationUpdateWithoutMembersInput, OrganizationUncheckedUpdateWithoutMembersInput>
    create: XOR<OrganizationCreateWithoutMembersInput, OrganizationUncheckedCreateWithoutMembersInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutMembersInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutMembersInput, OrganizationUncheckedUpdateWithoutMembersInput>
  }

  export type OrganizationUpdateWithoutMembersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntity?: LegalEntityUpdateOneWithoutOrganizationsNestedInput
    address?: AddressUpdateOneRequiredWithoutOrganizationsNestedInput
    configuration?: OrganizationConfigurationUpdateOneRequiredWithoutOrganizationsNestedInput
    logoFile?: FileUpdateOneWithoutOrganizationLogoNestedInput
    files?: FileUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUpdateManyWithoutOrganizationNestedInput
    products?: ProductUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutMembersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: StringFieldUpdateOperationsInput | string
    configurationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    logoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    files?: FileUncheckedUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUncheckedUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUncheckedUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUncheckedUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUncheckedUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
    products?: ProductUncheckedUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type UserUpsertWithoutMembersInput = {
    update: XOR<UserUpdateWithoutMembersInput, UserUncheckedUpdateWithoutMembersInput>
    create: XOR<UserCreateWithoutMembersInput, UserUncheckedCreateWithoutMembersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutMembersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutMembersInput, UserUncheckedUpdateWithoutMembersInput>
  }

  export type UserUpdateWithoutMembersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sessions?: SessionUpdateManyWithoutUserNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    invitations?: InvitationUpdateManyWithoutUserNestedInput
    shippingAddresses?: AddressUpdateManyWithoutUsersNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reservations?: ReservationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutMembersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutUserNestedInput
    shippingAddresses?: AddressUncheckedUpdateManyWithoutUsersNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type OrganizationCreateWithoutInvitationsInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    logo?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    legalEntity?: LegalEntityCreateNestedOneWithoutOrganizationsInput
    address: AddressCreateNestedOneWithoutOrganizationsInput
    configuration: OrganizationConfigurationCreateNestedOneWithoutOrganizationsInput
    logoFile?: FileCreateNestedOneWithoutOrganizationLogoInput
    files?: FileCreateNestedManyWithoutOrganizationInput
    members?: MemberCreateNestedManyWithoutOrganizationInput
    orders?: OrderCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryCreateNestedManyWithoutOrganizationInput
    products?: ProductCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutInvitationsInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    legalEntityId?: string | null
    addressId: string
    configurationId: string
    logo?: string | null
    logoId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    files?: FileUncheckedCreateNestedManyWithoutOrganizationInput
    members?: MemberUncheckedCreateNestedManyWithoutOrganizationInput
    orders?: OrderUncheckedCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignUncheckedCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodUncheckedCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerUncheckedCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryUncheckedCreateNestedManyWithoutOrganizationInput
    products?: ProductUncheckedCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutInvitationsInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutInvitationsInput, OrganizationUncheckedCreateWithoutInvitationsInput>
  }

  export type UserCreateWithoutInvitationsInput = {
    id: string
    name: string
    firstname: string
    lastname: string
    email: string
    emailVerified: boolean
    image?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    sessions?: SessionCreateNestedManyWithoutUserInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    members?: MemberCreateNestedManyWithoutUserInput
    shippingAddresses?: AddressCreateNestedManyWithoutUsersInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reservations?: ReservationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutInvitationsInput = {
    id: string
    name: string
    firstname: string
    lastname: string
    email: string
    emailVerified: boolean
    image?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    members?: MemberUncheckedCreateNestedManyWithoutUserInput
    shippingAddresses?: AddressUncheckedCreateNestedManyWithoutUsersInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutInvitationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutInvitationsInput, UserUncheckedCreateWithoutInvitationsInput>
  }

  export type OrganizationUpsertWithoutInvitationsInput = {
    update: XOR<OrganizationUpdateWithoutInvitationsInput, OrganizationUncheckedUpdateWithoutInvitationsInput>
    create: XOR<OrganizationCreateWithoutInvitationsInput, OrganizationUncheckedCreateWithoutInvitationsInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutInvitationsInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutInvitationsInput, OrganizationUncheckedUpdateWithoutInvitationsInput>
  }

  export type OrganizationUpdateWithoutInvitationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntity?: LegalEntityUpdateOneWithoutOrganizationsNestedInput
    address?: AddressUpdateOneRequiredWithoutOrganizationsNestedInput
    configuration?: OrganizationConfigurationUpdateOneRequiredWithoutOrganizationsNestedInput
    logoFile?: FileUpdateOneWithoutOrganizationLogoNestedInput
    files?: FileUpdateManyWithoutOrganizationNestedInput
    members?: MemberUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUpdateManyWithoutOrganizationNestedInput
    products?: ProductUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutInvitationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: StringFieldUpdateOperationsInput | string
    configurationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    logoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    files?: FileUncheckedUpdateManyWithoutOrganizationNestedInput
    members?: MemberUncheckedUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUncheckedUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUncheckedUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUncheckedUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUncheckedUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
    products?: ProductUncheckedUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type UserUpsertWithoutInvitationsInput = {
    update: XOR<UserUpdateWithoutInvitationsInput, UserUncheckedUpdateWithoutInvitationsInput>
    create: XOR<UserCreateWithoutInvitationsInput, UserUncheckedCreateWithoutInvitationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutInvitationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutInvitationsInput, UserUncheckedUpdateWithoutInvitationsInput>
  }

  export type UserUpdateWithoutInvitationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sessions?: SessionUpdateManyWithoutUserNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    members?: MemberUpdateManyWithoutUserNestedInput
    shippingAddresses?: AddressUpdateManyWithoutUsersNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reservations?: ReservationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutInvitationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    members?: MemberUncheckedUpdateManyWithoutUserNestedInput
    shippingAddresses?: AddressUncheckedUpdateManyWithoutUsersNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type LegalEntityCreateWithoutOrganizationsInput = {
    id?: string
    name: string
    taxId: string
    email?: string | null
    phone?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    address: AddressCreateNestedOneWithoutLegalEntityInput
  }

  export type LegalEntityUncheckedCreateWithoutOrganizationsInput = {
    id?: string
    name: string
    taxId: string
    addressId: string
    email?: string | null
    phone?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type LegalEntityCreateOrConnectWithoutOrganizationsInput = {
    where: LegalEntityWhereUniqueInput
    create: XOR<LegalEntityCreateWithoutOrganizationsInput, LegalEntityUncheckedCreateWithoutOrganizationsInput>
  }

  export type AddressCreateWithoutOrganizationsInput = {
    id?: string
    firstname?: string | null
    lastname?: string | null
    phone?: string | null
    addressLineOne: string
    doorNumber?: string | null
    addressLineTwo?: string | null
    zipCode?: string | null
    placeId?: string | null
    deliveryInstructions?: string | null
    city: string
    country?: string | null
    latitude?: number | null
    longitude?: number | null
    isDefault?: boolean
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    LegalEntity?: LegalEntityCreateNestedManyWithoutAddressInput
    users?: UserCreateNestedManyWithoutShippingAddressesInput
    orders?: OrderCreateNestedManyWithoutShippingAddressInput
  }

  export type AddressUncheckedCreateWithoutOrganizationsInput = {
    id?: string
    firstname?: string | null
    lastname?: string | null
    phone?: string | null
    addressLineOne: string
    doorNumber?: string | null
    addressLineTwo?: string | null
    zipCode?: string | null
    placeId?: string | null
    deliveryInstructions?: string | null
    city: string
    country?: string | null
    latitude?: number | null
    longitude?: number | null
    isDefault?: boolean
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    LegalEntity?: LegalEntityUncheckedCreateNestedManyWithoutAddressInput
    users?: UserUncheckedCreateNestedManyWithoutShippingAddressesInput
    orders?: OrderUncheckedCreateNestedManyWithoutShippingAddressInput
  }

  export type AddressCreateOrConnectWithoutOrganizationsInput = {
    where: AddressWhereUniqueInput
    create: XOR<AddressCreateWithoutOrganizationsInput, AddressUncheckedCreateWithoutOrganizationsInput>
  }

  export type OrganizationConfigurationCreateWithoutOrganizationsInput = {
    id?: string
    hostname?: string | null
    countriesShipping?: OrganizationConfigurationCreatecountriesShippingInput | string[]
    stripeAccountId?: string | null
    enableHostCheckout: boolean
    enableHostTracking: boolean
    isAcceptingOrders?: boolean | null
    defaultCurrency?: $Enums.Currency
    defaultLocale?: $Enums.Locale
    supportedLocales?: OrganizationConfigurationCreatesupportedLocalesInput | $Enums.Locale[]
    facebookProfile?: string | null
    instagramProfile?: string | null
    xProfile?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    openingTimes?: OpeningTimesCreateNestedOneWithoutOrganizationConfigurationInput
    closingTimes?: ClosingTimesCreateNestedOneWithoutOrganizationConfigurationInput
  }

  export type OrganizationConfigurationUncheckedCreateWithoutOrganizationsInput = {
    id?: string
    hostname?: string | null
    countriesShipping?: OrganizationConfigurationCreatecountriesShippingInput | string[]
    stripeAccountId?: string | null
    enableHostCheckout: boolean
    enableHostTracking: boolean
    isAcceptingOrders?: boolean | null
    defaultCurrency?: $Enums.Currency
    defaultLocale?: $Enums.Locale
    supportedLocales?: OrganizationConfigurationCreatesupportedLocalesInput | $Enums.Locale[]
    openingTimesId?: string | null
    closingTimesId?: string | null
    facebookProfile?: string | null
    instagramProfile?: string | null
    xProfile?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
  }

  export type OrganizationConfigurationCreateOrConnectWithoutOrganizationsInput = {
    where: OrganizationConfigurationWhereUniqueInput
    create: XOR<OrganizationConfigurationCreateWithoutOrganizationsInput, OrganizationConfigurationUncheckedCreateWithoutOrganizationsInput>
  }

  export type FileCreateWithoutOrganizationLogoInput = {
    id?: string
    mimeType?: string | null
    size?: number | null
    filename?: string | null
    url?: string | null
    status?: $Enums.FileUploadStatus
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    organization?: OrganizationCreateNestedOneWithoutFilesInput
    manufacturerLogo?: ManufacturerCreateNestedOneWithoutLogoInput
    productCategoryImage?: ProductCategoryCreateNestedOneWithoutImageInput
    productImages?: ProductCreateNestedManyWithoutImagesInput
    modifierImages?: ModifierCreateNestedManyWithoutImagesInput
    shippingMethodLogoFor?: ShippingMethodCreateNestedOneWithoutProviderLogoInput
    orderItemImages?: OrderItemCreateNestedManyWithoutImageInput
  }

  export type FileUncheckedCreateWithoutOrganizationLogoInput = {
    id?: string
    mimeType?: string | null
    size?: number | null
    filename?: string | null
    url?: string | null
    status?: $Enums.FileUploadStatus
    organizationId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    manufacturerLogo?: ManufacturerUncheckedCreateNestedOneWithoutLogoInput
    productCategoryImage?: ProductCategoryUncheckedCreateNestedOneWithoutImageInput
    productImages?: ProductUncheckedCreateNestedManyWithoutImagesInput
    modifierImages?: ModifierUncheckedCreateNestedManyWithoutImagesInput
    shippingMethodLogoFor?: ShippingMethodUncheckedCreateNestedOneWithoutProviderLogoInput
    orderItemImages?: OrderItemUncheckedCreateNestedManyWithoutImageInput
  }

  export type FileCreateOrConnectWithoutOrganizationLogoInput = {
    where: FileWhereUniqueInput
    create: XOR<FileCreateWithoutOrganizationLogoInput, FileUncheckedCreateWithoutOrganizationLogoInput>
  }

  export type FileCreateWithoutOrganizationInput = {
    id?: string
    mimeType?: string | null
    size?: number | null
    filename?: string | null
    url?: string | null
    status?: $Enums.FileUploadStatus
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    manufacturerLogo?: ManufacturerCreateNestedOneWithoutLogoInput
    productCategoryImage?: ProductCategoryCreateNestedOneWithoutImageInput
    productImages?: ProductCreateNestedManyWithoutImagesInput
    modifierImages?: ModifierCreateNestedManyWithoutImagesInput
    shippingMethodLogoFor?: ShippingMethodCreateNestedOneWithoutProviderLogoInput
    organizationLogo?: OrganizationCreateNestedOneWithoutLogoFileInput
    orderItemImages?: OrderItemCreateNestedManyWithoutImageInput
  }

  export type FileUncheckedCreateWithoutOrganizationInput = {
    id?: string
    mimeType?: string | null
    size?: number | null
    filename?: string | null
    url?: string | null
    status?: $Enums.FileUploadStatus
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    manufacturerLogo?: ManufacturerUncheckedCreateNestedOneWithoutLogoInput
    productCategoryImage?: ProductCategoryUncheckedCreateNestedOneWithoutImageInput
    productImages?: ProductUncheckedCreateNestedManyWithoutImagesInput
    modifierImages?: ModifierUncheckedCreateNestedManyWithoutImagesInput
    shippingMethodLogoFor?: ShippingMethodUncheckedCreateNestedOneWithoutProviderLogoInput
    organizationLogo?: OrganizationUncheckedCreateNestedOneWithoutLogoFileInput
    orderItemImages?: OrderItemUncheckedCreateNestedManyWithoutImageInput
  }

  export type FileCreateOrConnectWithoutOrganizationInput = {
    where: FileWhereUniqueInput
    create: XOR<FileCreateWithoutOrganizationInput, FileUncheckedCreateWithoutOrganizationInput>
  }

  export type FileCreateManyOrganizationInputEnvelope = {
    data: FileCreateManyOrganizationInput | FileCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type MemberCreateWithoutOrganizationInput = {
    id?: string
    role: string
    createdAt?: Date | string
    user: UserCreateNestedOneWithoutMembersInput
  }

  export type MemberUncheckedCreateWithoutOrganizationInput = {
    id?: string
    userId: string
    role: string
    createdAt?: Date | string
  }

  export type MemberCreateOrConnectWithoutOrganizationInput = {
    where: MemberWhereUniqueInput
    create: XOR<MemberCreateWithoutOrganizationInput, MemberUncheckedCreateWithoutOrganizationInput>
  }

  export type MemberCreateManyOrganizationInputEnvelope = {
    data: MemberCreateManyOrganizationInput | MemberCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type InvitationCreateWithoutOrganizationInput = {
    id: string
    email: string
    role?: string | null
    status: string
    expiresAt: Date | string
    user: UserCreateNestedOneWithoutInvitationsInput
  }

  export type InvitationUncheckedCreateWithoutOrganizationInput = {
    id: string
    email: string
    role?: string | null
    status: string
    expiresAt: Date | string
    inviterId: string
  }

  export type InvitationCreateOrConnectWithoutOrganizationInput = {
    where: InvitationWhereUniqueInput
    create: XOR<InvitationCreateWithoutOrganizationInput, InvitationUncheckedCreateWithoutOrganizationInput>
  }

  export type InvitationCreateManyOrganizationInputEnvelope = {
    data: InvitationCreateManyOrganizationInput | InvitationCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutOrganizationInput = {
    id?: string
    token: string
    expiresAt?: Date | string
    referenceId: string
    fulfilmentMethod?: $Enums.OrderFulfilmentMethod | null
    dateOfExecution?: Date | string | null
    currency?: $Enums.Currency
    sourceIp?: string | null
    acceptedAt?: Date | string | null
    readyForDispatchAt?: Date | string | null
    dispatchedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    user?: UserCreateNestedOneWithoutOrdersInput
    payment?: PaymentCreateNestedOneWithoutOrderInput
    shippingMethod?: ShippingMethodCreateNestedOneWithoutOrdersInput
    shippingAddress?: AddressCreateNestedOneWithoutOrdersInput
    items?: OrderItemCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutOrganizationInput = {
    id?: string
    userId?: string | null
    paymentId?: string | null
    token: string
    expiresAt?: Date | string
    referenceId: string
    fulfilmentMethod?: $Enums.OrderFulfilmentMethod | null
    shippingMethodId?: string | null
    shippingAddressId?: string | null
    dateOfExecution?: Date | string | null
    currency?: $Enums.Currency
    sourceIp?: string | null
    acceptedAt?: Date | string | null
    readyForDispatchAt?: Date | string | null
    dispatchedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutOrganizationInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutOrganizationInput, OrderUncheckedCreateWithoutOrganizationInput>
  }

  export type OrderCreateManyOrganizationInputEnvelope = {
    data: OrderCreateManyOrganizationInput | OrderCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type CampaignCreateWithoutOrganizationInput = {
    id?: string
    title: string
    type: $Enums.CampaignType
    validFrom: Date | string
    validTo: Date | string
    amount?: number | null
    percentage?: number | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CampaignUncheckedCreateWithoutOrganizationInput = {
    id?: string
    title: string
    type: $Enums.CampaignType
    validFrom: Date | string
    validTo: Date | string
    amount?: number | null
    percentage?: number | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CampaignCreateOrConnectWithoutOrganizationInput = {
    where: CampaignWhereUniqueInput
    create: XOR<CampaignCreateWithoutOrganizationInput, CampaignUncheckedCreateWithoutOrganizationInput>
  }

  export type CampaignCreateManyOrganizationInputEnvelope = {
    data: CampaignCreateManyOrganizationInput | CampaignCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type ShippingMethodCreateWithoutOrganizationInput = {
    id?: string
    title: string
    providerName: string
    requireDateOfDelivery?: boolean | null
    archivedAt?: Date | string | null
    archivedBy?: string | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    providerLogo?: FileCreateNestedOneWithoutShippingMethodLogoForInput
    shippingZones?: ShippingZoneCreateNestedManyWithoutShippingMethodInput
    orders?: OrderCreateNestedManyWithoutShippingMethodInput
  }

  export type ShippingMethodUncheckedCreateWithoutOrganizationInput = {
    id?: string
    title: string
    providerName: string
    providerLogoId?: string | null
    requireDateOfDelivery?: boolean | null
    archivedAt?: Date | string | null
    archivedBy?: string | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    shippingZones?: ShippingZoneUncheckedCreateNestedManyWithoutShippingMethodInput
    orders?: OrderUncheckedCreateNestedManyWithoutShippingMethodInput
  }

  export type ShippingMethodCreateOrConnectWithoutOrganizationInput = {
    where: ShippingMethodWhereUniqueInput
    create: XOR<ShippingMethodCreateWithoutOrganizationInput, ShippingMethodUncheckedCreateWithoutOrganizationInput>
  }

  export type ShippingMethodCreateManyOrganizationInputEnvelope = {
    data: ShippingMethodCreateManyOrganizationInput | ShippingMethodCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type ManufacturerCreateWithoutOrganizationInput = {
    id?: string
    name: string
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    logo?: FileCreateNestedOneWithoutManufacturerLogoInput
    products?: ProductCreateNestedManyWithoutManufacturerInput
    translations?: ManufacturerTranslationCreateNestedManyWithoutManufacturerInput
  }

  export type ManufacturerUncheckedCreateWithoutOrganizationInput = {
    id?: string
    name: string
    logoId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    products?: ProductUncheckedCreateNestedManyWithoutManufacturerInput
    translations?: ManufacturerTranslationUncheckedCreateNestedManyWithoutManufacturerInput
  }

  export type ManufacturerCreateOrConnectWithoutOrganizationInput = {
    where: ManufacturerWhereUniqueInput
    create: XOR<ManufacturerCreateWithoutOrganizationInput, ManufacturerUncheckedCreateWithoutOrganizationInput>
  }

  export type ManufacturerCreateManyOrganizationInputEnvelope = {
    data: ManufacturerCreateManyOrganizationInput | ManufacturerCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type ProductCategoryCreateWithoutOrganizationInput = {
    id?: string
    slug?: string | null
    priority?: number | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    image?: FileCreateNestedOneWithoutProductCategoryImageInput
    translations?: ProductCategoryTranslationCreateNestedManyWithoutProductCategoryInput
    products?: ProductCreateNestedManyWithoutCategoriesInput
  }

  export type ProductCategoryUncheckedCreateWithoutOrganizationInput = {
    id?: string
    slug?: string | null
    priority?: number | null
    imageId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    translations?: ProductCategoryTranslationUncheckedCreateNestedManyWithoutProductCategoryInput
    products?: ProductUncheckedCreateNestedManyWithoutCategoriesInput
  }

  export type ProductCategoryCreateOrConnectWithoutOrganizationInput = {
    where: ProductCategoryWhereUniqueInput
    create: XOR<ProductCategoryCreateWithoutOrganizationInput, ProductCategoryUncheckedCreateWithoutOrganizationInput>
  }

  export type ProductCategoryCreateManyOrganizationInputEnvelope = {
    data: ProductCategoryCreateManyOrganizationInput | ProductCategoryCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutOrganizationInput = {
    id?: string
    content?: string | null
    slug?: string | null
    sku?: string | null
    basePrice: number
    discountedBasePrice?: number | null
    currency: string
    tags?: ProductCreatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: Date | string | null
    publishedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    images?: FileCreateNestedManyWithoutProductImagesInput
    manufacturer?: ManufacturerCreateNestedOneWithoutProductsInput
    categories?: ProductCategoryCreateNestedManyWithoutProductsInput
    modifierGroups?: ModifierGroupCreateNestedManyWithoutProductsInput
    translations?: ProductTranslationCreateNestedManyWithoutProductInput
    snapshots?: ProductSnapshotCreateNestedManyWithoutProductInput
    latestSnapshot?: ProductSnapshotCreateNestedOneWithoutLatestForProductInput
  }

  export type ProductUncheckedCreateWithoutOrganizationInput = {
    id?: string
    content?: string | null
    slug?: string | null
    sku?: string | null
    basePrice: number
    discountedBasePrice?: number | null
    currency: string
    manufacturerId?: string | null
    tags?: ProductCreatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: Date | string | null
    publishedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    latestSnapshotId?: string | null
    images?: FileUncheckedCreateNestedManyWithoutProductImagesInput
    categories?: ProductCategoryUncheckedCreateNestedManyWithoutProductsInput
    modifierGroups?: ModifierGroupUncheckedCreateNestedManyWithoutProductsInput
    translations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
    snapshots?: ProductSnapshotUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutOrganizationInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutOrganizationInput, ProductUncheckedCreateWithoutOrganizationInput>
  }

  export type ProductCreateManyOrganizationInputEnvelope = {
    data: ProductCreateManyOrganizationInput | ProductCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type ReservationCreateWithoutOrganizationInput = {
    id?: string
    firstname: string
    lastname: string
    guests: number
    phone: string
    date: Date | string
    referenceId: string
    createdAt?: Date | string
    acceptedAt?: Date | string | null
    cancelledAt?: Date | string | null
    updatedAt?: Date | string
    user?: UserCreateNestedOneWithoutReservationsInput
  }

  export type ReservationUncheckedCreateWithoutOrganizationInput = {
    id?: string
    firstname: string
    lastname: string
    userId?: string | null
    guests: number
    phone: string
    date: Date | string
    referenceId: string
    createdAt?: Date | string
    acceptedAt?: Date | string | null
    cancelledAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type ReservationCreateOrConnectWithoutOrganizationInput = {
    where: ReservationWhereUniqueInput
    create: XOR<ReservationCreateWithoutOrganizationInput, ReservationUncheckedCreateWithoutOrganizationInput>
  }

  export type ReservationCreateManyOrganizationInputEnvelope = {
    data: ReservationCreateManyOrganizationInput | ReservationCreateManyOrganizationInput[]
    skipDuplicates?: boolean
  }

  export type LegalEntityUpsertWithoutOrganizationsInput = {
    update: XOR<LegalEntityUpdateWithoutOrganizationsInput, LegalEntityUncheckedUpdateWithoutOrganizationsInput>
    create: XOR<LegalEntityCreateWithoutOrganizationsInput, LegalEntityUncheckedCreateWithoutOrganizationsInput>
    where?: LegalEntityWhereInput
  }

  export type LegalEntityUpdateToOneWithWhereWithoutOrganizationsInput = {
    where?: LegalEntityWhereInput
    data: XOR<LegalEntityUpdateWithoutOrganizationsInput, LegalEntityUncheckedUpdateWithoutOrganizationsInput>
  }

  export type LegalEntityUpdateWithoutOrganizationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    address?: AddressUpdateOneRequiredWithoutLegalEntityNestedInput
  }

  export type LegalEntityUncheckedUpdateWithoutOrganizationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    addressId?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AddressUpsertWithoutOrganizationsInput = {
    update: XOR<AddressUpdateWithoutOrganizationsInput, AddressUncheckedUpdateWithoutOrganizationsInput>
    create: XOR<AddressCreateWithoutOrganizationsInput, AddressUncheckedCreateWithoutOrganizationsInput>
    where?: AddressWhereInput
  }

  export type AddressUpdateToOneWithWhereWithoutOrganizationsInput = {
    where?: AddressWhereInput
    data: XOR<AddressUpdateWithoutOrganizationsInput, AddressUncheckedUpdateWithoutOrganizationsInput>
  }

  export type AddressUpdateWithoutOrganizationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    addressLineOne?: StringFieldUpdateOperationsInput | string
    doorNumber?: NullableStringFieldUpdateOperationsInput | string | null
    addressLineTwo?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    placeId?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    LegalEntity?: LegalEntityUpdateManyWithoutAddressNestedInput
    users?: UserUpdateManyWithoutShippingAddressesNestedInput
    orders?: OrderUpdateManyWithoutShippingAddressNestedInput
  }

  export type AddressUncheckedUpdateWithoutOrganizationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    addressLineOne?: StringFieldUpdateOperationsInput | string
    doorNumber?: NullableStringFieldUpdateOperationsInput | string | null
    addressLineTwo?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    placeId?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    LegalEntity?: LegalEntityUncheckedUpdateManyWithoutAddressNestedInput
    users?: UserUncheckedUpdateManyWithoutShippingAddressesNestedInput
    orders?: OrderUncheckedUpdateManyWithoutShippingAddressNestedInput
  }

  export type OrganizationConfigurationUpsertWithoutOrganizationsInput = {
    update: XOR<OrganizationConfigurationUpdateWithoutOrganizationsInput, OrganizationConfigurationUncheckedUpdateWithoutOrganizationsInput>
    create: XOR<OrganizationConfigurationCreateWithoutOrganizationsInput, OrganizationConfigurationUncheckedCreateWithoutOrganizationsInput>
    where?: OrganizationConfigurationWhereInput
  }

  export type OrganizationConfigurationUpdateToOneWithWhereWithoutOrganizationsInput = {
    where?: OrganizationConfigurationWhereInput
    data: XOR<OrganizationConfigurationUpdateWithoutOrganizationsInput, OrganizationConfigurationUncheckedUpdateWithoutOrganizationsInput>
  }

  export type OrganizationConfigurationUpdateWithoutOrganizationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    hostname?: NullableStringFieldUpdateOperationsInput | string | null
    countriesShipping?: OrganizationConfigurationUpdatecountriesShippingInput | string[]
    stripeAccountId?: NullableStringFieldUpdateOperationsInput | string | null
    enableHostCheckout?: BoolFieldUpdateOperationsInput | boolean
    enableHostTracking?: BoolFieldUpdateOperationsInput | boolean
    isAcceptingOrders?: NullableBoolFieldUpdateOperationsInput | boolean | null
    defaultCurrency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    defaultLocale?: EnumLocaleFieldUpdateOperationsInput | $Enums.Locale
    supportedLocales?: OrganizationConfigurationUpdatesupportedLocalesInput | $Enums.Locale[]
    facebookProfile?: NullableStringFieldUpdateOperationsInput | string | null
    instagramProfile?: NullableStringFieldUpdateOperationsInput | string | null
    xProfile?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    openingTimes?: OpeningTimesUpdateOneWithoutOrganizationConfigurationNestedInput
    closingTimes?: ClosingTimesUpdateOneWithoutOrganizationConfigurationNestedInput
  }

  export type OrganizationConfigurationUncheckedUpdateWithoutOrganizationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    hostname?: NullableStringFieldUpdateOperationsInput | string | null
    countriesShipping?: OrganizationConfigurationUpdatecountriesShippingInput | string[]
    stripeAccountId?: NullableStringFieldUpdateOperationsInput | string | null
    enableHostCheckout?: BoolFieldUpdateOperationsInput | boolean
    enableHostTracking?: BoolFieldUpdateOperationsInput | boolean
    isAcceptingOrders?: NullableBoolFieldUpdateOperationsInput | boolean | null
    defaultCurrency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    defaultLocale?: EnumLocaleFieldUpdateOperationsInput | $Enums.Locale
    supportedLocales?: OrganizationConfigurationUpdatesupportedLocalesInput | $Enums.Locale[]
    openingTimesId?: NullableStringFieldUpdateOperationsInput | string | null
    closingTimesId?: NullableStringFieldUpdateOperationsInput | string | null
    facebookProfile?: NullableStringFieldUpdateOperationsInput | string | null
    instagramProfile?: NullableStringFieldUpdateOperationsInput | string | null
    xProfile?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FileUpsertWithoutOrganizationLogoInput = {
    update: XOR<FileUpdateWithoutOrganizationLogoInput, FileUncheckedUpdateWithoutOrganizationLogoInput>
    create: XOR<FileCreateWithoutOrganizationLogoInput, FileUncheckedCreateWithoutOrganizationLogoInput>
    where?: FileWhereInput
  }

  export type FileUpdateToOneWithWhereWithoutOrganizationLogoInput = {
    where?: FileWhereInput
    data: XOR<FileUpdateWithoutOrganizationLogoInput, FileUncheckedUpdateWithoutOrganizationLogoInput>
  }

  export type FileUpdateWithoutOrganizationLogoInput = {
    id?: StringFieldUpdateOperationsInput | string
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumFileUploadStatusFieldUpdateOperationsInput | $Enums.FileUploadStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: OrganizationUpdateOneWithoutFilesNestedInput
    manufacturerLogo?: ManufacturerUpdateOneWithoutLogoNestedInput
    productCategoryImage?: ProductCategoryUpdateOneWithoutImageNestedInput
    productImages?: ProductUpdateManyWithoutImagesNestedInput
    modifierImages?: ModifierUpdateManyWithoutImagesNestedInput
    shippingMethodLogoFor?: ShippingMethodUpdateOneWithoutProviderLogoNestedInput
    orderItemImages?: OrderItemUpdateManyWithoutImageNestedInput
  }

  export type FileUncheckedUpdateWithoutOrganizationLogoInput = {
    id?: StringFieldUpdateOperationsInput | string
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumFileUploadStatusFieldUpdateOperationsInput | $Enums.FileUploadStatus
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerLogo?: ManufacturerUncheckedUpdateOneWithoutLogoNestedInput
    productCategoryImage?: ProductCategoryUncheckedUpdateOneWithoutImageNestedInput
    productImages?: ProductUncheckedUpdateManyWithoutImagesNestedInput
    modifierImages?: ModifierUncheckedUpdateManyWithoutImagesNestedInput
    shippingMethodLogoFor?: ShippingMethodUncheckedUpdateOneWithoutProviderLogoNestedInput
    orderItemImages?: OrderItemUncheckedUpdateManyWithoutImageNestedInput
  }

  export type FileUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: FileWhereUniqueInput
    update: XOR<FileUpdateWithoutOrganizationInput, FileUncheckedUpdateWithoutOrganizationInput>
    create: XOR<FileCreateWithoutOrganizationInput, FileUncheckedCreateWithoutOrganizationInput>
  }

  export type FileUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: FileWhereUniqueInput
    data: XOR<FileUpdateWithoutOrganizationInput, FileUncheckedUpdateWithoutOrganizationInput>
  }

  export type FileUpdateManyWithWhereWithoutOrganizationInput = {
    where: FileScalarWhereInput
    data: XOR<FileUpdateManyMutationInput, FileUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type FileScalarWhereInput = {
    AND?: FileScalarWhereInput | FileScalarWhereInput[]
    OR?: FileScalarWhereInput[]
    NOT?: FileScalarWhereInput | FileScalarWhereInput[]
    id?: StringFilter<"File"> | string
    mimeType?: StringNullableFilter<"File"> | string | null
    size?: IntNullableFilter<"File"> | number | null
    filename?: StringNullableFilter<"File"> | string | null
    url?: StringNullableFilter<"File"> | string | null
    status?: EnumFileUploadStatusFilter<"File"> | $Enums.FileUploadStatus
    organizationId?: StringNullableFilter<"File"> | string | null
    createdAt?: DateTimeFilter<"File"> | Date | string
    createdBy?: StringNullableFilter<"File"> | string | null
    updatedAt?: DateTimeFilter<"File"> | Date | string
    updatedBy?: StringNullableFilter<"File"> | string | null
    deletedAt?: DateTimeNullableFilter<"File"> | Date | string | null
    deletedBy?: StringNullableFilter<"File"> | string | null
  }

  export type MemberUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: MemberWhereUniqueInput
    update: XOR<MemberUpdateWithoutOrganizationInput, MemberUncheckedUpdateWithoutOrganizationInput>
    create: XOR<MemberCreateWithoutOrganizationInput, MemberUncheckedCreateWithoutOrganizationInput>
  }

  export type MemberUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: MemberWhereUniqueInput
    data: XOR<MemberUpdateWithoutOrganizationInput, MemberUncheckedUpdateWithoutOrganizationInput>
  }

  export type MemberUpdateManyWithWhereWithoutOrganizationInput = {
    where: MemberScalarWhereInput
    data: XOR<MemberUpdateManyMutationInput, MemberUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type InvitationUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: InvitationWhereUniqueInput
    update: XOR<InvitationUpdateWithoutOrganizationInput, InvitationUncheckedUpdateWithoutOrganizationInput>
    create: XOR<InvitationCreateWithoutOrganizationInput, InvitationUncheckedCreateWithoutOrganizationInput>
  }

  export type InvitationUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: InvitationWhereUniqueInput
    data: XOR<InvitationUpdateWithoutOrganizationInput, InvitationUncheckedUpdateWithoutOrganizationInput>
  }

  export type InvitationUpdateManyWithWhereWithoutOrganizationInput = {
    where: InvitationScalarWhereInput
    data: XOR<InvitationUpdateManyMutationInput, InvitationUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type OrderUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutOrganizationInput, OrderUncheckedUpdateWithoutOrganizationInput>
    create: XOR<OrderCreateWithoutOrganizationInput, OrderUncheckedCreateWithoutOrganizationInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutOrganizationInput, OrderUncheckedUpdateWithoutOrganizationInput>
  }

  export type OrderUpdateManyWithWhereWithoutOrganizationInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type CampaignUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: CampaignWhereUniqueInput
    update: XOR<CampaignUpdateWithoutOrganizationInput, CampaignUncheckedUpdateWithoutOrganizationInput>
    create: XOR<CampaignCreateWithoutOrganizationInput, CampaignUncheckedCreateWithoutOrganizationInput>
  }

  export type CampaignUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: CampaignWhereUniqueInput
    data: XOR<CampaignUpdateWithoutOrganizationInput, CampaignUncheckedUpdateWithoutOrganizationInput>
  }

  export type CampaignUpdateManyWithWhereWithoutOrganizationInput = {
    where: CampaignScalarWhereInput
    data: XOR<CampaignUpdateManyMutationInput, CampaignUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type CampaignScalarWhereInput = {
    AND?: CampaignScalarWhereInput | CampaignScalarWhereInput[]
    OR?: CampaignScalarWhereInput[]
    NOT?: CampaignScalarWhereInput | CampaignScalarWhereInput[]
    id?: StringFilter<"Campaign"> | string
    title?: StringFilter<"Campaign"> | string
    type?: EnumCampaignTypeFilter<"Campaign"> | $Enums.CampaignType
    validFrom?: DateTimeFilter<"Campaign"> | Date | string
    validTo?: DateTimeFilter<"Campaign"> | Date | string
    organizationId?: StringFilter<"Campaign"> | string
    amount?: FloatNullableFilter<"Campaign"> | number | null
    percentage?: FloatNullableFilter<"Campaign"> | number | null
    publishedAt?: DateTimeNullableFilter<"Campaign"> | Date | string | null
    publishedBy?: StringNullableFilter<"Campaign"> | string | null
    createdAt?: DateTimeFilter<"Campaign"> | Date | string
    updatedAt?: DateTimeFilter<"Campaign"> | Date | string
  }

  export type ShippingMethodUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: ShippingMethodWhereUniqueInput
    update: XOR<ShippingMethodUpdateWithoutOrganizationInput, ShippingMethodUncheckedUpdateWithoutOrganizationInput>
    create: XOR<ShippingMethodCreateWithoutOrganizationInput, ShippingMethodUncheckedCreateWithoutOrganizationInput>
  }

  export type ShippingMethodUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: ShippingMethodWhereUniqueInput
    data: XOR<ShippingMethodUpdateWithoutOrganizationInput, ShippingMethodUncheckedUpdateWithoutOrganizationInput>
  }

  export type ShippingMethodUpdateManyWithWhereWithoutOrganizationInput = {
    where: ShippingMethodScalarWhereInput
    data: XOR<ShippingMethodUpdateManyMutationInput, ShippingMethodUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type ShippingMethodScalarWhereInput = {
    AND?: ShippingMethodScalarWhereInput | ShippingMethodScalarWhereInput[]
    OR?: ShippingMethodScalarWhereInput[]
    NOT?: ShippingMethodScalarWhereInput | ShippingMethodScalarWhereInput[]
    id?: StringFilter<"ShippingMethod"> | string
    title?: StringFilter<"ShippingMethod"> | string
    providerName?: StringFilter<"ShippingMethod"> | string
    providerLogoId?: StringNullableFilter<"ShippingMethod"> | string | null
    requireDateOfDelivery?: BoolNullableFilter<"ShippingMethod"> | boolean | null
    organizationId?: StringFilter<"ShippingMethod"> | string
    archivedAt?: DateTimeNullableFilter<"ShippingMethod"> | Date | string | null
    archivedBy?: StringNullableFilter<"ShippingMethod"> | string | null
    publishedAt?: DateTimeNullableFilter<"ShippingMethod"> | Date | string | null
    publishedBy?: StringNullableFilter<"ShippingMethod"> | string | null
    createdAt?: DateTimeFilter<"ShippingMethod"> | Date | string
    createdBy?: StringNullableFilter<"ShippingMethod"> | string | null
    updatedAt?: DateTimeFilter<"ShippingMethod"> | Date | string
    updatedBy?: StringNullableFilter<"ShippingMethod"> | string | null
  }

  export type ManufacturerUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: ManufacturerWhereUniqueInput
    update: XOR<ManufacturerUpdateWithoutOrganizationInput, ManufacturerUncheckedUpdateWithoutOrganizationInput>
    create: XOR<ManufacturerCreateWithoutOrganizationInput, ManufacturerUncheckedCreateWithoutOrganizationInput>
  }

  export type ManufacturerUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: ManufacturerWhereUniqueInput
    data: XOR<ManufacturerUpdateWithoutOrganizationInput, ManufacturerUncheckedUpdateWithoutOrganizationInput>
  }

  export type ManufacturerUpdateManyWithWhereWithoutOrganizationInput = {
    where: ManufacturerScalarWhereInput
    data: XOR<ManufacturerUpdateManyMutationInput, ManufacturerUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type ManufacturerScalarWhereInput = {
    AND?: ManufacturerScalarWhereInput | ManufacturerScalarWhereInput[]
    OR?: ManufacturerScalarWhereInput[]
    NOT?: ManufacturerScalarWhereInput | ManufacturerScalarWhereInput[]
    id?: StringFilter<"Manufacturer"> | string
    name?: StringFilter<"Manufacturer"> | string
    logoId?: StringNullableFilter<"Manufacturer"> | string | null
    organizationId?: StringFilter<"Manufacturer"> | string
    createdAt?: DateTimeFilter<"Manufacturer"> | Date | string
    createdBy?: StringNullableFilter<"Manufacturer"> | string | null
    updatedAt?: DateTimeFilter<"Manufacturer"> | Date | string
    updatedBy?: StringNullableFilter<"Manufacturer"> | string | null
    deletedAt?: DateTimeNullableFilter<"Manufacturer"> | Date | string | null
    deletedBy?: StringNullableFilter<"Manufacturer"> | string | null
  }

  export type ProductCategoryUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: ProductCategoryWhereUniqueInput
    update: XOR<ProductCategoryUpdateWithoutOrganizationInput, ProductCategoryUncheckedUpdateWithoutOrganizationInput>
    create: XOR<ProductCategoryCreateWithoutOrganizationInput, ProductCategoryUncheckedCreateWithoutOrganizationInput>
  }

  export type ProductCategoryUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: ProductCategoryWhereUniqueInput
    data: XOR<ProductCategoryUpdateWithoutOrganizationInput, ProductCategoryUncheckedUpdateWithoutOrganizationInput>
  }

  export type ProductCategoryUpdateManyWithWhereWithoutOrganizationInput = {
    where: ProductCategoryScalarWhereInput
    data: XOR<ProductCategoryUpdateManyMutationInput, ProductCategoryUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type ProductCategoryScalarWhereInput = {
    AND?: ProductCategoryScalarWhereInput | ProductCategoryScalarWhereInput[]
    OR?: ProductCategoryScalarWhereInput[]
    NOT?: ProductCategoryScalarWhereInput | ProductCategoryScalarWhereInput[]
    id?: StringFilter<"ProductCategory"> | string
    slug?: StringNullableFilter<"ProductCategory"> | string | null
    organizationId?: StringFilter<"ProductCategory"> | string
    priority?: IntNullableFilter<"ProductCategory"> | number | null
    imageId?: StringNullableFilter<"ProductCategory"> | string | null
    createdAt?: DateTimeFilter<"ProductCategory"> | Date | string
    createdBy?: StringNullableFilter<"ProductCategory"> | string | null
    updatedAt?: DateTimeFilter<"ProductCategory"> | Date | string
    updatedBy?: StringNullableFilter<"ProductCategory"> | string | null
    deletedAt?: DateTimeNullableFilter<"ProductCategory"> | Date | string | null
    deletedBy?: StringNullableFilter<"ProductCategory"> | string | null
    publishedAt?: DateTimeNullableFilter<"ProductCategory"> | Date | string | null
    publishedBy?: StringNullableFilter<"ProductCategory"> | string | null
  }

  export type ProductUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutOrganizationInput, ProductUncheckedUpdateWithoutOrganizationInput>
    create: XOR<ProductCreateWithoutOrganizationInput, ProductUncheckedCreateWithoutOrganizationInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutOrganizationInput, ProductUncheckedUpdateWithoutOrganizationInput>
  }

  export type ProductUpdateManyWithWhereWithoutOrganizationInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type ProductScalarWhereInput = {
    AND?: ProductScalarWhereInput | ProductScalarWhereInput[]
    OR?: ProductScalarWhereInput[]
    NOT?: ProductScalarWhereInput | ProductScalarWhereInput[]
    id?: StringFilter<"Product"> | string
    content?: StringNullableFilter<"Product"> | string | null
    slug?: StringNullableFilter<"Product"> | string | null
    sku?: StringNullableFilter<"Product"> | string | null
    basePrice?: FloatFilter<"Product"> | number
    discountedBasePrice?: FloatNullableFilter<"Product"> | number | null
    currency?: StringFilter<"Product"> | string
    organizationId?: StringFilter<"Product"> | string
    manufacturerId?: StringNullableFilter<"Product"> | string | null
    tags?: StringNullableListFilter<"Product">
    metadata?: JsonNullableFilter<"Product">
    publishedAt?: DateTimeNullableFilter<"Product"> | Date | string | null
    publishedBy?: StringNullableFilter<"Product"> | string | null
    deletedAt?: DateTimeNullableFilter<"Product"> | Date | string | null
    deletedBy?: StringNullableFilter<"Product"> | string | null
    createdAt?: DateTimeFilter<"Product"> | Date | string
    createdBy?: StringNullableFilter<"Product"> | string | null
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    updatedBy?: StringNullableFilter<"Product"> | string | null
    latestSnapshotId?: StringNullableFilter<"Product"> | string | null
  }

  export type ReservationUpsertWithWhereUniqueWithoutOrganizationInput = {
    where: ReservationWhereUniqueInput
    update: XOR<ReservationUpdateWithoutOrganizationInput, ReservationUncheckedUpdateWithoutOrganizationInput>
    create: XOR<ReservationCreateWithoutOrganizationInput, ReservationUncheckedCreateWithoutOrganizationInput>
  }

  export type ReservationUpdateWithWhereUniqueWithoutOrganizationInput = {
    where: ReservationWhereUniqueInput
    data: XOR<ReservationUpdateWithoutOrganizationInput, ReservationUncheckedUpdateWithoutOrganizationInput>
  }

  export type ReservationUpdateManyWithWhereWithoutOrganizationInput = {
    where: ReservationScalarWhereInput
    data: XOR<ReservationUpdateManyMutationInput, ReservationUncheckedUpdateManyWithoutOrganizationInput>
  }

  export type OrganizationConfigurationCreateWithoutOpeningTimesInput = {
    id?: string
    hostname?: string | null
    countriesShipping?: OrganizationConfigurationCreatecountriesShippingInput | string[]
    stripeAccountId?: string | null
    enableHostCheckout: boolean
    enableHostTracking: boolean
    isAcceptingOrders?: boolean | null
    defaultCurrency?: $Enums.Currency
    defaultLocale?: $Enums.Locale
    supportedLocales?: OrganizationConfigurationCreatesupportedLocalesInput | $Enums.Locale[]
    facebookProfile?: string | null
    instagramProfile?: string | null
    xProfile?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    closingTimes?: ClosingTimesCreateNestedOneWithoutOrganizationConfigurationInput
    organizations?: OrganizationCreateNestedManyWithoutConfigurationInput
  }

  export type OrganizationConfigurationUncheckedCreateWithoutOpeningTimesInput = {
    id?: string
    hostname?: string | null
    countriesShipping?: OrganizationConfigurationCreatecountriesShippingInput | string[]
    stripeAccountId?: string | null
    enableHostCheckout: boolean
    enableHostTracking: boolean
    isAcceptingOrders?: boolean | null
    defaultCurrency?: $Enums.Currency
    defaultLocale?: $Enums.Locale
    supportedLocales?: OrganizationConfigurationCreatesupportedLocalesInput | $Enums.Locale[]
    closingTimesId?: string | null
    facebookProfile?: string | null
    instagramProfile?: string | null
    xProfile?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    organizations?: OrganizationUncheckedCreateNestedManyWithoutConfigurationInput
  }

  export type OrganizationConfigurationCreateOrConnectWithoutOpeningTimesInput = {
    where: OrganizationConfigurationWhereUniqueInput
    create: XOR<OrganizationConfigurationCreateWithoutOpeningTimesInput, OrganizationConfigurationUncheckedCreateWithoutOpeningTimesInput>
  }

  export type OrganizationConfigurationUpsertWithoutOpeningTimesInput = {
    update: XOR<OrganizationConfigurationUpdateWithoutOpeningTimesInput, OrganizationConfigurationUncheckedUpdateWithoutOpeningTimesInput>
    create: XOR<OrganizationConfigurationCreateWithoutOpeningTimesInput, OrganizationConfigurationUncheckedCreateWithoutOpeningTimesInput>
    where?: OrganizationConfigurationWhereInput
  }

  export type OrganizationConfigurationUpdateToOneWithWhereWithoutOpeningTimesInput = {
    where?: OrganizationConfigurationWhereInput
    data: XOR<OrganizationConfigurationUpdateWithoutOpeningTimesInput, OrganizationConfigurationUncheckedUpdateWithoutOpeningTimesInput>
  }

  export type OrganizationConfigurationUpdateWithoutOpeningTimesInput = {
    id?: StringFieldUpdateOperationsInput | string
    hostname?: NullableStringFieldUpdateOperationsInput | string | null
    countriesShipping?: OrganizationConfigurationUpdatecountriesShippingInput | string[]
    stripeAccountId?: NullableStringFieldUpdateOperationsInput | string | null
    enableHostCheckout?: BoolFieldUpdateOperationsInput | boolean
    enableHostTracking?: BoolFieldUpdateOperationsInput | boolean
    isAcceptingOrders?: NullableBoolFieldUpdateOperationsInput | boolean | null
    defaultCurrency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    defaultLocale?: EnumLocaleFieldUpdateOperationsInput | $Enums.Locale
    supportedLocales?: OrganizationConfigurationUpdatesupportedLocalesInput | $Enums.Locale[]
    facebookProfile?: NullableStringFieldUpdateOperationsInput | string | null
    instagramProfile?: NullableStringFieldUpdateOperationsInput | string | null
    xProfile?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    closingTimes?: ClosingTimesUpdateOneWithoutOrganizationConfigurationNestedInput
    organizations?: OrganizationUpdateManyWithoutConfigurationNestedInput
  }

  export type OrganizationConfigurationUncheckedUpdateWithoutOpeningTimesInput = {
    id?: StringFieldUpdateOperationsInput | string
    hostname?: NullableStringFieldUpdateOperationsInput | string | null
    countriesShipping?: OrganizationConfigurationUpdatecountriesShippingInput | string[]
    stripeAccountId?: NullableStringFieldUpdateOperationsInput | string | null
    enableHostCheckout?: BoolFieldUpdateOperationsInput | boolean
    enableHostTracking?: BoolFieldUpdateOperationsInput | boolean
    isAcceptingOrders?: NullableBoolFieldUpdateOperationsInput | boolean | null
    defaultCurrency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    defaultLocale?: EnumLocaleFieldUpdateOperationsInput | $Enums.Locale
    supportedLocales?: OrganizationConfigurationUpdatesupportedLocalesInput | $Enums.Locale[]
    closingTimesId?: NullableStringFieldUpdateOperationsInput | string | null
    facebookProfile?: NullableStringFieldUpdateOperationsInput | string | null
    instagramProfile?: NullableStringFieldUpdateOperationsInput | string | null
    xProfile?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organizations?: OrganizationUncheckedUpdateManyWithoutConfigurationNestedInput
  }

  export type OrganizationConfigurationCreateWithoutClosingTimesInput = {
    id?: string
    hostname?: string | null
    countriesShipping?: OrganizationConfigurationCreatecountriesShippingInput | string[]
    stripeAccountId?: string | null
    enableHostCheckout: boolean
    enableHostTracking: boolean
    isAcceptingOrders?: boolean | null
    defaultCurrency?: $Enums.Currency
    defaultLocale?: $Enums.Locale
    supportedLocales?: OrganizationConfigurationCreatesupportedLocalesInput | $Enums.Locale[]
    facebookProfile?: string | null
    instagramProfile?: string | null
    xProfile?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    openingTimes?: OpeningTimesCreateNestedOneWithoutOrganizationConfigurationInput
    organizations?: OrganizationCreateNestedManyWithoutConfigurationInput
  }

  export type OrganizationConfigurationUncheckedCreateWithoutClosingTimesInput = {
    id?: string
    hostname?: string | null
    countriesShipping?: OrganizationConfigurationCreatecountriesShippingInput | string[]
    stripeAccountId?: string | null
    enableHostCheckout: boolean
    enableHostTracking: boolean
    isAcceptingOrders?: boolean | null
    defaultCurrency?: $Enums.Currency
    defaultLocale?: $Enums.Locale
    supportedLocales?: OrganizationConfigurationCreatesupportedLocalesInput | $Enums.Locale[]
    openingTimesId?: string | null
    facebookProfile?: string | null
    instagramProfile?: string | null
    xProfile?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    organizations?: OrganizationUncheckedCreateNestedManyWithoutConfigurationInput
  }

  export type OrganizationConfigurationCreateOrConnectWithoutClosingTimesInput = {
    where: OrganizationConfigurationWhereUniqueInput
    create: XOR<OrganizationConfigurationCreateWithoutClosingTimesInput, OrganizationConfigurationUncheckedCreateWithoutClosingTimesInput>
  }

  export type OrganizationConfigurationUpsertWithoutClosingTimesInput = {
    update: XOR<OrganizationConfigurationUpdateWithoutClosingTimesInput, OrganizationConfigurationUncheckedUpdateWithoutClosingTimesInput>
    create: XOR<OrganizationConfigurationCreateWithoutClosingTimesInput, OrganizationConfigurationUncheckedCreateWithoutClosingTimesInput>
    where?: OrganizationConfigurationWhereInput
  }

  export type OrganizationConfigurationUpdateToOneWithWhereWithoutClosingTimesInput = {
    where?: OrganizationConfigurationWhereInput
    data: XOR<OrganizationConfigurationUpdateWithoutClosingTimesInput, OrganizationConfigurationUncheckedUpdateWithoutClosingTimesInput>
  }

  export type OrganizationConfigurationUpdateWithoutClosingTimesInput = {
    id?: StringFieldUpdateOperationsInput | string
    hostname?: NullableStringFieldUpdateOperationsInput | string | null
    countriesShipping?: OrganizationConfigurationUpdatecountriesShippingInput | string[]
    stripeAccountId?: NullableStringFieldUpdateOperationsInput | string | null
    enableHostCheckout?: BoolFieldUpdateOperationsInput | boolean
    enableHostTracking?: BoolFieldUpdateOperationsInput | boolean
    isAcceptingOrders?: NullableBoolFieldUpdateOperationsInput | boolean | null
    defaultCurrency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    defaultLocale?: EnumLocaleFieldUpdateOperationsInput | $Enums.Locale
    supportedLocales?: OrganizationConfigurationUpdatesupportedLocalesInput | $Enums.Locale[]
    facebookProfile?: NullableStringFieldUpdateOperationsInput | string | null
    instagramProfile?: NullableStringFieldUpdateOperationsInput | string | null
    xProfile?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    openingTimes?: OpeningTimesUpdateOneWithoutOrganizationConfigurationNestedInput
    organizations?: OrganizationUpdateManyWithoutConfigurationNestedInput
  }

  export type OrganizationConfigurationUncheckedUpdateWithoutClosingTimesInput = {
    id?: StringFieldUpdateOperationsInput | string
    hostname?: NullableStringFieldUpdateOperationsInput | string | null
    countriesShipping?: OrganizationConfigurationUpdatecountriesShippingInput | string[]
    stripeAccountId?: NullableStringFieldUpdateOperationsInput | string | null
    enableHostCheckout?: BoolFieldUpdateOperationsInput | boolean
    enableHostTracking?: BoolFieldUpdateOperationsInput | boolean
    isAcceptingOrders?: NullableBoolFieldUpdateOperationsInput | boolean | null
    defaultCurrency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    defaultLocale?: EnumLocaleFieldUpdateOperationsInput | $Enums.Locale
    supportedLocales?: OrganizationConfigurationUpdatesupportedLocalesInput | $Enums.Locale[]
    openingTimesId?: NullableStringFieldUpdateOperationsInput | string | null
    facebookProfile?: NullableStringFieldUpdateOperationsInput | string | null
    instagramProfile?: NullableStringFieldUpdateOperationsInput | string | null
    xProfile?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organizations?: OrganizationUncheckedUpdateManyWithoutConfigurationNestedInput
  }

  export type OpeningTimesCreateWithoutOrganizationConfigurationInput = {
    id?: string
    monday?: Date | string | null
    tuesday?: Date | string | null
    wednesday?: Date | string | null
    thursday?: Date | string | null
    friday?: Date | string | null
    saturday?: Date | string | null
    sunday?: Date | string | null
  }

  export type OpeningTimesUncheckedCreateWithoutOrganizationConfigurationInput = {
    id?: string
    monday?: Date | string | null
    tuesday?: Date | string | null
    wednesday?: Date | string | null
    thursday?: Date | string | null
    friday?: Date | string | null
    saturday?: Date | string | null
    sunday?: Date | string | null
  }

  export type OpeningTimesCreateOrConnectWithoutOrganizationConfigurationInput = {
    where: OpeningTimesWhereUniqueInput
    create: XOR<OpeningTimesCreateWithoutOrganizationConfigurationInput, OpeningTimesUncheckedCreateWithoutOrganizationConfigurationInput>
  }

  export type ClosingTimesCreateWithoutOrganizationConfigurationInput = {
    id?: string
    monday?: Date | string | null
    tuesday?: Date | string | null
    wednesday?: Date | string | null
    thursday?: Date | string | null
    friday?: Date | string | null
    saturday?: Date | string | null
    sunday?: Date | string | null
  }

  export type ClosingTimesUncheckedCreateWithoutOrganizationConfigurationInput = {
    id?: string
    monday?: Date | string | null
    tuesday?: Date | string | null
    wednesday?: Date | string | null
    thursday?: Date | string | null
    friday?: Date | string | null
    saturday?: Date | string | null
    sunday?: Date | string | null
  }

  export type ClosingTimesCreateOrConnectWithoutOrganizationConfigurationInput = {
    where: ClosingTimesWhereUniqueInput
    create: XOR<ClosingTimesCreateWithoutOrganizationConfigurationInput, ClosingTimesUncheckedCreateWithoutOrganizationConfigurationInput>
  }

  export type OrganizationCreateWithoutConfigurationInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    logo?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    legalEntity?: LegalEntityCreateNestedOneWithoutOrganizationsInput
    address: AddressCreateNestedOneWithoutOrganizationsInput
    logoFile?: FileCreateNestedOneWithoutOrganizationLogoInput
    files?: FileCreateNestedManyWithoutOrganizationInput
    members?: MemberCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationCreateNestedManyWithoutOrganizationInput
    orders?: OrderCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryCreateNestedManyWithoutOrganizationInput
    products?: ProductCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutConfigurationInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    legalEntityId?: string | null
    addressId: string
    logo?: string | null
    logoId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    files?: FileUncheckedCreateNestedManyWithoutOrganizationInput
    members?: MemberUncheckedCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganizationInput
    orders?: OrderUncheckedCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignUncheckedCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodUncheckedCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerUncheckedCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryUncheckedCreateNestedManyWithoutOrganizationInput
    products?: ProductUncheckedCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutConfigurationInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutConfigurationInput, OrganizationUncheckedCreateWithoutConfigurationInput>
  }

  export type OrganizationCreateManyConfigurationInputEnvelope = {
    data: OrganizationCreateManyConfigurationInput | OrganizationCreateManyConfigurationInput[]
    skipDuplicates?: boolean
  }

  export type OpeningTimesUpsertWithoutOrganizationConfigurationInput = {
    update: XOR<OpeningTimesUpdateWithoutOrganizationConfigurationInput, OpeningTimesUncheckedUpdateWithoutOrganizationConfigurationInput>
    create: XOR<OpeningTimesCreateWithoutOrganizationConfigurationInput, OpeningTimesUncheckedCreateWithoutOrganizationConfigurationInput>
    where?: OpeningTimesWhereInput
  }

  export type OpeningTimesUpdateToOneWithWhereWithoutOrganizationConfigurationInput = {
    where?: OpeningTimesWhereInput
    data: XOR<OpeningTimesUpdateWithoutOrganizationConfigurationInput, OpeningTimesUncheckedUpdateWithoutOrganizationConfigurationInput>
  }

  export type OpeningTimesUpdateWithoutOrganizationConfigurationInput = {
    id?: StringFieldUpdateOperationsInput | string
    monday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tuesday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    wednesday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    thursday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    friday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saturday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sunday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OpeningTimesUncheckedUpdateWithoutOrganizationConfigurationInput = {
    id?: StringFieldUpdateOperationsInput | string
    monday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tuesday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    wednesday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    thursday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    friday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saturday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sunday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ClosingTimesUpsertWithoutOrganizationConfigurationInput = {
    update: XOR<ClosingTimesUpdateWithoutOrganizationConfigurationInput, ClosingTimesUncheckedUpdateWithoutOrganizationConfigurationInput>
    create: XOR<ClosingTimesCreateWithoutOrganizationConfigurationInput, ClosingTimesUncheckedCreateWithoutOrganizationConfigurationInput>
    where?: ClosingTimesWhereInput
  }

  export type ClosingTimesUpdateToOneWithWhereWithoutOrganizationConfigurationInput = {
    where?: ClosingTimesWhereInput
    data: XOR<ClosingTimesUpdateWithoutOrganizationConfigurationInput, ClosingTimesUncheckedUpdateWithoutOrganizationConfigurationInput>
  }

  export type ClosingTimesUpdateWithoutOrganizationConfigurationInput = {
    id?: StringFieldUpdateOperationsInput | string
    monday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tuesday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    wednesday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    thursday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    friday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saturday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sunday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ClosingTimesUncheckedUpdateWithoutOrganizationConfigurationInput = {
    id?: StringFieldUpdateOperationsInput | string
    monday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    tuesday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    wednesday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    thursday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    friday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saturday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sunday?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OrganizationUpsertWithWhereUniqueWithoutConfigurationInput = {
    where: OrganizationWhereUniqueInput
    update: XOR<OrganizationUpdateWithoutConfigurationInput, OrganizationUncheckedUpdateWithoutConfigurationInput>
    create: XOR<OrganizationCreateWithoutConfigurationInput, OrganizationUncheckedCreateWithoutConfigurationInput>
  }

  export type OrganizationUpdateWithWhereUniqueWithoutConfigurationInput = {
    where: OrganizationWhereUniqueInput
    data: XOR<OrganizationUpdateWithoutConfigurationInput, OrganizationUncheckedUpdateWithoutConfigurationInput>
  }

  export type OrganizationUpdateManyWithWhereWithoutConfigurationInput = {
    where: OrganizationScalarWhereInput
    data: XOR<OrganizationUpdateManyMutationInput, OrganizationUncheckedUpdateManyWithoutConfigurationInput>
  }

  export type OrganizationScalarWhereInput = {
    AND?: OrganizationScalarWhereInput | OrganizationScalarWhereInput[]
    OR?: OrganizationScalarWhereInput[]
    NOT?: OrganizationScalarWhereInput | OrganizationScalarWhereInput[]
    id?: StringFilter<"Organization"> | string
    name?: StringFilter<"Organization"> | string
    slug?: StringNullableFilter<"Organization"> | string | null
    phone?: StringNullableFilter<"Organization"> | string | null
    email?: StringNullableFilter<"Organization"> | string | null
    legalEntityId?: StringNullableFilter<"Organization"> | string | null
    addressId?: StringFilter<"Organization"> | string
    configurationId?: StringFilter<"Organization"> | string
    logo?: StringNullableFilter<"Organization"> | string | null
    logoId?: StringNullableFilter<"Organization"> | string | null
    createdAt?: DateTimeFilter<"Organization"> | Date | string
    createdBy?: StringNullableFilter<"Organization"> | string | null
    updatedAt?: DateTimeFilter<"Organization"> | Date | string
    updatedBy?: StringNullableFilter<"Organization"> | string | null
    deletedAt?: DateTimeNullableFilter<"Organization"> | Date | string | null
    deletedBy?: StringNullableFilter<"Organization"> | string | null
  }

  export type LegalEntityCreateWithoutAddressInput = {
    id?: string
    name: string
    taxId: string
    email?: string | null
    phone?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    organizations?: OrganizationCreateNestedManyWithoutLegalEntityInput
  }

  export type LegalEntityUncheckedCreateWithoutAddressInput = {
    id?: string
    name: string
    taxId: string
    email?: string | null
    phone?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    organizations?: OrganizationUncheckedCreateNestedManyWithoutLegalEntityInput
  }

  export type LegalEntityCreateOrConnectWithoutAddressInput = {
    where: LegalEntityWhereUniqueInput
    create: XOR<LegalEntityCreateWithoutAddressInput, LegalEntityUncheckedCreateWithoutAddressInput>
  }

  export type LegalEntityCreateManyAddressInputEnvelope = {
    data: LegalEntityCreateManyAddressInput | LegalEntityCreateManyAddressInput[]
    skipDuplicates?: boolean
  }

  export type OrganizationCreateWithoutAddressInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    logo?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    legalEntity?: LegalEntityCreateNestedOneWithoutOrganizationsInput
    configuration: OrganizationConfigurationCreateNestedOneWithoutOrganizationsInput
    logoFile?: FileCreateNestedOneWithoutOrganizationLogoInput
    files?: FileCreateNestedManyWithoutOrganizationInput
    members?: MemberCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationCreateNestedManyWithoutOrganizationInput
    orders?: OrderCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryCreateNestedManyWithoutOrganizationInput
    products?: ProductCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutAddressInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    legalEntityId?: string | null
    configurationId: string
    logo?: string | null
    logoId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    files?: FileUncheckedCreateNestedManyWithoutOrganizationInput
    members?: MemberUncheckedCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganizationInput
    orders?: OrderUncheckedCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignUncheckedCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodUncheckedCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerUncheckedCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryUncheckedCreateNestedManyWithoutOrganizationInput
    products?: ProductUncheckedCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutAddressInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutAddressInput, OrganizationUncheckedCreateWithoutAddressInput>
  }

  export type OrganizationCreateManyAddressInputEnvelope = {
    data: OrganizationCreateManyAddressInput | OrganizationCreateManyAddressInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutShippingAddressesInput = {
    id: string
    name: string
    firstname: string
    lastname: string
    email: string
    emailVerified: boolean
    image?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    sessions?: SessionCreateNestedManyWithoutUserInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    members?: MemberCreateNestedManyWithoutUserInput
    invitations?: InvitationCreateNestedManyWithoutUserInput
    orders?: OrderCreateNestedManyWithoutUserInput
    reservations?: ReservationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutShippingAddressesInput = {
    id: string
    name: string
    firstname: string
    lastname: string
    email: string
    emailVerified: boolean
    image?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    members?: MemberUncheckedCreateNestedManyWithoutUserInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutUserInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutShippingAddressesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutShippingAddressesInput, UserUncheckedCreateWithoutShippingAddressesInput>
  }

  export type OrderCreateWithoutShippingAddressInput = {
    id?: string
    token: string
    expiresAt?: Date | string
    referenceId: string
    fulfilmentMethod?: $Enums.OrderFulfilmentMethod | null
    dateOfExecution?: Date | string | null
    currency?: $Enums.Currency
    sourceIp?: string | null
    acceptedAt?: Date | string | null
    readyForDispatchAt?: Date | string | null
    dispatchedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutOrdersInput
    user?: UserCreateNestedOneWithoutOrdersInput
    payment?: PaymentCreateNestedOneWithoutOrderInput
    shippingMethod?: ShippingMethodCreateNestedOneWithoutOrdersInput
    items?: OrderItemCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutShippingAddressInput = {
    id?: string
    organizationId: string
    userId?: string | null
    paymentId?: string | null
    token: string
    expiresAt?: Date | string
    referenceId: string
    fulfilmentMethod?: $Enums.OrderFulfilmentMethod | null
    shippingMethodId?: string | null
    dateOfExecution?: Date | string | null
    currency?: $Enums.Currency
    sourceIp?: string | null
    acceptedAt?: Date | string | null
    readyForDispatchAt?: Date | string | null
    dispatchedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutShippingAddressInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutShippingAddressInput, OrderUncheckedCreateWithoutShippingAddressInput>
  }

  export type OrderCreateManyShippingAddressInputEnvelope = {
    data: OrderCreateManyShippingAddressInput | OrderCreateManyShippingAddressInput[]
    skipDuplicates?: boolean
  }

  export type LegalEntityUpsertWithWhereUniqueWithoutAddressInput = {
    where: LegalEntityWhereUniqueInput
    update: XOR<LegalEntityUpdateWithoutAddressInput, LegalEntityUncheckedUpdateWithoutAddressInput>
    create: XOR<LegalEntityCreateWithoutAddressInput, LegalEntityUncheckedCreateWithoutAddressInput>
  }

  export type LegalEntityUpdateWithWhereUniqueWithoutAddressInput = {
    where: LegalEntityWhereUniqueInput
    data: XOR<LegalEntityUpdateWithoutAddressInput, LegalEntityUncheckedUpdateWithoutAddressInput>
  }

  export type LegalEntityUpdateManyWithWhereWithoutAddressInput = {
    where: LegalEntityScalarWhereInput
    data: XOR<LegalEntityUpdateManyMutationInput, LegalEntityUncheckedUpdateManyWithoutAddressInput>
  }

  export type LegalEntityScalarWhereInput = {
    AND?: LegalEntityScalarWhereInput | LegalEntityScalarWhereInput[]
    OR?: LegalEntityScalarWhereInput[]
    NOT?: LegalEntityScalarWhereInput | LegalEntityScalarWhereInput[]
    id?: StringFilter<"LegalEntity"> | string
    name?: StringFilter<"LegalEntity"> | string
    taxId?: StringFilter<"LegalEntity"> | string
    addressId?: StringFilter<"LegalEntity"> | string
    email?: StringNullableFilter<"LegalEntity"> | string | null
    phone?: StringNullableFilter<"LegalEntity"> | string | null
    createdAt?: DateTimeFilter<"LegalEntity"> | Date | string
    createdBy?: StringNullableFilter<"LegalEntity"> | string | null
    updatedAt?: DateTimeFilter<"LegalEntity"> | Date | string
    updatedBy?: StringNullableFilter<"LegalEntity"> | string | null
    deletedAt?: DateTimeNullableFilter<"LegalEntity"> | Date | string | null
    deletedBy?: StringNullableFilter<"LegalEntity"> | string | null
  }

  export type OrganizationUpsertWithWhereUniqueWithoutAddressInput = {
    where: OrganizationWhereUniqueInput
    update: XOR<OrganizationUpdateWithoutAddressInput, OrganizationUncheckedUpdateWithoutAddressInput>
    create: XOR<OrganizationCreateWithoutAddressInput, OrganizationUncheckedCreateWithoutAddressInput>
  }

  export type OrganizationUpdateWithWhereUniqueWithoutAddressInput = {
    where: OrganizationWhereUniqueInput
    data: XOR<OrganizationUpdateWithoutAddressInput, OrganizationUncheckedUpdateWithoutAddressInput>
  }

  export type OrganizationUpdateManyWithWhereWithoutAddressInput = {
    where: OrganizationScalarWhereInput
    data: XOR<OrganizationUpdateManyMutationInput, OrganizationUncheckedUpdateManyWithoutAddressInput>
  }

  export type UserUpsertWithWhereUniqueWithoutShippingAddressesInput = {
    where: UserWhereUniqueInput
    update: XOR<UserUpdateWithoutShippingAddressesInput, UserUncheckedUpdateWithoutShippingAddressesInput>
    create: XOR<UserCreateWithoutShippingAddressesInput, UserUncheckedCreateWithoutShippingAddressesInput>
  }

  export type UserUpdateWithWhereUniqueWithoutShippingAddressesInput = {
    where: UserWhereUniqueInput
    data: XOR<UserUpdateWithoutShippingAddressesInput, UserUncheckedUpdateWithoutShippingAddressesInput>
  }

  export type UserUpdateManyWithWhereWithoutShippingAddressesInput = {
    where: UserScalarWhereInput
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyWithoutShippingAddressesInput>
  }

  export type UserScalarWhereInput = {
    AND?: UserScalarWhereInput | UserScalarWhereInput[]
    OR?: UserScalarWhereInput[]
    NOT?: UserScalarWhereInput | UserScalarWhereInput[]
    id?: StringFilter<"User"> | string
    name?: StringFilter<"User"> | string
    firstname?: StringFilter<"User"> | string
    lastname?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    emailVerified?: BoolFilter<"User"> | boolean
    image?: StringNullableFilter<"User"> | string | null
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
  }

  export type OrderUpsertWithWhereUniqueWithoutShippingAddressInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutShippingAddressInput, OrderUncheckedUpdateWithoutShippingAddressInput>
    create: XOR<OrderCreateWithoutShippingAddressInput, OrderUncheckedCreateWithoutShippingAddressInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutShippingAddressInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutShippingAddressInput, OrderUncheckedUpdateWithoutShippingAddressInput>
  }

  export type OrderUpdateManyWithWhereWithoutShippingAddressInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutShippingAddressInput>
  }

  export type AddressCreateWithoutLegalEntityInput = {
    id?: string
    firstname?: string | null
    lastname?: string | null
    phone?: string | null
    addressLineOne: string
    doorNumber?: string | null
    addressLineTwo?: string | null
    zipCode?: string | null
    placeId?: string | null
    deliveryInstructions?: string | null
    city: string
    country?: string | null
    latitude?: number | null
    longitude?: number | null
    isDefault?: boolean
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    organizations?: OrganizationCreateNestedManyWithoutAddressInput
    users?: UserCreateNestedManyWithoutShippingAddressesInput
    orders?: OrderCreateNestedManyWithoutShippingAddressInput
  }

  export type AddressUncheckedCreateWithoutLegalEntityInput = {
    id?: string
    firstname?: string | null
    lastname?: string | null
    phone?: string | null
    addressLineOne: string
    doorNumber?: string | null
    addressLineTwo?: string | null
    zipCode?: string | null
    placeId?: string | null
    deliveryInstructions?: string | null
    city: string
    country?: string | null
    latitude?: number | null
    longitude?: number | null
    isDefault?: boolean
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    organizations?: OrganizationUncheckedCreateNestedManyWithoutAddressInput
    users?: UserUncheckedCreateNestedManyWithoutShippingAddressesInput
    orders?: OrderUncheckedCreateNestedManyWithoutShippingAddressInput
  }

  export type AddressCreateOrConnectWithoutLegalEntityInput = {
    where: AddressWhereUniqueInput
    create: XOR<AddressCreateWithoutLegalEntityInput, AddressUncheckedCreateWithoutLegalEntityInput>
  }

  export type OrganizationCreateWithoutLegalEntityInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    logo?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    address: AddressCreateNestedOneWithoutOrganizationsInput
    configuration: OrganizationConfigurationCreateNestedOneWithoutOrganizationsInput
    logoFile?: FileCreateNestedOneWithoutOrganizationLogoInput
    files?: FileCreateNestedManyWithoutOrganizationInput
    members?: MemberCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationCreateNestedManyWithoutOrganizationInput
    orders?: OrderCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryCreateNestedManyWithoutOrganizationInput
    products?: ProductCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutLegalEntityInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    addressId: string
    configurationId: string
    logo?: string | null
    logoId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    files?: FileUncheckedCreateNestedManyWithoutOrganizationInput
    members?: MemberUncheckedCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganizationInput
    orders?: OrderUncheckedCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignUncheckedCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodUncheckedCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerUncheckedCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryUncheckedCreateNestedManyWithoutOrganizationInput
    products?: ProductUncheckedCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutLegalEntityInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutLegalEntityInput, OrganizationUncheckedCreateWithoutLegalEntityInput>
  }

  export type OrganizationCreateManyLegalEntityInputEnvelope = {
    data: OrganizationCreateManyLegalEntityInput | OrganizationCreateManyLegalEntityInput[]
    skipDuplicates?: boolean
  }

  export type AddressUpsertWithoutLegalEntityInput = {
    update: XOR<AddressUpdateWithoutLegalEntityInput, AddressUncheckedUpdateWithoutLegalEntityInput>
    create: XOR<AddressCreateWithoutLegalEntityInput, AddressUncheckedCreateWithoutLegalEntityInput>
    where?: AddressWhereInput
  }

  export type AddressUpdateToOneWithWhereWithoutLegalEntityInput = {
    where?: AddressWhereInput
    data: XOR<AddressUpdateWithoutLegalEntityInput, AddressUncheckedUpdateWithoutLegalEntityInput>
  }

  export type AddressUpdateWithoutLegalEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    addressLineOne?: StringFieldUpdateOperationsInput | string
    doorNumber?: NullableStringFieldUpdateOperationsInput | string | null
    addressLineTwo?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    placeId?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organizations?: OrganizationUpdateManyWithoutAddressNestedInput
    users?: UserUpdateManyWithoutShippingAddressesNestedInput
    orders?: OrderUpdateManyWithoutShippingAddressNestedInput
  }

  export type AddressUncheckedUpdateWithoutLegalEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    addressLineOne?: StringFieldUpdateOperationsInput | string
    doorNumber?: NullableStringFieldUpdateOperationsInput | string | null
    addressLineTwo?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    placeId?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organizations?: OrganizationUncheckedUpdateManyWithoutAddressNestedInput
    users?: UserUncheckedUpdateManyWithoutShippingAddressesNestedInput
    orders?: OrderUncheckedUpdateManyWithoutShippingAddressNestedInput
  }

  export type OrganizationUpsertWithWhereUniqueWithoutLegalEntityInput = {
    where: OrganizationWhereUniqueInput
    update: XOR<OrganizationUpdateWithoutLegalEntityInput, OrganizationUncheckedUpdateWithoutLegalEntityInput>
    create: XOR<OrganizationCreateWithoutLegalEntityInput, OrganizationUncheckedCreateWithoutLegalEntityInput>
  }

  export type OrganizationUpdateWithWhereUniqueWithoutLegalEntityInput = {
    where: OrganizationWhereUniqueInput
    data: XOR<OrganizationUpdateWithoutLegalEntityInput, OrganizationUncheckedUpdateWithoutLegalEntityInput>
  }

  export type OrganizationUpdateManyWithWhereWithoutLegalEntityInput = {
    where: OrganizationScalarWhereInput
    data: XOR<OrganizationUpdateManyMutationInput, OrganizationUncheckedUpdateManyWithoutLegalEntityInput>
  }

  export type OrganizationCreateWithoutFilesInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    logo?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    legalEntity?: LegalEntityCreateNestedOneWithoutOrganizationsInput
    address: AddressCreateNestedOneWithoutOrganizationsInput
    configuration: OrganizationConfigurationCreateNestedOneWithoutOrganizationsInput
    logoFile?: FileCreateNestedOneWithoutOrganizationLogoInput
    members?: MemberCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationCreateNestedManyWithoutOrganizationInput
    orders?: OrderCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryCreateNestedManyWithoutOrganizationInput
    products?: ProductCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutFilesInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    legalEntityId?: string | null
    addressId: string
    configurationId: string
    logo?: string | null
    logoId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    members?: MemberUncheckedCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganizationInput
    orders?: OrderUncheckedCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignUncheckedCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodUncheckedCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerUncheckedCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryUncheckedCreateNestedManyWithoutOrganizationInput
    products?: ProductUncheckedCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutFilesInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutFilesInput, OrganizationUncheckedCreateWithoutFilesInput>
  }

  export type ManufacturerCreateWithoutLogoInput = {
    id?: string
    name: string
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    organization: OrganizationCreateNestedOneWithoutManufacturersInput
    products?: ProductCreateNestedManyWithoutManufacturerInput
    translations?: ManufacturerTranslationCreateNestedManyWithoutManufacturerInput
  }

  export type ManufacturerUncheckedCreateWithoutLogoInput = {
    id?: string
    name: string
    organizationId: string
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    products?: ProductUncheckedCreateNestedManyWithoutManufacturerInput
    translations?: ManufacturerTranslationUncheckedCreateNestedManyWithoutManufacturerInput
  }

  export type ManufacturerCreateOrConnectWithoutLogoInput = {
    where: ManufacturerWhereUniqueInput
    create: XOR<ManufacturerCreateWithoutLogoInput, ManufacturerUncheckedCreateWithoutLogoInput>
  }

  export type ProductCategoryCreateWithoutImageInput = {
    id?: string
    slug?: string | null
    priority?: number | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    organization: OrganizationCreateNestedOneWithoutProductCategoriesInput
    translations?: ProductCategoryTranslationCreateNestedManyWithoutProductCategoryInput
    products?: ProductCreateNestedManyWithoutCategoriesInput
  }

  export type ProductCategoryUncheckedCreateWithoutImageInput = {
    id?: string
    slug?: string | null
    organizationId: string
    priority?: number | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    translations?: ProductCategoryTranslationUncheckedCreateNestedManyWithoutProductCategoryInput
    products?: ProductUncheckedCreateNestedManyWithoutCategoriesInput
  }

  export type ProductCategoryCreateOrConnectWithoutImageInput = {
    where: ProductCategoryWhereUniqueInput
    create: XOR<ProductCategoryCreateWithoutImageInput, ProductCategoryUncheckedCreateWithoutImageInput>
  }

  export type ProductCreateWithoutImagesInput = {
    id?: string
    content?: string | null
    slug?: string | null
    sku?: string | null
    basePrice: number
    discountedBasePrice?: number | null
    currency: string
    tags?: ProductCreatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: Date | string | null
    publishedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    organization: OrganizationCreateNestedOneWithoutProductsInput
    manufacturer?: ManufacturerCreateNestedOneWithoutProductsInput
    categories?: ProductCategoryCreateNestedManyWithoutProductsInput
    modifierGroups?: ModifierGroupCreateNestedManyWithoutProductsInput
    translations?: ProductTranslationCreateNestedManyWithoutProductInput
    snapshots?: ProductSnapshotCreateNestedManyWithoutProductInput
    latestSnapshot?: ProductSnapshotCreateNestedOneWithoutLatestForProductInput
  }

  export type ProductUncheckedCreateWithoutImagesInput = {
    id?: string
    content?: string | null
    slug?: string | null
    sku?: string | null
    basePrice: number
    discountedBasePrice?: number | null
    currency: string
    organizationId: string
    manufacturerId?: string | null
    tags?: ProductCreatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: Date | string | null
    publishedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    latestSnapshotId?: string | null
    categories?: ProductCategoryUncheckedCreateNestedManyWithoutProductsInput
    modifierGroups?: ModifierGroupUncheckedCreateNestedManyWithoutProductsInput
    translations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
    snapshots?: ProductSnapshotUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutImagesInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutImagesInput, ProductUncheckedCreateWithoutImagesInput>
  }

  export type ModifierCreateWithoutImagesInput = {
    id?: string
    title: string
    description?: string | null
    sku?: string | null
    price: number
    modifierGroup: ModifierGroupCreateNestedOneWithoutModifiersInput
  }

  export type ModifierUncheckedCreateWithoutImagesInput = {
    id?: string
    title: string
    description?: string | null
    sku?: string | null
    price: number
    modifierGroupId: string
  }

  export type ModifierCreateOrConnectWithoutImagesInput = {
    where: ModifierWhereUniqueInput
    create: XOR<ModifierCreateWithoutImagesInput, ModifierUncheckedCreateWithoutImagesInput>
  }

  export type ShippingMethodCreateWithoutProviderLogoInput = {
    id?: string
    title: string
    providerName: string
    requireDateOfDelivery?: boolean | null
    archivedAt?: Date | string | null
    archivedBy?: string | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    organization: OrganizationCreateNestedOneWithoutShippingMethodsInput
    shippingZones?: ShippingZoneCreateNestedManyWithoutShippingMethodInput
    orders?: OrderCreateNestedManyWithoutShippingMethodInput
  }

  export type ShippingMethodUncheckedCreateWithoutProviderLogoInput = {
    id?: string
    title: string
    providerName: string
    requireDateOfDelivery?: boolean | null
    organizationId: string
    archivedAt?: Date | string | null
    archivedBy?: string | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    shippingZones?: ShippingZoneUncheckedCreateNestedManyWithoutShippingMethodInput
    orders?: OrderUncheckedCreateNestedManyWithoutShippingMethodInput
  }

  export type ShippingMethodCreateOrConnectWithoutProviderLogoInput = {
    where: ShippingMethodWhereUniqueInput
    create: XOR<ShippingMethodCreateWithoutProviderLogoInput, ShippingMethodUncheckedCreateWithoutProviderLogoInput>
  }

  export type OrganizationCreateWithoutLogoFileInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    logo?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    legalEntity?: LegalEntityCreateNestedOneWithoutOrganizationsInput
    address: AddressCreateNestedOneWithoutOrganizationsInput
    configuration: OrganizationConfigurationCreateNestedOneWithoutOrganizationsInput
    files?: FileCreateNestedManyWithoutOrganizationInput
    members?: MemberCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationCreateNestedManyWithoutOrganizationInput
    orders?: OrderCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryCreateNestedManyWithoutOrganizationInput
    products?: ProductCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutLogoFileInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    legalEntityId?: string | null
    addressId: string
    configurationId: string
    logo?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    files?: FileUncheckedCreateNestedManyWithoutOrganizationInput
    members?: MemberUncheckedCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganizationInput
    orders?: OrderUncheckedCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignUncheckedCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodUncheckedCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerUncheckedCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryUncheckedCreateNestedManyWithoutOrganizationInput
    products?: ProductUncheckedCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutLogoFileInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutLogoFileInput, OrganizationUncheckedCreateWithoutLogoFileInput>
  }

  export type OrderItemCreateWithoutImageInput = {
    id?: string
    quantity: number
    unitPrice: number
    totalPrice: number
    rawData?: NullableJsonNullValueInput | InputJsonValue
    order: OrderCreateNestedOneWithoutItemsInput
    productSnapshot?: ProductSnapshotCreateNestedOneWithoutOrderItemsInput
    translations?: OrderItemTranslationCreateNestedManyWithoutOrderItemInput
  }

  export type OrderItemUncheckedCreateWithoutImageInput = {
    id?: string
    quantity: number
    unitPrice: number
    totalPrice: number
    orderId: string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    productSnapshotId?: string | null
    translations?: OrderItemTranslationUncheckedCreateNestedManyWithoutOrderItemInput
  }

  export type OrderItemCreateOrConnectWithoutImageInput = {
    where: OrderItemWhereUniqueInput
    create: XOR<OrderItemCreateWithoutImageInput, OrderItemUncheckedCreateWithoutImageInput>
  }

  export type OrderItemCreateManyImageInputEnvelope = {
    data: OrderItemCreateManyImageInput | OrderItemCreateManyImageInput[]
    skipDuplicates?: boolean
  }

  export type OrganizationUpsertWithoutFilesInput = {
    update: XOR<OrganizationUpdateWithoutFilesInput, OrganizationUncheckedUpdateWithoutFilesInput>
    create: XOR<OrganizationCreateWithoutFilesInput, OrganizationUncheckedCreateWithoutFilesInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutFilesInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutFilesInput, OrganizationUncheckedUpdateWithoutFilesInput>
  }

  export type OrganizationUpdateWithoutFilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntity?: LegalEntityUpdateOneWithoutOrganizationsNestedInput
    address?: AddressUpdateOneRequiredWithoutOrganizationsNestedInput
    configuration?: OrganizationConfigurationUpdateOneRequiredWithoutOrganizationsNestedInput
    logoFile?: FileUpdateOneWithoutOrganizationLogoNestedInput
    members?: MemberUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUpdateManyWithoutOrganizationNestedInput
    products?: ProductUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutFilesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: StringFieldUpdateOperationsInput | string
    configurationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    logoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    members?: MemberUncheckedUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUncheckedUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUncheckedUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUncheckedUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUncheckedUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
    products?: ProductUncheckedUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type ManufacturerUpsertWithoutLogoInput = {
    update: XOR<ManufacturerUpdateWithoutLogoInput, ManufacturerUncheckedUpdateWithoutLogoInput>
    create: XOR<ManufacturerCreateWithoutLogoInput, ManufacturerUncheckedCreateWithoutLogoInput>
    where?: ManufacturerWhereInput
  }

  export type ManufacturerUpdateToOneWithWhereWithoutLogoInput = {
    where?: ManufacturerWhereInput
    data: XOR<ManufacturerUpdateWithoutLogoInput, ManufacturerUncheckedUpdateWithoutLogoInput>
  }

  export type ManufacturerUpdateWithoutLogoInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: OrganizationUpdateOneRequiredWithoutManufacturersNestedInput
    products?: ProductUpdateManyWithoutManufacturerNestedInput
    translations?: ManufacturerTranslationUpdateManyWithoutManufacturerNestedInput
  }

  export type ManufacturerUncheckedUpdateWithoutLogoInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    products?: ProductUncheckedUpdateManyWithoutManufacturerNestedInput
    translations?: ManufacturerTranslationUncheckedUpdateManyWithoutManufacturerNestedInput
  }

  export type ProductCategoryUpsertWithoutImageInput = {
    update: XOR<ProductCategoryUpdateWithoutImageInput, ProductCategoryUncheckedUpdateWithoutImageInput>
    create: XOR<ProductCategoryCreateWithoutImageInput, ProductCategoryUncheckedCreateWithoutImageInput>
    where?: ProductCategoryWhereInput
  }

  export type ProductCategoryUpdateToOneWithWhereWithoutImageInput = {
    where?: ProductCategoryWhereInput
    data: XOR<ProductCategoryUpdateWithoutImageInput, ProductCategoryUncheckedUpdateWithoutImageInput>
  }

  export type ProductCategoryUpdateWithoutImageInput = {
    id?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: OrganizationUpdateOneRequiredWithoutProductCategoriesNestedInput
    translations?: ProductCategoryTranslationUpdateManyWithoutProductCategoryNestedInput
    products?: ProductUpdateManyWithoutCategoriesNestedInput
  }

  export type ProductCategoryUncheckedUpdateWithoutImageInput = {
    id?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: StringFieldUpdateOperationsInput | string
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    translations?: ProductCategoryTranslationUncheckedUpdateManyWithoutProductCategoryNestedInput
    products?: ProductUncheckedUpdateManyWithoutCategoriesNestedInput
  }

  export type ProductUpsertWithWhereUniqueWithoutImagesInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutImagesInput, ProductUncheckedUpdateWithoutImagesInput>
    create: XOR<ProductCreateWithoutImagesInput, ProductUncheckedCreateWithoutImagesInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutImagesInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutImagesInput, ProductUncheckedUpdateWithoutImagesInput>
  }

  export type ProductUpdateManyWithWhereWithoutImagesInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutImagesInput>
  }

  export type ModifierUpsertWithWhereUniqueWithoutImagesInput = {
    where: ModifierWhereUniqueInput
    update: XOR<ModifierUpdateWithoutImagesInput, ModifierUncheckedUpdateWithoutImagesInput>
    create: XOR<ModifierCreateWithoutImagesInput, ModifierUncheckedCreateWithoutImagesInput>
  }

  export type ModifierUpdateWithWhereUniqueWithoutImagesInput = {
    where: ModifierWhereUniqueInput
    data: XOR<ModifierUpdateWithoutImagesInput, ModifierUncheckedUpdateWithoutImagesInput>
  }

  export type ModifierUpdateManyWithWhereWithoutImagesInput = {
    where: ModifierScalarWhereInput
    data: XOR<ModifierUpdateManyMutationInput, ModifierUncheckedUpdateManyWithoutImagesInput>
  }

  export type ModifierScalarWhereInput = {
    AND?: ModifierScalarWhereInput | ModifierScalarWhereInput[]
    OR?: ModifierScalarWhereInput[]
    NOT?: ModifierScalarWhereInput | ModifierScalarWhereInput[]
    id?: StringFilter<"Modifier"> | string
    title?: StringFilter<"Modifier"> | string
    description?: StringNullableFilter<"Modifier"> | string | null
    sku?: StringNullableFilter<"Modifier"> | string | null
    price?: FloatFilter<"Modifier"> | number
    modifierGroupId?: StringFilter<"Modifier"> | string
  }

  export type ShippingMethodUpsertWithoutProviderLogoInput = {
    update: XOR<ShippingMethodUpdateWithoutProviderLogoInput, ShippingMethodUncheckedUpdateWithoutProviderLogoInput>
    create: XOR<ShippingMethodCreateWithoutProviderLogoInput, ShippingMethodUncheckedCreateWithoutProviderLogoInput>
    where?: ShippingMethodWhereInput
  }

  export type ShippingMethodUpdateToOneWithWhereWithoutProviderLogoInput = {
    where?: ShippingMethodWhereInput
    data: XOR<ShippingMethodUpdateWithoutProviderLogoInput, ShippingMethodUncheckedUpdateWithoutProviderLogoInput>
  }

  export type ShippingMethodUpdateWithoutProviderLogoInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    providerName?: StringFieldUpdateOperationsInput | string
    requireDateOfDelivery?: NullableBoolFieldUpdateOperationsInput | boolean | null
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: OrganizationUpdateOneRequiredWithoutShippingMethodsNestedInput
    shippingZones?: ShippingZoneUpdateManyWithoutShippingMethodNestedInput
    orders?: OrderUpdateManyWithoutShippingMethodNestedInput
  }

  export type ShippingMethodUncheckedUpdateWithoutProviderLogoInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    providerName?: StringFieldUpdateOperationsInput | string
    requireDateOfDelivery?: NullableBoolFieldUpdateOperationsInput | boolean | null
    organizationId?: StringFieldUpdateOperationsInput | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    shippingZones?: ShippingZoneUncheckedUpdateManyWithoutShippingMethodNestedInput
    orders?: OrderUncheckedUpdateManyWithoutShippingMethodNestedInput
  }

  export type OrganizationUpsertWithoutLogoFileInput = {
    update: XOR<OrganizationUpdateWithoutLogoFileInput, OrganizationUncheckedUpdateWithoutLogoFileInput>
    create: XOR<OrganizationCreateWithoutLogoFileInput, OrganizationUncheckedCreateWithoutLogoFileInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutLogoFileInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutLogoFileInput, OrganizationUncheckedUpdateWithoutLogoFileInput>
  }

  export type OrganizationUpdateWithoutLogoFileInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntity?: LegalEntityUpdateOneWithoutOrganizationsNestedInput
    address?: AddressUpdateOneRequiredWithoutOrganizationsNestedInput
    configuration?: OrganizationConfigurationUpdateOneRequiredWithoutOrganizationsNestedInput
    files?: FileUpdateManyWithoutOrganizationNestedInput
    members?: MemberUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUpdateManyWithoutOrganizationNestedInput
    products?: ProductUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutLogoFileInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: StringFieldUpdateOperationsInput | string
    configurationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    files?: FileUncheckedUpdateManyWithoutOrganizationNestedInput
    members?: MemberUncheckedUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUncheckedUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUncheckedUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUncheckedUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUncheckedUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
    products?: ProductUncheckedUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type OrderItemUpsertWithWhereUniqueWithoutImageInput = {
    where: OrderItemWhereUniqueInput
    update: XOR<OrderItemUpdateWithoutImageInput, OrderItemUncheckedUpdateWithoutImageInput>
    create: XOR<OrderItemCreateWithoutImageInput, OrderItemUncheckedCreateWithoutImageInput>
  }

  export type OrderItemUpdateWithWhereUniqueWithoutImageInput = {
    where: OrderItemWhereUniqueInput
    data: XOR<OrderItemUpdateWithoutImageInput, OrderItemUncheckedUpdateWithoutImageInput>
  }

  export type OrderItemUpdateManyWithWhereWithoutImageInput = {
    where: OrderItemScalarWhereInput
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyWithoutImageInput>
  }

  export type OrderItemScalarWhereInput = {
    AND?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
    OR?: OrderItemScalarWhereInput[]
    NOT?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
    id?: StringFilter<"OrderItem"> | string
    quantity?: IntFilter<"OrderItem"> | number
    unitPrice?: FloatFilter<"OrderItem"> | number
    totalPrice?: FloatFilter<"OrderItem"> | number
    orderId?: StringFilter<"OrderItem"> | string
    rawData?: JsonNullableFilter<"OrderItem">
    productSnapshotId?: StringNullableFilter<"OrderItem"> | string | null
    imageId?: StringNullableFilter<"OrderItem"> | string | null
  }

  export type FileCreateWithoutManufacturerLogoInput = {
    id?: string
    mimeType?: string | null
    size?: number | null
    filename?: string | null
    url?: string | null
    status?: $Enums.FileUploadStatus
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    organization?: OrganizationCreateNestedOneWithoutFilesInput
    productCategoryImage?: ProductCategoryCreateNestedOneWithoutImageInput
    productImages?: ProductCreateNestedManyWithoutImagesInput
    modifierImages?: ModifierCreateNestedManyWithoutImagesInput
    shippingMethodLogoFor?: ShippingMethodCreateNestedOneWithoutProviderLogoInput
    organizationLogo?: OrganizationCreateNestedOneWithoutLogoFileInput
    orderItemImages?: OrderItemCreateNestedManyWithoutImageInput
  }

  export type FileUncheckedCreateWithoutManufacturerLogoInput = {
    id?: string
    mimeType?: string | null
    size?: number | null
    filename?: string | null
    url?: string | null
    status?: $Enums.FileUploadStatus
    organizationId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    productCategoryImage?: ProductCategoryUncheckedCreateNestedOneWithoutImageInput
    productImages?: ProductUncheckedCreateNestedManyWithoutImagesInput
    modifierImages?: ModifierUncheckedCreateNestedManyWithoutImagesInput
    shippingMethodLogoFor?: ShippingMethodUncheckedCreateNestedOneWithoutProviderLogoInput
    organizationLogo?: OrganizationUncheckedCreateNestedOneWithoutLogoFileInput
    orderItemImages?: OrderItemUncheckedCreateNestedManyWithoutImageInput
  }

  export type FileCreateOrConnectWithoutManufacturerLogoInput = {
    where: FileWhereUniqueInput
    create: XOR<FileCreateWithoutManufacturerLogoInput, FileUncheckedCreateWithoutManufacturerLogoInput>
  }

  export type OrganizationCreateWithoutManufacturersInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    logo?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    legalEntity?: LegalEntityCreateNestedOneWithoutOrganizationsInput
    address: AddressCreateNestedOneWithoutOrganizationsInput
    configuration: OrganizationConfigurationCreateNestedOneWithoutOrganizationsInput
    logoFile?: FileCreateNestedOneWithoutOrganizationLogoInput
    files?: FileCreateNestedManyWithoutOrganizationInput
    members?: MemberCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationCreateNestedManyWithoutOrganizationInput
    orders?: OrderCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryCreateNestedManyWithoutOrganizationInput
    products?: ProductCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutManufacturersInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    legalEntityId?: string | null
    addressId: string
    configurationId: string
    logo?: string | null
    logoId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    files?: FileUncheckedCreateNestedManyWithoutOrganizationInput
    members?: MemberUncheckedCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganizationInput
    orders?: OrderUncheckedCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignUncheckedCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodUncheckedCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryUncheckedCreateNestedManyWithoutOrganizationInput
    products?: ProductUncheckedCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutManufacturersInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutManufacturersInput, OrganizationUncheckedCreateWithoutManufacturersInput>
  }

  export type ProductCreateWithoutManufacturerInput = {
    id?: string
    content?: string | null
    slug?: string | null
    sku?: string | null
    basePrice: number
    discountedBasePrice?: number | null
    currency: string
    tags?: ProductCreatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: Date | string | null
    publishedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    images?: FileCreateNestedManyWithoutProductImagesInput
    organization: OrganizationCreateNestedOneWithoutProductsInput
    categories?: ProductCategoryCreateNestedManyWithoutProductsInput
    modifierGroups?: ModifierGroupCreateNestedManyWithoutProductsInput
    translations?: ProductTranslationCreateNestedManyWithoutProductInput
    snapshots?: ProductSnapshotCreateNestedManyWithoutProductInput
    latestSnapshot?: ProductSnapshotCreateNestedOneWithoutLatestForProductInput
  }

  export type ProductUncheckedCreateWithoutManufacturerInput = {
    id?: string
    content?: string | null
    slug?: string | null
    sku?: string | null
    basePrice: number
    discountedBasePrice?: number | null
    currency: string
    organizationId: string
    tags?: ProductCreatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: Date | string | null
    publishedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    latestSnapshotId?: string | null
    images?: FileUncheckedCreateNestedManyWithoutProductImagesInput
    categories?: ProductCategoryUncheckedCreateNestedManyWithoutProductsInput
    modifierGroups?: ModifierGroupUncheckedCreateNestedManyWithoutProductsInput
    translations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
    snapshots?: ProductSnapshotUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutManufacturerInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutManufacturerInput, ProductUncheckedCreateWithoutManufacturerInput>
  }

  export type ProductCreateManyManufacturerInputEnvelope = {
    data: ProductCreateManyManufacturerInput | ProductCreateManyManufacturerInput[]
    skipDuplicates?: boolean
  }

  export type ManufacturerTranslationCreateWithoutManufacturerInput = {
    id?: string
    locale: string
    about?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
  }

  export type ManufacturerTranslationUncheckedCreateWithoutManufacturerInput = {
    id?: string
    locale: string
    about?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
  }

  export type ManufacturerTranslationCreateOrConnectWithoutManufacturerInput = {
    where: ManufacturerTranslationWhereUniqueInput
    create: XOR<ManufacturerTranslationCreateWithoutManufacturerInput, ManufacturerTranslationUncheckedCreateWithoutManufacturerInput>
  }

  export type ManufacturerTranslationCreateManyManufacturerInputEnvelope = {
    data: ManufacturerTranslationCreateManyManufacturerInput | ManufacturerTranslationCreateManyManufacturerInput[]
    skipDuplicates?: boolean
  }

  export type FileUpsertWithoutManufacturerLogoInput = {
    update: XOR<FileUpdateWithoutManufacturerLogoInput, FileUncheckedUpdateWithoutManufacturerLogoInput>
    create: XOR<FileCreateWithoutManufacturerLogoInput, FileUncheckedCreateWithoutManufacturerLogoInput>
    where?: FileWhereInput
  }

  export type FileUpdateToOneWithWhereWithoutManufacturerLogoInput = {
    where?: FileWhereInput
    data: XOR<FileUpdateWithoutManufacturerLogoInput, FileUncheckedUpdateWithoutManufacturerLogoInput>
  }

  export type FileUpdateWithoutManufacturerLogoInput = {
    id?: StringFieldUpdateOperationsInput | string
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumFileUploadStatusFieldUpdateOperationsInput | $Enums.FileUploadStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: OrganizationUpdateOneWithoutFilesNestedInput
    productCategoryImage?: ProductCategoryUpdateOneWithoutImageNestedInput
    productImages?: ProductUpdateManyWithoutImagesNestedInput
    modifierImages?: ModifierUpdateManyWithoutImagesNestedInput
    shippingMethodLogoFor?: ShippingMethodUpdateOneWithoutProviderLogoNestedInput
    organizationLogo?: OrganizationUpdateOneWithoutLogoFileNestedInput
    orderItemImages?: OrderItemUpdateManyWithoutImageNestedInput
  }

  export type FileUncheckedUpdateWithoutManufacturerLogoInput = {
    id?: StringFieldUpdateOperationsInput | string
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumFileUploadStatusFieldUpdateOperationsInput | $Enums.FileUploadStatus
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    productCategoryImage?: ProductCategoryUncheckedUpdateOneWithoutImageNestedInput
    productImages?: ProductUncheckedUpdateManyWithoutImagesNestedInput
    modifierImages?: ModifierUncheckedUpdateManyWithoutImagesNestedInput
    shippingMethodLogoFor?: ShippingMethodUncheckedUpdateOneWithoutProviderLogoNestedInput
    organizationLogo?: OrganizationUncheckedUpdateOneWithoutLogoFileNestedInput
    orderItemImages?: OrderItemUncheckedUpdateManyWithoutImageNestedInput
  }

  export type OrganizationUpsertWithoutManufacturersInput = {
    update: XOR<OrganizationUpdateWithoutManufacturersInput, OrganizationUncheckedUpdateWithoutManufacturersInput>
    create: XOR<OrganizationCreateWithoutManufacturersInput, OrganizationUncheckedCreateWithoutManufacturersInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutManufacturersInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutManufacturersInput, OrganizationUncheckedUpdateWithoutManufacturersInput>
  }

  export type OrganizationUpdateWithoutManufacturersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntity?: LegalEntityUpdateOneWithoutOrganizationsNestedInput
    address?: AddressUpdateOneRequiredWithoutOrganizationsNestedInput
    configuration?: OrganizationConfigurationUpdateOneRequiredWithoutOrganizationsNestedInput
    logoFile?: FileUpdateOneWithoutOrganizationLogoNestedInput
    files?: FileUpdateManyWithoutOrganizationNestedInput
    members?: MemberUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUpdateManyWithoutOrganizationNestedInput
    products?: ProductUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutManufacturersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: StringFieldUpdateOperationsInput | string
    configurationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    logoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    files?: FileUncheckedUpdateManyWithoutOrganizationNestedInput
    members?: MemberUncheckedUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUncheckedUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUncheckedUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUncheckedUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
    products?: ProductUncheckedUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type ProductUpsertWithWhereUniqueWithoutManufacturerInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutManufacturerInput, ProductUncheckedUpdateWithoutManufacturerInput>
    create: XOR<ProductCreateWithoutManufacturerInput, ProductUncheckedCreateWithoutManufacturerInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutManufacturerInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutManufacturerInput, ProductUncheckedUpdateWithoutManufacturerInput>
  }

  export type ProductUpdateManyWithWhereWithoutManufacturerInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutManufacturerInput>
  }

  export type ManufacturerTranslationUpsertWithWhereUniqueWithoutManufacturerInput = {
    where: ManufacturerTranslationWhereUniqueInput
    update: XOR<ManufacturerTranslationUpdateWithoutManufacturerInput, ManufacturerTranslationUncheckedUpdateWithoutManufacturerInput>
    create: XOR<ManufacturerTranslationCreateWithoutManufacturerInput, ManufacturerTranslationUncheckedCreateWithoutManufacturerInput>
  }

  export type ManufacturerTranslationUpdateWithWhereUniqueWithoutManufacturerInput = {
    where: ManufacturerTranslationWhereUniqueInput
    data: XOR<ManufacturerTranslationUpdateWithoutManufacturerInput, ManufacturerTranslationUncheckedUpdateWithoutManufacturerInput>
  }

  export type ManufacturerTranslationUpdateManyWithWhereWithoutManufacturerInput = {
    where: ManufacturerTranslationScalarWhereInput
    data: XOR<ManufacturerTranslationUpdateManyMutationInput, ManufacturerTranslationUncheckedUpdateManyWithoutManufacturerInput>
  }

  export type ManufacturerTranslationScalarWhereInput = {
    AND?: ManufacturerTranslationScalarWhereInput | ManufacturerTranslationScalarWhereInput[]
    OR?: ManufacturerTranslationScalarWhereInput[]
    NOT?: ManufacturerTranslationScalarWhereInput | ManufacturerTranslationScalarWhereInput[]
    id?: StringFilter<"ManufacturerTranslation"> | string
    locale?: StringFilter<"ManufacturerTranslation"> | string
    about?: StringNullableFilter<"ManufacturerTranslation"> | string | null
    manufacturerId?: StringFilter<"ManufacturerTranslation"> | string
    createdAt?: DateTimeFilter<"ManufacturerTranslation"> | Date | string
    createdBy?: StringNullableFilter<"ManufacturerTranslation"> | string | null
    updatedAt?: DateTimeFilter<"ManufacturerTranslation"> | Date | string
    updatedBy?: StringNullableFilter<"ManufacturerTranslation"> | string | null
  }

  export type ManufacturerCreateWithoutTranslationsInput = {
    id?: string
    name: string
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    logo?: FileCreateNestedOneWithoutManufacturerLogoInput
    organization: OrganizationCreateNestedOneWithoutManufacturersInput
    products?: ProductCreateNestedManyWithoutManufacturerInput
  }

  export type ManufacturerUncheckedCreateWithoutTranslationsInput = {
    id?: string
    name: string
    logoId?: string | null
    organizationId: string
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    products?: ProductUncheckedCreateNestedManyWithoutManufacturerInput
  }

  export type ManufacturerCreateOrConnectWithoutTranslationsInput = {
    where: ManufacturerWhereUniqueInput
    create: XOR<ManufacturerCreateWithoutTranslationsInput, ManufacturerUncheckedCreateWithoutTranslationsInput>
  }

  export type ManufacturerUpsertWithoutTranslationsInput = {
    update: XOR<ManufacturerUpdateWithoutTranslationsInput, ManufacturerUncheckedUpdateWithoutTranslationsInput>
    create: XOR<ManufacturerCreateWithoutTranslationsInput, ManufacturerUncheckedCreateWithoutTranslationsInput>
    where?: ManufacturerWhereInput
  }

  export type ManufacturerUpdateToOneWithWhereWithoutTranslationsInput = {
    where?: ManufacturerWhereInput
    data: XOR<ManufacturerUpdateWithoutTranslationsInput, ManufacturerUncheckedUpdateWithoutTranslationsInput>
  }

  export type ManufacturerUpdateWithoutTranslationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: FileUpdateOneWithoutManufacturerLogoNestedInput
    organization?: OrganizationUpdateOneRequiredWithoutManufacturersNestedInput
    products?: ProductUpdateManyWithoutManufacturerNestedInput
  }

  export type ManufacturerUncheckedUpdateWithoutTranslationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logoId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    products?: ProductUncheckedUpdateManyWithoutManufacturerNestedInput
  }

  export type OrganizationCreateWithoutProductCategoriesInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    logo?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    legalEntity?: LegalEntityCreateNestedOneWithoutOrganizationsInput
    address: AddressCreateNestedOneWithoutOrganizationsInput
    configuration: OrganizationConfigurationCreateNestedOneWithoutOrganizationsInput
    logoFile?: FileCreateNestedOneWithoutOrganizationLogoInput
    files?: FileCreateNestedManyWithoutOrganizationInput
    members?: MemberCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationCreateNestedManyWithoutOrganizationInput
    orders?: OrderCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerCreateNestedManyWithoutOrganizationInput
    products?: ProductCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutProductCategoriesInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    legalEntityId?: string | null
    addressId: string
    configurationId: string
    logo?: string | null
    logoId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    files?: FileUncheckedCreateNestedManyWithoutOrganizationInput
    members?: MemberUncheckedCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganizationInput
    orders?: OrderUncheckedCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignUncheckedCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodUncheckedCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerUncheckedCreateNestedManyWithoutOrganizationInput
    products?: ProductUncheckedCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutProductCategoriesInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutProductCategoriesInput, OrganizationUncheckedCreateWithoutProductCategoriesInput>
  }

  export type FileCreateWithoutProductCategoryImageInput = {
    id?: string
    mimeType?: string | null
    size?: number | null
    filename?: string | null
    url?: string | null
    status?: $Enums.FileUploadStatus
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    organization?: OrganizationCreateNestedOneWithoutFilesInput
    manufacturerLogo?: ManufacturerCreateNestedOneWithoutLogoInput
    productImages?: ProductCreateNestedManyWithoutImagesInput
    modifierImages?: ModifierCreateNestedManyWithoutImagesInput
    shippingMethodLogoFor?: ShippingMethodCreateNestedOneWithoutProviderLogoInput
    organizationLogo?: OrganizationCreateNestedOneWithoutLogoFileInput
    orderItemImages?: OrderItemCreateNestedManyWithoutImageInput
  }

  export type FileUncheckedCreateWithoutProductCategoryImageInput = {
    id?: string
    mimeType?: string | null
    size?: number | null
    filename?: string | null
    url?: string | null
    status?: $Enums.FileUploadStatus
    organizationId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    manufacturerLogo?: ManufacturerUncheckedCreateNestedOneWithoutLogoInput
    productImages?: ProductUncheckedCreateNestedManyWithoutImagesInput
    modifierImages?: ModifierUncheckedCreateNestedManyWithoutImagesInput
    shippingMethodLogoFor?: ShippingMethodUncheckedCreateNestedOneWithoutProviderLogoInput
    organizationLogo?: OrganizationUncheckedCreateNestedOneWithoutLogoFileInput
    orderItemImages?: OrderItemUncheckedCreateNestedManyWithoutImageInput
  }

  export type FileCreateOrConnectWithoutProductCategoryImageInput = {
    where: FileWhereUniqueInput
    create: XOR<FileCreateWithoutProductCategoryImageInput, FileUncheckedCreateWithoutProductCategoryImageInput>
  }

  export type ProductCategoryTranslationCreateWithoutProductCategoryInput = {
    id?: string
    locale: string
    title?: string | null
    description?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
  }

  export type ProductCategoryTranslationUncheckedCreateWithoutProductCategoryInput = {
    id?: string
    locale: string
    title?: string | null
    description?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
  }

  export type ProductCategoryTranslationCreateOrConnectWithoutProductCategoryInput = {
    where: ProductCategoryTranslationWhereUniqueInput
    create: XOR<ProductCategoryTranslationCreateWithoutProductCategoryInput, ProductCategoryTranslationUncheckedCreateWithoutProductCategoryInput>
  }

  export type ProductCategoryTranslationCreateManyProductCategoryInputEnvelope = {
    data: ProductCategoryTranslationCreateManyProductCategoryInput | ProductCategoryTranslationCreateManyProductCategoryInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutCategoriesInput = {
    id?: string
    content?: string | null
    slug?: string | null
    sku?: string | null
    basePrice: number
    discountedBasePrice?: number | null
    currency: string
    tags?: ProductCreatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: Date | string | null
    publishedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    images?: FileCreateNestedManyWithoutProductImagesInput
    organization: OrganizationCreateNestedOneWithoutProductsInput
    manufacturer?: ManufacturerCreateNestedOneWithoutProductsInput
    modifierGroups?: ModifierGroupCreateNestedManyWithoutProductsInput
    translations?: ProductTranslationCreateNestedManyWithoutProductInput
    snapshots?: ProductSnapshotCreateNestedManyWithoutProductInput
    latestSnapshot?: ProductSnapshotCreateNestedOneWithoutLatestForProductInput
  }

  export type ProductUncheckedCreateWithoutCategoriesInput = {
    id?: string
    content?: string | null
    slug?: string | null
    sku?: string | null
    basePrice: number
    discountedBasePrice?: number | null
    currency: string
    organizationId: string
    manufacturerId?: string | null
    tags?: ProductCreatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: Date | string | null
    publishedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    latestSnapshotId?: string | null
    images?: FileUncheckedCreateNestedManyWithoutProductImagesInput
    modifierGroups?: ModifierGroupUncheckedCreateNestedManyWithoutProductsInput
    translations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
    snapshots?: ProductSnapshotUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutCategoriesInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutCategoriesInput, ProductUncheckedCreateWithoutCategoriesInput>
  }

  export type OrganizationUpsertWithoutProductCategoriesInput = {
    update: XOR<OrganizationUpdateWithoutProductCategoriesInput, OrganizationUncheckedUpdateWithoutProductCategoriesInput>
    create: XOR<OrganizationCreateWithoutProductCategoriesInput, OrganizationUncheckedCreateWithoutProductCategoriesInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutProductCategoriesInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutProductCategoriesInput, OrganizationUncheckedUpdateWithoutProductCategoriesInput>
  }

  export type OrganizationUpdateWithoutProductCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntity?: LegalEntityUpdateOneWithoutOrganizationsNestedInput
    address?: AddressUpdateOneRequiredWithoutOrganizationsNestedInput
    configuration?: OrganizationConfigurationUpdateOneRequiredWithoutOrganizationsNestedInput
    logoFile?: FileUpdateOneWithoutOrganizationLogoNestedInput
    files?: FileUpdateManyWithoutOrganizationNestedInput
    members?: MemberUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUpdateManyWithoutOrganizationNestedInput
    products?: ProductUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutProductCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: StringFieldUpdateOperationsInput | string
    configurationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    logoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    files?: FileUncheckedUpdateManyWithoutOrganizationNestedInput
    members?: MemberUncheckedUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUncheckedUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUncheckedUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUncheckedUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUncheckedUpdateManyWithoutOrganizationNestedInput
    products?: ProductUncheckedUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type FileUpsertWithoutProductCategoryImageInput = {
    update: XOR<FileUpdateWithoutProductCategoryImageInput, FileUncheckedUpdateWithoutProductCategoryImageInput>
    create: XOR<FileCreateWithoutProductCategoryImageInput, FileUncheckedCreateWithoutProductCategoryImageInput>
    where?: FileWhereInput
  }

  export type FileUpdateToOneWithWhereWithoutProductCategoryImageInput = {
    where?: FileWhereInput
    data: XOR<FileUpdateWithoutProductCategoryImageInput, FileUncheckedUpdateWithoutProductCategoryImageInput>
  }

  export type FileUpdateWithoutProductCategoryImageInput = {
    id?: StringFieldUpdateOperationsInput | string
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumFileUploadStatusFieldUpdateOperationsInput | $Enums.FileUploadStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: OrganizationUpdateOneWithoutFilesNestedInput
    manufacturerLogo?: ManufacturerUpdateOneWithoutLogoNestedInput
    productImages?: ProductUpdateManyWithoutImagesNestedInput
    modifierImages?: ModifierUpdateManyWithoutImagesNestedInput
    shippingMethodLogoFor?: ShippingMethodUpdateOneWithoutProviderLogoNestedInput
    organizationLogo?: OrganizationUpdateOneWithoutLogoFileNestedInput
    orderItemImages?: OrderItemUpdateManyWithoutImageNestedInput
  }

  export type FileUncheckedUpdateWithoutProductCategoryImageInput = {
    id?: StringFieldUpdateOperationsInput | string
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumFileUploadStatusFieldUpdateOperationsInput | $Enums.FileUploadStatus
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerLogo?: ManufacturerUncheckedUpdateOneWithoutLogoNestedInput
    productImages?: ProductUncheckedUpdateManyWithoutImagesNestedInput
    modifierImages?: ModifierUncheckedUpdateManyWithoutImagesNestedInput
    shippingMethodLogoFor?: ShippingMethodUncheckedUpdateOneWithoutProviderLogoNestedInput
    organizationLogo?: OrganizationUncheckedUpdateOneWithoutLogoFileNestedInput
    orderItemImages?: OrderItemUncheckedUpdateManyWithoutImageNestedInput
  }

  export type ProductCategoryTranslationUpsertWithWhereUniqueWithoutProductCategoryInput = {
    where: ProductCategoryTranslationWhereUniqueInput
    update: XOR<ProductCategoryTranslationUpdateWithoutProductCategoryInput, ProductCategoryTranslationUncheckedUpdateWithoutProductCategoryInput>
    create: XOR<ProductCategoryTranslationCreateWithoutProductCategoryInput, ProductCategoryTranslationUncheckedCreateWithoutProductCategoryInput>
  }

  export type ProductCategoryTranslationUpdateWithWhereUniqueWithoutProductCategoryInput = {
    where: ProductCategoryTranslationWhereUniqueInput
    data: XOR<ProductCategoryTranslationUpdateWithoutProductCategoryInput, ProductCategoryTranslationUncheckedUpdateWithoutProductCategoryInput>
  }

  export type ProductCategoryTranslationUpdateManyWithWhereWithoutProductCategoryInput = {
    where: ProductCategoryTranslationScalarWhereInput
    data: XOR<ProductCategoryTranslationUpdateManyMutationInput, ProductCategoryTranslationUncheckedUpdateManyWithoutProductCategoryInput>
  }

  export type ProductCategoryTranslationScalarWhereInput = {
    AND?: ProductCategoryTranslationScalarWhereInput | ProductCategoryTranslationScalarWhereInput[]
    OR?: ProductCategoryTranslationScalarWhereInput[]
    NOT?: ProductCategoryTranslationScalarWhereInput | ProductCategoryTranslationScalarWhereInput[]
    id?: StringFilter<"ProductCategoryTranslation"> | string
    locale?: StringFilter<"ProductCategoryTranslation"> | string
    title?: StringNullableFilter<"ProductCategoryTranslation"> | string | null
    description?: StringNullableFilter<"ProductCategoryTranslation"> | string | null
    productCategoryId?: StringFilter<"ProductCategoryTranslation"> | string
    createdAt?: DateTimeFilter<"ProductCategoryTranslation"> | Date | string
    createdBy?: StringNullableFilter<"ProductCategoryTranslation"> | string | null
    updatedAt?: DateTimeFilter<"ProductCategoryTranslation"> | Date | string
    updatedBy?: StringNullableFilter<"ProductCategoryTranslation"> | string | null
  }

  export type ProductUpsertWithWhereUniqueWithoutCategoriesInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutCategoriesInput, ProductUncheckedUpdateWithoutCategoriesInput>
    create: XOR<ProductCreateWithoutCategoriesInput, ProductUncheckedCreateWithoutCategoriesInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutCategoriesInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutCategoriesInput, ProductUncheckedUpdateWithoutCategoriesInput>
  }

  export type ProductUpdateManyWithWhereWithoutCategoriesInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutCategoriesInput>
  }

  export type ProductCategoryCreateWithoutTranslationsInput = {
    id?: string
    slug?: string | null
    priority?: number | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    organization: OrganizationCreateNestedOneWithoutProductCategoriesInput
    image?: FileCreateNestedOneWithoutProductCategoryImageInput
    products?: ProductCreateNestedManyWithoutCategoriesInput
  }

  export type ProductCategoryUncheckedCreateWithoutTranslationsInput = {
    id?: string
    slug?: string | null
    organizationId: string
    priority?: number | null
    imageId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    products?: ProductUncheckedCreateNestedManyWithoutCategoriesInput
  }

  export type ProductCategoryCreateOrConnectWithoutTranslationsInput = {
    where: ProductCategoryWhereUniqueInput
    create: XOR<ProductCategoryCreateWithoutTranslationsInput, ProductCategoryUncheckedCreateWithoutTranslationsInput>
  }

  export type ProductCategoryUpsertWithoutTranslationsInput = {
    update: XOR<ProductCategoryUpdateWithoutTranslationsInput, ProductCategoryUncheckedUpdateWithoutTranslationsInput>
    create: XOR<ProductCategoryCreateWithoutTranslationsInput, ProductCategoryUncheckedCreateWithoutTranslationsInput>
    where?: ProductCategoryWhereInput
  }

  export type ProductCategoryUpdateToOneWithWhereWithoutTranslationsInput = {
    where?: ProductCategoryWhereInput
    data: XOR<ProductCategoryUpdateWithoutTranslationsInput, ProductCategoryUncheckedUpdateWithoutTranslationsInput>
  }

  export type ProductCategoryUpdateWithoutTranslationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: OrganizationUpdateOneRequiredWithoutProductCategoriesNestedInput
    image?: FileUpdateOneWithoutProductCategoryImageNestedInput
    products?: ProductUpdateManyWithoutCategoriesNestedInput
  }

  export type ProductCategoryUncheckedUpdateWithoutTranslationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: StringFieldUpdateOperationsInput | string
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    products?: ProductUncheckedUpdateManyWithoutCategoriesNestedInput
  }

  export type FileCreateWithoutProductImagesInput = {
    id?: string
    mimeType?: string | null
    size?: number | null
    filename?: string | null
    url?: string | null
    status?: $Enums.FileUploadStatus
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    organization?: OrganizationCreateNestedOneWithoutFilesInput
    manufacturerLogo?: ManufacturerCreateNestedOneWithoutLogoInput
    productCategoryImage?: ProductCategoryCreateNestedOneWithoutImageInput
    modifierImages?: ModifierCreateNestedManyWithoutImagesInput
    shippingMethodLogoFor?: ShippingMethodCreateNestedOneWithoutProviderLogoInput
    organizationLogo?: OrganizationCreateNestedOneWithoutLogoFileInput
    orderItemImages?: OrderItemCreateNestedManyWithoutImageInput
  }

  export type FileUncheckedCreateWithoutProductImagesInput = {
    id?: string
    mimeType?: string | null
    size?: number | null
    filename?: string | null
    url?: string | null
    status?: $Enums.FileUploadStatus
    organizationId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    manufacturerLogo?: ManufacturerUncheckedCreateNestedOneWithoutLogoInput
    productCategoryImage?: ProductCategoryUncheckedCreateNestedOneWithoutImageInput
    modifierImages?: ModifierUncheckedCreateNestedManyWithoutImagesInput
    shippingMethodLogoFor?: ShippingMethodUncheckedCreateNestedOneWithoutProviderLogoInput
    organizationLogo?: OrganizationUncheckedCreateNestedOneWithoutLogoFileInput
    orderItemImages?: OrderItemUncheckedCreateNestedManyWithoutImageInput
  }

  export type FileCreateOrConnectWithoutProductImagesInput = {
    where: FileWhereUniqueInput
    create: XOR<FileCreateWithoutProductImagesInput, FileUncheckedCreateWithoutProductImagesInput>
  }

  export type OrganizationCreateWithoutProductsInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    logo?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    legalEntity?: LegalEntityCreateNestedOneWithoutOrganizationsInput
    address: AddressCreateNestedOneWithoutOrganizationsInput
    configuration: OrganizationConfigurationCreateNestedOneWithoutOrganizationsInput
    logoFile?: FileCreateNestedOneWithoutOrganizationLogoInput
    files?: FileCreateNestedManyWithoutOrganizationInput
    members?: MemberCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationCreateNestedManyWithoutOrganizationInput
    orders?: OrderCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutProductsInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    legalEntityId?: string | null
    addressId: string
    configurationId: string
    logo?: string | null
    logoId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    files?: FileUncheckedCreateNestedManyWithoutOrganizationInput
    members?: MemberUncheckedCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganizationInput
    orders?: OrderUncheckedCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignUncheckedCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodUncheckedCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerUncheckedCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryUncheckedCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutProductsInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutProductsInput, OrganizationUncheckedCreateWithoutProductsInput>
  }

  export type ManufacturerCreateWithoutProductsInput = {
    id?: string
    name: string
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    logo?: FileCreateNestedOneWithoutManufacturerLogoInput
    organization: OrganizationCreateNestedOneWithoutManufacturersInput
    translations?: ManufacturerTranslationCreateNestedManyWithoutManufacturerInput
  }

  export type ManufacturerUncheckedCreateWithoutProductsInput = {
    id?: string
    name: string
    logoId?: string | null
    organizationId: string
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    translations?: ManufacturerTranslationUncheckedCreateNestedManyWithoutManufacturerInput
  }

  export type ManufacturerCreateOrConnectWithoutProductsInput = {
    where: ManufacturerWhereUniqueInput
    create: XOR<ManufacturerCreateWithoutProductsInput, ManufacturerUncheckedCreateWithoutProductsInput>
  }

  export type ProductCategoryCreateWithoutProductsInput = {
    id?: string
    slug?: string | null
    priority?: number | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    organization: OrganizationCreateNestedOneWithoutProductCategoriesInput
    image?: FileCreateNestedOneWithoutProductCategoryImageInput
    translations?: ProductCategoryTranslationCreateNestedManyWithoutProductCategoryInput
  }

  export type ProductCategoryUncheckedCreateWithoutProductsInput = {
    id?: string
    slug?: string | null
    organizationId: string
    priority?: number | null
    imageId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    translations?: ProductCategoryTranslationUncheckedCreateNestedManyWithoutProductCategoryInput
  }

  export type ProductCategoryCreateOrConnectWithoutProductsInput = {
    where: ProductCategoryWhereUniqueInput
    create: XOR<ProductCategoryCreateWithoutProductsInput, ProductCategoryUncheckedCreateWithoutProductsInput>
  }

  export type ModifierGroupCreateWithoutProductsInput = {
    id?: string
    selectMin?: number | null
    selectMax?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    modifiers?: ModifierCreateNestedManyWithoutModifierGroupInput
    translations?: ModifierGroupTranslationCreateNestedManyWithoutModifierGroupInput
  }

  export type ModifierGroupUncheckedCreateWithoutProductsInput = {
    id?: string
    selectMin?: number | null
    selectMax?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    modifiers?: ModifierUncheckedCreateNestedManyWithoutModifierGroupInput
    translations?: ModifierGroupTranslationUncheckedCreateNestedManyWithoutModifierGroupInput
  }

  export type ModifierGroupCreateOrConnectWithoutProductsInput = {
    where: ModifierGroupWhereUniqueInput
    create: XOR<ModifierGroupCreateWithoutProductsInput, ModifierGroupUncheckedCreateWithoutProductsInput>
  }

  export type ProductTranslationCreateWithoutProductInput = {
    id?: string
    locale: string
    title?: string | null
    description?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
  }

  export type ProductTranslationUncheckedCreateWithoutProductInput = {
    id?: string
    locale: string
    title?: string | null
    description?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
  }

  export type ProductTranslationCreateOrConnectWithoutProductInput = {
    where: ProductTranslationWhereUniqueInput
    create: XOR<ProductTranslationCreateWithoutProductInput, ProductTranslationUncheckedCreateWithoutProductInput>
  }

  export type ProductTranslationCreateManyProductInputEnvelope = {
    data: ProductTranslationCreateManyProductInput | ProductTranslationCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type ProductSnapshotCreateWithoutProductInput = {
    id?: string
    data: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    createdBy?: string | null
    latestForProduct?: ProductCreateNestedOneWithoutLatestSnapshotInput
    orderItems?: OrderItemCreateNestedManyWithoutProductSnapshotInput
  }

  export type ProductSnapshotUncheckedCreateWithoutProductInput = {
    id?: string
    data: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    createdBy?: string | null
    latestForProduct?: ProductUncheckedCreateNestedOneWithoutLatestSnapshotInput
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductSnapshotInput
  }

  export type ProductSnapshotCreateOrConnectWithoutProductInput = {
    where: ProductSnapshotWhereUniqueInput
    create: XOR<ProductSnapshotCreateWithoutProductInput, ProductSnapshotUncheckedCreateWithoutProductInput>
  }

  export type ProductSnapshotCreateManyProductInputEnvelope = {
    data: ProductSnapshotCreateManyProductInput | ProductSnapshotCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type ProductSnapshotCreateWithoutLatestForProductInput = {
    id?: string
    data: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    createdBy?: string | null
    product: ProductCreateNestedOneWithoutSnapshotsInput
    orderItems?: OrderItemCreateNestedManyWithoutProductSnapshotInput
  }

  export type ProductSnapshotUncheckedCreateWithoutLatestForProductInput = {
    id?: string
    productId: string
    data: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    createdBy?: string | null
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutProductSnapshotInput
  }

  export type ProductSnapshotCreateOrConnectWithoutLatestForProductInput = {
    where: ProductSnapshotWhereUniqueInput
    create: XOR<ProductSnapshotCreateWithoutLatestForProductInput, ProductSnapshotUncheckedCreateWithoutLatestForProductInput>
  }

  export type FileUpsertWithWhereUniqueWithoutProductImagesInput = {
    where: FileWhereUniqueInput
    update: XOR<FileUpdateWithoutProductImagesInput, FileUncheckedUpdateWithoutProductImagesInput>
    create: XOR<FileCreateWithoutProductImagesInput, FileUncheckedCreateWithoutProductImagesInput>
  }

  export type FileUpdateWithWhereUniqueWithoutProductImagesInput = {
    where: FileWhereUniqueInput
    data: XOR<FileUpdateWithoutProductImagesInput, FileUncheckedUpdateWithoutProductImagesInput>
  }

  export type FileUpdateManyWithWhereWithoutProductImagesInput = {
    where: FileScalarWhereInput
    data: XOR<FileUpdateManyMutationInput, FileUncheckedUpdateManyWithoutProductImagesInput>
  }

  export type OrganizationUpsertWithoutProductsInput = {
    update: XOR<OrganizationUpdateWithoutProductsInput, OrganizationUncheckedUpdateWithoutProductsInput>
    create: XOR<OrganizationCreateWithoutProductsInput, OrganizationUncheckedCreateWithoutProductsInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutProductsInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutProductsInput, OrganizationUncheckedUpdateWithoutProductsInput>
  }

  export type OrganizationUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntity?: LegalEntityUpdateOneWithoutOrganizationsNestedInput
    address?: AddressUpdateOneRequiredWithoutOrganizationsNestedInput
    configuration?: OrganizationConfigurationUpdateOneRequiredWithoutOrganizationsNestedInput
    logoFile?: FileUpdateOneWithoutOrganizationLogoNestedInput
    files?: FileUpdateManyWithoutOrganizationNestedInput
    members?: MemberUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: StringFieldUpdateOperationsInput | string
    configurationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    logoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    files?: FileUncheckedUpdateManyWithoutOrganizationNestedInput
    members?: MemberUncheckedUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUncheckedUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUncheckedUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUncheckedUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUncheckedUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type ManufacturerUpsertWithoutProductsInput = {
    update: XOR<ManufacturerUpdateWithoutProductsInput, ManufacturerUncheckedUpdateWithoutProductsInput>
    create: XOR<ManufacturerCreateWithoutProductsInput, ManufacturerUncheckedCreateWithoutProductsInput>
    where?: ManufacturerWhereInput
  }

  export type ManufacturerUpdateToOneWithWhereWithoutProductsInput = {
    where?: ManufacturerWhereInput
    data: XOR<ManufacturerUpdateWithoutProductsInput, ManufacturerUncheckedUpdateWithoutProductsInput>
  }

  export type ManufacturerUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: FileUpdateOneWithoutManufacturerLogoNestedInput
    organization?: OrganizationUpdateOneRequiredWithoutManufacturersNestedInput
    translations?: ManufacturerTranslationUpdateManyWithoutManufacturerNestedInput
  }

  export type ManufacturerUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logoId?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    translations?: ManufacturerTranslationUncheckedUpdateManyWithoutManufacturerNestedInput
  }

  export type ProductCategoryUpsertWithWhereUniqueWithoutProductsInput = {
    where: ProductCategoryWhereUniqueInput
    update: XOR<ProductCategoryUpdateWithoutProductsInput, ProductCategoryUncheckedUpdateWithoutProductsInput>
    create: XOR<ProductCategoryCreateWithoutProductsInput, ProductCategoryUncheckedCreateWithoutProductsInput>
  }

  export type ProductCategoryUpdateWithWhereUniqueWithoutProductsInput = {
    where: ProductCategoryWhereUniqueInput
    data: XOR<ProductCategoryUpdateWithoutProductsInput, ProductCategoryUncheckedUpdateWithoutProductsInput>
  }

  export type ProductCategoryUpdateManyWithWhereWithoutProductsInput = {
    where: ProductCategoryScalarWhereInput
    data: XOR<ProductCategoryUpdateManyMutationInput, ProductCategoryUncheckedUpdateManyWithoutProductsInput>
  }

  export type ModifierGroupUpsertWithWhereUniqueWithoutProductsInput = {
    where: ModifierGroupWhereUniqueInput
    update: XOR<ModifierGroupUpdateWithoutProductsInput, ModifierGroupUncheckedUpdateWithoutProductsInput>
    create: XOR<ModifierGroupCreateWithoutProductsInput, ModifierGroupUncheckedCreateWithoutProductsInput>
  }

  export type ModifierGroupUpdateWithWhereUniqueWithoutProductsInput = {
    where: ModifierGroupWhereUniqueInput
    data: XOR<ModifierGroupUpdateWithoutProductsInput, ModifierGroupUncheckedUpdateWithoutProductsInput>
  }

  export type ModifierGroupUpdateManyWithWhereWithoutProductsInput = {
    where: ModifierGroupScalarWhereInput
    data: XOR<ModifierGroupUpdateManyMutationInput, ModifierGroupUncheckedUpdateManyWithoutProductsInput>
  }

  export type ModifierGroupScalarWhereInput = {
    AND?: ModifierGroupScalarWhereInput | ModifierGroupScalarWhereInput[]
    OR?: ModifierGroupScalarWhereInput[]
    NOT?: ModifierGroupScalarWhereInput | ModifierGroupScalarWhereInput[]
    id?: StringFilter<"ModifierGroup"> | string
    selectMin?: IntNullableFilter<"ModifierGroup"> | number | null
    selectMax?: IntNullableFilter<"ModifierGroup"> | number | null
    createdAt?: DateTimeFilter<"ModifierGroup"> | Date | string
    updatedAt?: DateTimeFilter<"ModifierGroup"> | Date | string
  }

  export type ProductTranslationUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductTranslationWhereUniqueInput
    update: XOR<ProductTranslationUpdateWithoutProductInput, ProductTranslationUncheckedUpdateWithoutProductInput>
    create: XOR<ProductTranslationCreateWithoutProductInput, ProductTranslationUncheckedCreateWithoutProductInput>
  }

  export type ProductTranslationUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductTranslationWhereUniqueInput
    data: XOR<ProductTranslationUpdateWithoutProductInput, ProductTranslationUncheckedUpdateWithoutProductInput>
  }

  export type ProductTranslationUpdateManyWithWhereWithoutProductInput = {
    where: ProductTranslationScalarWhereInput
    data: XOR<ProductTranslationUpdateManyMutationInput, ProductTranslationUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductTranslationScalarWhereInput = {
    AND?: ProductTranslationScalarWhereInput | ProductTranslationScalarWhereInput[]
    OR?: ProductTranslationScalarWhereInput[]
    NOT?: ProductTranslationScalarWhereInput | ProductTranslationScalarWhereInput[]
    id?: StringFilter<"ProductTranslation"> | string
    locale?: StringFilter<"ProductTranslation"> | string
    title?: StringNullableFilter<"ProductTranslation"> | string | null
    description?: StringNullableFilter<"ProductTranslation"> | string | null
    productId?: StringFilter<"ProductTranslation"> | string
    createdAt?: DateTimeFilter<"ProductTranslation"> | Date | string
    createdBy?: StringNullableFilter<"ProductTranslation"> | string | null
    updatedAt?: DateTimeFilter<"ProductTranslation"> | Date | string
    updatedBy?: StringNullableFilter<"ProductTranslation"> | string | null
  }

  export type ProductSnapshotUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductSnapshotWhereUniqueInput
    update: XOR<ProductSnapshotUpdateWithoutProductInput, ProductSnapshotUncheckedUpdateWithoutProductInput>
    create: XOR<ProductSnapshotCreateWithoutProductInput, ProductSnapshotUncheckedCreateWithoutProductInput>
  }

  export type ProductSnapshotUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductSnapshotWhereUniqueInput
    data: XOR<ProductSnapshotUpdateWithoutProductInput, ProductSnapshotUncheckedUpdateWithoutProductInput>
  }

  export type ProductSnapshotUpdateManyWithWhereWithoutProductInput = {
    where: ProductSnapshotScalarWhereInput
    data: XOR<ProductSnapshotUpdateManyMutationInput, ProductSnapshotUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductSnapshotScalarWhereInput = {
    AND?: ProductSnapshotScalarWhereInput | ProductSnapshotScalarWhereInput[]
    OR?: ProductSnapshotScalarWhereInput[]
    NOT?: ProductSnapshotScalarWhereInput | ProductSnapshotScalarWhereInput[]
    id?: StringFilter<"ProductSnapshot"> | string
    productId?: StringFilter<"ProductSnapshot"> | string
    data?: JsonFilter<"ProductSnapshot">
    createdAt?: DateTimeFilter<"ProductSnapshot"> | Date | string
    createdBy?: StringNullableFilter<"ProductSnapshot"> | string | null
  }

  export type ProductSnapshotUpsertWithoutLatestForProductInput = {
    update: XOR<ProductSnapshotUpdateWithoutLatestForProductInput, ProductSnapshotUncheckedUpdateWithoutLatestForProductInput>
    create: XOR<ProductSnapshotCreateWithoutLatestForProductInput, ProductSnapshotUncheckedCreateWithoutLatestForProductInput>
    where?: ProductSnapshotWhereInput
  }

  export type ProductSnapshotUpdateToOneWithWhereWithoutLatestForProductInput = {
    where?: ProductSnapshotWhereInput
    data: XOR<ProductSnapshotUpdateWithoutLatestForProductInput, ProductSnapshotUncheckedUpdateWithoutLatestForProductInput>
  }

  export type ProductSnapshotUpdateWithoutLatestForProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    product?: ProductUpdateOneRequiredWithoutSnapshotsNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductSnapshotNestedInput
  }

  export type ProductSnapshotUncheckedUpdateWithoutLatestForProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductSnapshotNestedInput
  }

  export type ProductCreateWithoutSnapshotsInput = {
    id?: string
    content?: string | null
    slug?: string | null
    sku?: string | null
    basePrice: number
    discountedBasePrice?: number | null
    currency: string
    tags?: ProductCreatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: Date | string | null
    publishedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    images?: FileCreateNestedManyWithoutProductImagesInput
    organization: OrganizationCreateNestedOneWithoutProductsInput
    manufacturer?: ManufacturerCreateNestedOneWithoutProductsInput
    categories?: ProductCategoryCreateNestedManyWithoutProductsInput
    modifierGroups?: ModifierGroupCreateNestedManyWithoutProductsInput
    translations?: ProductTranslationCreateNestedManyWithoutProductInput
    latestSnapshot?: ProductSnapshotCreateNestedOneWithoutLatestForProductInput
  }

  export type ProductUncheckedCreateWithoutSnapshotsInput = {
    id?: string
    content?: string | null
    slug?: string | null
    sku?: string | null
    basePrice: number
    discountedBasePrice?: number | null
    currency: string
    organizationId: string
    manufacturerId?: string | null
    tags?: ProductCreatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: Date | string | null
    publishedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    latestSnapshotId?: string | null
    images?: FileUncheckedCreateNestedManyWithoutProductImagesInput
    categories?: ProductCategoryUncheckedCreateNestedManyWithoutProductsInput
    modifierGroups?: ModifierGroupUncheckedCreateNestedManyWithoutProductsInput
    translations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutSnapshotsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutSnapshotsInput, ProductUncheckedCreateWithoutSnapshotsInput>
  }

  export type ProductCreateWithoutLatestSnapshotInput = {
    id?: string
    content?: string | null
    slug?: string | null
    sku?: string | null
    basePrice: number
    discountedBasePrice?: number | null
    currency: string
    tags?: ProductCreatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: Date | string | null
    publishedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    images?: FileCreateNestedManyWithoutProductImagesInput
    organization: OrganizationCreateNestedOneWithoutProductsInput
    manufacturer?: ManufacturerCreateNestedOneWithoutProductsInput
    categories?: ProductCategoryCreateNestedManyWithoutProductsInput
    modifierGroups?: ModifierGroupCreateNestedManyWithoutProductsInput
    translations?: ProductTranslationCreateNestedManyWithoutProductInput
    snapshots?: ProductSnapshotCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutLatestSnapshotInput = {
    id?: string
    content?: string | null
    slug?: string | null
    sku?: string | null
    basePrice: number
    discountedBasePrice?: number | null
    currency: string
    organizationId: string
    manufacturerId?: string | null
    tags?: ProductCreatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: Date | string | null
    publishedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    images?: FileUncheckedCreateNestedManyWithoutProductImagesInput
    categories?: ProductCategoryUncheckedCreateNestedManyWithoutProductsInput
    modifierGroups?: ModifierGroupUncheckedCreateNestedManyWithoutProductsInput
    translations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
    snapshots?: ProductSnapshotUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutLatestSnapshotInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutLatestSnapshotInput, ProductUncheckedCreateWithoutLatestSnapshotInput>
  }

  export type OrderItemCreateWithoutProductSnapshotInput = {
    id?: string
    quantity: number
    unitPrice: number
    totalPrice: number
    rawData?: NullableJsonNullValueInput | InputJsonValue
    order: OrderCreateNestedOneWithoutItemsInput
    image?: FileCreateNestedOneWithoutOrderItemImagesInput
    translations?: OrderItemTranslationCreateNestedManyWithoutOrderItemInput
  }

  export type OrderItemUncheckedCreateWithoutProductSnapshotInput = {
    id?: string
    quantity: number
    unitPrice: number
    totalPrice: number
    orderId: string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    imageId?: string | null
    translations?: OrderItemTranslationUncheckedCreateNestedManyWithoutOrderItemInput
  }

  export type OrderItemCreateOrConnectWithoutProductSnapshotInput = {
    where: OrderItemWhereUniqueInput
    create: XOR<OrderItemCreateWithoutProductSnapshotInput, OrderItemUncheckedCreateWithoutProductSnapshotInput>
  }

  export type OrderItemCreateManyProductSnapshotInputEnvelope = {
    data: OrderItemCreateManyProductSnapshotInput | OrderItemCreateManyProductSnapshotInput[]
    skipDuplicates?: boolean
  }

  export type ProductUpsertWithoutSnapshotsInput = {
    update: XOR<ProductUpdateWithoutSnapshotsInput, ProductUncheckedUpdateWithoutSnapshotsInput>
    create: XOR<ProductCreateWithoutSnapshotsInput, ProductUncheckedCreateWithoutSnapshotsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutSnapshotsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutSnapshotsInput, ProductUncheckedUpdateWithoutSnapshotsInput>
  }

  export type ProductUpdateWithoutSnapshotsInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: FloatFieldUpdateOperationsInput | number
    discountedBasePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    tags?: ProductUpdatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    images?: FileUpdateManyWithoutProductImagesNestedInput
    organization?: OrganizationUpdateOneRequiredWithoutProductsNestedInput
    manufacturer?: ManufacturerUpdateOneWithoutProductsNestedInput
    categories?: ProductCategoryUpdateManyWithoutProductsNestedInput
    modifierGroups?: ModifierGroupUpdateManyWithoutProductsNestedInput
    translations?: ProductTranslationUpdateManyWithoutProductNestedInput
    latestSnapshot?: ProductSnapshotUpdateOneWithoutLatestForProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutSnapshotsInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: FloatFieldUpdateOperationsInput | number
    discountedBasePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    manufacturerId?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: ProductUpdatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    latestSnapshotId?: NullableStringFieldUpdateOperationsInput | string | null
    images?: FileUncheckedUpdateManyWithoutProductImagesNestedInput
    categories?: ProductCategoryUncheckedUpdateManyWithoutProductsNestedInput
    modifierGroups?: ModifierGroupUncheckedUpdateManyWithoutProductsNestedInput
    translations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUpsertWithoutLatestSnapshotInput = {
    update: XOR<ProductUpdateWithoutLatestSnapshotInput, ProductUncheckedUpdateWithoutLatestSnapshotInput>
    create: XOR<ProductCreateWithoutLatestSnapshotInput, ProductUncheckedCreateWithoutLatestSnapshotInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutLatestSnapshotInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutLatestSnapshotInput, ProductUncheckedUpdateWithoutLatestSnapshotInput>
  }

  export type ProductUpdateWithoutLatestSnapshotInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: FloatFieldUpdateOperationsInput | number
    discountedBasePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    tags?: ProductUpdatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    images?: FileUpdateManyWithoutProductImagesNestedInput
    organization?: OrganizationUpdateOneRequiredWithoutProductsNestedInput
    manufacturer?: ManufacturerUpdateOneWithoutProductsNestedInput
    categories?: ProductCategoryUpdateManyWithoutProductsNestedInput
    modifierGroups?: ModifierGroupUpdateManyWithoutProductsNestedInput
    translations?: ProductTranslationUpdateManyWithoutProductNestedInput
    snapshots?: ProductSnapshotUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutLatestSnapshotInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: FloatFieldUpdateOperationsInput | number
    discountedBasePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    manufacturerId?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: ProductUpdatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    images?: FileUncheckedUpdateManyWithoutProductImagesNestedInput
    categories?: ProductCategoryUncheckedUpdateManyWithoutProductsNestedInput
    modifierGroups?: ModifierGroupUncheckedUpdateManyWithoutProductsNestedInput
    translations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
    snapshots?: ProductSnapshotUncheckedUpdateManyWithoutProductNestedInput
  }

  export type OrderItemUpsertWithWhereUniqueWithoutProductSnapshotInput = {
    where: OrderItemWhereUniqueInput
    update: XOR<OrderItemUpdateWithoutProductSnapshotInput, OrderItemUncheckedUpdateWithoutProductSnapshotInput>
    create: XOR<OrderItemCreateWithoutProductSnapshotInput, OrderItemUncheckedCreateWithoutProductSnapshotInput>
  }

  export type OrderItemUpdateWithWhereUniqueWithoutProductSnapshotInput = {
    where: OrderItemWhereUniqueInput
    data: XOR<OrderItemUpdateWithoutProductSnapshotInput, OrderItemUncheckedUpdateWithoutProductSnapshotInput>
  }

  export type OrderItemUpdateManyWithWhereWithoutProductSnapshotInput = {
    where: OrderItemScalarWhereInput
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyWithoutProductSnapshotInput>
  }

  export type ProductCreateWithoutTranslationsInput = {
    id?: string
    content?: string | null
    slug?: string | null
    sku?: string | null
    basePrice: number
    discountedBasePrice?: number | null
    currency: string
    tags?: ProductCreatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: Date | string | null
    publishedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    images?: FileCreateNestedManyWithoutProductImagesInput
    organization: OrganizationCreateNestedOneWithoutProductsInput
    manufacturer?: ManufacturerCreateNestedOneWithoutProductsInput
    categories?: ProductCategoryCreateNestedManyWithoutProductsInput
    modifierGroups?: ModifierGroupCreateNestedManyWithoutProductsInput
    snapshots?: ProductSnapshotCreateNestedManyWithoutProductInput
    latestSnapshot?: ProductSnapshotCreateNestedOneWithoutLatestForProductInput
  }

  export type ProductUncheckedCreateWithoutTranslationsInput = {
    id?: string
    content?: string | null
    slug?: string | null
    sku?: string | null
    basePrice: number
    discountedBasePrice?: number | null
    currency: string
    organizationId: string
    manufacturerId?: string | null
    tags?: ProductCreatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: Date | string | null
    publishedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    latestSnapshotId?: string | null
    images?: FileUncheckedCreateNestedManyWithoutProductImagesInput
    categories?: ProductCategoryUncheckedCreateNestedManyWithoutProductsInput
    modifierGroups?: ModifierGroupUncheckedCreateNestedManyWithoutProductsInput
    snapshots?: ProductSnapshotUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutTranslationsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutTranslationsInput, ProductUncheckedCreateWithoutTranslationsInput>
  }

  export type ProductUpsertWithoutTranslationsInput = {
    update: XOR<ProductUpdateWithoutTranslationsInput, ProductUncheckedUpdateWithoutTranslationsInput>
    create: XOR<ProductCreateWithoutTranslationsInput, ProductUncheckedCreateWithoutTranslationsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutTranslationsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutTranslationsInput, ProductUncheckedUpdateWithoutTranslationsInput>
  }

  export type ProductUpdateWithoutTranslationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: FloatFieldUpdateOperationsInput | number
    discountedBasePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    tags?: ProductUpdatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    images?: FileUpdateManyWithoutProductImagesNestedInput
    organization?: OrganizationUpdateOneRequiredWithoutProductsNestedInput
    manufacturer?: ManufacturerUpdateOneWithoutProductsNestedInput
    categories?: ProductCategoryUpdateManyWithoutProductsNestedInput
    modifierGroups?: ModifierGroupUpdateManyWithoutProductsNestedInput
    snapshots?: ProductSnapshotUpdateManyWithoutProductNestedInput
    latestSnapshot?: ProductSnapshotUpdateOneWithoutLatestForProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutTranslationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: FloatFieldUpdateOperationsInput | number
    discountedBasePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    manufacturerId?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: ProductUpdatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    latestSnapshotId?: NullableStringFieldUpdateOperationsInput | string | null
    images?: FileUncheckedUpdateManyWithoutProductImagesNestedInput
    categories?: ProductCategoryUncheckedUpdateManyWithoutProductsNestedInput
    modifierGroups?: ModifierGroupUncheckedUpdateManyWithoutProductsNestedInput
    snapshots?: ProductSnapshotUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ModifierCreateWithoutModifierGroupInput = {
    id?: string
    title: string
    description?: string | null
    sku?: string | null
    price: number
    images?: FileCreateNestedManyWithoutModifierImagesInput
  }

  export type ModifierUncheckedCreateWithoutModifierGroupInput = {
    id?: string
    title: string
    description?: string | null
    sku?: string | null
    price: number
    images?: FileUncheckedCreateNestedManyWithoutModifierImagesInput
  }

  export type ModifierCreateOrConnectWithoutModifierGroupInput = {
    where: ModifierWhereUniqueInput
    create: XOR<ModifierCreateWithoutModifierGroupInput, ModifierUncheckedCreateWithoutModifierGroupInput>
  }

  export type ModifierCreateManyModifierGroupInputEnvelope = {
    data: ModifierCreateManyModifierGroupInput | ModifierCreateManyModifierGroupInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutModifierGroupsInput = {
    id?: string
    content?: string | null
    slug?: string | null
    sku?: string | null
    basePrice: number
    discountedBasePrice?: number | null
    currency: string
    tags?: ProductCreatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: Date | string | null
    publishedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    images?: FileCreateNestedManyWithoutProductImagesInput
    organization: OrganizationCreateNestedOneWithoutProductsInput
    manufacturer?: ManufacturerCreateNestedOneWithoutProductsInput
    categories?: ProductCategoryCreateNestedManyWithoutProductsInput
    translations?: ProductTranslationCreateNestedManyWithoutProductInput
    snapshots?: ProductSnapshotCreateNestedManyWithoutProductInput
    latestSnapshot?: ProductSnapshotCreateNestedOneWithoutLatestForProductInput
  }

  export type ProductUncheckedCreateWithoutModifierGroupsInput = {
    id?: string
    content?: string | null
    slug?: string | null
    sku?: string | null
    basePrice: number
    discountedBasePrice?: number | null
    currency: string
    organizationId: string
    manufacturerId?: string | null
    tags?: ProductCreatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: Date | string | null
    publishedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    latestSnapshotId?: string | null
    images?: FileUncheckedCreateNestedManyWithoutProductImagesInput
    categories?: ProductCategoryUncheckedCreateNestedManyWithoutProductsInput
    translations?: ProductTranslationUncheckedCreateNestedManyWithoutProductInput
    snapshots?: ProductSnapshotUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutModifierGroupsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutModifierGroupsInput, ProductUncheckedCreateWithoutModifierGroupsInput>
  }

  export type ModifierGroupTranslationCreateWithoutModifierGroupInput = {
    id?: string
    locale: string
    title?: string | null
    description?: string | null
  }

  export type ModifierGroupTranslationUncheckedCreateWithoutModifierGroupInput = {
    id?: string
    locale: string
    title?: string | null
    description?: string | null
  }

  export type ModifierGroupTranslationCreateOrConnectWithoutModifierGroupInput = {
    where: ModifierGroupTranslationWhereUniqueInput
    create: XOR<ModifierGroupTranslationCreateWithoutModifierGroupInput, ModifierGroupTranslationUncheckedCreateWithoutModifierGroupInput>
  }

  export type ModifierGroupTranslationCreateManyModifierGroupInputEnvelope = {
    data: ModifierGroupTranslationCreateManyModifierGroupInput | ModifierGroupTranslationCreateManyModifierGroupInput[]
    skipDuplicates?: boolean
  }

  export type ModifierUpsertWithWhereUniqueWithoutModifierGroupInput = {
    where: ModifierWhereUniqueInput
    update: XOR<ModifierUpdateWithoutModifierGroupInput, ModifierUncheckedUpdateWithoutModifierGroupInput>
    create: XOR<ModifierCreateWithoutModifierGroupInput, ModifierUncheckedCreateWithoutModifierGroupInput>
  }

  export type ModifierUpdateWithWhereUniqueWithoutModifierGroupInput = {
    where: ModifierWhereUniqueInput
    data: XOR<ModifierUpdateWithoutModifierGroupInput, ModifierUncheckedUpdateWithoutModifierGroupInput>
  }

  export type ModifierUpdateManyWithWhereWithoutModifierGroupInput = {
    where: ModifierScalarWhereInput
    data: XOR<ModifierUpdateManyMutationInput, ModifierUncheckedUpdateManyWithoutModifierGroupInput>
  }

  export type ProductUpsertWithWhereUniqueWithoutModifierGroupsInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutModifierGroupsInput, ProductUncheckedUpdateWithoutModifierGroupsInput>
    create: XOR<ProductCreateWithoutModifierGroupsInput, ProductUncheckedCreateWithoutModifierGroupsInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutModifierGroupsInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutModifierGroupsInput, ProductUncheckedUpdateWithoutModifierGroupsInput>
  }

  export type ProductUpdateManyWithWhereWithoutModifierGroupsInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutModifierGroupsInput>
  }

  export type ModifierGroupTranslationUpsertWithWhereUniqueWithoutModifierGroupInput = {
    where: ModifierGroupTranslationWhereUniqueInput
    update: XOR<ModifierGroupTranslationUpdateWithoutModifierGroupInput, ModifierGroupTranslationUncheckedUpdateWithoutModifierGroupInput>
    create: XOR<ModifierGroupTranslationCreateWithoutModifierGroupInput, ModifierGroupTranslationUncheckedCreateWithoutModifierGroupInput>
  }

  export type ModifierGroupTranslationUpdateWithWhereUniqueWithoutModifierGroupInput = {
    where: ModifierGroupTranslationWhereUniqueInput
    data: XOR<ModifierGroupTranslationUpdateWithoutModifierGroupInput, ModifierGroupTranslationUncheckedUpdateWithoutModifierGroupInput>
  }

  export type ModifierGroupTranslationUpdateManyWithWhereWithoutModifierGroupInput = {
    where: ModifierGroupTranslationScalarWhereInput
    data: XOR<ModifierGroupTranslationUpdateManyMutationInput, ModifierGroupTranslationUncheckedUpdateManyWithoutModifierGroupInput>
  }

  export type ModifierGroupTranslationScalarWhereInput = {
    AND?: ModifierGroupTranslationScalarWhereInput | ModifierGroupTranslationScalarWhereInput[]
    OR?: ModifierGroupTranslationScalarWhereInput[]
    NOT?: ModifierGroupTranslationScalarWhereInput | ModifierGroupTranslationScalarWhereInput[]
    id?: StringFilter<"ModifierGroupTranslation"> | string
    locale?: StringFilter<"ModifierGroupTranslation"> | string
    title?: StringNullableFilter<"ModifierGroupTranslation"> | string | null
    description?: StringNullableFilter<"ModifierGroupTranslation"> | string | null
    modifierGroupId?: StringFilter<"ModifierGroupTranslation"> | string
  }

  export type ModifierGroupCreateWithoutTranslationsInput = {
    id?: string
    selectMin?: number | null
    selectMax?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    modifiers?: ModifierCreateNestedManyWithoutModifierGroupInput
    products?: ProductCreateNestedManyWithoutModifierGroupsInput
  }

  export type ModifierGroupUncheckedCreateWithoutTranslationsInput = {
    id?: string
    selectMin?: number | null
    selectMax?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    modifiers?: ModifierUncheckedCreateNestedManyWithoutModifierGroupInput
    products?: ProductUncheckedCreateNestedManyWithoutModifierGroupsInput
  }

  export type ModifierGroupCreateOrConnectWithoutTranslationsInput = {
    where: ModifierGroupWhereUniqueInput
    create: XOR<ModifierGroupCreateWithoutTranslationsInput, ModifierGroupUncheckedCreateWithoutTranslationsInput>
  }

  export type ModifierGroupUpsertWithoutTranslationsInput = {
    update: XOR<ModifierGroupUpdateWithoutTranslationsInput, ModifierGroupUncheckedUpdateWithoutTranslationsInput>
    create: XOR<ModifierGroupCreateWithoutTranslationsInput, ModifierGroupUncheckedCreateWithoutTranslationsInput>
    where?: ModifierGroupWhereInput
  }

  export type ModifierGroupUpdateToOneWithWhereWithoutTranslationsInput = {
    where?: ModifierGroupWhereInput
    data: XOR<ModifierGroupUpdateWithoutTranslationsInput, ModifierGroupUncheckedUpdateWithoutTranslationsInput>
  }

  export type ModifierGroupUpdateWithoutTranslationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    selectMin?: NullableIntFieldUpdateOperationsInput | number | null
    selectMax?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modifiers?: ModifierUpdateManyWithoutModifierGroupNestedInput
    products?: ProductUpdateManyWithoutModifierGroupsNestedInput
  }

  export type ModifierGroupUncheckedUpdateWithoutTranslationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    selectMin?: NullableIntFieldUpdateOperationsInput | number | null
    selectMax?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modifiers?: ModifierUncheckedUpdateManyWithoutModifierGroupNestedInput
    products?: ProductUncheckedUpdateManyWithoutModifierGroupsNestedInput
  }

  export type ModifierGroupCreateWithoutModifiersInput = {
    id?: string
    selectMin?: number | null
    selectMax?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductCreateNestedManyWithoutModifierGroupsInput
    translations?: ModifierGroupTranslationCreateNestedManyWithoutModifierGroupInput
  }

  export type ModifierGroupUncheckedCreateWithoutModifiersInput = {
    id?: string
    selectMin?: number | null
    selectMax?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    products?: ProductUncheckedCreateNestedManyWithoutModifierGroupsInput
    translations?: ModifierGroupTranslationUncheckedCreateNestedManyWithoutModifierGroupInput
  }

  export type ModifierGroupCreateOrConnectWithoutModifiersInput = {
    where: ModifierGroupWhereUniqueInput
    create: XOR<ModifierGroupCreateWithoutModifiersInput, ModifierGroupUncheckedCreateWithoutModifiersInput>
  }

  export type FileCreateWithoutModifierImagesInput = {
    id?: string
    mimeType?: string | null
    size?: number | null
    filename?: string | null
    url?: string | null
    status?: $Enums.FileUploadStatus
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    organization?: OrganizationCreateNestedOneWithoutFilesInput
    manufacturerLogo?: ManufacturerCreateNestedOneWithoutLogoInput
    productCategoryImage?: ProductCategoryCreateNestedOneWithoutImageInput
    productImages?: ProductCreateNestedManyWithoutImagesInput
    shippingMethodLogoFor?: ShippingMethodCreateNestedOneWithoutProviderLogoInput
    organizationLogo?: OrganizationCreateNestedOneWithoutLogoFileInput
    orderItemImages?: OrderItemCreateNestedManyWithoutImageInput
  }

  export type FileUncheckedCreateWithoutModifierImagesInput = {
    id?: string
    mimeType?: string | null
    size?: number | null
    filename?: string | null
    url?: string | null
    status?: $Enums.FileUploadStatus
    organizationId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    manufacturerLogo?: ManufacturerUncheckedCreateNestedOneWithoutLogoInput
    productCategoryImage?: ProductCategoryUncheckedCreateNestedOneWithoutImageInput
    productImages?: ProductUncheckedCreateNestedManyWithoutImagesInput
    shippingMethodLogoFor?: ShippingMethodUncheckedCreateNestedOneWithoutProviderLogoInput
    organizationLogo?: OrganizationUncheckedCreateNestedOneWithoutLogoFileInput
    orderItemImages?: OrderItemUncheckedCreateNestedManyWithoutImageInput
  }

  export type FileCreateOrConnectWithoutModifierImagesInput = {
    where: FileWhereUniqueInput
    create: XOR<FileCreateWithoutModifierImagesInput, FileUncheckedCreateWithoutModifierImagesInput>
  }

  export type ModifierGroupUpsertWithoutModifiersInput = {
    update: XOR<ModifierGroupUpdateWithoutModifiersInput, ModifierGroupUncheckedUpdateWithoutModifiersInput>
    create: XOR<ModifierGroupCreateWithoutModifiersInput, ModifierGroupUncheckedCreateWithoutModifiersInput>
    where?: ModifierGroupWhereInput
  }

  export type ModifierGroupUpdateToOneWithWhereWithoutModifiersInput = {
    where?: ModifierGroupWhereInput
    data: XOR<ModifierGroupUpdateWithoutModifiersInput, ModifierGroupUncheckedUpdateWithoutModifiersInput>
  }

  export type ModifierGroupUpdateWithoutModifiersInput = {
    id?: StringFieldUpdateOperationsInput | string
    selectMin?: NullableIntFieldUpdateOperationsInput | number | null
    selectMax?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUpdateManyWithoutModifierGroupsNestedInput
    translations?: ModifierGroupTranslationUpdateManyWithoutModifierGroupNestedInput
  }

  export type ModifierGroupUncheckedUpdateWithoutModifiersInput = {
    id?: StringFieldUpdateOperationsInput | string
    selectMin?: NullableIntFieldUpdateOperationsInput | number | null
    selectMax?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    products?: ProductUncheckedUpdateManyWithoutModifierGroupsNestedInput
    translations?: ModifierGroupTranslationUncheckedUpdateManyWithoutModifierGroupNestedInput
  }

  export type FileUpsertWithWhereUniqueWithoutModifierImagesInput = {
    where: FileWhereUniqueInput
    update: XOR<FileUpdateWithoutModifierImagesInput, FileUncheckedUpdateWithoutModifierImagesInput>
    create: XOR<FileCreateWithoutModifierImagesInput, FileUncheckedCreateWithoutModifierImagesInput>
  }

  export type FileUpdateWithWhereUniqueWithoutModifierImagesInput = {
    where: FileWhereUniqueInput
    data: XOR<FileUpdateWithoutModifierImagesInput, FileUncheckedUpdateWithoutModifierImagesInput>
  }

  export type FileUpdateManyWithWhereWithoutModifierImagesInput = {
    where: FileScalarWhereInput
    data: XOR<FileUpdateManyMutationInput, FileUncheckedUpdateManyWithoutModifierImagesInput>
  }

  export type OrganizationCreateWithoutOrdersInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    logo?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    legalEntity?: LegalEntityCreateNestedOneWithoutOrganizationsInput
    address: AddressCreateNestedOneWithoutOrganizationsInput
    configuration: OrganizationConfigurationCreateNestedOneWithoutOrganizationsInput
    logoFile?: FileCreateNestedOneWithoutOrganizationLogoInput
    files?: FileCreateNestedManyWithoutOrganizationInput
    members?: MemberCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryCreateNestedManyWithoutOrganizationInput
    products?: ProductCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutOrdersInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    legalEntityId?: string | null
    addressId: string
    configurationId: string
    logo?: string | null
    logoId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    files?: FileUncheckedCreateNestedManyWithoutOrganizationInput
    members?: MemberUncheckedCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignUncheckedCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodUncheckedCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerUncheckedCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryUncheckedCreateNestedManyWithoutOrganizationInput
    products?: ProductUncheckedCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutOrdersInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutOrdersInput, OrganizationUncheckedCreateWithoutOrdersInput>
  }

  export type UserCreateWithoutOrdersInput = {
    id: string
    name: string
    firstname: string
    lastname: string
    email: string
    emailVerified: boolean
    image?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    sessions?: SessionCreateNestedManyWithoutUserInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    members?: MemberCreateNestedManyWithoutUserInput
    invitations?: InvitationCreateNestedManyWithoutUserInput
    shippingAddresses?: AddressCreateNestedManyWithoutUsersInput
    reservations?: ReservationCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutOrdersInput = {
    id: string
    name: string
    firstname: string
    lastname: string
    email: string
    emailVerified: boolean
    image?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    members?: MemberUncheckedCreateNestedManyWithoutUserInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutUserInput
    shippingAddresses?: AddressUncheckedCreateNestedManyWithoutUsersInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutOrdersInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutOrdersInput, UserUncheckedCreateWithoutOrdersInput>
  }

  export type PaymentCreateWithoutOrderInput = {
    id?: string
    method: $Enums.PaymentMethod
    provider?: $Enums.PaymentProvider
    shipping?: number
    subtotal?: number
    total: number
    discount?: number | null
    currency?: $Enums.Currency
    status?: $Enums.PaymentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    sessions?: PaymentSessionCreateNestedManyWithoutPaymentInput
  }

  export type PaymentUncheckedCreateWithoutOrderInput = {
    id?: string
    method: $Enums.PaymentMethod
    provider?: $Enums.PaymentProvider
    shipping?: number
    subtotal?: number
    total: number
    discount?: number | null
    currency?: $Enums.Currency
    status?: $Enums.PaymentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    sessions?: PaymentSessionUncheckedCreateNestedManyWithoutPaymentInput
  }

  export type PaymentCreateOrConnectWithoutOrderInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutOrderInput, PaymentUncheckedCreateWithoutOrderInput>
  }

  export type ShippingMethodCreateWithoutOrdersInput = {
    id?: string
    title: string
    providerName: string
    requireDateOfDelivery?: boolean | null
    archivedAt?: Date | string | null
    archivedBy?: string | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    providerLogo?: FileCreateNestedOneWithoutShippingMethodLogoForInput
    organization: OrganizationCreateNestedOneWithoutShippingMethodsInput
    shippingZones?: ShippingZoneCreateNestedManyWithoutShippingMethodInput
  }

  export type ShippingMethodUncheckedCreateWithoutOrdersInput = {
    id?: string
    title: string
    providerName: string
    providerLogoId?: string | null
    requireDateOfDelivery?: boolean | null
    organizationId: string
    archivedAt?: Date | string | null
    archivedBy?: string | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    shippingZones?: ShippingZoneUncheckedCreateNestedManyWithoutShippingMethodInput
  }

  export type ShippingMethodCreateOrConnectWithoutOrdersInput = {
    where: ShippingMethodWhereUniqueInput
    create: XOR<ShippingMethodCreateWithoutOrdersInput, ShippingMethodUncheckedCreateWithoutOrdersInput>
  }

  export type AddressCreateWithoutOrdersInput = {
    id?: string
    firstname?: string | null
    lastname?: string | null
    phone?: string | null
    addressLineOne: string
    doorNumber?: string | null
    addressLineTwo?: string | null
    zipCode?: string | null
    placeId?: string | null
    deliveryInstructions?: string | null
    city: string
    country?: string | null
    latitude?: number | null
    longitude?: number | null
    isDefault?: boolean
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    LegalEntity?: LegalEntityCreateNestedManyWithoutAddressInput
    organizations?: OrganizationCreateNestedManyWithoutAddressInput
    users?: UserCreateNestedManyWithoutShippingAddressesInput
  }

  export type AddressUncheckedCreateWithoutOrdersInput = {
    id?: string
    firstname?: string | null
    lastname?: string | null
    phone?: string | null
    addressLineOne: string
    doorNumber?: string | null
    addressLineTwo?: string | null
    zipCode?: string | null
    placeId?: string | null
    deliveryInstructions?: string | null
    city: string
    country?: string | null
    latitude?: number | null
    longitude?: number | null
    isDefault?: boolean
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    LegalEntity?: LegalEntityUncheckedCreateNestedManyWithoutAddressInput
    organizations?: OrganizationUncheckedCreateNestedManyWithoutAddressInput
    users?: UserUncheckedCreateNestedManyWithoutShippingAddressesInput
  }

  export type AddressCreateOrConnectWithoutOrdersInput = {
    where: AddressWhereUniqueInput
    create: XOR<AddressCreateWithoutOrdersInput, AddressUncheckedCreateWithoutOrdersInput>
  }

  export type OrderItemCreateWithoutOrderInput = {
    id?: string
    quantity: number
    unitPrice: number
    totalPrice: number
    rawData?: NullableJsonNullValueInput | InputJsonValue
    productSnapshot?: ProductSnapshotCreateNestedOneWithoutOrderItemsInput
    image?: FileCreateNestedOneWithoutOrderItemImagesInput
    translations?: OrderItemTranslationCreateNestedManyWithoutOrderItemInput
  }

  export type OrderItemUncheckedCreateWithoutOrderInput = {
    id?: string
    quantity: number
    unitPrice: number
    totalPrice: number
    rawData?: NullableJsonNullValueInput | InputJsonValue
    productSnapshotId?: string | null
    imageId?: string | null
    translations?: OrderItemTranslationUncheckedCreateNestedManyWithoutOrderItemInput
  }

  export type OrderItemCreateOrConnectWithoutOrderInput = {
    where: OrderItemWhereUniqueInput
    create: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput>
  }

  export type OrderItemCreateManyOrderInputEnvelope = {
    data: OrderItemCreateManyOrderInput | OrderItemCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type OrganizationUpsertWithoutOrdersInput = {
    update: XOR<OrganizationUpdateWithoutOrdersInput, OrganizationUncheckedUpdateWithoutOrdersInput>
    create: XOR<OrganizationCreateWithoutOrdersInput, OrganizationUncheckedCreateWithoutOrdersInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutOrdersInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutOrdersInput, OrganizationUncheckedUpdateWithoutOrdersInput>
  }

  export type OrganizationUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntity?: LegalEntityUpdateOneWithoutOrganizationsNestedInput
    address?: AddressUpdateOneRequiredWithoutOrganizationsNestedInput
    configuration?: OrganizationConfigurationUpdateOneRequiredWithoutOrganizationsNestedInput
    logoFile?: FileUpdateOneWithoutOrganizationLogoNestedInput
    files?: FileUpdateManyWithoutOrganizationNestedInput
    members?: MemberUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUpdateManyWithoutOrganizationNestedInput
    products?: ProductUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: StringFieldUpdateOperationsInput | string
    configurationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    logoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    files?: FileUncheckedUpdateManyWithoutOrganizationNestedInput
    members?: MemberUncheckedUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUncheckedUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUncheckedUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUncheckedUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
    products?: ProductUncheckedUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type UserUpsertWithoutOrdersInput = {
    update: XOR<UserUpdateWithoutOrdersInput, UserUncheckedUpdateWithoutOrdersInput>
    create: XOR<UserCreateWithoutOrdersInput, UserUncheckedCreateWithoutOrdersInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutOrdersInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutOrdersInput, UserUncheckedUpdateWithoutOrdersInput>
  }

  export type UserUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sessions?: SessionUpdateManyWithoutUserNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    members?: MemberUpdateManyWithoutUserNestedInput
    invitations?: InvitationUpdateManyWithoutUserNestedInput
    shippingAddresses?: AddressUpdateManyWithoutUsersNestedInput
    reservations?: ReservationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    members?: MemberUncheckedUpdateManyWithoutUserNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutUserNestedInput
    shippingAddresses?: AddressUncheckedUpdateManyWithoutUsersNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type PaymentUpsertWithoutOrderInput = {
    update: XOR<PaymentUpdateWithoutOrderInput, PaymentUncheckedUpdateWithoutOrderInput>
    create: XOR<PaymentCreateWithoutOrderInput, PaymentUncheckedCreateWithoutOrderInput>
    where?: PaymentWhereInput
  }

  export type PaymentUpdateToOneWithWhereWithoutOrderInput = {
    where?: PaymentWhereInput
    data: XOR<PaymentUpdateWithoutOrderInput, PaymentUncheckedUpdateWithoutOrderInput>
  }

  export type PaymentUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    method?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    provider?: EnumPaymentProviderFieldUpdateOperationsInput | $Enums.PaymentProvider
    shipping?: FloatFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    total?: FloatFieldUpdateOperationsInput | number
    discount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sessions?: PaymentSessionUpdateManyWithoutPaymentNestedInput
  }

  export type PaymentUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    method?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    provider?: EnumPaymentProviderFieldUpdateOperationsInput | $Enums.PaymentProvider
    shipping?: FloatFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    total?: FloatFieldUpdateOperationsInput | number
    discount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sessions?: PaymentSessionUncheckedUpdateManyWithoutPaymentNestedInput
  }

  export type ShippingMethodUpsertWithoutOrdersInput = {
    update: XOR<ShippingMethodUpdateWithoutOrdersInput, ShippingMethodUncheckedUpdateWithoutOrdersInput>
    create: XOR<ShippingMethodCreateWithoutOrdersInput, ShippingMethodUncheckedCreateWithoutOrdersInput>
    where?: ShippingMethodWhereInput
  }

  export type ShippingMethodUpdateToOneWithWhereWithoutOrdersInput = {
    where?: ShippingMethodWhereInput
    data: XOR<ShippingMethodUpdateWithoutOrdersInput, ShippingMethodUncheckedUpdateWithoutOrdersInput>
  }

  export type ShippingMethodUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    providerName?: StringFieldUpdateOperationsInput | string
    requireDateOfDelivery?: NullableBoolFieldUpdateOperationsInput | boolean | null
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    providerLogo?: FileUpdateOneWithoutShippingMethodLogoForNestedInput
    organization?: OrganizationUpdateOneRequiredWithoutShippingMethodsNestedInput
    shippingZones?: ShippingZoneUpdateManyWithoutShippingMethodNestedInput
  }

  export type ShippingMethodUncheckedUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    providerName?: StringFieldUpdateOperationsInput | string
    providerLogoId?: NullableStringFieldUpdateOperationsInput | string | null
    requireDateOfDelivery?: NullableBoolFieldUpdateOperationsInput | boolean | null
    organizationId?: StringFieldUpdateOperationsInput | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    shippingZones?: ShippingZoneUncheckedUpdateManyWithoutShippingMethodNestedInput
  }

  export type AddressUpsertWithoutOrdersInput = {
    update: XOR<AddressUpdateWithoutOrdersInput, AddressUncheckedUpdateWithoutOrdersInput>
    create: XOR<AddressCreateWithoutOrdersInput, AddressUncheckedCreateWithoutOrdersInput>
    where?: AddressWhereInput
  }

  export type AddressUpdateToOneWithWhereWithoutOrdersInput = {
    where?: AddressWhereInput
    data: XOR<AddressUpdateWithoutOrdersInput, AddressUncheckedUpdateWithoutOrdersInput>
  }

  export type AddressUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    addressLineOne?: StringFieldUpdateOperationsInput | string
    doorNumber?: NullableStringFieldUpdateOperationsInput | string | null
    addressLineTwo?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    placeId?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    LegalEntity?: LegalEntityUpdateManyWithoutAddressNestedInput
    organizations?: OrganizationUpdateManyWithoutAddressNestedInput
    users?: UserUpdateManyWithoutShippingAddressesNestedInput
  }

  export type AddressUncheckedUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    addressLineOne?: StringFieldUpdateOperationsInput | string
    doorNumber?: NullableStringFieldUpdateOperationsInput | string | null
    addressLineTwo?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    placeId?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    LegalEntity?: LegalEntityUncheckedUpdateManyWithoutAddressNestedInput
    organizations?: OrganizationUncheckedUpdateManyWithoutAddressNestedInput
    users?: UserUncheckedUpdateManyWithoutShippingAddressesNestedInput
  }

  export type OrderItemUpsertWithWhereUniqueWithoutOrderInput = {
    where: OrderItemWhereUniqueInput
    update: XOR<OrderItemUpdateWithoutOrderInput, OrderItemUncheckedUpdateWithoutOrderInput>
    create: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput>
  }

  export type OrderItemUpdateWithWhereUniqueWithoutOrderInput = {
    where: OrderItemWhereUniqueInput
    data: XOR<OrderItemUpdateWithoutOrderInput, OrderItemUncheckedUpdateWithoutOrderInput>
  }

  export type OrderItemUpdateManyWithWhereWithoutOrderInput = {
    where: OrderItemScalarWhereInput
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyWithoutOrderInput>
  }

  export type OrderCreateWithoutItemsInput = {
    id?: string
    token: string
    expiresAt?: Date | string
    referenceId: string
    fulfilmentMethod?: $Enums.OrderFulfilmentMethod | null
    dateOfExecution?: Date | string | null
    currency?: $Enums.Currency
    sourceIp?: string | null
    acceptedAt?: Date | string | null
    readyForDispatchAt?: Date | string | null
    dispatchedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutOrdersInput
    user?: UserCreateNestedOneWithoutOrdersInput
    payment?: PaymentCreateNestedOneWithoutOrderInput
    shippingMethod?: ShippingMethodCreateNestedOneWithoutOrdersInput
    shippingAddress?: AddressCreateNestedOneWithoutOrdersInput
  }

  export type OrderUncheckedCreateWithoutItemsInput = {
    id?: string
    organizationId: string
    userId?: string | null
    paymentId?: string | null
    token: string
    expiresAt?: Date | string
    referenceId: string
    fulfilmentMethod?: $Enums.OrderFulfilmentMethod | null
    shippingMethodId?: string | null
    shippingAddressId?: string | null
    dateOfExecution?: Date | string | null
    currency?: $Enums.Currency
    sourceIp?: string | null
    acceptedAt?: Date | string | null
    readyForDispatchAt?: Date | string | null
    dispatchedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderCreateOrConnectWithoutItemsInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutItemsInput, OrderUncheckedCreateWithoutItemsInput>
  }

  export type ProductSnapshotCreateWithoutOrderItemsInput = {
    id?: string
    data: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    createdBy?: string | null
    product: ProductCreateNestedOneWithoutSnapshotsInput
    latestForProduct?: ProductCreateNestedOneWithoutLatestSnapshotInput
  }

  export type ProductSnapshotUncheckedCreateWithoutOrderItemsInput = {
    id?: string
    productId: string
    data: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    createdBy?: string | null
    latestForProduct?: ProductUncheckedCreateNestedOneWithoutLatestSnapshotInput
  }

  export type ProductSnapshotCreateOrConnectWithoutOrderItemsInput = {
    where: ProductSnapshotWhereUniqueInput
    create: XOR<ProductSnapshotCreateWithoutOrderItemsInput, ProductSnapshotUncheckedCreateWithoutOrderItemsInput>
  }

  export type FileCreateWithoutOrderItemImagesInput = {
    id?: string
    mimeType?: string | null
    size?: number | null
    filename?: string | null
    url?: string | null
    status?: $Enums.FileUploadStatus
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    organization?: OrganizationCreateNestedOneWithoutFilesInput
    manufacturerLogo?: ManufacturerCreateNestedOneWithoutLogoInput
    productCategoryImage?: ProductCategoryCreateNestedOneWithoutImageInput
    productImages?: ProductCreateNestedManyWithoutImagesInput
    modifierImages?: ModifierCreateNestedManyWithoutImagesInput
    shippingMethodLogoFor?: ShippingMethodCreateNestedOneWithoutProviderLogoInput
    organizationLogo?: OrganizationCreateNestedOneWithoutLogoFileInput
  }

  export type FileUncheckedCreateWithoutOrderItemImagesInput = {
    id?: string
    mimeType?: string | null
    size?: number | null
    filename?: string | null
    url?: string | null
    status?: $Enums.FileUploadStatus
    organizationId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    manufacturerLogo?: ManufacturerUncheckedCreateNestedOneWithoutLogoInput
    productCategoryImage?: ProductCategoryUncheckedCreateNestedOneWithoutImageInput
    productImages?: ProductUncheckedCreateNestedManyWithoutImagesInput
    modifierImages?: ModifierUncheckedCreateNestedManyWithoutImagesInput
    shippingMethodLogoFor?: ShippingMethodUncheckedCreateNestedOneWithoutProviderLogoInput
    organizationLogo?: OrganizationUncheckedCreateNestedOneWithoutLogoFileInput
  }

  export type FileCreateOrConnectWithoutOrderItemImagesInput = {
    where: FileWhereUniqueInput
    create: XOR<FileCreateWithoutOrderItemImagesInput, FileUncheckedCreateWithoutOrderItemImagesInput>
  }

  export type OrderItemTranslationCreateWithoutOrderItemInput = {
    id?: string
    locale: string
    title: string
    subtitle?: string | null
  }

  export type OrderItemTranslationUncheckedCreateWithoutOrderItemInput = {
    id?: string
    locale: string
    title: string
    subtitle?: string | null
  }

  export type OrderItemTranslationCreateOrConnectWithoutOrderItemInput = {
    where: OrderItemTranslationWhereUniqueInput
    create: XOR<OrderItemTranslationCreateWithoutOrderItemInput, OrderItemTranslationUncheckedCreateWithoutOrderItemInput>
  }

  export type OrderItemTranslationCreateManyOrderItemInputEnvelope = {
    data: OrderItemTranslationCreateManyOrderItemInput | OrderItemTranslationCreateManyOrderItemInput[]
    skipDuplicates?: boolean
  }

  export type OrderUpsertWithoutItemsInput = {
    update: XOR<OrderUpdateWithoutItemsInput, OrderUncheckedUpdateWithoutItemsInput>
    create: XOR<OrderCreateWithoutItemsInput, OrderUncheckedCreateWithoutItemsInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutItemsInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutItemsInput, OrderUncheckedUpdateWithoutItemsInput>
  }

  export type OrderUpdateWithoutItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    fulfilmentMethod?: NullableEnumOrderFulfilmentMethodFieldUpdateOperationsInput | $Enums.OrderFulfilmentMethod | null
    dateOfExecution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    sourceIp?: NullableStringFieldUpdateOperationsInput | string | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyForDispatchAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutOrdersNestedInput
    user?: UserUpdateOneWithoutOrdersNestedInput
    payment?: PaymentUpdateOneWithoutOrderNestedInput
    shippingMethod?: ShippingMethodUpdateOneWithoutOrdersNestedInput
    shippingAddress?: AddressUpdateOneWithoutOrdersNestedInput
  }

  export type OrderUncheckedUpdateWithoutItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    fulfilmentMethod?: NullableEnumOrderFulfilmentMethodFieldUpdateOperationsInput | $Enums.OrderFulfilmentMethod | null
    shippingMethodId?: NullableStringFieldUpdateOperationsInput | string | null
    shippingAddressId?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfExecution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    sourceIp?: NullableStringFieldUpdateOperationsInput | string | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyForDispatchAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductSnapshotUpsertWithoutOrderItemsInput = {
    update: XOR<ProductSnapshotUpdateWithoutOrderItemsInput, ProductSnapshotUncheckedUpdateWithoutOrderItemsInput>
    create: XOR<ProductSnapshotCreateWithoutOrderItemsInput, ProductSnapshotUncheckedCreateWithoutOrderItemsInput>
    where?: ProductSnapshotWhereInput
  }

  export type ProductSnapshotUpdateToOneWithWhereWithoutOrderItemsInput = {
    where?: ProductSnapshotWhereInput
    data: XOR<ProductSnapshotUpdateWithoutOrderItemsInput, ProductSnapshotUncheckedUpdateWithoutOrderItemsInput>
  }

  export type ProductSnapshotUpdateWithoutOrderItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    product?: ProductUpdateOneRequiredWithoutSnapshotsNestedInput
    latestForProduct?: ProductUpdateOneWithoutLatestSnapshotNestedInput
  }

  export type ProductSnapshotUncheckedUpdateWithoutOrderItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    latestForProduct?: ProductUncheckedUpdateOneWithoutLatestSnapshotNestedInput
  }

  export type FileUpsertWithoutOrderItemImagesInput = {
    update: XOR<FileUpdateWithoutOrderItemImagesInput, FileUncheckedUpdateWithoutOrderItemImagesInput>
    create: XOR<FileCreateWithoutOrderItemImagesInput, FileUncheckedCreateWithoutOrderItemImagesInput>
    where?: FileWhereInput
  }

  export type FileUpdateToOneWithWhereWithoutOrderItemImagesInput = {
    where?: FileWhereInput
    data: XOR<FileUpdateWithoutOrderItemImagesInput, FileUncheckedUpdateWithoutOrderItemImagesInput>
  }

  export type FileUpdateWithoutOrderItemImagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumFileUploadStatusFieldUpdateOperationsInput | $Enums.FileUploadStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: OrganizationUpdateOneWithoutFilesNestedInput
    manufacturerLogo?: ManufacturerUpdateOneWithoutLogoNestedInput
    productCategoryImage?: ProductCategoryUpdateOneWithoutImageNestedInput
    productImages?: ProductUpdateManyWithoutImagesNestedInput
    modifierImages?: ModifierUpdateManyWithoutImagesNestedInput
    shippingMethodLogoFor?: ShippingMethodUpdateOneWithoutProviderLogoNestedInput
    organizationLogo?: OrganizationUpdateOneWithoutLogoFileNestedInput
  }

  export type FileUncheckedUpdateWithoutOrderItemImagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumFileUploadStatusFieldUpdateOperationsInput | $Enums.FileUploadStatus
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerLogo?: ManufacturerUncheckedUpdateOneWithoutLogoNestedInput
    productCategoryImage?: ProductCategoryUncheckedUpdateOneWithoutImageNestedInput
    productImages?: ProductUncheckedUpdateManyWithoutImagesNestedInput
    modifierImages?: ModifierUncheckedUpdateManyWithoutImagesNestedInput
    shippingMethodLogoFor?: ShippingMethodUncheckedUpdateOneWithoutProviderLogoNestedInput
    organizationLogo?: OrganizationUncheckedUpdateOneWithoutLogoFileNestedInput
  }

  export type OrderItemTranslationUpsertWithWhereUniqueWithoutOrderItemInput = {
    where: OrderItemTranslationWhereUniqueInput
    update: XOR<OrderItemTranslationUpdateWithoutOrderItemInput, OrderItemTranslationUncheckedUpdateWithoutOrderItemInput>
    create: XOR<OrderItemTranslationCreateWithoutOrderItemInput, OrderItemTranslationUncheckedCreateWithoutOrderItemInput>
  }

  export type OrderItemTranslationUpdateWithWhereUniqueWithoutOrderItemInput = {
    where: OrderItemTranslationWhereUniqueInput
    data: XOR<OrderItemTranslationUpdateWithoutOrderItemInput, OrderItemTranslationUncheckedUpdateWithoutOrderItemInput>
  }

  export type OrderItemTranslationUpdateManyWithWhereWithoutOrderItemInput = {
    where: OrderItemTranslationScalarWhereInput
    data: XOR<OrderItemTranslationUpdateManyMutationInput, OrderItemTranslationUncheckedUpdateManyWithoutOrderItemInput>
  }

  export type OrderItemTranslationScalarWhereInput = {
    AND?: OrderItemTranslationScalarWhereInput | OrderItemTranslationScalarWhereInput[]
    OR?: OrderItemTranslationScalarWhereInput[]
    NOT?: OrderItemTranslationScalarWhereInput | OrderItemTranslationScalarWhereInput[]
    id?: StringFilter<"OrderItemTranslation"> | string
    locale?: StringFilter<"OrderItemTranslation"> | string
    title?: StringFilter<"OrderItemTranslation"> | string
    subtitle?: StringNullableFilter<"OrderItemTranslation"> | string | null
    orderItemId?: StringFilter<"OrderItemTranslation"> | string
  }

  export type OrderItemCreateWithoutTranslationsInput = {
    id?: string
    quantity: number
    unitPrice: number
    totalPrice: number
    rawData?: NullableJsonNullValueInput | InputJsonValue
    order: OrderCreateNestedOneWithoutItemsInput
    productSnapshot?: ProductSnapshotCreateNestedOneWithoutOrderItemsInput
    image?: FileCreateNestedOneWithoutOrderItemImagesInput
  }

  export type OrderItemUncheckedCreateWithoutTranslationsInput = {
    id?: string
    quantity: number
    unitPrice: number
    totalPrice: number
    orderId: string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    productSnapshotId?: string | null
    imageId?: string | null
  }

  export type OrderItemCreateOrConnectWithoutTranslationsInput = {
    where: OrderItemWhereUniqueInput
    create: XOR<OrderItemCreateWithoutTranslationsInput, OrderItemUncheckedCreateWithoutTranslationsInput>
  }

  export type OrderItemUpsertWithoutTranslationsInput = {
    update: XOR<OrderItemUpdateWithoutTranslationsInput, OrderItemUncheckedUpdateWithoutTranslationsInput>
    create: XOR<OrderItemCreateWithoutTranslationsInput, OrderItemUncheckedCreateWithoutTranslationsInput>
    where?: OrderItemWhereInput
  }

  export type OrderItemUpdateToOneWithWhereWithoutTranslationsInput = {
    where?: OrderItemWhereInput
    data: XOR<OrderItemUpdateWithoutTranslationsInput, OrderItemUncheckedUpdateWithoutTranslationsInput>
  }

  export type OrderItemUpdateWithoutTranslationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    rawData?: NullableJsonNullValueInput | InputJsonValue
    order?: OrderUpdateOneRequiredWithoutItemsNestedInput
    productSnapshot?: ProductSnapshotUpdateOneWithoutOrderItemsNestedInput
    image?: FileUpdateOneWithoutOrderItemImagesNestedInput
  }

  export type OrderItemUncheckedUpdateWithoutTranslationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    orderId?: StringFieldUpdateOperationsInput | string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    productSnapshotId?: NullableStringFieldUpdateOperationsInput | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentSessionCreateWithoutPaymentInput = {
    id?: string
    referenceId: string
    amount: number
    currency?: $Enums.Currency
    rawData: JsonNullValueInput | InputJsonValue
    capturedAt?: Date | string | null
    expiredAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentSessionUncheckedCreateWithoutPaymentInput = {
    id?: string
    referenceId: string
    amount: number
    currency?: $Enums.Currency
    rawData: JsonNullValueInput | InputJsonValue
    capturedAt?: Date | string | null
    expiredAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentSessionCreateOrConnectWithoutPaymentInput = {
    where: PaymentSessionWhereUniqueInput
    create: XOR<PaymentSessionCreateWithoutPaymentInput, PaymentSessionUncheckedCreateWithoutPaymentInput>
  }

  export type PaymentSessionCreateManyPaymentInputEnvelope = {
    data: PaymentSessionCreateManyPaymentInput | PaymentSessionCreateManyPaymentInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutPaymentInput = {
    id?: string
    token: string
    expiresAt?: Date | string
    referenceId: string
    fulfilmentMethod?: $Enums.OrderFulfilmentMethod | null
    dateOfExecution?: Date | string | null
    currency?: $Enums.Currency
    sourceIp?: string | null
    acceptedAt?: Date | string | null
    readyForDispatchAt?: Date | string | null
    dispatchedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutOrdersInput
    user?: UserCreateNestedOneWithoutOrdersInput
    shippingMethod?: ShippingMethodCreateNestedOneWithoutOrdersInput
    shippingAddress?: AddressCreateNestedOneWithoutOrdersInput
    items?: OrderItemCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutPaymentInput = {
    id?: string
    organizationId: string
    userId?: string | null
    token: string
    expiresAt?: Date | string
    referenceId: string
    fulfilmentMethod?: $Enums.OrderFulfilmentMethod | null
    shippingMethodId?: string | null
    shippingAddressId?: string | null
    dateOfExecution?: Date | string | null
    currency?: $Enums.Currency
    sourceIp?: string | null
    acceptedAt?: Date | string | null
    readyForDispatchAt?: Date | string | null
    dispatchedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutPaymentInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutPaymentInput, OrderUncheckedCreateWithoutPaymentInput>
  }

  export type PaymentSessionUpsertWithWhereUniqueWithoutPaymentInput = {
    where: PaymentSessionWhereUniqueInput
    update: XOR<PaymentSessionUpdateWithoutPaymentInput, PaymentSessionUncheckedUpdateWithoutPaymentInput>
    create: XOR<PaymentSessionCreateWithoutPaymentInput, PaymentSessionUncheckedCreateWithoutPaymentInput>
  }

  export type PaymentSessionUpdateWithWhereUniqueWithoutPaymentInput = {
    where: PaymentSessionWhereUniqueInput
    data: XOR<PaymentSessionUpdateWithoutPaymentInput, PaymentSessionUncheckedUpdateWithoutPaymentInput>
  }

  export type PaymentSessionUpdateManyWithWhereWithoutPaymentInput = {
    where: PaymentSessionScalarWhereInput
    data: XOR<PaymentSessionUpdateManyMutationInput, PaymentSessionUncheckedUpdateManyWithoutPaymentInput>
  }

  export type PaymentSessionScalarWhereInput = {
    AND?: PaymentSessionScalarWhereInput | PaymentSessionScalarWhereInput[]
    OR?: PaymentSessionScalarWhereInput[]
    NOT?: PaymentSessionScalarWhereInput | PaymentSessionScalarWhereInput[]
    id?: StringFilter<"PaymentSession"> | string
    referenceId?: StringFilter<"PaymentSession"> | string
    amount?: FloatFilter<"PaymentSession"> | number
    currency?: EnumCurrencyFilter<"PaymentSession"> | $Enums.Currency
    rawData?: JsonFilter<"PaymentSession">
    capturedAt?: DateTimeNullableFilter<"PaymentSession"> | Date | string | null
    expiredAt?: DateTimeNullableFilter<"PaymentSession"> | Date | string | null
    createdAt?: DateTimeFilter<"PaymentSession"> | Date | string
    updatedAt?: DateTimeFilter<"PaymentSession"> | Date | string
    paymentId?: StringFilter<"PaymentSession"> | string
  }

  export type OrderUpsertWithoutPaymentInput = {
    update: XOR<OrderUpdateWithoutPaymentInput, OrderUncheckedUpdateWithoutPaymentInput>
    create: XOR<OrderCreateWithoutPaymentInput, OrderUncheckedCreateWithoutPaymentInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutPaymentInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutPaymentInput, OrderUncheckedUpdateWithoutPaymentInput>
  }

  export type OrderUpdateWithoutPaymentInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    fulfilmentMethod?: NullableEnumOrderFulfilmentMethodFieldUpdateOperationsInput | $Enums.OrderFulfilmentMethod | null
    dateOfExecution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    sourceIp?: NullableStringFieldUpdateOperationsInput | string | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyForDispatchAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutOrdersNestedInput
    user?: UserUpdateOneWithoutOrdersNestedInput
    shippingMethod?: ShippingMethodUpdateOneWithoutOrdersNestedInput
    shippingAddress?: AddressUpdateOneWithoutOrdersNestedInput
    items?: OrderItemUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutPaymentInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    fulfilmentMethod?: NullableEnumOrderFulfilmentMethodFieldUpdateOperationsInput | $Enums.OrderFulfilmentMethod | null
    shippingMethodId?: NullableStringFieldUpdateOperationsInput | string | null
    shippingAddressId?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfExecution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    sourceIp?: NullableStringFieldUpdateOperationsInput | string | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyForDispatchAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type PaymentCreateWithoutSessionsInput = {
    id?: string
    method: $Enums.PaymentMethod
    provider?: $Enums.PaymentProvider
    shipping?: number
    subtotal?: number
    total: number
    discount?: number | null
    currency?: $Enums.Currency
    status?: $Enums.PaymentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    order?: OrderCreateNestedOneWithoutPaymentInput
  }

  export type PaymentUncheckedCreateWithoutSessionsInput = {
    id?: string
    method: $Enums.PaymentMethod
    provider?: $Enums.PaymentProvider
    shipping?: number
    subtotal?: number
    total: number
    discount?: number | null
    currency?: $Enums.Currency
    status?: $Enums.PaymentStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    order?: OrderUncheckedCreateNestedOneWithoutPaymentInput
  }

  export type PaymentCreateOrConnectWithoutSessionsInput = {
    where: PaymentWhereUniqueInput
    create: XOR<PaymentCreateWithoutSessionsInput, PaymentUncheckedCreateWithoutSessionsInput>
  }

  export type PaymentUpsertWithoutSessionsInput = {
    update: XOR<PaymentUpdateWithoutSessionsInput, PaymentUncheckedUpdateWithoutSessionsInput>
    create: XOR<PaymentCreateWithoutSessionsInput, PaymentUncheckedCreateWithoutSessionsInput>
    where?: PaymentWhereInput
  }

  export type PaymentUpdateToOneWithWhereWithoutSessionsInput = {
    where?: PaymentWhereInput
    data: XOR<PaymentUpdateWithoutSessionsInput, PaymentUncheckedUpdateWithoutSessionsInput>
  }

  export type PaymentUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    method?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    provider?: EnumPaymentProviderFieldUpdateOperationsInput | $Enums.PaymentProvider
    shipping?: FloatFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    total?: FloatFieldUpdateOperationsInput | number
    discount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUpdateOneWithoutPaymentNestedInput
  }

  export type PaymentUncheckedUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    method?: EnumPaymentMethodFieldUpdateOperationsInput | $Enums.PaymentMethod
    provider?: EnumPaymentProviderFieldUpdateOperationsInput | $Enums.PaymentProvider
    shipping?: FloatFieldUpdateOperationsInput | number
    subtotal?: FloatFieldUpdateOperationsInput | number
    total?: FloatFieldUpdateOperationsInput | number
    discount?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    status?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    order?: OrderUncheckedUpdateOneWithoutPaymentNestedInput
  }

  export type OrganizationCreateWithoutCampaignsInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    logo?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    legalEntity?: LegalEntityCreateNestedOneWithoutOrganizationsInput
    address: AddressCreateNestedOneWithoutOrganizationsInput
    configuration: OrganizationConfigurationCreateNestedOneWithoutOrganizationsInput
    logoFile?: FileCreateNestedOneWithoutOrganizationLogoInput
    files?: FileCreateNestedManyWithoutOrganizationInput
    members?: MemberCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationCreateNestedManyWithoutOrganizationInput
    orders?: OrderCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryCreateNestedManyWithoutOrganizationInput
    products?: ProductCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutCampaignsInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    legalEntityId?: string | null
    addressId: string
    configurationId: string
    logo?: string | null
    logoId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    files?: FileUncheckedCreateNestedManyWithoutOrganizationInput
    members?: MemberUncheckedCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganizationInput
    orders?: OrderUncheckedCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodUncheckedCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerUncheckedCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryUncheckedCreateNestedManyWithoutOrganizationInput
    products?: ProductUncheckedCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutCampaignsInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutCampaignsInput, OrganizationUncheckedCreateWithoutCampaignsInput>
  }

  export type OrganizationUpsertWithoutCampaignsInput = {
    update: XOR<OrganizationUpdateWithoutCampaignsInput, OrganizationUncheckedUpdateWithoutCampaignsInput>
    create: XOR<OrganizationCreateWithoutCampaignsInput, OrganizationUncheckedCreateWithoutCampaignsInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutCampaignsInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutCampaignsInput, OrganizationUncheckedUpdateWithoutCampaignsInput>
  }

  export type OrganizationUpdateWithoutCampaignsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntity?: LegalEntityUpdateOneWithoutOrganizationsNestedInput
    address?: AddressUpdateOneRequiredWithoutOrganizationsNestedInput
    configuration?: OrganizationConfigurationUpdateOneRequiredWithoutOrganizationsNestedInput
    logoFile?: FileUpdateOneWithoutOrganizationLogoNestedInput
    files?: FileUpdateManyWithoutOrganizationNestedInput
    members?: MemberUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUpdateManyWithoutOrganizationNestedInput
    products?: ProductUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutCampaignsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: StringFieldUpdateOperationsInput | string
    configurationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    logoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    files?: FileUncheckedUpdateManyWithoutOrganizationNestedInput
    members?: MemberUncheckedUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUncheckedUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUncheckedUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUncheckedUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
    products?: ProductUncheckedUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type FileCreateWithoutShippingMethodLogoForInput = {
    id?: string
    mimeType?: string | null
    size?: number | null
    filename?: string | null
    url?: string | null
    status?: $Enums.FileUploadStatus
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    organization?: OrganizationCreateNestedOneWithoutFilesInput
    manufacturerLogo?: ManufacturerCreateNestedOneWithoutLogoInput
    productCategoryImage?: ProductCategoryCreateNestedOneWithoutImageInput
    productImages?: ProductCreateNestedManyWithoutImagesInput
    modifierImages?: ModifierCreateNestedManyWithoutImagesInput
    organizationLogo?: OrganizationCreateNestedOneWithoutLogoFileInput
    orderItemImages?: OrderItemCreateNestedManyWithoutImageInput
  }

  export type FileUncheckedCreateWithoutShippingMethodLogoForInput = {
    id?: string
    mimeType?: string | null
    size?: number | null
    filename?: string | null
    url?: string | null
    status?: $Enums.FileUploadStatus
    organizationId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    manufacturerLogo?: ManufacturerUncheckedCreateNestedOneWithoutLogoInput
    productCategoryImage?: ProductCategoryUncheckedCreateNestedOneWithoutImageInput
    productImages?: ProductUncheckedCreateNestedManyWithoutImagesInput
    modifierImages?: ModifierUncheckedCreateNestedManyWithoutImagesInput
    organizationLogo?: OrganizationUncheckedCreateNestedOneWithoutLogoFileInput
    orderItemImages?: OrderItemUncheckedCreateNestedManyWithoutImageInput
  }

  export type FileCreateOrConnectWithoutShippingMethodLogoForInput = {
    where: FileWhereUniqueInput
    create: XOR<FileCreateWithoutShippingMethodLogoForInput, FileUncheckedCreateWithoutShippingMethodLogoForInput>
  }

  export type OrganizationCreateWithoutShippingMethodsInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    logo?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    legalEntity?: LegalEntityCreateNestedOneWithoutOrganizationsInput
    address: AddressCreateNestedOneWithoutOrganizationsInput
    configuration: OrganizationConfigurationCreateNestedOneWithoutOrganizationsInput
    logoFile?: FileCreateNestedOneWithoutOrganizationLogoInput
    files?: FileCreateNestedManyWithoutOrganizationInput
    members?: MemberCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationCreateNestedManyWithoutOrganizationInput
    orders?: OrderCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryCreateNestedManyWithoutOrganizationInput
    products?: ProductCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutShippingMethodsInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    legalEntityId?: string | null
    addressId: string
    configurationId: string
    logo?: string | null
    logoId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    files?: FileUncheckedCreateNestedManyWithoutOrganizationInput
    members?: MemberUncheckedCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganizationInput
    orders?: OrderUncheckedCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignUncheckedCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerUncheckedCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryUncheckedCreateNestedManyWithoutOrganizationInput
    products?: ProductUncheckedCreateNestedManyWithoutOrganizationInput
    reservations?: ReservationUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutShippingMethodsInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutShippingMethodsInput, OrganizationUncheckedCreateWithoutShippingMethodsInput>
  }

  export type ShippingZoneCreateWithoutShippingMethodInput = {
    id?: string
    title: string
    distanceUpto?: number | null
    price: number
    minimumOrderAmount?: number | null
    eta: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ShippingZoneUncheckedCreateWithoutShippingMethodInput = {
    id?: string
    title: string
    distanceUpto?: number | null
    price: number
    minimumOrderAmount?: number | null
    eta: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ShippingZoneCreateOrConnectWithoutShippingMethodInput = {
    where: ShippingZoneWhereUniqueInput
    create: XOR<ShippingZoneCreateWithoutShippingMethodInput, ShippingZoneUncheckedCreateWithoutShippingMethodInput>
  }

  export type ShippingZoneCreateManyShippingMethodInputEnvelope = {
    data: ShippingZoneCreateManyShippingMethodInput | ShippingZoneCreateManyShippingMethodInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutShippingMethodInput = {
    id?: string
    token: string
    expiresAt?: Date | string
    referenceId: string
    fulfilmentMethod?: $Enums.OrderFulfilmentMethod | null
    dateOfExecution?: Date | string | null
    currency?: $Enums.Currency
    sourceIp?: string | null
    acceptedAt?: Date | string | null
    readyForDispatchAt?: Date | string | null
    dispatchedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    organization: OrganizationCreateNestedOneWithoutOrdersInput
    user?: UserCreateNestedOneWithoutOrdersInput
    payment?: PaymentCreateNestedOneWithoutOrderInput
    shippingAddress?: AddressCreateNestedOneWithoutOrdersInput
    items?: OrderItemCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutShippingMethodInput = {
    id?: string
    organizationId: string
    userId?: string | null
    paymentId?: string | null
    token: string
    expiresAt?: Date | string
    referenceId: string
    fulfilmentMethod?: $Enums.OrderFulfilmentMethod | null
    shippingAddressId?: string | null
    dateOfExecution?: Date | string | null
    currency?: $Enums.Currency
    sourceIp?: string | null
    acceptedAt?: Date | string | null
    readyForDispatchAt?: Date | string | null
    dispatchedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    items?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutShippingMethodInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutShippingMethodInput, OrderUncheckedCreateWithoutShippingMethodInput>
  }

  export type OrderCreateManyShippingMethodInputEnvelope = {
    data: OrderCreateManyShippingMethodInput | OrderCreateManyShippingMethodInput[]
    skipDuplicates?: boolean
  }

  export type FileUpsertWithoutShippingMethodLogoForInput = {
    update: XOR<FileUpdateWithoutShippingMethodLogoForInput, FileUncheckedUpdateWithoutShippingMethodLogoForInput>
    create: XOR<FileCreateWithoutShippingMethodLogoForInput, FileUncheckedCreateWithoutShippingMethodLogoForInput>
    where?: FileWhereInput
  }

  export type FileUpdateToOneWithWhereWithoutShippingMethodLogoForInput = {
    where?: FileWhereInput
    data: XOR<FileUpdateWithoutShippingMethodLogoForInput, FileUncheckedUpdateWithoutShippingMethodLogoForInput>
  }

  export type FileUpdateWithoutShippingMethodLogoForInput = {
    id?: StringFieldUpdateOperationsInput | string
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumFileUploadStatusFieldUpdateOperationsInput | $Enums.FileUploadStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: OrganizationUpdateOneWithoutFilesNestedInput
    manufacturerLogo?: ManufacturerUpdateOneWithoutLogoNestedInput
    productCategoryImage?: ProductCategoryUpdateOneWithoutImageNestedInput
    productImages?: ProductUpdateManyWithoutImagesNestedInput
    modifierImages?: ModifierUpdateManyWithoutImagesNestedInput
    organizationLogo?: OrganizationUpdateOneWithoutLogoFileNestedInput
    orderItemImages?: OrderItemUpdateManyWithoutImageNestedInput
  }

  export type FileUncheckedUpdateWithoutShippingMethodLogoForInput = {
    id?: StringFieldUpdateOperationsInput | string
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumFileUploadStatusFieldUpdateOperationsInput | $Enums.FileUploadStatus
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerLogo?: ManufacturerUncheckedUpdateOneWithoutLogoNestedInput
    productCategoryImage?: ProductCategoryUncheckedUpdateOneWithoutImageNestedInput
    productImages?: ProductUncheckedUpdateManyWithoutImagesNestedInput
    modifierImages?: ModifierUncheckedUpdateManyWithoutImagesNestedInput
    organizationLogo?: OrganizationUncheckedUpdateOneWithoutLogoFileNestedInput
    orderItemImages?: OrderItemUncheckedUpdateManyWithoutImageNestedInput
  }

  export type OrganizationUpsertWithoutShippingMethodsInput = {
    update: XOR<OrganizationUpdateWithoutShippingMethodsInput, OrganizationUncheckedUpdateWithoutShippingMethodsInput>
    create: XOR<OrganizationCreateWithoutShippingMethodsInput, OrganizationUncheckedCreateWithoutShippingMethodsInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutShippingMethodsInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutShippingMethodsInput, OrganizationUncheckedUpdateWithoutShippingMethodsInput>
  }

  export type OrganizationUpdateWithoutShippingMethodsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntity?: LegalEntityUpdateOneWithoutOrganizationsNestedInput
    address?: AddressUpdateOneRequiredWithoutOrganizationsNestedInput
    configuration?: OrganizationConfigurationUpdateOneRequiredWithoutOrganizationsNestedInput
    logoFile?: FileUpdateOneWithoutOrganizationLogoNestedInput
    files?: FileUpdateManyWithoutOrganizationNestedInput
    members?: MemberUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUpdateManyWithoutOrganizationNestedInput
    products?: ProductUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutShippingMethodsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: StringFieldUpdateOperationsInput | string
    configurationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    logoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    files?: FileUncheckedUpdateManyWithoutOrganizationNestedInput
    members?: MemberUncheckedUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUncheckedUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUncheckedUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUncheckedUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
    products?: ProductUncheckedUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type ShippingZoneUpsertWithWhereUniqueWithoutShippingMethodInput = {
    where: ShippingZoneWhereUniqueInput
    update: XOR<ShippingZoneUpdateWithoutShippingMethodInput, ShippingZoneUncheckedUpdateWithoutShippingMethodInput>
    create: XOR<ShippingZoneCreateWithoutShippingMethodInput, ShippingZoneUncheckedCreateWithoutShippingMethodInput>
  }

  export type ShippingZoneUpdateWithWhereUniqueWithoutShippingMethodInput = {
    where: ShippingZoneWhereUniqueInput
    data: XOR<ShippingZoneUpdateWithoutShippingMethodInput, ShippingZoneUncheckedUpdateWithoutShippingMethodInput>
  }

  export type ShippingZoneUpdateManyWithWhereWithoutShippingMethodInput = {
    where: ShippingZoneScalarWhereInput
    data: XOR<ShippingZoneUpdateManyMutationInput, ShippingZoneUncheckedUpdateManyWithoutShippingMethodInput>
  }

  export type ShippingZoneScalarWhereInput = {
    AND?: ShippingZoneScalarWhereInput | ShippingZoneScalarWhereInput[]
    OR?: ShippingZoneScalarWhereInput[]
    NOT?: ShippingZoneScalarWhereInput | ShippingZoneScalarWhereInput[]
    id?: StringFilter<"ShippingZone"> | string
    title?: StringFilter<"ShippingZone"> | string
    distanceUpto?: FloatNullableFilter<"ShippingZone"> | number | null
    price?: FloatFilter<"ShippingZone"> | number
    minimumOrderAmount?: FloatNullableFilter<"ShippingZone"> | number | null
    shippingMethodId?: StringFilter<"ShippingZone"> | string
    eta?: StringFilter<"ShippingZone"> | string
    createdAt?: DateTimeFilter<"ShippingZone"> | Date | string
    updatedAt?: DateTimeFilter<"ShippingZone"> | Date | string
  }

  export type OrderUpsertWithWhereUniqueWithoutShippingMethodInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutShippingMethodInput, OrderUncheckedUpdateWithoutShippingMethodInput>
    create: XOR<OrderCreateWithoutShippingMethodInput, OrderUncheckedCreateWithoutShippingMethodInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutShippingMethodInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutShippingMethodInput, OrderUncheckedUpdateWithoutShippingMethodInput>
  }

  export type OrderUpdateManyWithWhereWithoutShippingMethodInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutShippingMethodInput>
  }

  export type ShippingMethodCreateWithoutShippingZonesInput = {
    id?: string
    title: string
    providerName: string
    requireDateOfDelivery?: boolean | null
    archivedAt?: Date | string | null
    archivedBy?: string | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    providerLogo?: FileCreateNestedOneWithoutShippingMethodLogoForInput
    organization: OrganizationCreateNestedOneWithoutShippingMethodsInput
    orders?: OrderCreateNestedManyWithoutShippingMethodInput
  }

  export type ShippingMethodUncheckedCreateWithoutShippingZonesInput = {
    id?: string
    title: string
    providerName: string
    providerLogoId?: string | null
    requireDateOfDelivery?: boolean | null
    organizationId: string
    archivedAt?: Date | string | null
    archivedBy?: string | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    orders?: OrderUncheckedCreateNestedManyWithoutShippingMethodInput
  }

  export type ShippingMethodCreateOrConnectWithoutShippingZonesInput = {
    where: ShippingMethodWhereUniqueInput
    create: XOR<ShippingMethodCreateWithoutShippingZonesInput, ShippingMethodUncheckedCreateWithoutShippingZonesInput>
  }

  export type ShippingMethodUpsertWithoutShippingZonesInput = {
    update: XOR<ShippingMethodUpdateWithoutShippingZonesInput, ShippingMethodUncheckedUpdateWithoutShippingZonesInput>
    create: XOR<ShippingMethodCreateWithoutShippingZonesInput, ShippingMethodUncheckedCreateWithoutShippingZonesInput>
    where?: ShippingMethodWhereInput
  }

  export type ShippingMethodUpdateToOneWithWhereWithoutShippingZonesInput = {
    where?: ShippingMethodWhereInput
    data: XOR<ShippingMethodUpdateWithoutShippingZonesInput, ShippingMethodUncheckedUpdateWithoutShippingZonesInput>
  }

  export type ShippingMethodUpdateWithoutShippingZonesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    providerName?: StringFieldUpdateOperationsInput | string
    requireDateOfDelivery?: NullableBoolFieldUpdateOperationsInput | boolean | null
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    providerLogo?: FileUpdateOneWithoutShippingMethodLogoForNestedInput
    organization?: OrganizationUpdateOneRequiredWithoutShippingMethodsNestedInput
    orders?: OrderUpdateManyWithoutShippingMethodNestedInput
  }

  export type ShippingMethodUncheckedUpdateWithoutShippingZonesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    providerName?: StringFieldUpdateOperationsInput | string
    providerLogoId?: NullableStringFieldUpdateOperationsInput | string | null
    requireDateOfDelivery?: NullableBoolFieldUpdateOperationsInput | boolean | null
    organizationId?: StringFieldUpdateOperationsInput | string
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUncheckedUpdateManyWithoutShippingMethodNestedInput
  }

  export type UserCreateWithoutReservationsInput = {
    id: string
    name: string
    firstname: string
    lastname: string
    email: string
    emailVerified: boolean
    image?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    sessions?: SessionCreateNestedManyWithoutUserInput
    accounts?: AccountCreateNestedManyWithoutUserInput
    members?: MemberCreateNestedManyWithoutUserInput
    invitations?: InvitationCreateNestedManyWithoutUserInput
    shippingAddresses?: AddressCreateNestedManyWithoutUsersInput
    orders?: OrderCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutReservationsInput = {
    id: string
    name: string
    firstname: string
    lastname: string
    email: string
    emailVerified: boolean
    image?: string | null
    createdAt: Date | string
    updatedAt: Date | string
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    members?: MemberUncheckedCreateNestedManyWithoutUserInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutUserInput
    shippingAddresses?: AddressUncheckedCreateNestedManyWithoutUsersInput
    orders?: OrderUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutReservationsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutReservationsInput, UserUncheckedCreateWithoutReservationsInput>
  }

  export type OrganizationCreateWithoutReservationsInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    logo?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    legalEntity?: LegalEntityCreateNestedOneWithoutOrganizationsInput
    address: AddressCreateNestedOneWithoutOrganizationsInput
    configuration: OrganizationConfigurationCreateNestedOneWithoutOrganizationsInput
    logoFile?: FileCreateNestedOneWithoutOrganizationLogoInput
    files?: FileCreateNestedManyWithoutOrganizationInput
    members?: MemberCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationCreateNestedManyWithoutOrganizationInput
    orders?: OrderCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryCreateNestedManyWithoutOrganizationInput
    products?: ProductCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationUncheckedCreateWithoutReservationsInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    legalEntityId?: string | null
    addressId: string
    configurationId: string
    logo?: string | null
    logoId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    files?: FileUncheckedCreateNestedManyWithoutOrganizationInput
    members?: MemberUncheckedCreateNestedManyWithoutOrganizationInput
    invitations?: InvitationUncheckedCreateNestedManyWithoutOrganizationInput
    orders?: OrderUncheckedCreateNestedManyWithoutOrganizationInput
    campaigns?: CampaignUncheckedCreateNestedManyWithoutOrganizationInput
    shippingMethods?: ShippingMethodUncheckedCreateNestedManyWithoutOrganizationInput
    manufacturers?: ManufacturerUncheckedCreateNestedManyWithoutOrganizationInput
    productCategories?: ProductCategoryUncheckedCreateNestedManyWithoutOrganizationInput
    products?: ProductUncheckedCreateNestedManyWithoutOrganizationInput
  }

  export type OrganizationCreateOrConnectWithoutReservationsInput = {
    where: OrganizationWhereUniqueInput
    create: XOR<OrganizationCreateWithoutReservationsInput, OrganizationUncheckedCreateWithoutReservationsInput>
  }

  export type UserUpsertWithoutReservationsInput = {
    update: XOR<UserUpdateWithoutReservationsInput, UserUncheckedUpdateWithoutReservationsInput>
    create: XOR<UserCreateWithoutReservationsInput, UserUncheckedCreateWithoutReservationsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutReservationsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutReservationsInput, UserUncheckedUpdateWithoutReservationsInput>
  }

  export type UserUpdateWithoutReservationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sessions?: SessionUpdateManyWithoutUserNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    members?: MemberUpdateManyWithoutUserNestedInput
    invitations?: InvitationUpdateManyWithoutUserNestedInput
    shippingAddresses?: AddressUpdateManyWithoutUsersNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutReservationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    members?: MemberUncheckedUpdateManyWithoutUserNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutUserNestedInput
    shippingAddresses?: AddressUncheckedUpdateManyWithoutUsersNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
  }

  export type OrganizationUpsertWithoutReservationsInput = {
    update: XOR<OrganizationUpdateWithoutReservationsInput, OrganizationUncheckedUpdateWithoutReservationsInput>
    create: XOR<OrganizationCreateWithoutReservationsInput, OrganizationUncheckedCreateWithoutReservationsInput>
    where?: OrganizationWhereInput
  }

  export type OrganizationUpdateToOneWithWhereWithoutReservationsInput = {
    where?: OrganizationWhereInput
    data: XOR<OrganizationUpdateWithoutReservationsInput, OrganizationUncheckedUpdateWithoutReservationsInput>
  }

  export type OrganizationUpdateWithoutReservationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntity?: LegalEntityUpdateOneWithoutOrganizationsNestedInput
    address?: AddressUpdateOneRequiredWithoutOrganizationsNestedInput
    configuration?: OrganizationConfigurationUpdateOneRequiredWithoutOrganizationsNestedInput
    logoFile?: FileUpdateOneWithoutOrganizationLogoNestedInput
    files?: FileUpdateManyWithoutOrganizationNestedInput
    members?: MemberUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUpdateManyWithoutOrganizationNestedInput
    products?: ProductUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutReservationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: StringFieldUpdateOperationsInput | string
    configurationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    logoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    files?: FileUncheckedUpdateManyWithoutOrganizationNestedInput
    members?: MemberUncheckedUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUncheckedUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUncheckedUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUncheckedUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUncheckedUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
    products?: ProductUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type SessionCreateManyUserInput = {
    id: string
    expiresAt: Date | string
    token: string
    createdAt: Date | string
    updatedAt: Date | string
    ipAddress?: string | null
    userAgent?: string | null
    activeOrganizationId?: string | null
  }

  export type AccountCreateManyUserInput = {
    id: string
    accountId: string
    providerId: string
    accessToken?: string | null
    refreshToken?: string | null
    idToken?: string | null
    accessTokenExpiresAt?: Date | string | null
    refreshTokenExpiresAt?: Date | string | null
    scope?: string | null
    password?: string | null
    createdAt: Date | string
    updatedAt: Date | string
  }

  export type MemberCreateManyUserInput = {
    id?: string
    organizationId: string
    role: string
    createdAt?: Date | string
  }

  export type InvitationCreateManyUserInput = {
    id: string
    organizationId: string
    email: string
    role?: string | null
    status: string
    expiresAt: Date | string
  }

  export type OrderCreateManyUserInput = {
    id?: string
    organizationId: string
    paymentId?: string | null
    token: string
    expiresAt?: Date | string
    referenceId: string
    fulfilmentMethod?: $Enums.OrderFulfilmentMethod | null
    shippingMethodId?: string | null
    shippingAddressId?: string | null
    dateOfExecution?: Date | string | null
    currency?: $Enums.Currency
    sourceIp?: string | null
    acceptedAt?: Date | string | null
    readyForDispatchAt?: Date | string | null
    dispatchedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ReservationCreateManyUserInput = {
    id?: string
    firstname: string
    lastname: string
    guests: number
    phone: string
    date: Date | string
    referenceId: string
    organizationId: string
    createdAt?: Date | string
    acceptedAt?: Date | string | null
    cancelledAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type SessionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    token?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    activeOrganizationId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SessionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    token?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    activeOrganizationId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SessionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    token?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ipAddress?: NullableStringFieldUpdateOperationsInput | string | null
    userAgent?: NullableStringFieldUpdateOperationsInput | string | null
    activeOrganizationId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    idToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    idToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    accountId?: StringFieldUpdateOperationsInput | string
    providerId?: StringFieldUpdateOperationsInput | string
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    idToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshTokenExpiresAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MemberUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutMembersNestedInput
  }

  export type MemberUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MemberUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InvitationUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutInvitationsNestedInput
  }

  export type InvitationUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InvitationUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AddressUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    addressLineOne?: StringFieldUpdateOperationsInput | string
    doorNumber?: NullableStringFieldUpdateOperationsInput | string | null
    addressLineTwo?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    placeId?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    LegalEntity?: LegalEntityUpdateManyWithoutAddressNestedInput
    organizations?: OrganizationUpdateManyWithoutAddressNestedInput
    orders?: OrderUpdateManyWithoutShippingAddressNestedInput
  }

  export type AddressUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    addressLineOne?: StringFieldUpdateOperationsInput | string
    doorNumber?: NullableStringFieldUpdateOperationsInput | string | null
    addressLineTwo?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    placeId?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    LegalEntity?: LegalEntityUncheckedUpdateManyWithoutAddressNestedInput
    organizations?: OrganizationUncheckedUpdateManyWithoutAddressNestedInput
    orders?: OrderUncheckedUpdateManyWithoutShippingAddressNestedInput
  }

  export type AddressUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: NullableStringFieldUpdateOperationsInput | string | null
    lastname?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    addressLineOne?: StringFieldUpdateOperationsInput | string
    doorNumber?: NullableStringFieldUpdateOperationsInput | string | null
    addressLineTwo?: NullableStringFieldUpdateOperationsInput | string | null
    zipCode?: NullableStringFieldUpdateOperationsInput | string | null
    placeId?: NullableStringFieldUpdateOperationsInput | string | null
    deliveryInstructions?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    country?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    fulfilmentMethod?: NullableEnumOrderFulfilmentMethodFieldUpdateOperationsInput | $Enums.OrderFulfilmentMethod | null
    dateOfExecution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    sourceIp?: NullableStringFieldUpdateOperationsInput | string | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyForDispatchAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutOrdersNestedInput
    payment?: PaymentUpdateOneWithoutOrderNestedInput
    shippingMethod?: ShippingMethodUpdateOneWithoutOrdersNestedInput
    shippingAddress?: AddressUpdateOneWithoutOrdersNestedInput
    items?: OrderItemUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    fulfilmentMethod?: NullableEnumOrderFulfilmentMethodFieldUpdateOperationsInput | $Enums.OrderFulfilmentMethod | null
    shippingMethodId?: NullableStringFieldUpdateOperationsInput | string | null
    shippingAddressId?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfExecution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    sourceIp?: NullableStringFieldUpdateOperationsInput | string | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyForDispatchAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    fulfilmentMethod?: NullableEnumOrderFulfilmentMethodFieldUpdateOperationsInput | $Enums.OrderFulfilmentMethod | null
    shippingMethodId?: NullableStringFieldUpdateOperationsInput | string | null
    shippingAddressId?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfExecution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    sourceIp?: NullableStringFieldUpdateOperationsInput | string | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyForDispatchAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReservationUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    guests?: IntFieldUpdateOperationsInput | number
    phone?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutReservationsNestedInput
  }

  export type ReservationUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    guests?: IntFieldUpdateOperationsInput | number
    phone?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReservationUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    guests?: IntFieldUpdateOperationsInput | number
    phone?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FileCreateManyOrganizationInput = {
    id?: string
    mimeType?: string | null
    size?: number | null
    filename?: string | null
    url?: string | null
    status?: $Enums.FileUploadStatus
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type MemberCreateManyOrganizationInput = {
    id?: string
    userId: string
    role: string
    createdAt?: Date | string
  }

  export type InvitationCreateManyOrganizationInput = {
    id: string
    email: string
    role?: string | null
    status: string
    expiresAt: Date | string
    inviterId: string
  }

  export type OrderCreateManyOrganizationInput = {
    id?: string
    userId?: string | null
    paymentId?: string | null
    token: string
    expiresAt?: Date | string
    referenceId: string
    fulfilmentMethod?: $Enums.OrderFulfilmentMethod | null
    shippingMethodId?: string | null
    shippingAddressId?: string | null
    dateOfExecution?: Date | string | null
    currency?: $Enums.Currency
    sourceIp?: string | null
    acceptedAt?: Date | string | null
    readyForDispatchAt?: Date | string | null
    dispatchedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CampaignCreateManyOrganizationInput = {
    id?: string
    title: string
    type: $Enums.CampaignType
    validFrom: Date | string
    validTo: Date | string
    amount?: number | null
    percentage?: number | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ShippingMethodCreateManyOrganizationInput = {
    id?: string
    title: string
    providerName: string
    providerLogoId?: string | null
    requireDateOfDelivery?: boolean | null
    archivedAt?: Date | string | null
    archivedBy?: string | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
  }

  export type ManufacturerCreateManyOrganizationInput = {
    id?: string
    name: string
    logoId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type ProductCategoryCreateManyOrganizationInput = {
    id?: string
    slug?: string | null
    priority?: number | null
    imageId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    publishedAt?: Date | string | null
    publishedBy?: string | null
  }

  export type ProductCreateManyOrganizationInput = {
    id?: string
    content?: string | null
    slug?: string | null
    sku?: string | null
    basePrice: number
    discountedBasePrice?: number | null
    currency: string
    manufacturerId?: string | null
    tags?: ProductCreatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: Date | string | null
    publishedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    latestSnapshotId?: string | null
  }

  export type ReservationCreateManyOrganizationInput = {
    id?: string
    firstname: string
    lastname: string
    userId?: string | null
    guests: number
    phone: string
    date: Date | string
    referenceId: string
    createdAt?: Date | string
    acceptedAt?: Date | string | null
    cancelledAt?: Date | string | null
    updatedAt?: Date | string
  }

  export type FileUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumFileUploadStatusFieldUpdateOperationsInput | $Enums.FileUploadStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerLogo?: ManufacturerUpdateOneWithoutLogoNestedInput
    productCategoryImage?: ProductCategoryUpdateOneWithoutImageNestedInput
    productImages?: ProductUpdateManyWithoutImagesNestedInput
    modifierImages?: ModifierUpdateManyWithoutImagesNestedInput
    shippingMethodLogoFor?: ShippingMethodUpdateOneWithoutProviderLogoNestedInput
    organizationLogo?: OrganizationUpdateOneWithoutLogoFileNestedInput
    orderItemImages?: OrderItemUpdateManyWithoutImageNestedInput
  }

  export type FileUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumFileUploadStatusFieldUpdateOperationsInput | $Enums.FileUploadStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerLogo?: ManufacturerUncheckedUpdateOneWithoutLogoNestedInput
    productCategoryImage?: ProductCategoryUncheckedUpdateOneWithoutImageNestedInput
    productImages?: ProductUncheckedUpdateManyWithoutImagesNestedInput
    modifierImages?: ModifierUncheckedUpdateManyWithoutImagesNestedInput
    shippingMethodLogoFor?: ShippingMethodUncheckedUpdateOneWithoutProviderLogoNestedInput
    organizationLogo?: OrganizationUncheckedUpdateOneWithoutLogoFileNestedInput
    orderItemImages?: OrderItemUncheckedUpdateManyWithoutImageNestedInput
  }

  export type FileUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumFileUploadStatusFieldUpdateOperationsInput | $Enums.FileUploadStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type MemberUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutMembersNestedInput
  }

  export type MemberUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type MemberUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type InvitationUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneRequiredWithoutInvitationsNestedInput
  }

  export type InvitationUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inviterId?: StringFieldUpdateOperationsInput | string
  }

  export type InvitationUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    role?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    inviterId?: StringFieldUpdateOperationsInput | string
  }

  export type OrderUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    fulfilmentMethod?: NullableEnumOrderFulfilmentMethodFieldUpdateOperationsInput | $Enums.OrderFulfilmentMethod | null
    dateOfExecution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    sourceIp?: NullableStringFieldUpdateOperationsInput | string | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyForDispatchAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneWithoutOrdersNestedInput
    payment?: PaymentUpdateOneWithoutOrderNestedInput
    shippingMethod?: ShippingMethodUpdateOneWithoutOrdersNestedInput
    shippingAddress?: AddressUpdateOneWithoutOrdersNestedInput
    items?: OrderItemUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    fulfilmentMethod?: NullableEnumOrderFulfilmentMethodFieldUpdateOperationsInput | $Enums.OrderFulfilmentMethod | null
    shippingMethodId?: NullableStringFieldUpdateOperationsInput | string | null
    shippingAddressId?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfExecution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    sourceIp?: NullableStringFieldUpdateOperationsInput | string | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyForDispatchAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    fulfilmentMethod?: NullableEnumOrderFulfilmentMethodFieldUpdateOperationsInput | $Enums.OrderFulfilmentMethod | null
    shippingMethodId?: NullableStringFieldUpdateOperationsInput | string | null
    shippingAddressId?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfExecution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    sourceIp?: NullableStringFieldUpdateOperationsInput | string | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyForDispatchAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CampaignUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    type?: EnumCampaignTypeFieldUpdateOperationsInput | $Enums.CampaignType
    validFrom?: DateTimeFieldUpdateOperationsInput | Date | string
    validTo?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CampaignUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    type?: EnumCampaignTypeFieldUpdateOperationsInput | $Enums.CampaignType
    validFrom?: DateTimeFieldUpdateOperationsInput | Date | string
    validTo?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CampaignUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    type?: EnumCampaignTypeFieldUpdateOperationsInput | $Enums.CampaignType
    validFrom?: DateTimeFieldUpdateOperationsInput | Date | string
    validTo?: DateTimeFieldUpdateOperationsInput | Date | string
    amount?: NullableFloatFieldUpdateOperationsInput | number | null
    percentage?: NullableFloatFieldUpdateOperationsInput | number | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShippingMethodUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    providerName?: StringFieldUpdateOperationsInput | string
    requireDateOfDelivery?: NullableBoolFieldUpdateOperationsInput | boolean | null
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    providerLogo?: FileUpdateOneWithoutShippingMethodLogoForNestedInput
    shippingZones?: ShippingZoneUpdateManyWithoutShippingMethodNestedInput
    orders?: OrderUpdateManyWithoutShippingMethodNestedInput
  }

  export type ShippingMethodUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    providerName?: StringFieldUpdateOperationsInput | string
    providerLogoId?: NullableStringFieldUpdateOperationsInput | string | null
    requireDateOfDelivery?: NullableBoolFieldUpdateOperationsInput | boolean | null
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    shippingZones?: ShippingZoneUncheckedUpdateManyWithoutShippingMethodNestedInput
    orders?: OrderUncheckedUpdateManyWithoutShippingMethodNestedInput
  }

  export type ShippingMethodUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    providerName?: StringFieldUpdateOperationsInput | string
    providerLogoId?: NullableStringFieldUpdateOperationsInput | string | null
    requireDateOfDelivery?: NullableBoolFieldUpdateOperationsInput | boolean | null
    archivedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    archivedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ManufacturerUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: FileUpdateOneWithoutManufacturerLogoNestedInput
    products?: ProductUpdateManyWithoutManufacturerNestedInput
    translations?: ManufacturerTranslationUpdateManyWithoutManufacturerNestedInput
  }

  export type ManufacturerUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    products?: ProductUncheckedUpdateManyWithoutManufacturerNestedInput
    translations?: ManufacturerTranslationUncheckedUpdateManyWithoutManufacturerNestedInput
  }

  export type ManufacturerUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    logoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductCategoryUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    image?: FileUpdateOneWithoutProductCategoryImageNestedInput
    translations?: ProductCategoryTranslationUpdateManyWithoutProductCategoryNestedInput
    products?: ProductUpdateManyWithoutCategoriesNestedInput
  }

  export type ProductCategoryUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    translations?: ProductCategoryTranslationUncheckedUpdateManyWithoutProductCategoryNestedInput
    products?: ProductUncheckedUpdateManyWithoutCategoriesNestedInput
  }

  export type ProductCategoryUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: FloatFieldUpdateOperationsInput | number
    discountedBasePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    tags?: ProductUpdatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    images?: FileUpdateManyWithoutProductImagesNestedInput
    manufacturer?: ManufacturerUpdateOneWithoutProductsNestedInput
    categories?: ProductCategoryUpdateManyWithoutProductsNestedInput
    modifierGroups?: ModifierGroupUpdateManyWithoutProductsNestedInput
    translations?: ProductTranslationUpdateManyWithoutProductNestedInput
    snapshots?: ProductSnapshotUpdateManyWithoutProductNestedInput
    latestSnapshot?: ProductSnapshotUpdateOneWithoutLatestForProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: FloatFieldUpdateOperationsInput | number
    discountedBasePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    manufacturerId?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: ProductUpdatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    latestSnapshotId?: NullableStringFieldUpdateOperationsInput | string | null
    images?: FileUncheckedUpdateManyWithoutProductImagesNestedInput
    categories?: ProductCategoryUncheckedUpdateManyWithoutProductsNestedInput
    modifierGroups?: ModifierGroupUncheckedUpdateManyWithoutProductsNestedInput
    translations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
    snapshots?: ProductSnapshotUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: FloatFieldUpdateOperationsInput | number
    discountedBasePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    manufacturerId?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: ProductUpdatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    latestSnapshotId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReservationUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    guests?: IntFieldUpdateOperationsInput | number
    phone?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: UserUpdateOneWithoutReservationsNestedInput
  }

  export type ReservationUncheckedUpdateWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    guests?: IntFieldUpdateOperationsInput | number
    phone?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ReservationUncheckedUpdateManyWithoutOrganizationInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    guests?: IntFieldUpdateOperationsInput | number
    phone?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrganizationCreateManyConfigurationInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    legalEntityId?: string | null
    addressId: string
    logo?: string | null
    logoId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type OrganizationUpdateWithoutConfigurationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntity?: LegalEntityUpdateOneWithoutOrganizationsNestedInput
    address?: AddressUpdateOneRequiredWithoutOrganizationsNestedInput
    logoFile?: FileUpdateOneWithoutOrganizationLogoNestedInput
    files?: FileUpdateManyWithoutOrganizationNestedInput
    members?: MemberUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUpdateManyWithoutOrganizationNestedInput
    products?: ProductUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutConfigurationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    logoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    files?: FileUncheckedUpdateManyWithoutOrganizationNestedInput
    members?: MemberUncheckedUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUncheckedUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUncheckedUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUncheckedUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUncheckedUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
    products?: ProductUncheckedUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateManyWithoutConfigurationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    logoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type LegalEntityCreateManyAddressInput = {
    id?: string
    name: string
    taxId: string
    email?: string | null
    phone?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type OrganizationCreateManyAddressInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    legalEntityId?: string | null
    configurationId: string
    logo?: string | null
    logoId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type OrderCreateManyShippingAddressInput = {
    id?: string
    organizationId: string
    userId?: string | null
    paymentId?: string | null
    token: string
    expiresAt?: Date | string
    referenceId: string
    fulfilmentMethod?: $Enums.OrderFulfilmentMethod | null
    shippingMethodId?: string | null
    dateOfExecution?: Date | string | null
    currency?: $Enums.Currency
    sourceIp?: string | null
    acceptedAt?: Date | string | null
    readyForDispatchAt?: Date | string | null
    dispatchedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type LegalEntityUpdateWithoutAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organizations?: OrganizationUpdateManyWithoutLegalEntityNestedInput
  }

  export type LegalEntityUncheckedUpdateWithoutAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organizations?: OrganizationUncheckedUpdateManyWithoutLegalEntityNestedInput
  }

  export type LegalEntityUncheckedUpdateManyWithoutAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    taxId?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrganizationUpdateWithoutAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntity?: LegalEntityUpdateOneWithoutOrganizationsNestedInput
    configuration?: OrganizationConfigurationUpdateOneRequiredWithoutOrganizationsNestedInput
    logoFile?: FileUpdateOneWithoutOrganizationLogoNestedInput
    files?: FileUpdateManyWithoutOrganizationNestedInput
    members?: MemberUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUpdateManyWithoutOrganizationNestedInput
    products?: ProductUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    configurationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    logoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    files?: FileUncheckedUpdateManyWithoutOrganizationNestedInput
    members?: MemberUncheckedUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUncheckedUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUncheckedUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUncheckedUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUncheckedUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
    products?: ProductUncheckedUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateManyWithoutAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    legalEntityId?: NullableStringFieldUpdateOperationsInput | string | null
    configurationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    logoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserUpdateWithoutShippingAddressesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sessions?: SessionUpdateManyWithoutUserNestedInput
    accounts?: AccountUpdateManyWithoutUserNestedInput
    members?: MemberUpdateManyWithoutUserNestedInput
    invitations?: InvitationUpdateManyWithoutUserNestedInput
    orders?: OrderUpdateManyWithoutUserNestedInput
    reservations?: ReservationUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutShippingAddressesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    members?: MemberUncheckedUpdateManyWithoutUserNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutUserNestedInput
    orders?: OrderUncheckedUpdateManyWithoutUserNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateManyWithoutShippingAddressesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    firstname?: StringFieldUpdateOperationsInput | string
    lastname?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    emailVerified?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderUpdateWithoutShippingAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    fulfilmentMethod?: NullableEnumOrderFulfilmentMethodFieldUpdateOperationsInput | $Enums.OrderFulfilmentMethod | null
    dateOfExecution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    sourceIp?: NullableStringFieldUpdateOperationsInput | string | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyForDispatchAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutOrdersNestedInput
    user?: UserUpdateOneWithoutOrdersNestedInput
    payment?: PaymentUpdateOneWithoutOrderNestedInput
    shippingMethod?: ShippingMethodUpdateOneWithoutOrdersNestedInput
    items?: OrderItemUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutShippingAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    fulfilmentMethod?: NullableEnumOrderFulfilmentMethodFieldUpdateOperationsInput | $Enums.OrderFulfilmentMethod | null
    shippingMethodId?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfExecution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    sourceIp?: NullableStringFieldUpdateOperationsInput | string | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyForDispatchAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutShippingAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    fulfilmentMethod?: NullableEnumOrderFulfilmentMethodFieldUpdateOperationsInput | $Enums.OrderFulfilmentMethod | null
    shippingMethodId?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfExecution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    sourceIp?: NullableStringFieldUpdateOperationsInput | string | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyForDispatchAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrganizationCreateManyLegalEntityInput = {
    id?: string
    name: string
    slug?: string | null
    phone?: string | null
    email?: string | null
    addressId: string
    configurationId: string
    logo?: string | null
    logoId?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
  }

  export type OrganizationUpdateWithoutLegalEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    address?: AddressUpdateOneRequiredWithoutOrganizationsNestedInput
    configuration?: OrganizationConfigurationUpdateOneRequiredWithoutOrganizationsNestedInput
    logoFile?: FileUpdateOneWithoutOrganizationLogoNestedInput
    files?: FileUpdateManyWithoutOrganizationNestedInput
    members?: MemberUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUpdateManyWithoutOrganizationNestedInput
    products?: ProductUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateWithoutLegalEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: StringFieldUpdateOperationsInput | string
    configurationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    logoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    files?: FileUncheckedUpdateManyWithoutOrganizationNestedInput
    members?: MemberUncheckedUpdateManyWithoutOrganizationNestedInput
    invitations?: InvitationUncheckedUpdateManyWithoutOrganizationNestedInput
    orders?: OrderUncheckedUpdateManyWithoutOrganizationNestedInput
    campaigns?: CampaignUncheckedUpdateManyWithoutOrganizationNestedInput
    shippingMethods?: ShippingMethodUncheckedUpdateManyWithoutOrganizationNestedInput
    manufacturers?: ManufacturerUncheckedUpdateManyWithoutOrganizationNestedInput
    productCategories?: ProductCategoryUncheckedUpdateManyWithoutOrganizationNestedInput
    products?: ProductUncheckedUpdateManyWithoutOrganizationNestedInput
    reservations?: ReservationUncheckedUpdateManyWithoutOrganizationNestedInput
  }

  export type OrganizationUncheckedUpdateManyWithoutLegalEntityInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: StringFieldUpdateOperationsInput | string
    configurationId?: StringFieldUpdateOperationsInput | string
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    logoId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderItemCreateManyImageInput = {
    id?: string
    quantity: number
    unitPrice: number
    totalPrice: number
    orderId: string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    productSnapshotId?: string | null
  }

  export type ProductUpdateWithoutImagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: FloatFieldUpdateOperationsInput | number
    discountedBasePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    tags?: ProductUpdatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: OrganizationUpdateOneRequiredWithoutProductsNestedInput
    manufacturer?: ManufacturerUpdateOneWithoutProductsNestedInput
    categories?: ProductCategoryUpdateManyWithoutProductsNestedInput
    modifierGroups?: ModifierGroupUpdateManyWithoutProductsNestedInput
    translations?: ProductTranslationUpdateManyWithoutProductNestedInput
    snapshots?: ProductSnapshotUpdateManyWithoutProductNestedInput
    latestSnapshot?: ProductSnapshotUpdateOneWithoutLatestForProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutImagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: FloatFieldUpdateOperationsInput | number
    discountedBasePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    manufacturerId?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: ProductUpdatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    latestSnapshotId?: NullableStringFieldUpdateOperationsInput | string | null
    categories?: ProductCategoryUncheckedUpdateManyWithoutProductsNestedInput
    modifierGroups?: ModifierGroupUncheckedUpdateManyWithoutProductsNestedInput
    translations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
    snapshots?: ProductSnapshotUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutImagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: FloatFieldUpdateOperationsInput | number
    discountedBasePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    manufacturerId?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: ProductUpdatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    latestSnapshotId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ModifierUpdateWithoutImagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
    modifierGroup?: ModifierGroupUpdateOneRequiredWithoutModifiersNestedInput
  }

  export type ModifierUncheckedUpdateWithoutImagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
    modifierGroupId?: StringFieldUpdateOperationsInput | string
  }

  export type ModifierUncheckedUpdateManyWithoutImagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
    modifierGroupId?: StringFieldUpdateOperationsInput | string
  }

  export type OrderItemUpdateWithoutImageInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    rawData?: NullableJsonNullValueInput | InputJsonValue
    order?: OrderUpdateOneRequiredWithoutItemsNestedInput
    productSnapshot?: ProductSnapshotUpdateOneWithoutOrderItemsNestedInput
    translations?: OrderItemTranslationUpdateManyWithoutOrderItemNestedInput
  }

  export type OrderItemUncheckedUpdateWithoutImageInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    orderId?: StringFieldUpdateOperationsInput | string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    productSnapshotId?: NullableStringFieldUpdateOperationsInput | string | null
    translations?: OrderItemTranslationUncheckedUpdateManyWithoutOrderItemNestedInput
  }

  export type OrderItemUncheckedUpdateManyWithoutImageInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    orderId?: StringFieldUpdateOperationsInput | string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    productSnapshotId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductCreateManyManufacturerInput = {
    id?: string
    content?: string | null
    slug?: string | null
    sku?: string | null
    basePrice: number
    discountedBasePrice?: number | null
    currency: string
    organizationId: string
    tags?: ProductCreatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: Date | string | null
    publishedBy?: string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
    latestSnapshotId?: string | null
  }

  export type ManufacturerTranslationCreateManyManufacturerInput = {
    id?: string
    locale: string
    about?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
  }

  export type ProductUpdateWithoutManufacturerInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: FloatFieldUpdateOperationsInput | number
    discountedBasePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    tags?: ProductUpdatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    images?: FileUpdateManyWithoutProductImagesNestedInput
    organization?: OrganizationUpdateOneRequiredWithoutProductsNestedInput
    categories?: ProductCategoryUpdateManyWithoutProductsNestedInput
    modifierGroups?: ModifierGroupUpdateManyWithoutProductsNestedInput
    translations?: ProductTranslationUpdateManyWithoutProductNestedInput
    snapshots?: ProductSnapshotUpdateManyWithoutProductNestedInput
    latestSnapshot?: ProductSnapshotUpdateOneWithoutLatestForProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutManufacturerInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: FloatFieldUpdateOperationsInput | number
    discountedBasePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    tags?: ProductUpdatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    latestSnapshotId?: NullableStringFieldUpdateOperationsInput | string | null
    images?: FileUncheckedUpdateManyWithoutProductImagesNestedInput
    categories?: ProductCategoryUncheckedUpdateManyWithoutProductsNestedInput
    modifierGroups?: ModifierGroupUncheckedUpdateManyWithoutProductsNestedInput
    translations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
    snapshots?: ProductSnapshotUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutManufacturerInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: FloatFieldUpdateOperationsInput | number
    discountedBasePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    tags?: ProductUpdatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    latestSnapshotId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ManufacturerTranslationUpdateWithoutManufacturerInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    about?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ManufacturerTranslationUncheckedUpdateWithoutManufacturerInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    about?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ManufacturerTranslationUncheckedUpdateManyWithoutManufacturerInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    about?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductCategoryTranslationCreateManyProductCategoryInput = {
    id?: string
    locale: string
    title?: string | null
    description?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
  }

  export type ProductCategoryTranslationUpdateWithoutProductCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductCategoryTranslationUncheckedUpdateWithoutProductCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductCategoryTranslationUncheckedUpdateManyWithoutProductCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductUpdateWithoutCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: FloatFieldUpdateOperationsInput | number
    discountedBasePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    tags?: ProductUpdatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    images?: FileUpdateManyWithoutProductImagesNestedInput
    organization?: OrganizationUpdateOneRequiredWithoutProductsNestedInput
    manufacturer?: ManufacturerUpdateOneWithoutProductsNestedInput
    modifierGroups?: ModifierGroupUpdateManyWithoutProductsNestedInput
    translations?: ProductTranslationUpdateManyWithoutProductNestedInput
    snapshots?: ProductSnapshotUpdateManyWithoutProductNestedInput
    latestSnapshot?: ProductSnapshotUpdateOneWithoutLatestForProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: FloatFieldUpdateOperationsInput | number
    discountedBasePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    manufacturerId?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: ProductUpdatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    latestSnapshotId?: NullableStringFieldUpdateOperationsInput | string | null
    images?: FileUncheckedUpdateManyWithoutProductImagesNestedInput
    modifierGroups?: ModifierGroupUncheckedUpdateManyWithoutProductsNestedInput
    translations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
    snapshots?: ProductSnapshotUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutCategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: FloatFieldUpdateOperationsInput | number
    discountedBasePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    manufacturerId?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: ProductUpdatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    latestSnapshotId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductTranslationCreateManyProductInput = {
    id?: string
    locale: string
    title?: string | null
    description?: string | null
    createdAt?: Date | string
    createdBy?: string | null
    updatedAt?: Date | string
    updatedBy?: string | null
  }

  export type ProductSnapshotCreateManyProductInput = {
    id?: string
    data: JsonNullValueInput | InputJsonValue
    createdAt?: Date | string
    createdBy?: string | null
  }

  export type FileUpdateWithoutProductImagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumFileUploadStatusFieldUpdateOperationsInput | $Enums.FileUploadStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: OrganizationUpdateOneWithoutFilesNestedInput
    manufacturerLogo?: ManufacturerUpdateOneWithoutLogoNestedInput
    productCategoryImage?: ProductCategoryUpdateOneWithoutImageNestedInput
    modifierImages?: ModifierUpdateManyWithoutImagesNestedInput
    shippingMethodLogoFor?: ShippingMethodUpdateOneWithoutProviderLogoNestedInput
    organizationLogo?: OrganizationUpdateOneWithoutLogoFileNestedInput
    orderItemImages?: OrderItemUpdateManyWithoutImageNestedInput
  }

  export type FileUncheckedUpdateWithoutProductImagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumFileUploadStatusFieldUpdateOperationsInput | $Enums.FileUploadStatus
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerLogo?: ManufacturerUncheckedUpdateOneWithoutLogoNestedInput
    productCategoryImage?: ProductCategoryUncheckedUpdateOneWithoutImageNestedInput
    modifierImages?: ModifierUncheckedUpdateManyWithoutImagesNestedInput
    shippingMethodLogoFor?: ShippingMethodUncheckedUpdateOneWithoutProviderLogoNestedInput
    organizationLogo?: OrganizationUncheckedUpdateOneWithoutLogoFileNestedInput
    orderItemImages?: OrderItemUncheckedUpdateManyWithoutImageNestedInput
  }

  export type FileUncheckedUpdateManyWithoutProductImagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumFileUploadStatusFieldUpdateOperationsInput | $Enums.FileUploadStatus
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductCategoryUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: OrganizationUpdateOneRequiredWithoutProductCategoriesNestedInput
    image?: FileUpdateOneWithoutProductCategoryImageNestedInput
    translations?: ProductCategoryTranslationUpdateManyWithoutProductCategoryNestedInput
  }

  export type ProductCategoryUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: StringFieldUpdateOperationsInput | string
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    translations?: ProductCategoryTranslationUncheckedUpdateManyWithoutProductCategoryNestedInput
  }

  export type ProductCategoryUncheckedUpdateManyWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    organizationId?: StringFieldUpdateOperationsInput | string
    priority?: NullableIntFieldUpdateOperationsInput | number | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ModifierGroupUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    selectMin?: NullableIntFieldUpdateOperationsInput | number | null
    selectMax?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modifiers?: ModifierUpdateManyWithoutModifierGroupNestedInput
    translations?: ModifierGroupTranslationUpdateManyWithoutModifierGroupNestedInput
  }

  export type ModifierGroupUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    selectMin?: NullableIntFieldUpdateOperationsInput | number | null
    selectMax?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    modifiers?: ModifierUncheckedUpdateManyWithoutModifierGroupNestedInput
    translations?: ModifierGroupTranslationUncheckedUpdateManyWithoutModifierGroupNestedInput
  }

  export type ModifierGroupUncheckedUpdateManyWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    selectMin?: NullableIntFieldUpdateOperationsInput | number | null
    selectMax?: NullableIntFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductTranslationUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductTranslationUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductTranslationUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductSnapshotUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    latestForProduct?: ProductUpdateOneWithoutLatestSnapshotNestedInput
    orderItems?: OrderItemUpdateManyWithoutProductSnapshotNestedInput
  }

  export type ProductSnapshotUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    latestForProduct?: ProductUncheckedUpdateOneWithoutLatestSnapshotNestedInput
    orderItems?: OrderItemUncheckedUpdateManyWithoutProductSnapshotNestedInput
  }

  export type ProductSnapshotUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    data?: JsonNullValueInput | InputJsonValue
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderItemCreateManyProductSnapshotInput = {
    id?: string
    quantity: number
    unitPrice: number
    totalPrice: number
    orderId: string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    imageId?: string | null
  }

  export type OrderItemUpdateWithoutProductSnapshotInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    rawData?: NullableJsonNullValueInput | InputJsonValue
    order?: OrderUpdateOneRequiredWithoutItemsNestedInput
    image?: FileUpdateOneWithoutOrderItemImagesNestedInput
    translations?: OrderItemTranslationUpdateManyWithoutOrderItemNestedInput
  }

  export type OrderItemUncheckedUpdateWithoutProductSnapshotInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    orderId?: StringFieldUpdateOperationsInput | string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    translations?: OrderItemTranslationUncheckedUpdateManyWithoutOrderItemNestedInput
  }

  export type OrderItemUncheckedUpdateManyWithoutProductSnapshotInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    orderId?: StringFieldUpdateOperationsInput | string
    rawData?: NullableJsonNullValueInput | InputJsonValue
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ModifierCreateManyModifierGroupInput = {
    id?: string
    title: string
    description?: string | null
    sku?: string | null
    price: number
  }

  export type ModifierGroupTranslationCreateManyModifierGroupInput = {
    id?: string
    locale: string
    title?: string | null
    description?: string | null
  }

  export type ModifierUpdateWithoutModifierGroupInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
    images?: FileUpdateManyWithoutModifierImagesNestedInput
  }

  export type ModifierUncheckedUpdateWithoutModifierGroupInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
    images?: FileUncheckedUpdateManyWithoutModifierImagesNestedInput
  }

  export type ModifierUncheckedUpdateManyWithoutModifierGroupInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
  }

  export type ProductUpdateWithoutModifierGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: FloatFieldUpdateOperationsInput | number
    discountedBasePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    tags?: ProductUpdatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    images?: FileUpdateManyWithoutProductImagesNestedInput
    organization?: OrganizationUpdateOneRequiredWithoutProductsNestedInput
    manufacturer?: ManufacturerUpdateOneWithoutProductsNestedInput
    categories?: ProductCategoryUpdateManyWithoutProductsNestedInput
    translations?: ProductTranslationUpdateManyWithoutProductNestedInput
    snapshots?: ProductSnapshotUpdateManyWithoutProductNestedInput
    latestSnapshot?: ProductSnapshotUpdateOneWithoutLatestForProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutModifierGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: FloatFieldUpdateOperationsInput | number
    discountedBasePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    manufacturerId?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: ProductUpdatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    latestSnapshotId?: NullableStringFieldUpdateOperationsInput | string | null
    images?: FileUncheckedUpdateManyWithoutProductImagesNestedInput
    categories?: ProductCategoryUncheckedUpdateManyWithoutProductsNestedInput
    translations?: ProductTranslationUncheckedUpdateManyWithoutProductNestedInput
    snapshots?: ProductSnapshotUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutModifierGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    content?: NullableStringFieldUpdateOperationsInput | string | null
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    sku?: NullableStringFieldUpdateOperationsInput | string | null
    basePrice?: FloatFieldUpdateOperationsInput | number
    discountedBasePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    currency?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    manufacturerId?: NullableStringFieldUpdateOperationsInput | string | null
    tags?: ProductUpdatetagsInput | string[]
    metadata?: NullableJsonNullValueInput | InputJsonValue
    publishedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    publishedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    latestSnapshotId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ModifierGroupTranslationUpdateWithoutModifierGroupInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ModifierGroupTranslationUncheckedUpdateWithoutModifierGroupInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ModifierGroupTranslationUncheckedUpdateManyWithoutModifierGroupInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FileUpdateWithoutModifierImagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumFileUploadStatusFieldUpdateOperationsInput | $Enums.FileUploadStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    organization?: OrganizationUpdateOneWithoutFilesNestedInput
    manufacturerLogo?: ManufacturerUpdateOneWithoutLogoNestedInput
    productCategoryImage?: ProductCategoryUpdateOneWithoutImageNestedInput
    productImages?: ProductUpdateManyWithoutImagesNestedInput
    shippingMethodLogoFor?: ShippingMethodUpdateOneWithoutProviderLogoNestedInput
    organizationLogo?: OrganizationUpdateOneWithoutLogoFileNestedInput
    orderItemImages?: OrderItemUpdateManyWithoutImageNestedInput
  }

  export type FileUncheckedUpdateWithoutModifierImagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumFileUploadStatusFieldUpdateOperationsInput | $Enums.FileUploadStatus
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    manufacturerLogo?: ManufacturerUncheckedUpdateOneWithoutLogoNestedInput
    productCategoryImage?: ProductCategoryUncheckedUpdateOneWithoutImageNestedInput
    productImages?: ProductUncheckedUpdateManyWithoutImagesNestedInput
    shippingMethodLogoFor?: ShippingMethodUncheckedUpdateOneWithoutProviderLogoNestedInput
    organizationLogo?: OrganizationUncheckedUpdateOneWithoutLogoFileNestedInput
    orderItemImages?: OrderItemUncheckedUpdateManyWithoutImageNestedInput
  }

  export type FileUncheckedUpdateManyWithoutModifierImagesInput = {
    id?: StringFieldUpdateOperationsInput | string
    mimeType?: NullableStringFieldUpdateOperationsInput | string | null
    size?: NullableIntFieldUpdateOperationsInput | number | null
    filename?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumFileUploadStatusFieldUpdateOperationsInput | $Enums.FileUploadStatus
    organizationId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedBy?: NullableStringFieldUpdateOperationsInput | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderItemCreateManyOrderInput = {
    id?: string
    quantity: number
    unitPrice: number
    totalPrice: number
    rawData?: NullableJsonNullValueInput | InputJsonValue
    productSnapshotId?: string | null
    imageId?: string | null
  }

  export type OrderItemUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    rawData?: NullableJsonNullValueInput | InputJsonValue
    productSnapshot?: ProductSnapshotUpdateOneWithoutOrderItemsNestedInput
    image?: FileUpdateOneWithoutOrderItemImagesNestedInput
    translations?: OrderItemTranslationUpdateManyWithoutOrderItemNestedInput
  }

  export type OrderItemUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    rawData?: NullableJsonNullValueInput | InputJsonValue
    productSnapshotId?: NullableStringFieldUpdateOperationsInput | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
    translations?: OrderItemTranslationUncheckedUpdateManyWithoutOrderItemNestedInput
  }

  export type OrderItemUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    rawData?: NullableJsonNullValueInput | InputJsonValue
    productSnapshotId?: NullableStringFieldUpdateOperationsInput | string | null
    imageId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderItemTranslationCreateManyOrderItemInput = {
    id?: string
    locale: string
    title: string
    subtitle?: string | null
  }

  export type OrderItemTranslationUpdateWithoutOrderItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderItemTranslationUncheckedUpdateWithoutOrderItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderItemTranslationUncheckedUpdateManyWithoutOrderItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    locale?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentSessionCreateManyPaymentInput = {
    id?: string
    referenceId: string
    amount: number
    currency?: $Enums.Currency
    rawData: JsonNullValueInput | InputJsonValue
    capturedAt?: Date | string | null
    expiredAt?: Date | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type PaymentSessionUpdateWithoutPaymentInput = {
    id?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    rawData?: JsonNullValueInput | InputJsonValue
    capturedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentSessionUncheckedUpdateWithoutPaymentInput = {
    id?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    rawData?: JsonNullValueInput | InputJsonValue
    capturedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PaymentSessionUncheckedUpdateManyWithoutPaymentInput = {
    id?: StringFieldUpdateOperationsInput | string
    referenceId?: StringFieldUpdateOperationsInput | string
    amount?: FloatFieldUpdateOperationsInput | number
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    rawData?: JsonNullValueInput | InputJsonValue
    capturedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    expiredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShippingZoneCreateManyShippingMethodInput = {
    id?: string
    title: string
    distanceUpto?: number | null
    price: number
    minimumOrderAmount?: number | null
    eta: string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type OrderCreateManyShippingMethodInput = {
    id?: string
    organizationId: string
    userId?: string | null
    paymentId?: string | null
    token: string
    expiresAt?: Date | string
    referenceId: string
    fulfilmentMethod?: $Enums.OrderFulfilmentMethod | null
    shippingAddressId?: string | null
    dateOfExecution?: Date | string | null
    currency?: $Enums.Currency
    sourceIp?: string | null
    acceptedAt?: Date | string | null
    readyForDispatchAt?: Date | string | null
    dispatchedAt?: Date | string | null
    completedAt?: Date | string | null
    cancelledAt?: Date | string | null
    deletedAt?: Date | string | null
    deletedBy?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ShippingZoneUpdateWithoutShippingMethodInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    distanceUpto?: NullableFloatFieldUpdateOperationsInput | number | null
    price?: FloatFieldUpdateOperationsInput | number
    minimumOrderAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    eta?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShippingZoneUncheckedUpdateWithoutShippingMethodInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    distanceUpto?: NullableFloatFieldUpdateOperationsInput | number | null
    price?: FloatFieldUpdateOperationsInput | number
    minimumOrderAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    eta?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShippingZoneUncheckedUpdateManyWithoutShippingMethodInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    distanceUpto?: NullableFloatFieldUpdateOperationsInput | number | null
    price?: FloatFieldUpdateOperationsInput | number
    minimumOrderAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    eta?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderUpdateWithoutShippingMethodInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    fulfilmentMethod?: NullableEnumOrderFulfilmentMethodFieldUpdateOperationsInput | $Enums.OrderFulfilmentMethod | null
    dateOfExecution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    sourceIp?: NullableStringFieldUpdateOperationsInput | string | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyForDispatchAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    organization?: OrganizationUpdateOneRequiredWithoutOrdersNestedInput
    user?: UserUpdateOneWithoutOrdersNestedInput
    payment?: PaymentUpdateOneWithoutOrderNestedInput
    shippingAddress?: AddressUpdateOneWithoutOrdersNestedInput
    items?: OrderItemUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutShippingMethodInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    fulfilmentMethod?: NullableEnumOrderFulfilmentMethodFieldUpdateOperationsInput | $Enums.OrderFulfilmentMethod | null
    shippingAddressId?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfExecution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    sourceIp?: NullableStringFieldUpdateOperationsInput | string | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyForDispatchAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    items?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutShippingMethodInput = {
    id?: StringFieldUpdateOperationsInput | string
    organizationId?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentId?: NullableStringFieldUpdateOperationsInput | string | null
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    referenceId?: StringFieldUpdateOperationsInput | string
    fulfilmentMethod?: NullableEnumOrderFulfilmentMethodFieldUpdateOperationsInput | $Enums.OrderFulfilmentMethod | null
    shippingAddressId?: NullableStringFieldUpdateOperationsInput | string | null
    dateOfExecution?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    currency?: EnumCurrencyFieldUpdateOperationsInput | $Enums.Currency
    sourceIp?: NullableStringFieldUpdateOperationsInput | string | null
    acceptedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    readyForDispatchAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatchedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cancelledAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deletedBy?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}