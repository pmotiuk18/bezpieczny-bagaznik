
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `Modifier` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Modifier
 * 
 */
export type ModifierModel = runtime.Types.Result.DefaultSelection<Prisma.$ModifierPayload>

export type AggregateModifier = {
  _count: ModifierCountAggregateOutputType | null
  _avg: ModifierAvgAggregateOutputType | null
  _sum: ModifierSumAggregateOutputType | null
  _min: ModifierMinAggregateOutputType | null
  _max: ModifierMaxAggregateOutputType | null
}

export type ModifierAvgAggregateOutputType = {
  price: number | null
}

export type ModifierSumAggregateOutputType = {
  price: number | null
}

export type ModifierMinAggregateOutputType = {
  id: string | null
  title: string | null
  description: string | null
  sku: string | null
  price: number | null
  modifierGroupId: string | null
}

export type ModifierMaxAggregateOutputType = {
  id: string | null
  title: string | null
  description: string | null
  sku: string | null
  price: number | null
  modifierGroupId: string | null
}

export type ModifierCountAggregateOutputType = {
  id: number
  title: number
  description: number
  sku: number
  price: number
  modifierGroupId: number
  _all: number
}


export type ModifierAvgAggregateInputType = {
  price?: true
}

export type ModifierSumAggregateInputType = {
  price?: true
}

export type ModifierMinAggregateInputType = {
  id?: true
  title?: true
  description?: true
  sku?: true
  price?: true
  modifierGroupId?: true
}

export type ModifierMaxAggregateInputType = {
  id?: true
  title?: true
  description?: true
  sku?: true
  price?: true
  modifierGroupId?: true
}

export type ModifierCountAggregateInputType = {
  id?: true
  title?: true
  description?: true
  sku?: true
  price?: true
  modifierGroupId?: true
  _all?: true
}

export type ModifierAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Modifier to aggregate.
   */
  where?: Prisma.ModifierWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Modifiers to fetch.
   */
  orderBy?: Prisma.ModifierOrderByWithRelationInput | Prisma.ModifierOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ModifierWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Modifiers from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Modifiers.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Modifiers
  **/
  _count?: true | ModifierCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ModifierAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ModifierSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ModifierMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ModifierMaxAggregateInputType
}

export type GetModifierAggregateType<T extends ModifierAggregateArgs> = {
      [P in keyof T & keyof AggregateModifier]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateModifier[P]>
    : Prisma.GetScalarType<T[P], AggregateModifier[P]>
}




export type ModifierGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ModifierWhereInput
  orderBy?: Prisma.ModifierOrderByWithAggregationInput | Prisma.ModifierOrderByWithAggregationInput[]
  by: Prisma.ModifierScalarFieldEnum[] | Prisma.ModifierScalarFieldEnum
  having?: Prisma.ModifierScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ModifierCountAggregateInputType | true
  _avg?: ModifierAvgAggregateInputType
  _sum?: ModifierSumAggregateInputType
  _min?: ModifierMinAggregateInputType
  _max?: ModifierMaxAggregateInputType
}

export type ModifierGroupByOutputType = {
  id: string
  title: string
  description: string | null
  sku: string | null
  price: number
  modifierGroupId: string
  _count: ModifierCountAggregateOutputType | null
  _avg: ModifierAvgAggregateOutputType | null
  _sum: ModifierSumAggregateOutputType | null
  _min: ModifierMinAggregateOutputType | null
  _max: ModifierMaxAggregateOutputType | null
}

type GetModifierGroupByPayload<T extends ModifierGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ModifierGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ModifierGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ModifierGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ModifierGroupByOutputType[P]>
      }
    >
  > 



export type ModifierWhereInput = {
  AND?: Prisma.ModifierWhereInput | Prisma.ModifierWhereInput[]
  OR?: Prisma.ModifierWhereInput[]
  NOT?: Prisma.ModifierWhereInput | Prisma.ModifierWhereInput[]
  id?: Prisma.StringFilter<"Modifier"> | string
  title?: Prisma.StringFilter<"Modifier"> | string
  description?: Prisma.StringNullableFilter<"Modifier"> | string | null
  sku?: Prisma.StringNullableFilter<"Modifier"> | string | null
  price?: Prisma.FloatFilter<"Modifier"> | number
  modifierGroupId?: Prisma.StringFilter<"Modifier"> | string
  modifierGroup?: Prisma.XOR<Prisma.ModifierGroupScalarRelationFilter, Prisma.ModifierGroupWhereInput>
  images?: Prisma.FileListRelationFilter
}

export type ModifierOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  sku?: Prisma.SortOrderInput | Prisma.SortOrder
  price?: Prisma.SortOrder
  modifierGroupId?: Prisma.SortOrder
  modifierGroup?: Prisma.ModifierGroupOrderByWithRelationInput
  images?: Prisma.FileOrderByRelationAggregateInput
}

export type ModifierWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.ModifierWhereInput | Prisma.ModifierWhereInput[]
  OR?: Prisma.ModifierWhereInput[]
  NOT?: Prisma.ModifierWhereInput | Prisma.ModifierWhereInput[]
  title?: Prisma.StringFilter<"Modifier"> | string
  description?: Prisma.StringNullableFilter<"Modifier"> | string | null
  sku?: Prisma.StringNullableFilter<"Modifier"> | string | null
  price?: Prisma.FloatFilter<"Modifier"> | number
  modifierGroupId?: Prisma.StringFilter<"Modifier"> | string
  modifierGroup?: Prisma.XOR<Prisma.ModifierGroupScalarRelationFilter, Prisma.ModifierGroupWhereInput>
  images?: Prisma.FileListRelationFilter
}, "id">

export type ModifierOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  sku?: Prisma.SortOrderInput | Prisma.SortOrder
  price?: Prisma.SortOrder
  modifierGroupId?: Prisma.SortOrder
  _count?: Prisma.ModifierCountOrderByAggregateInput
  _avg?: Prisma.ModifierAvgOrderByAggregateInput
  _max?: Prisma.ModifierMaxOrderByAggregateInput
  _min?: Prisma.ModifierMinOrderByAggregateInput
  _sum?: Prisma.ModifierSumOrderByAggregateInput
}

export type ModifierScalarWhereWithAggregatesInput = {
  AND?: Prisma.ModifierScalarWhereWithAggregatesInput | Prisma.ModifierScalarWhereWithAggregatesInput[]
  OR?: Prisma.ModifierScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ModifierScalarWhereWithAggregatesInput | Prisma.ModifierScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Modifier"> | string
  title?: Prisma.StringWithAggregatesFilter<"Modifier"> | string
  description?: Prisma.StringNullableWithAggregatesFilter<"Modifier"> | string | null
  sku?: Prisma.StringNullableWithAggregatesFilter<"Modifier"> | string | null
  price?: Prisma.FloatWithAggregatesFilter<"Modifier"> | number
  modifierGroupId?: Prisma.StringWithAggregatesFilter<"Modifier"> | string
}

export type ModifierCreateInput = {
  id?: string
  title: string
  description?: string | null
  sku?: string | null
  price: number
  modifierGroup: Prisma.ModifierGroupCreateNestedOneWithoutModifiersInput
  images?: Prisma.FileCreateNestedManyWithoutModifierImagesInput
}

export type ModifierUncheckedCreateInput = {
  id?: string
  title: string
  description?: string | null
  sku?: string | null
  price: number
  modifierGroupId: string
  images?: Prisma.FileUncheckedCreateNestedManyWithoutModifierImagesInput
}

export type ModifierUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sku?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  modifierGroup?: Prisma.ModifierGroupUpdateOneRequiredWithoutModifiersNestedInput
  images?: Prisma.FileUpdateManyWithoutModifierImagesNestedInput
}

export type ModifierUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sku?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  modifierGroupId?: Prisma.StringFieldUpdateOperationsInput | string
  images?: Prisma.FileUncheckedUpdateManyWithoutModifierImagesNestedInput
}

export type ModifierCreateManyInput = {
  id?: string
  title: string
  description?: string | null
  sku?: string | null
  price: number
  modifierGroupId: string
}

export type ModifierUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sku?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
}

export type ModifierUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sku?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  modifierGroupId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type ModifierListRelationFilter = {
  every?: Prisma.ModifierWhereInput
  some?: Prisma.ModifierWhereInput
  none?: Prisma.ModifierWhereInput
}

export type ModifierOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ModifierCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  sku?: Prisma.SortOrder
  price?: Prisma.SortOrder
  modifierGroupId?: Prisma.SortOrder
}

export type ModifierAvgOrderByAggregateInput = {
  price?: Prisma.SortOrder
}

export type ModifierMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  sku?: Prisma.SortOrder
  price?: Prisma.SortOrder
  modifierGroupId?: Prisma.SortOrder
}

export type ModifierMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  sku?: Prisma.SortOrder
  price?: Prisma.SortOrder
  modifierGroupId?: Prisma.SortOrder
}

export type ModifierSumOrderByAggregateInput = {
  price?: Prisma.SortOrder
}

export type ModifierCreateNestedManyWithoutImagesInput = {
  create?: Prisma.XOR<Prisma.ModifierCreateWithoutImagesInput, Prisma.ModifierUncheckedCreateWithoutImagesInput> | Prisma.ModifierCreateWithoutImagesInput[] | Prisma.ModifierUncheckedCreateWithoutImagesInput[]
  connectOrCreate?: Prisma.ModifierCreateOrConnectWithoutImagesInput | Prisma.ModifierCreateOrConnectWithoutImagesInput[]
  connect?: Prisma.ModifierWhereUniqueInput | Prisma.ModifierWhereUniqueInput[]
}

export type ModifierUncheckedCreateNestedManyWithoutImagesInput = {
  create?: Prisma.XOR<Prisma.ModifierCreateWithoutImagesInput, Prisma.ModifierUncheckedCreateWithoutImagesInput> | Prisma.ModifierCreateWithoutImagesInput[] | Prisma.ModifierUncheckedCreateWithoutImagesInput[]
  connectOrCreate?: Prisma.ModifierCreateOrConnectWithoutImagesInput | Prisma.ModifierCreateOrConnectWithoutImagesInput[]
  connect?: Prisma.ModifierWhereUniqueInput | Prisma.ModifierWhereUniqueInput[]
}

export type ModifierUpdateManyWithoutImagesNestedInput = {
  create?: Prisma.XOR<Prisma.ModifierCreateWithoutImagesInput, Prisma.ModifierUncheckedCreateWithoutImagesInput> | Prisma.ModifierCreateWithoutImagesInput[] | Prisma.ModifierUncheckedCreateWithoutImagesInput[]
  connectOrCreate?: Prisma.ModifierCreateOrConnectWithoutImagesInput | Prisma.ModifierCreateOrConnectWithoutImagesInput[]
  upsert?: Prisma.ModifierUpsertWithWhereUniqueWithoutImagesInput | Prisma.ModifierUpsertWithWhereUniqueWithoutImagesInput[]
  set?: Prisma.ModifierWhereUniqueInput | Prisma.ModifierWhereUniqueInput[]
  disconnect?: Prisma.ModifierWhereUniqueInput | Prisma.ModifierWhereUniqueInput[]
  delete?: Prisma.ModifierWhereUniqueInput | Prisma.ModifierWhereUniqueInput[]
  connect?: Prisma.ModifierWhereUniqueInput | Prisma.ModifierWhereUniqueInput[]
  update?: Prisma.ModifierUpdateWithWhereUniqueWithoutImagesInput | Prisma.ModifierUpdateWithWhereUniqueWithoutImagesInput[]
  updateMany?: Prisma.ModifierUpdateManyWithWhereWithoutImagesInput | Prisma.ModifierUpdateManyWithWhereWithoutImagesInput[]
  deleteMany?: Prisma.ModifierScalarWhereInput | Prisma.ModifierScalarWhereInput[]
}

export type ModifierUncheckedUpdateManyWithoutImagesNestedInput = {
  create?: Prisma.XOR<Prisma.ModifierCreateWithoutImagesInput, Prisma.ModifierUncheckedCreateWithoutImagesInput> | Prisma.ModifierCreateWithoutImagesInput[] | Prisma.ModifierUncheckedCreateWithoutImagesInput[]
  connectOrCreate?: Prisma.ModifierCreateOrConnectWithoutImagesInput | Prisma.ModifierCreateOrConnectWithoutImagesInput[]
  upsert?: Prisma.ModifierUpsertWithWhereUniqueWithoutImagesInput | Prisma.ModifierUpsertWithWhereUniqueWithoutImagesInput[]
  set?: Prisma.ModifierWhereUniqueInput | Prisma.ModifierWhereUniqueInput[]
  disconnect?: Prisma.ModifierWhereUniqueInput | Prisma.ModifierWhereUniqueInput[]
  delete?: Prisma.ModifierWhereUniqueInput | Prisma.ModifierWhereUniqueInput[]
  connect?: Prisma.ModifierWhereUniqueInput | Prisma.ModifierWhereUniqueInput[]
  update?: Prisma.ModifierUpdateWithWhereUniqueWithoutImagesInput | Prisma.ModifierUpdateWithWhereUniqueWithoutImagesInput[]
  updateMany?: Prisma.ModifierUpdateManyWithWhereWithoutImagesInput | Prisma.ModifierUpdateManyWithWhereWithoutImagesInput[]
  deleteMany?: Prisma.ModifierScalarWhereInput | Prisma.ModifierScalarWhereInput[]
}

export type ModifierCreateNestedManyWithoutModifierGroupInput = {
  create?: Prisma.XOR<Prisma.ModifierCreateWithoutModifierGroupInput, Prisma.ModifierUncheckedCreateWithoutModifierGroupInput> | Prisma.ModifierCreateWithoutModifierGroupInput[] | Prisma.ModifierUncheckedCreateWithoutModifierGroupInput[]
  connectOrCreate?: Prisma.ModifierCreateOrConnectWithoutModifierGroupInput | Prisma.ModifierCreateOrConnectWithoutModifierGroupInput[]
  createMany?: Prisma.ModifierCreateManyModifierGroupInputEnvelope
  connect?: Prisma.ModifierWhereUniqueInput | Prisma.ModifierWhereUniqueInput[]
}

export type ModifierUncheckedCreateNestedManyWithoutModifierGroupInput = {
  create?: Prisma.XOR<Prisma.ModifierCreateWithoutModifierGroupInput, Prisma.ModifierUncheckedCreateWithoutModifierGroupInput> | Prisma.ModifierCreateWithoutModifierGroupInput[] | Prisma.ModifierUncheckedCreateWithoutModifierGroupInput[]
  connectOrCreate?: Prisma.ModifierCreateOrConnectWithoutModifierGroupInput | Prisma.ModifierCreateOrConnectWithoutModifierGroupInput[]
  createMany?: Prisma.ModifierCreateManyModifierGroupInputEnvelope
  connect?: Prisma.ModifierWhereUniqueInput | Prisma.ModifierWhereUniqueInput[]
}

export type ModifierUpdateManyWithoutModifierGroupNestedInput = {
  create?: Prisma.XOR<Prisma.ModifierCreateWithoutModifierGroupInput, Prisma.ModifierUncheckedCreateWithoutModifierGroupInput> | Prisma.ModifierCreateWithoutModifierGroupInput[] | Prisma.ModifierUncheckedCreateWithoutModifierGroupInput[]
  connectOrCreate?: Prisma.ModifierCreateOrConnectWithoutModifierGroupInput | Prisma.ModifierCreateOrConnectWithoutModifierGroupInput[]
  upsert?: Prisma.ModifierUpsertWithWhereUniqueWithoutModifierGroupInput | Prisma.ModifierUpsertWithWhereUniqueWithoutModifierGroupInput[]
  createMany?: Prisma.ModifierCreateManyModifierGroupInputEnvelope
  set?: Prisma.ModifierWhereUniqueInput | Prisma.ModifierWhereUniqueInput[]
  disconnect?: Prisma.ModifierWhereUniqueInput | Prisma.ModifierWhereUniqueInput[]
  delete?: Prisma.ModifierWhereUniqueInput | Prisma.ModifierWhereUniqueInput[]
  connect?: Prisma.ModifierWhereUniqueInput | Prisma.ModifierWhereUniqueInput[]
  update?: Prisma.ModifierUpdateWithWhereUniqueWithoutModifierGroupInput | Prisma.ModifierUpdateWithWhereUniqueWithoutModifierGroupInput[]
  updateMany?: Prisma.ModifierUpdateManyWithWhereWithoutModifierGroupInput | Prisma.ModifierUpdateManyWithWhereWithoutModifierGroupInput[]
  deleteMany?: Prisma.ModifierScalarWhereInput | Prisma.ModifierScalarWhereInput[]
}

export type ModifierUncheckedUpdateManyWithoutModifierGroupNestedInput = {
  create?: Prisma.XOR<Prisma.ModifierCreateWithoutModifierGroupInput, Prisma.ModifierUncheckedCreateWithoutModifierGroupInput> | Prisma.ModifierCreateWithoutModifierGroupInput[] | Prisma.ModifierUncheckedCreateWithoutModifierGroupInput[]
  connectOrCreate?: Prisma.ModifierCreateOrConnectWithoutModifierGroupInput | Prisma.ModifierCreateOrConnectWithoutModifierGroupInput[]
  upsert?: Prisma.ModifierUpsertWithWhereUniqueWithoutModifierGroupInput | Prisma.ModifierUpsertWithWhereUniqueWithoutModifierGroupInput[]
  createMany?: Prisma.ModifierCreateManyModifierGroupInputEnvelope
  set?: Prisma.ModifierWhereUniqueInput | Prisma.ModifierWhereUniqueInput[]
  disconnect?: Prisma.ModifierWhereUniqueInput | Prisma.ModifierWhereUniqueInput[]
  delete?: Prisma.ModifierWhereUniqueInput | Prisma.ModifierWhereUniqueInput[]
  connect?: Prisma.ModifierWhereUniqueInput | Prisma.ModifierWhereUniqueInput[]
  update?: Prisma.ModifierUpdateWithWhereUniqueWithoutModifierGroupInput | Prisma.ModifierUpdateWithWhereUniqueWithoutModifierGroupInput[]
  updateMany?: Prisma.ModifierUpdateManyWithWhereWithoutModifierGroupInput | Prisma.ModifierUpdateManyWithWhereWithoutModifierGroupInput[]
  deleteMany?: Prisma.ModifierScalarWhereInput | Prisma.ModifierScalarWhereInput[]
}

export type ModifierCreateWithoutImagesInput = {
  id?: string
  title: string
  description?: string | null
  sku?: string | null
  price: number
  modifierGroup: Prisma.ModifierGroupCreateNestedOneWithoutModifiersInput
}

export type ModifierUncheckedCreateWithoutImagesInput = {
  id?: string
  title: string
  description?: string | null
  sku?: string | null
  price: number
  modifierGroupId: string
}

export type ModifierCreateOrConnectWithoutImagesInput = {
  where: Prisma.ModifierWhereUniqueInput
  create: Prisma.XOR<Prisma.ModifierCreateWithoutImagesInput, Prisma.ModifierUncheckedCreateWithoutImagesInput>
}

export type ModifierUpsertWithWhereUniqueWithoutImagesInput = {
  where: Prisma.ModifierWhereUniqueInput
  update: Prisma.XOR<Prisma.ModifierUpdateWithoutImagesInput, Prisma.ModifierUncheckedUpdateWithoutImagesInput>
  create: Prisma.XOR<Prisma.ModifierCreateWithoutImagesInput, Prisma.ModifierUncheckedCreateWithoutImagesInput>
}

export type ModifierUpdateWithWhereUniqueWithoutImagesInput = {
  where: Prisma.ModifierWhereUniqueInput
  data: Prisma.XOR<Prisma.ModifierUpdateWithoutImagesInput, Prisma.ModifierUncheckedUpdateWithoutImagesInput>
}

export type ModifierUpdateManyWithWhereWithoutImagesInput = {
  where: Prisma.ModifierScalarWhereInput
  data: Prisma.XOR<Prisma.ModifierUpdateManyMutationInput, Prisma.ModifierUncheckedUpdateManyWithoutImagesInput>
}

export type ModifierScalarWhereInput = {
  AND?: Prisma.ModifierScalarWhereInput | Prisma.ModifierScalarWhereInput[]
  OR?: Prisma.ModifierScalarWhereInput[]
  NOT?: Prisma.ModifierScalarWhereInput | Prisma.ModifierScalarWhereInput[]
  id?: Prisma.StringFilter<"Modifier"> | string
  title?: Prisma.StringFilter<"Modifier"> | string
  description?: Prisma.StringNullableFilter<"Modifier"> | string | null
  sku?: Prisma.StringNullableFilter<"Modifier"> | string | null
  price?: Prisma.FloatFilter<"Modifier"> | number
  modifierGroupId?: Prisma.StringFilter<"Modifier"> | string
}

export type ModifierCreateWithoutModifierGroupInput = {
  id?: string
  title: string
  description?: string | null
  sku?: string | null
  price: number
  images?: Prisma.FileCreateNestedManyWithoutModifierImagesInput
}

export type ModifierUncheckedCreateWithoutModifierGroupInput = {
  id?: string
  title: string
  description?: string | null
  sku?: string | null
  price: number
  images?: Prisma.FileUncheckedCreateNestedManyWithoutModifierImagesInput
}

export type ModifierCreateOrConnectWithoutModifierGroupInput = {
  where: Prisma.ModifierWhereUniqueInput
  create: Prisma.XOR<Prisma.ModifierCreateWithoutModifierGroupInput, Prisma.ModifierUncheckedCreateWithoutModifierGroupInput>
}

export type ModifierCreateManyModifierGroupInputEnvelope = {
  data: Prisma.ModifierCreateManyModifierGroupInput | Prisma.ModifierCreateManyModifierGroupInput[]
  skipDuplicates?: boolean
}

export type ModifierUpsertWithWhereUniqueWithoutModifierGroupInput = {
  where: Prisma.ModifierWhereUniqueInput
  update: Prisma.XOR<Prisma.ModifierUpdateWithoutModifierGroupInput, Prisma.ModifierUncheckedUpdateWithoutModifierGroupInput>
  create: Prisma.XOR<Prisma.ModifierCreateWithoutModifierGroupInput, Prisma.ModifierUncheckedCreateWithoutModifierGroupInput>
}

export type ModifierUpdateWithWhereUniqueWithoutModifierGroupInput = {
  where: Prisma.ModifierWhereUniqueInput
  data: Prisma.XOR<Prisma.ModifierUpdateWithoutModifierGroupInput, Prisma.ModifierUncheckedUpdateWithoutModifierGroupInput>
}

export type ModifierUpdateManyWithWhereWithoutModifierGroupInput = {
  where: Prisma.ModifierScalarWhereInput
  data: Prisma.XOR<Prisma.ModifierUpdateManyMutationInput, Prisma.ModifierUncheckedUpdateManyWithoutModifierGroupInput>
}

export type ModifierUpdateWithoutImagesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sku?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  modifierGroup?: Prisma.ModifierGroupUpdateOneRequiredWithoutModifiersNestedInput
}

export type ModifierUncheckedUpdateWithoutImagesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sku?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  modifierGroupId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type ModifierUncheckedUpdateManyWithoutImagesInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sku?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  modifierGroupId?: Prisma.StringFieldUpdateOperationsInput | string
}

export type ModifierCreateManyModifierGroupInput = {
  id?: string
  title: string
  description?: string | null
  sku?: string | null
  price: number
}

export type ModifierUpdateWithoutModifierGroupInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sku?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  images?: Prisma.FileUpdateManyWithoutModifierImagesNestedInput
}

export type ModifierUncheckedUpdateWithoutModifierGroupInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sku?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  images?: Prisma.FileUncheckedUpdateManyWithoutModifierImagesNestedInput
}

export type ModifierUncheckedUpdateManyWithoutModifierGroupInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  sku?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
}


/**
 * Count Type ModifierCountOutputType
 */

export type ModifierCountOutputType = {
  images: number
}

export type ModifierCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  images?: boolean | ModifierCountOutputTypeCountImagesArgs
}

/**
 * ModifierCountOutputType without action
 */
export type ModifierCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModifierCountOutputType
   */
  select?: Prisma.ModifierCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ModifierCountOutputType without action
 */
export type ModifierCountOutputTypeCountImagesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.FileWhereInput
}


export type ModifierSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  description?: boolean
  sku?: boolean
  price?: boolean
  modifierGroupId?: boolean
  modifierGroup?: boolean | Prisma.ModifierGroupDefaultArgs<ExtArgs>
  images?: boolean | Prisma.Modifier$imagesArgs<ExtArgs>
  _count?: boolean | Prisma.ModifierCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["modifier"]>

export type ModifierSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  description?: boolean
  sku?: boolean
  price?: boolean
  modifierGroupId?: boolean
  modifierGroup?: boolean | Prisma.ModifierGroupDefaultArgs<ExtArgs>
}, ExtArgs["result"]["modifier"]>

export type ModifierSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  description?: boolean
  sku?: boolean
  price?: boolean
  modifierGroupId?: boolean
  modifierGroup?: boolean | Prisma.ModifierGroupDefaultArgs<ExtArgs>
}, ExtArgs["result"]["modifier"]>

export type ModifierSelectScalar = {
  id?: boolean
  title?: boolean
  description?: boolean
  sku?: boolean
  price?: boolean
  modifierGroupId?: boolean
}

export type ModifierOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "title" | "description" | "sku" | "price" | "modifierGroupId", ExtArgs["result"]["modifier"]>
export type ModifierInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  modifierGroup?: boolean | Prisma.ModifierGroupDefaultArgs<ExtArgs>
  images?: boolean | Prisma.Modifier$imagesArgs<ExtArgs>
  _count?: boolean | Prisma.ModifierCountOutputTypeDefaultArgs<ExtArgs>
}
export type ModifierIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  modifierGroup?: boolean | Prisma.ModifierGroupDefaultArgs<ExtArgs>
}
export type ModifierIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  modifierGroup?: boolean | Prisma.ModifierGroupDefaultArgs<ExtArgs>
}

export type $ModifierPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Modifier"
  objects: {
    modifierGroup: Prisma.$ModifierGroupPayload<ExtArgs>
    images: Prisma.$FilePayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    title: string
    description: string | null
    sku: string | null
    price: number
    modifierGroupId: string
  }, ExtArgs["result"]["modifier"]>
  composites: {}
}

export type ModifierGetPayload<S extends boolean | null | undefined | ModifierDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ModifierPayload, S>

export type ModifierCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ModifierFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ModifierCountAggregateInputType | true
  }

export interface ModifierDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Modifier'], meta: { name: 'Modifier' } }
  /**
   * Find zero or one Modifier that matches the filter.
   * @param {ModifierFindUniqueArgs} args - Arguments to find a Modifier
   * @example
   * // Get one Modifier
   * const modifier = await prisma.modifier.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ModifierFindUniqueArgs>(args: Prisma.SelectSubset<T, ModifierFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ModifierClient<runtime.Types.Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Modifier that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ModifierFindUniqueOrThrowArgs} args - Arguments to find a Modifier
   * @example
   * // Get one Modifier
   * const modifier = await prisma.modifier.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ModifierFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ModifierFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ModifierClient<runtime.Types.Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Modifier that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ModifierFindFirstArgs} args - Arguments to find a Modifier
   * @example
   * // Get one Modifier
   * const modifier = await prisma.modifier.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ModifierFindFirstArgs>(args?: Prisma.SelectSubset<T, ModifierFindFirstArgs<ExtArgs>>): Prisma.Prisma__ModifierClient<runtime.Types.Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Modifier that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ModifierFindFirstOrThrowArgs} args - Arguments to find a Modifier
   * @example
   * // Get one Modifier
   * const modifier = await prisma.modifier.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ModifierFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ModifierFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ModifierClient<runtime.Types.Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Modifiers that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ModifierFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Modifiers
   * const modifiers = await prisma.modifier.findMany()
   * 
   * // Get first 10 Modifiers
   * const modifiers = await prisma.modifier.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const modifierWithIdOnly = await prisma.modifier.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ModifierFindManyArgs>(args?: Prisma.SelectSubset<T, ModifierFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Modifier.
   * @param {ModifierCreateArgs} args - Arguments to create a Modifier.
   * @example
   * // Create one Modifier
   * const Modifier = await prisma.modifier.create({
   *   data: {
   *     // ... data to create a Modifier
   *   }
   * })
   * 
   */
  create<T extends ModifierCreateArgs>(args: Prisma.SelectSubset<T, ModifierCreateArgs<ExtArgs>>): Prisma.Prisma__ModifierClient<runtime.Types.Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Modifiers.
   * @param {ModifierCreateManyArgs} args - Arguments to create many Modifiers.
   * @example
   * // Create many Modifiers
   * const modifier = await prisma.modifier.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ModifierCreateManyArgs>(args?: Prisma.SelectSubset<T, ModifierCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Modifiers and returns the data saved in the database.
   * @param {ModifierCreateManyAndReturnArgs} args - Arguments to create many Modifiers.
   * @example
   * // Create many Modifiers
   * const modifier = await prisma.modifier.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Modifiers and only return the `id`
   * const modifierWithIdOnly = await prisma.modifier.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ModifierCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ModifierCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Modifier.
   * @param {ModifierDeleteArgs} args - Arguments to delete one Modifier.
   * @example
   * // Delete one Modifier
   * const Modifier = await prisma.modifier.delete({
   *   where: {
   *     // ... filter to delete one Modifier
   *   }
   * })
   * 
   */
  delete<T extends ModifierDeleteArgs>(args: Prisma.SelectSubset<T, ModifierDeleteArgs<ExtArgs>>): Prisma.Prisma__ModifierClient<runtime.Types.Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Modifier.
   * @param {ModifierUpdateArgs} args - Arguments to update one Modifier.
   * @example
   * // Update one Modifier
   * const modifier = await prisma.modifier.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ModifierUpdateArgs>(args: Prisma.SelectSubset<T, ModifierUpdateArgs<ExtArgs>>): Prisma.Prisma__ModifierClient<runtime.Types.Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Modifiers.
   * @param {ModifierDeleteManyArgs} args - Arguments to filter Modifiers to delete.
   * @example
   * // Delete a few Modifiers
   * const { count } = await prisma.modifier.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ModifierDeleteManyArgs>(args?: Prisma.SelectSubset<T, ModifierDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Modifiers.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ModifierUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Modifiers
   * const modifier = await prisma.modifier.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ModifierUpdateManyArgs>(args: Prisma.SelectSubset<T, ModifierUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Modifiers and returns the data updated in the database.
   * @param {ModifierUpdateManyAndReturnArgs} args - Arguments to update many Modifiers.
   * @example
   * // Update many Modifiers
   * const modifier = await prisma.modifier.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Modifiers and only return the `id`
   * const modifierWithIdOnly = await prisma.modifier.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ModifierUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ModifierUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Modifier.
   * @param {ModifierUpsertArgs} args - Arguments to update or create a Modifier.
   * @example
   * // Update or create a Modifier
   * const modifier = await prisma.modifier.upsert({
   *   create: {
   *     // ... data to create a Modifier
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Modifier we want to update
   *   }
   * })
   */
  upsert<T extends ModifierUpsertArgs>(args: Prisma.SelectSubset<T, ModifierUpsertArgs<ExtArgs>>): Prisma.Prisma__ModifierClient<runtime.Types.Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Modifiers.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ModifierCountArgs} args - Arguments to filter Modifiers to count.
   * @example
   * // Count the number of Modifiers
   * const count = await prisma.modifier.count({
   *   where: {
   *     // ... the filter for the Modifiers we want to count
   *   }
   * })
  **/
  count<T extends ModifierCountArgs>(
    args?: Prisma.Subset<T, ModifierCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ModifierCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Modifier.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ModifierAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ModifierAggregateArgs>(args: Prisma.Subset<T, ModifierAggregateArgs>): Prisma.PrismaPromise<GetModifierAggregateType<T>>

  /**
   * Group by Modifier.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ModifierGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ModifierGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ModifierGroupByArgs['orderBy'] }
      : { orderBy?: ModifierGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ModifierGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetModifierGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Modifier model
 */
readonly fields: ModifierFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Modifier.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ModifierClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  modifierGroup<T extends Prisma.ModifierGroupDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ModifierGroupDefaultArgs<ExtArgs>>): Prisma.Prisma__ModifierGroupClient<runtime.Types.Result.GetResult<Prisma.$ModifierGroupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  images<T extends Prisma.Modifier$imagesArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Modifier$imagesArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Modifier model
 */
export interface ModifierFieldRefs {
  readonly id: Prisma.FieldRef<"Modifier", 'String'>
  readonly title: Prisma.FieldRef<"Modifier", 'String'>
  readonly description: Prisma.FieldRef<"Modifier", 'String'>
  readonly sku: Prisma.FieldRef<"Modifier", 'String'>
  readonly price: Prisma.FieldRef<"Modifier", 'Float'>
  readonly modifierGroupId: Prisma.FieldRef<"Modifier", 'String'>
}
    

// Custom InputTypes
/**
 * Modifier findUnique
 */
export type ModifierFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Modifier
   */
  select?: Prisma.ModifierSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Modifier
   */
  omit?: Prisma.ModifierOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModifierInclude<ExtArgs> | null
  /**
   * Filter, which Modifier to fetch.
   */
  where: Prisma.ModifierWhereUniqueInput
}

/**
 * Modifier findUniqueOrThrow
 */
export type ModifierFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Modifier
   */
  select?: Prisma.ModifierSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Modifier
   */
  omit?: Prisma.ModifierOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModifierInclude<ExtArgs> | null
  /**
   * Filter, which Modifier to fetch.
   */
  where: Prisma.ModifierWhereUniqueInput
}

/**
 * Modifier findFirst
 */
export type ModifierFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Modifier
   */
  select?: Prisma.ModifierSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Modifier
   */
  omit?: Prisma.ModifierOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModifierInclude<ExtArgs> | null
  /**
   * Filter, which Modifier to fetch.
   */
  where?: Prisma.ModifierWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Modifiers to fetch.
   */
  orderBy?: Prisma.ModifierOrderByWithRelationInput | Prisma.ModifierOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Modifiers.
   */
  cursor?: Prisma.ModifierWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Modifiers from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Modifiers.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Modifiers.
   */
  distinct?: Prisma.ModifierScalarFieldEnum | Prisma.ModifierScalarFieldEnum[]
}

/**
 * Modifier findFirstOrThrow
 */
export type ModifierFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Modifier
   */
  select?: Prisma.ModifierSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Modifier
   */
  omit?: Prisma.ModifierOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModifierInclude<ExtArgs> | null
  /**
   * Filter, which Modifier to fetch.
   */
  where?: Prisma.ModifierWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Modifiers to fetch.
   */
  orderBy?: Prisma.ModifierOrderByWithRelationInput | Prisma.ModifierOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Modifiers.
   */
  cursor?: Prisma.ModifierWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Modifiers from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Modifiers.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Modifiers.
   */
  distinct?: Prisma.ModifierScalarFieldEnum | Prisma.ModifierScalarFieldEnum[]
}

/**
 * Modifier findMany
 */
export type ModifierFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Modifier
   */
  select?: Prisma.ModifierSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Modifier
   */
  omit?: Prisma.ModifierOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModifierInclude<ExtArgs> | null
  /**
   * Filter, which Modifiers to fetch.
   */
  where?: Prisma.ModifierWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Modifiers to fetch.
   */
  orderBy?: Prisma.ModifierOrderByWithRelationInput | Prisma.ModifierOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Modifiers.
   */
  cursor?: Prisma.ModifierWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Modifiers from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Modifiers.
   */
  skip?: number
  distinct?: Prisma.ModifierScalarFieldEnum | Prisma.ModifierScalarFieldEnum[]
}

/**
 * Modifier create
 */
export type ModifierCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Modifier
   */
  select?: Prisma.ModifierSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Modifier
   */
  omit?: Prisma.ModifierOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModifierInclude<ExtArgs> | null
  /**
   * The data needed to create a Modifier.
   */
  data: Prisma.XOR<Prisma.ModifierCreateInput, Prisma.ModifierUncheckedCreateInput>
}

/**
 * Modifier createMany
 */
export type ModifierCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Modifiers.
   */
  data: Prisma.ModifierCreateManyInput | Prisma.ModifierCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Modifier createManyAndReturn
 */
export type ModifierCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Modifier
   */
  select?: Prisma.ModifierSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Modifier
   */
  omit?: Prisma.ModifierOmit<ExtArgs> | null
  /**
   * The data used to create many Modifiers.
   */
  data: Prisma.ModifierCreateManyInput | Prisma.ModifierCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModifierIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Modifier update
 */
export type ModifierUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Modifier
   */
  select?: Prisma.ModifierSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Modifier
   */
  omit?: Prisma.ModifierOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModifierInclude<ExtArgs> | null
  /**
   * The data needed to update a Modifier.
   */
  data: Prisma.XOR<Prisma.ModifierUpdateInput, Prisma.ModifierUncheckedUpdateInput>
  /**
   * Choose, which Modifier to update.
   */
  where: Prisma.ModifierWhereUniqueInput
}

/**
 * Modifier updateMany
 */
export type ModifierUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Modifiers.
   */
  data: Prisma.XOR<Prisma.ModifierUpdateManyMutationInput, Prisma.ModifierUncheckedUpdateManyInput>
  /**
   * Filter which Modifiers to update
   */
  where?: Prisma.ModifierWhereInput
  /**
   * Limit how many Modifiers to update.
   */
  limit?: number
}

/**
 * Modifier updateManyAndReturn
 */
export type ModifierUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Modifier
   */
  select?: Prisma.ModifierSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Modifier
   */
  omit?: Prisma.ModifierOmit<ExtArgs> | null
  /**
   * The data used to update Modifiers.
   */
  data: Prisma.XOR<Prisma.ModifierUpdateManyMutationInput, Prisma.ModifierUncheckedUpdateManyInput>
  /**
   * Filter which Modifiers to update
   */
  where?: Prisma.ModifierWhereInput
  /**
   * Limit how many Modifiers to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModifierIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Modifier upsert
 */
export type ModifierUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Modifier
   */
  select?: Prisma.ModifierSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Modifier
   */
  omit?: Prisma.ModifierOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModifierInclude<ExtArgs> | null
  /**
   * The filter to search for the Modifier to update in case it exists.
   */
  where: Prisma.ModifierWhereUniqueInput
  /**
   * In case the Modifier found by the `where` argument doesn't exist, create a new Modifier with this data.
   */
  create: Prisma.XOR<Prisma.ModifierCreateInput, Prisma.ModifierUncheckedCreateInput>
  /**
   * In case the Modifier was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ModifierUpdateInput, Prisma.ModifierUncheckedUpdateInput>
}

/**
 * Modifier delete
 */
export type ModifierDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Modifier
   */
  select?: Prisma.ModifierSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Modifier
   */
  omit?: Prisma.ModifierOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModifierInclude<ExtArgs> | null
  /**
   * Filter which Modifier to delete.
   */
  where: Prisma.ModifierWhereUniqueInput
}

/**
 * Modifier deleteMany
 */
export type ModifierDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Modifiers to delete
   */
  where?: Prisma.ModifierWhereInput
  /**
   * Limit how many Modifiers to delete.
   */
  limit?: number
}

/**
 * Modifier.images
 */
export type Modifier$imagesArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the File
   */
  select?: Prisma.FileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the File
   */
  omit?: Prisma.FileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FileInclude<ExtArgs> | null
  where?: Prisma.FileWhereInput
  orderBy?: Prisma.FileOrderByWithRelationInput | Prisma.FileOrderByWithRelationInput[]
  cursor?: Prisma.FileWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.FileScalarFieldEnum | Prisma.FileScalarFieldEnum[]
}

/**
 * Modifier without action
 */
export type ModifierDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Modifier
   */
  select?: Prisma.ModifierSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Modifier
   */
  omit?: Prisma.ModifierOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModifierInclude<ExtArgs> | null
}
