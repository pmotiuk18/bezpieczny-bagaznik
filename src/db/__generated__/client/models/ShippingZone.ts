
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `ShippingZone` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model ShippingZone
 * 
 */
export type ShippingZoneModel = runtime.Types.Result.DefaultSelection<Prisma.$ShippingZonePayload>

export type AggregateShippingZone = {
  _count: ShippingZoneCountAggregateOutputType | null
  _avg: ShippingZoneAvgAggregateOutputType | null
  _sum: ShippingZoneSumAggregateOutputType | null
  _min: ShippingZoneMinAggregateOutputType | null
  _max: ShippingZoneMaxAggregateOutputType | null
}

export type ShippingZoneAvgAggregateOutputType = {
  distanceUpto: number | null
  price: number | null
  minimumOrderAmount: number | null
}

export type ShippingZoneSumAggregateOutputType = {
  distanceUpto: number | null
  price: number | null
  minimumOrderAmount: number | null
}

export type ShippingZoneMinAggregateOutputType = {
  id: string | null
  title: string | null
  distanceUpto: number | null
  price: number | null
  minimumOrderAmount: number | null
  shippingMethodId: string | null
  eta: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ShippingZoneMaxAggregateOutputType = {
  id: string | null
  title: string | null
  distanceUpto: number | null
  price: number | null
  minimumOrderAmount: number | null
  shippingMethodId: string | null
  eta: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ShippingZoneCountAggregateOutputType = {
  id: number
  title: number
  distanceUpto: number
  price: number
  minimumOrderAmount: number
  shippingMethodId: number
  eta: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type ShippingZoneAvgAggregateInputType = {
  distanceUpto?: true
  price?: true
  minimumOrderAmount?: true
}

export type ShippingZoneSumAggregateInputType = {
  distanceUpto?: true
  price?: true
  minimumOrderAmount?: true
}

export type ShippingZoneMinAggregateInputType = {
  id?: true
  title?: true
  distanceUpto?: true
  price?: true
  minimumOrderAmount?: true
  shippingMethodId?: true
  eta?: true
  createdAt?: true
  updatedAt?: true
}

export type ShippingZoneMaxAggregateInputType = {
  id?: true
  title?: true
  distanceUpto?: true
  price?: true
  minimumOrderAmount?: true
  shippingMethodId?: true
  eta?: true
  createdAt?: true
  updatedAt?: true
}

export type ShippingZoneCountAggregateInputType = {
  id?: true
  title?: true
  distanceUpto?: true
  price?: true
  minimumOrderAmount?: true
  shippingMethodId?: true
  eta?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type ShippingZoneAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ShippingZone to aggregate.
   */
  where?: Prisma.ShippingZoneWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ShippingZones to fetch.
   */
  orderBy?: Prisma.ShippingZoneOrderByWithRelationInput | Prisma.ShippingZoneOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ShippingZoneWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ShippingZones from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ShippingZones.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ShippingZones
  **/
  _count?: true | ShippingZoneCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ShippingZoneAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ShippingZoneSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ShippingZoneMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ShippingZoneMaxAggregateInputType
}

export type GetShippingZoneAggregateType<T extends ShippingZoneAggregateArgs> = {
      [P in keyof T & keyof AggregateShippingZone]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateShippingZone[P]>
    : Prisma.GetScalarType<T[P], AggregateShippingZone[P]>
}




export type ShippingZoneGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ShippingZoneWhereInput
  orderBy?: Prisma.ShippingZoneOrderByWithAggregationInput | Prisma.ShippingZoneOrderByWithAggregationInput[]
  by: Prisma.ShippingZoneScalarFieldEnum[] | Prisma.ShippingZoneScalarFieldEnum
  having?: Prisma.ShippingZoneScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ShippingZoneCountAggregateInputType | true
  _avg?: ShippingZoneAvgAggregateInputType
  _sum?: ShippingZoneSumAggregateInputType
  _min?: ShippingZoneMinAggregateInputType
  _max?: ShippingZoneMaxAggregateInputType
}

export type ShippingZoneGroupByOutputType = {
  id: string
  title: string
  distanceUpto: number | null
  price: number
  minimumOrderAmount: number | null
  shippingMethodId: string
  eta: string
  createdAt: Date
  updatedAt: Date
  _count: ShippingZoneCountAggregateOutputType | null
  _avg: ShippingZoneAvgAggregateOutputType | null
  _sum: ShippingZoneSumAggregateOutputType | null
  _min: ShippingZoneMinAggregateOutputType | null
  _max: ShippingZoneMaxAggregateOutputType | null
}

type GetShippingZoneGroupByPayload<T extends ShippingZoneGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ShippingZoneGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ShippingZoneGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ShippingZoneGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ShippingZoneGroupByOutputType[P]>
      }
    >
  > 



export type ShippingZoneWhereInput = {
  AND?: Prisma.ShippingZoneWhereInput | Prisma.ShippingZoneWhereInput[]
  OR?: Prisma.ShippingZoneWhereInput[]
  NOT?: Prisma.ShippingZoneWhereInput | Prisma.ShippingZoneWhereInput[]
  id?: Prisma.StringFilter<"ShippingZone"> | string
  title?: Prisma.StringFilter<"ShippingZone"> | string
  distanceUpto?: Prisma.FloatNullableFilter<"ShippingZone"> | number | null
  price?: Prisma.FloatFilter<"ShippingZone"> | number
  minimumOrderAmount?: Prisma.FloatNullableFilter<"ShippingZone"> | number | null
  shippingMethodId?: Prisma.StringFilter<"ShippingZone"> | string
  eta?: Prisma.StringFilter<"ShippingZone"> | string
  createdAt?: Prisma.DateTimeFilter<"ShippingZone"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ShippingZone"> | Date | string
  shippingMethod?: Prisma.XOR<Prisma.ShippingMethodScalarRelationFilter, Prisma.ShippingMethodWhereInput>
}

export type ShippingZoneOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  distanceUpto?: Prisma.SortOrderInput | Prisma.SortOrder
  price?: Prisma.SortOrder
  minimumOrderAmount?: Prisma.SortOrderInput | Prisma.SortOrder
  shippingMethodId?: Prisma.SortOrder
  eta?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  shippingMethod?: Prisma.ShippingMethodOrderByWithRelationInput
}

export type ShippingZoneWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.ShippingZoneWhereInput | Prisma.ShippingZoneWhereInput[]
  OR?: Prisma.ShippingZoneWhereInput[]
  NOT?: Prisma.ShippingZoneWhereInput | Prisma.ShippingZoneWhereInput[]
  title?: Prisma.StringFilter<"ShippingZone"> | string
  distanceUpto?: Prisma.FloatNullableFilter<"ShippingZone"> | number | null
  price?: Prisma.FloatFilter<"ShippingZone"> | number
  minimumOrderAmount?: Prisma.FloatNullableFilter<"ShippingZone"> | number | null
  shippingMethodId?: Prisma.StringFilter<"ShippingZone"> | string
  eta?: Prisma.StringFilter<"ShippingZone"> | string
  createdAt?: Prisma.DateTimeFilter<"ShippingZone"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ShippingZone"> | Date | string
  shippingMethod?: Prisma.XOR<Prisma.ShippingMethodScalarRelationFilter, Prisma.ShippingMethodWhereInput>
}, "id">

export type ShippingZoneOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  distanceUpto?: Prisma.SortOrderInput | Prisma.SortOrder
  price?: Prisma.SortOrder
  minimumOrderAmount?: Prisma.SortOrderInput | Prisma.SortOrder
  shippingMethodId?: Prisma.SortOrder
  eta?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.ShippingZoneCountOrderByAggregateInput
  _avg?: Prisma.ShippingZoneAvgOrderByAggregateInput
  _max?: Prisma.ShippingZoneMaxOrderByAggregateInput
  _min?: Prisma.ShippingZoneMinOrderByAggregateInput
  _sum?: Prisma.ShippingZoneSumOrderByAggregateInput
}

export type ShippingZoneScalarWhereWithAggregatesInput = {
  AND?: Prisma.ShippingZoneScalarWhereWithAggregatesInput | Prisma.ShippingZoneScalarWhereWithAggregatesInput[]
  OR?: Prisma.ShippingZoneScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ShippingZoneScalarWhereWithAggregatesInput | Prisma.ShippingZoneScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"ShippingZone"> | string
  title?: Prisma.StringWithAggregatesFilter<"ShippingZone"> | string
  distanceUpto?: Prisma.FloatNullableWithAggregatesFilter<"ShippingZone"> | number | null
  price?: Prisma.FloatWithAggregatesFilter<"ShippingZone"> | number
  minimumOrderAmount?: Prisma.FloatNullableWithAggregatesFilter<"ShippingZone"> | number | null
  shippingMethodId?: Prisma.StringWithAggregatesFilter<"ShippingZone"> | string
  eta?: Prisma.StringWithAggregatesFilter<"ShippingZone"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"ShippingZone"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"ShippingZone"> | Date | string
}

export type ShippingZoneCreateInput = {
  id?: string
  title: string
  distanceUpto?: number | null
  price: number
  minimumOrderAmount?: number | null
  eta: string
  createdAt?: Date | string
  updatedAt?: Date | string
  shippingMethod: Prisma.ShippingMethodCreateNestedOneWithoutShippingZonesInput
}

export type ShippingZoneUncheckedCreateInput = {
  id?: string
  title: string
  distanceUpto?: number | null
  price: number
  minimumOrderAmount?: number | null
  shippingMethodId: string
  eta: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ShippingZoneUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  distanceUpto?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  minimumOrderAmount?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  eta?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  shippingMethod?: Prisma.ShippingMethodUpdateOneRequiredWithoutShippingZonesNestedInput
}

export type ShippingZoneUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  distanceUpto?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  minimumOrderAmount?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  shippingMethodId?: Prisma.StringFieldUpdateOperationsInput | string
  eta?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ShippingZoneCreateManyInput = {
  id?: string
  title: string
  distanceUpto?: number | null
  price: number
  minimumOrderAmount?: number | null
  shippingMethodId: string
  eta: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ShippingZoneUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  distanceUpto?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  minimumOrderAmount?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  eta?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ShippingZoneUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  distanceUpto?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  minimumOrderAmount?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  shippingMethodId?: Prisma.StringFieldUpdateOperationsInput | string
  eta?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ShippingZoneListRelationFilter = {
  every?: Prisma.ShippingZoneWhereInput
  some?: Prisma.ShippingZoneWhereInput
  none?: Prisma.ShippingZoneWhereInput
}

export type ShippingZoneOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ShippingZoneCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  distanceUpto?: Prisma.SortOrder
  price?: Prisma.SortOrder
  minimumOrderAmount?: Prisma.SortOrder
  shippingMethodId?: Prisma.SortOrder
  eta?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ShippingZoneAvgOrderByAggregateInput = {
  distanceUpto?: Prisma.SortOrder
  price?: Prisma.SortOrder
  minimumOrderAmount?: Prisma.SortOrder
}

export type ShippingZoneMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  distanceUpto?: Prisma.SortOrder
  price?: Prisma.SortOrder
  minimumOrderAmount?: Prisma.SortOrder
  shippingMethodId?: Prisma.SortOrder
  eta?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ShippingZoneMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  distanceUpto?: Prisma.SortOrder
  price?: Prisma.SortOrder
  minimumOrderAmount?: Prisma.SortOrder
  shippingMethodId?: Prisma.SortOrder
  eta?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ShippingZoneSumOrderByAggregateInput = {
  distanceUpto?: Prisma.SortOrder
  price?: Prisma.SortOrder
  minimumOrderAmount?: Prisma.SortOrder
}

export type ShippingZoneCreateNestedManyWithoutShippingMethodInput = {
  create?: Prisma.XOR<Prisma.ShippingZoneCreateWithoutShippingMethodInput, Prisma.ShippingZoneUncheckedCreateWithoutShippingMethodInput> | Prisma.ShippingZoneCreateWithoutShippingMethodInput[] | Prisma.ShippingZoneUncheckedCreateWithoutShippingMethodInput[]
  connectOrCreate?: Prisma.ShippingZoneCreateOrConnectWithoutShippingMethodInput | Prisma.ShippingZoneCreateOrConnectWithoutShippingMethodInput[]
  createMany?: Prisma.ShippingZoneCreateManyShippingMethodInputEnvelope
  connect?: Prisma.ShippingZoneWhereUniqueInput | Prisma.ShippingZoneWhereUniqueInput[]
}

export type ShippingZoneUncheckedCreateNestedManyWithoutShippingMethodInput = {
  create?: Prisma.XOR<Prisma.ShippingZoneCreateWithoutShippingMethodInput, Prisma.ShippingZoneUncheckedCreateWithoutShippingMethodInput> | Prisma.ShippingZoneCreateWithoutShippingMethodInput[] | Prisma.ShippingZoneUncheckedCreateWithoutShippingMethodInput[]
  connectOrCreate?: Prisma.ShippingZoneCreateOrConnectWithoutShippingMethodInput | Prisma.ShippingZoneCreateOrConnectWithoutShippingMethodInput[]
  createMany?: Prisma.ShippingZoneCreateManyShippingMethodInputEnvelope
  connect?: Prisma.ShippingZoneWhereUniqueInput | Prisma.ShippingZoneWhereUniqueInput[]
}

export type ShippingZoneUpdateManyWithoutShippingMethodNestedInput = {
  create?: Prisma.XOR<Prisma.ShippingZoneCreateWithoutShippingMethodInput, Prisma.ShippingZoneUncheckedCreateWithoutShippingMethodInput> | Prisma.ShippingZoneCreateWithoutShippingMethodInput[] | Prisma.ShippingZoneUncheckedCreateWithoutShippingMethodInput[]
  connectOrCreate?: Prisma.ShippingZoneCreateOrConnectWithoutShippingMethodInput | Prisma.ShippingZoneCreateOrConnectWithoutShippingMethodInput[]
  upsert?: Prisma.ShippingZoneUpsertWithWhereUniqueWithoutShippingMethodInput | Prisma.ShippingZoneUpsertWithWhereUniqueWithoutShippingMethodInput[]
  createMany?: Prisma.ShippingZoneCreateManyShippingMethodInputEnvelope
  set?: Prisma.ShippingZoneWhereUniqueInput | Prisma.ShippingZoneWhereUniqueInput[]
  disconnect?: Prisma.ShippingZoneWhereUniqueInput | Prisma.ShippingZoneWhereUniqueInput[]
  delete?: Prisma.ShippingZoneWhereUniqueInput | Prisma.ShippingZoneWhereUniqueInput[]
  connect?: Prisma.ShippingZoneWhereUniqueInput | Prisma.ShippingZoneWhereUniqueInput[]
  update?: Prisma.ShippingZoneUpdateWithWhereUniqueWithoutShippingMethodInput | Prisma.ShippingZoneUpdateWithWhereUniqueWithoutShippingMethodInput[]
  updateMany?: Prisma.ShippingZoneUpdateManyWithWhereWithoutShippingMethodInput | Prisma.ShippingZoneUpdateManyWithWhereWithoutShippingMethodInput[]
  deleteMany?: Prisma.ShippingZoneScalarWhereInput | Prisma.ShippingZoneScalarWhereInput[]
}

export type ShippingZoneUncheckedUpdateManyWithoutShippingMethodNestedInput = {
  create?: Prisma.XOR<Prisma.ShippingZoneCreateWithoutShippingMethodInput, Prisma.ShippingZoneUncheckedCreateWithoutShippingMethodInput> | Prisma.ShippingZoneCreateWithoutShippingMethodInput[] | Prisma.ShippingZoneUncheckedCreateWithoutShippingMethodInput[]
  connectOrCreate?: Prisma.ShippingZoneCreateOrConnectWithoutShippingMethodInput | Prisma.ShippingZoneCreateOrConnectWithoutShippingMethodInput[]
  upsert?: Prisma.ShippingZoneUpsertWithWhereUniqueWithoutShippingMethodInput | Prisma.ShippingZoneUpsertWithWhereUniqueWithoutShippingMethodInput[]
  createMany?: Prisma.ShippingZoneCreateManyShippingMethodInputEnvelope
  set?: Prisma.ShippingZoneWhereUniqueInput | Prisma.ShippingZoneWhereUniqueInput[]
  disconnect?: Prisma.ShippingZoneWhereUniqueInput | Prisma.ShippingZoneWhereUniqueInput[]
  delete?: Prisma.ShippingZoneWhereUniqueInput | Prisma.ShippingZoneWhereUniqueInput[]
  connect?: Prisma.ShippingZoneWhereUniqueInput | Prisma.ShippingZoneWhereUniqueInput[]
  update?: Prisma.ShippingZoneUpdateWithWhereUniqueWithoutShippingMethodInput | Prisma.ShippingZoneUpdateWithWhereUniqueWithoutShippingMethodInput[]
  updateMany?: Prisma.ShippingZoneUpdateManyWithWhereWithoutShippingMethodInput | Prisma.ShippingZoneUpdateManyWithWhereWithoutShippingMethodInput[]
  deleteMany?: Prisma.ShippingZoneScalarWhereInput | Prisma.ShippingZoneScalarWhereInput[]
}

export type ShippingZoneCreateWithoutShippingMethodInput = {
  id?: string
  title: string
  distanceUpto?: number | null
  price: number
  minimumOrderAmount?: number | null
  eta: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ShippingZoneUncheckedCreateWithoutShippingMethodInput = {
  id?: string
  title: string
  distanceUpto?: number | null
  price: number
  minimumOrderAmount?: number | null
  eta: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ShippingZoneCreateOrConnectWithoutShippingMethodInput = {
  where: Prisma.ShippingZoneWhereUniqueInput
  create: Prisma.XOR<Prisma.ShippingZoneCreateWithoutShippingMethodInput, Prisma.ShippingZoneUncheckedCreateWithoutShippingMethodInput>
}

export type ShippingZoneCreateManyShippingMethodInputEnvelope = {
  data: Prisma.ShippingZoneCreateManyShippingMethodInput | Prisma.ShippingZoneCreateManyShippingMethodInput[]
  skipDuplicates?: boolean
}

export type ShippingZoneUpsertWithWhereUniqueWithoutShippingMethodInput = {
  where: Prisma.ShippingZoneWhereUniqueInput
  update: Prisma.XOR<Prisma.ShippingZoneUpdateWithoutShippingMethodInput, Prisma.ShippingZoneUncheckedUpdateWithoutShippingMethodInput>
  create: Prisma.XOR<Prisma.ShippingZoneCreateWithoutShippingMethodInput, Prisma.ShippingZoneUncheckedCreateWithoutShippingMethodInput>
}

export type ShippingZoneUpdateWithWhereUniqueWithoutShippingMethodInput = {
  where: Prisma.ShippingZoneWhereUniqueInput
  data: Prisma.XOR<Prisma.ShippingZoneUpdateWithoutShippingMethodInput, Prisma.ShippingZoneUncheckedUpdateWithoutShippingMethodInput>
}

export type ShippingZoneUpdateManyWithWhereWithoutShippingMethodInput = {
  where: Prisma.ShippingZoneScalarWhereInput
  data: Prisma.XOR<Prisma.ShippingZoneUpdateManyMutationInput, Prisma.ShippingZoneUncheckedUpdateManyWithoutShippingMethodInput>
}

export type ShippingZoneScalarWhereInput = {
  AND?: Prisma.ShippingZoneScalarWhereInput | Prisma.ShippingZoneScalarWhereInput[]
  OR?: Prisma.ShippingZoneScalarWhereInput[]
  NOT?: Prisma.ShippingZoneScalarWhereInput | Prisma.ShippingZoneScalarWhereInput[]
  id?: Prisma.StringFilter<"ShippingZone"> | string
  title?: Prisma.StringFilter<"ShippingZone"> | string
  distanceUpto?: Prisma.FloatNullableFilter<"ShippingZone"> | number | null
  price?: Prisma.FloatFilter<"ShippingZone"> | number
  minimumOrderAmount?: Prisma.FloatNullableFilter<"ShippingZone"> | number | null
  shippingMethodId?: Prisma.StringFilter<"ShippingZone"> | string
  eta?: Prisma.StringFilter<"ShippingZone"> | string
  createdAt?: Prisma.DateTimeFilter<"ShippingZone"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ShippingZone"> | Date | string
}

export type ShippingZoneCreateManyShippingMethodInput = {
  id?: string
  title: string
  distanceUpto?: number | null
  price: number
  minimumOrderAmount?: number | null
  eta: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ShippingZoneUpdateWithoutShippingMethodInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  distanceUpto?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  minimumOrderAmount?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  eta?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ShippingZoneUncheckedUpdateWithoutShippingMethodInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  distanceUpto?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  minimumOrderAmount?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  eta?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ShippingZoneUncheckedUpdateManyWithoutShippingMethodInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  distanceUpto?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  price?: Prisma.FloatFieldUpdateOperationsInput | number
  minimumOrderAmount?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  eta?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type ShippingZoneSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  distanceUpto?: boolean
  price?: boolean
  minimumOrderAmount?: boolean
  shippingMethodId?: boolean
  eta?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  shippingMethod?: boolean | Prisma.ShippingMethodDefaultArgs<ExtArgs>
}, ExtArgs["result"]["shippingZone"]>

export type ShippingZoneSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  distanceUpto?: boolean
  price?: boolean
  minimumOrderAmount?: boolean
  shippingMethodId?: boolean
  eta?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  shippingMethod?: boolean | Prisma.ShippingMethodDefaultArgs<ExtArgs>
}, ExtArgs["result"]["shippingZone"]>

export type ShippingZoneSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  distanceUpto?: boolean
  price?: boolean
  minimumOrderAmount?: boolean
  shippingMethodId?: boolean
  eta?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  shippingMethod?: boolean | Prisma.ShippingMethodDefaultArgs<ExtArgs>
}, ExtArgs["result"]["shippingZone"]>

export type ShippingZoneSelectScalar = {
  id?: boolean
  title?: boolean
  distanceUpto?: boolean
  price?: boolean
  minimumOrderAmount?: boolean
  shippingMethodId?: boolean
  eta?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type ShippingZoneOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "title" | "distanceUpto" | "price" | "minimumOrderAmount" | "shippingMethodId" | "eta" | "createdAt" | "updatedAt", ExtArgs["result"]["shippingZone"]>
export type ShippingZoneInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  shippingMethod?: boolean | Prisma.ShippingMethodDefaultArgs<ExtArgs>
}
export type ShippingZoneIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  shippingMethod?: boolean | Prisma.ShippingMethodDefaultArgs<ExtArgs>
}
export type ShippingZoneIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  shippingMethod?: boolean | Prisma.ShippingMethodDefaultArgs<ExtArgs>
}

export type $ShippingZonePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ShippingZone"
  objects: {
    shippingMethod: Prisma.$ShippingMethodPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    title: string
    distanceUpto: number | null
    price: number
    minimumOrderAmount: number | null
    shippingMethodId: string
    eta: string
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["shippingZone"]>
  composites: {}
}

export type ShippingZoneGetPayload<S extends boolean | null | undefined | ShippingZoneDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ShippingZonePayload, S>

export type ShippingZoneCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ShippingZoneFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ShippingZoneCountAggregateInputType | true
  }

export interface ShippingZoneDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ShippingZone'], meta: { name: 'ShippingZone' } }
  /**
   * Find zero or one ShippingZone that matches the filter.
   * @param {ShippingZoneFindUniqueArgs} args - Arguments to find a ShippingZone
   * @example
   * // Get one ShippingZone
   * const shippingZone = await prisma.shippingZone.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ShippingZoneFindUniqueArgs>(args: Prisma.SelectSubset<T, ShippingZoneFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ShippingZoneClient<runtime.Types.Result.GetResult<Prisma.$ShippingZonePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one ShippingZone that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ShippingZoneFindUniqueOrThrowArgs} args - Arguments to find a ShippingZone
   * @example
   * // Get one ShippingZone
   * const shippingZone = await prisma.shippingZone.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ShippingZoneFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ShippingZoneFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ShippingZoneClient<runtime.Types.Result.GetResult<Prisma.$ShippingZonePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ShippingZone that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ShippingZoneFindFirstArgs} args - Arguments to find a ShippingZone
   * @example
   * // Get one ShippingZone
   * const shippingZone = await prisma.shippingZone.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ShippingZoneFindFirstArgs>(args?: Prisma.SelectSubset<T, ShippingZoneFindFirstArgs<ExtArgs>>): Prisma.Prisma__ShippingZoneClient<runtime.Types.Result.GetResult<Prisma.$ShippingZonePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ShippingZone that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ShippingZoneFindFirstOrThrowArgs} args - Arguments to find a ShippingZone
   * @example
   * // Get one ShippingZone
   * const shippingZone = await prisma.shippingZone.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ShippingZoneFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ShippingZoneFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ShippingZoneClient<runtime.Types.Result.GetResult<Prisma.$ShippingZonePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more ShippingZones that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ShippingZoneFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all ShippingZones
   * const shippingZones = await prisma.shippingZone.findMany()
   * 
   * // Get first 10 ShippingZones
   * const shippingZones = await prisma.shippingZone.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const shippingZoneWithIdOnly = await prisma.shippingZone.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ShippingZoneFindManyArgs>(args?: Prisma.SelectSubset<T, ShippingZoneFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ShippingZonePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a ShippingZone.
   * @param {ShippingZoneCreateArgs} args - Arguments to create a ShippingZone.
   * @example
   * // Create one ShippingZone
   * const ShippingZone = await prisma.shippingZone.create({
   *   data: {
   *     // ... data to create a ShippingZone
   *   }
   * })
   * 
   */
  create<T extends ShippingZoneCreateArgs>(args: Prisma.SelectSubset<T, ShippingZoneCreateArgs<ExtArgs>>): Prisma.Prisma__ShippingZoneClient<runtime.Types.Result.GetResult<Prisma.$ShippingZonePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many ShippingZones.
   * @param {ShippingZoneCreateManyArgs} args - Arguments to create many ShippingZones.
   * @example
   * // Create many ShippingZones
   * const shippingZone = await prisma.shippingZone.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ShippingZoneCreateManyArgs>(args?: Prisma.SelectSubset<T, ShippingZoneCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many ShippingZones and returns the data saved in the database.
   * @param {ShippingZoneCreateManyAndReturnArgs} args - Arguments to create many ShippingZones.
   * @example
   * // Create many ShippingZones
   * const shippingZone = await prisma.shippingZone.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many ShippingZones and only return the `id`
   * const shippingZoneWithIdOnly = await prisma.shippingZone.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ShippingZoneCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ShippingZoneCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ShippingZonePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a ShippingZone.
   * @param {ShippingZoneDeleteArgs} args - Arguments to delete one ShippingZone.
   * @example
   * // Delete one ShippingZone
   * const ShippingZone = await prisma.shippingZone.delete({
   *   where: {
   *     // ... filter to delete one ShippingZone
   *   }
   * })
   * 
   */
  delete<T extends ShippingZoneDeleteArgs>(args: Prisma.SelectSubset<T, ShippingZoneDeleteArgs<ExtArgs>>): Prisma.Prisma__ShippingZoneClient<runtime.Types.Result.GetResult<Prisma.$ShippingZonePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one ShippingZone.
   * @param {ShippingZoneUpdateArgs} args - Arguments to update one ShippingZone.
   * @example
   * // Update one ShippingZone
   * const shippingZone = await prisma.shippingZone.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ShippingZoneUpdateArgs>(args: Prisma.SelectSubset<T, ShippingZoneUpdateArgs<ExtArgs>>): Prisma.Prisma__ShippingZoneClient<runtime.Types.Result.GetResult<Prisma.$ShippingZonePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more ShippingZones.
   * @param {ShippingZoneDeleteManyArgs} args - Arguments to filter ShippingZones to delete.
   * @example
   * // Delete a few ShippingZones
   * const { count } = await prisma.shippingZone.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ShippingZoneDeleteManyArgs>(args?: Prisma.SelectSubset<T, ShippingZoneDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ShippingZones.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ShippingZoneUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many ShippingZones
   * const shippingZone = await prisma.shippingZone.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ShippingZoneUpdateManyArgs>(args: Prisma.SelectSubset<T, ShippingZoneUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ShippingZones and returns the data updated in the database.
   * @param {ShippingZoneUpdateManyAndReturnArgs} args - Arguments to update many ShippingZones.
   * @example
   * // Update many ShippingZones
   * const shippingZone = await prisma.shippingZone.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more ShippingZones and only return the `id`
   * const shippingZoneWithIdOnly = await prisma.shippingZone.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ShippingZoneUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ShippingZoneUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ShippingZonePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one ShippingZone.
   * @param {ShippingZoneUpsertArgs} args - Arguments to update or create a ShippingZone.
   * @example
   * // Update or create a ShippingZone
   * const shippingZone = await prisma.shippingZone.upsert({
   *   create: {
   *     // ... data to create a ShippingZone
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the ShippingZone we want to update
   *   }
   * })
   */
  upsert<T extends ShippingZoneUpsertArgs>(args: Prisma.SelectSubset<T, ShippingZoneUpsertArgs<ExtArgs>>): Prisma.Prisma__ShippingZoneClient<runtime.Types.Result.GetResult<Prisma.$ShippingZonePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of ShippingZones.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ShippingZoneCountArgs} args - Arguments to filter ShippingZones to count.
   * @example
   * // Count the number of ShippingZones
   * const count = await prisma.shippingZone.count({
   *   where: {
   *     // ... the filter for the ShippingZones we want to count
   *   }
   * })
  **/
  count<T extends ShippingZoneCountArgs>(
    args?: Prisma.Subset<T, ShippingZoneCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ShippingZoneCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a ShippingZone.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ShippingZoneAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ShippingZoneAggregateArgs>(args: Prisma.Subset<T, ShippingZoneAggregateArgs>): Prisma.PrismaPromise<GetShippingZoneAggregateType<T>>

  /**
   * Group by ShippingZone.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ShippingZoneGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ShippingZoneGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ShippingZoneGroupByArgs['orderBy'] }
      : { orderBy?: ShippingZoneGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ShippingZoneGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShippingZoneGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ShippingZone model
 */
readonly fields: ShippingZoneFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ShippingZone.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ShippingZoneClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  shippingMethod<T extends Prisma.ShippingMethodDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ShippingMethodDefaultArgs<ExtArgs>>): Prisma.Prisma__ShippingMethodClient<runtime.Types.Result.GetResult<Prisma.$ShippingMethodPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ShippingZone model
 */
export interface ShippingZoneFieldRefs {
  readonly id: Prisma.FieldRef<"ShippingZone", 'String'>
  readonly title: Prisma.FieldRef<"ShippingZone", 'String'>
  readonly distanceUpto: Prisma.FieldRef<"ShippingZone", 'Float'>
  readonly price: Prisma.FieldRef<"ShippingZone", 'Float'>
  readonly minimumOrderAmount: Prisma.FieldRef<"ShippingZone", 'Float'>
  readonly shippingMethodId: Prisma.FieldRef<"ShippingZone", 'String'>
  readonly eta: Prisma.FieldRef<"ShippingZone", 'String'>
  readonly createdAt: Prisma.FieldRef<"ShippingZone", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"ShippingZone", 'DateTime'>
}
    

// Custom InputTypes
/**
 * ShippingZone findUnique
 */
export type ShippingZoneFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ShippingZone
   */
  select?: Prisma.ShippingZoneSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ShippingZone
   */
  omit?: Prisma.ShippingZoneOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShippingZoneInclude<ExtArgs> | null
  /**
   * Filter, which ShippingZone to fetch.
   */
  where: Prisma.ShippingZoneWhereUniqueInput
}

/**
 * ShippingZone findUniqueOrThrow
 */
export type ShippingZoneFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ShippingZone
   */
  select?: Prisma.ShippingZoneSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ShippingZone
   */
  omit?: Prisma.ShippingZoneOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShippingZoneInclude<ExtArgs> | null
  /**
   * Filter, which ShippingZone to fetch.
   */
  where: Prisma.ShippingZoneWhereUniqueInput
}

/**
 * ShippingZone findFirst
 */
export type ShippingZoneFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ShippingZone
   */
  select?: Prisma.ShippingZoneSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ShippingZone
   */
  omit?: Prisma.ShippingZoneOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShippingZoneInclude<ExtArgs> | null
  /**
   * Filter, which ShippingZone to fetch.
   */
  where?: Prisma.ShippingZoneWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ShippingZones to fetch.
   */
  orderBy?: Prisma.ShippingZoneOrderByWithRelationInput | Prisma.ShippingZoneOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ShippingZones.
   */
  cursor?: Prisma.ShippingZoneWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ShippingZones from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ShippingZones.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ShippingZones.
   */
  distinct?: Prisma.ShippingZoneScalarFieldEnum | Prisma.ShippingZoneScalarFieldEnum[]
}

/**
 * ShippingZone findFirstOrThrow
 */
export type ShippingZoneFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ShippingZone
   */
  select?: Prisma.ShippingZoneSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ShippingZone
   */
  omit?: Prisma.ShippingZoneOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShippingZoneInclude<ExtArgs> | null
  /**
   * Filter, which ShippingZone to fetch.
   */
  where?: Prisma.ShippingZoneWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ShippingZones to fetch.
   */
  orderBy?: Prisma.ShippingZoneOrderByWithRelationInput | Prisma.ShippingZoneOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ShippingZones.
   */
  cursor?: Prisma.ShippingZoneWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ShippingZones from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ShippingZones.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ShippingZones.
   */
  distinct?: Prisma.ShippingZoneScalarFieldEnum | Prisma.ShippingZoneScalarFieldEnum[]
}

/**
 * ShippingZone findMany
 */
export type ShippingZoneFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ShippingZone
   */
  select?: Prisma.ShippingZoneSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ShippingZone
   */
  omit?: Prisma.ShippingZoneOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShippingZoneInclude<ExtArgs> | null
  /**
   * Filter, which ShippingZones to fetch.
   */
  where?: Prisma.ShippingZoneWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ShippingZones to fetch.
   */
  orderBy?: Prisma.ShippingZoneOrderByWithRelationInput | Prisma.ShippingZoneOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ShippingZones.
   */
  cursor?: Prisma.ShippingZoneWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ShippingZones from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ShippingZones.
   */
  skip?: number
  distinct?: Prisma.ShippingZoneScalarFieldEnum | Prisma.ShippingZoneScalarFieldEnum[]
}

/**
 * ShippingZone create
 */
export type ShippingZoneCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ShippingZone
   */
  select?: Prisma.ShippingZoneSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ShippingZone
   */
  omit?: Prisma.ShippingZoneOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShippingZoneInclude<ExtArgs> | null
  /**
   * The data needed to create a ShippingZone.
   */
  data: Prisma.XOR<Prisma.ShippingZoneCreateInput, Prisma.ShippingZoneUncheckedCreateInput>
}

/**
 * ShippingZone createMany
 */
export type ShippingZoneCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many ShippingZones.
   */
  data: Prisma.ShippingZoneCreateManyInput | Prisma.ShippingZoneCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ShippingZone createManyAndReturn
 */
export type ShippingZoneCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ShippingZone
   */
  select?: Prisma.ShippingZoneSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ShippingZone
   */
  omit?: Prisma.ShippingZoneOmit<ExtArgs> | null
  /**
   * The data used to create many ShippingZones.
   */
  data: Prisma.ShippingZoneCreateManyInput | Prisma.ShippingZoneCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShippingZoneIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * ShippingZone update
 */
export type ShippingZoneUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ShippingZone
   */
  select?: Prisma.ShippingZoneSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ShippingZone
   */
  omit?: Prisma.ShippingZoneOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShippingZoneInclude<ExtArgs> | null
  /**
   * The data needed to update a ShippingZone.
   */
  data: Prisma.XOR<Prisma.ShippingZoneUpdateInput, Prisma.ShippingZoneUncheckedUpdateInput>
  /**
   * Choose, which ShippingZone to update.
   */
  where: Prisma.ShippingZoneWhereUniqueInput
}

/**
 * ShippingZone updateMany
 */
export type ShippingZoneUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ShippingZones.
   */
  data: Prisma.XOR<Prisma.ShippingZoneUpdateManyMutationInput, Prisma.ShippingZoneUncheckedUpdateManyInput>
  /**
   * Filter which ShippingZones to update
   */
  where?: Prisma.ShippingZoneWhereInput
  /**
   * Limit how many ShippingZones to update.
   */
  limit?: number
}

/**
 * ShippingZone updateManyAndReturn
 */
export type ShippingZoneUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ShippingZone
   */
  select?: Prisma.ShippingZoneSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ShippingZone
   */
  omit?: Prisma.ShippingZoneOmit<ExtArgs> | null
  /**
   * The data used to update ShippingZones.
   */
  data: Prisma.XOR<Prisma.ShippingZoneUpdateManyMutationInput, Prisma.ShippingZoneUncheckedUpdateManyInput>
  /**
   * Filter which ShippingZones to update
   */
  where?: Prisma.ShippingZoneWhereInput
  /**
   * Limit how many ShippingZones to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShippingZoneIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * ShippingZone upsert
 */
export type ShippingZoneUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ShippingZone
   */
  select?: Prisma.ShippingZoneSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ShippingZone
   */
  omit?: Prisma.ShippingZoneOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShippingZoneInclude<ExtArgs> | null
  /**
   * The filter to search for the ShippingZone to update in case it exists.
   */
  where: Prisma.ShippingZoneWhereUniqueInput
  /**
   * In case the ShippingZone found by the `where` argument doesn't exist, create a new ShippingZone with this data.
   */
  create: Prisma.XOR<Prisma.ShippingZoneCreateInput, Prisma.ShippingZoneUncheckedCreateInput>
  /**
   * In case the ShippingZone was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ShippingZoneUpdateInput, Prisma.ShippingZoneUncheckedUpdateInput>
}

/**
 * ShippingZone delete
 */
export type ShippingZoneDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ShippingZone
   */
  select?: Prisma.ShippingZoneSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ShippingZone
   */
  omit?: Prisma.ShippingZoneOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShippingZoneInclude<ExtArgs> | null
  /**
   * Filter which ShippingZone to delete.
   */
  where: Prisma.ShippingZoneWhereUniqueInput
}

/**
 * ShippingZone deleteMany
 */
export type ShippingZoneDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ShippingZones to delete
   */
  where?: Prisma.ShippingZoneWhereInput
  /**
   * Limit how many ShippingZones to delete.
   */
  limit?: number
}

/**
 * ShippingZone without action
 */
export type ShippingZoneDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ShippingZone
   */
  select?: Prisma.ShippingZoneSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ShippingZone
   */
  omit?: Prisma.ShippingZoneOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ShippingZoneInclude<ExtArgs> | null
}
