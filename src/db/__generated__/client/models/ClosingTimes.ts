
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `ClosingTimes` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model ClosingTimes
 * 
 */
export type ClosingTimesModel = runtime.Types.Result.DefaultSelection<Prisma.$ClosingTimesPayload>

export type AggregateClosingTimes = {
  _count: ClosingTimesCountAggregateOutputType | null
  _min: ClosingTimesMinAggregateOutputType | null
  _max: ClosingTimesMaxAggregateOutputType | null
}

export type ClosingTimesMinAggregateOutputType = {
  id: string | null
  monday: Date | null
  tuesday: Date | null
  wednesday: Date | null
  thursday: Date | null
  friday: Date | null
  saturday: Date | null
  sunday: Date | null
}

export type ClosingTimesMaxAggregateOutputType = {
  id: string | null
  monday: Date | null
  tuesday: Date | null
  wednesday: Date | null
  thursday: Date | null
  friday: Date | null
  saturday: Date | null
  sunday: Date | null
}

export type ClosingTimesCountAggregateOutputType = {
  id: number
  monday: number
  tuesday: number
  wednesday: number
  thursday: number
  friday: number
  saturday: number
  sunday: number
  _all: number
}


export type ClosingTimesMinAggregateInputType = {
  id?: true
  monday?: true
  tuesday?: true
  wednesday?: true
  thursday?: true
  friday?: true
  saturday?: true
  sunday?: true
}

export type ClosingTimesMaxAggregateInputType = {
  id?: true
  monday?: true
  tuesday?: true
  wednesday?: true
  thursday?: true
  friday?: true
  saturday?: true
  sunday?: true
}

export type ClosingTimesCountAggregateInputType = {
  id?: true
  monday?: true
  tuesday?: true
  wednesday?: true
  thursday?: true
  friday?: true
  saturday?: true
  sunday?: true
  _all?: true
}

export type ClosingTimesAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ClosingTimes to aggregate.
   */
  where?: Prisma.ClosingTimesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ClosingTimes to fetch.
   */
  orderBy?: Prisma.ClosingTimesOrderByWithRelationInput | Prisma.ClosingTimesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ClosingTimesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ClosingTimes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ClosingTimes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ClosingTimes
  **/
  _count?: true | ClosingTimesCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ClosingTimesMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ClosingTimesMaxAggregateInputType
}

export type GetClosingTimesAggregateType<T extends ClosingTimesAggregateArgs> = {
      [P in keyof T & keyof AggregateClosingTimes]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateClosingTimes[P]>
    : Prisma.GetScalarType<T[P], AggregateClosingTimes[P]>
}




export type ClosingTimesGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ClosingTimesWhereInput
  orderBy?: Prisma.ClosingTimesOrderByWithAggregationInput | Prisma.ClosingTimesOrderByWithAggregationInput[]
  by: Prisma.ClosingTimesScalarFieldEnum[] | Prisma.ClosingTimesScalarFieldEnum
  having?: Prisma.ClosingTimesScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ClosingTimesCountAggregateInputType | true
  _min?: ClosingTimesMinAggregateInputType
  _max?: ClosingTimesMaxAggregateInputType
}

export type ClosingTimesGroupByOutputType = {
  id: string
  monday: Date | null
  tuesday: Date | null
  wednesday: Date | null
  thursday: Date | null
  friday: Date | null
  saturday: Date | null
  sunday: Date | null
  _count: ClosingTimesCountAggregateOutputType | null
  _min: ClosingTimesMinAggregateOutputType | null
  _max: ClosingTimesMaxAggregateOutputType | null
}

type GetClosingTimesGroupByPayload<T extends ClosingTimesGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ClosingTimesGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ClosingTimesGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ClosingTimesGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ClosingTimesGroupByOutputType[P]>
      }
    >
  > 



export type ClosingTimesWhereInput = {
  AND?: Prisma.ClosingTimesWhereInput | Prisma.ClosingTimesWhereInput[]
  OR?: Prisma.ClosingTimesWhereInput[]
  NOT?: Prisma.ClosingTimesWhereInput | Prisma.ClosingTimesWhereInput[]
  id?: Prisma.StringFilter<"ClosingTimes"> | string
  monday?: Prisma.DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
  tuesday?: Prisma.DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
  wednesday?: Prisma.DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
  thursday?: Prisma.DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
  friday?: Prisma.DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
  saturday?: Prisma.DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
  sunday?: Prisma.DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
  organizationConfiguration?: Prisma.XOR<Prisma.OrganizationConfigurationNullableScalarRelationFilter, Prisma.OrganizationConfigurationWhereInput> | null
}

export type ClosingTimesOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  monday?: Prisma.SortOrderInput | Prisma.SortOrder
  tuesday?: Prisma.SortOrderInput | Prisma.SortOrder
  wednesday?: Prisma.SortOrderInput | Prisma.SortOrder
  thursday?: Prisma.SortOrderInput | Prisma.SortOrder
  friday?: Prisma.SortOrderInput | Prisma.SortOrder
  saturday?: Prisma.SortOrderInput | Prisma.SortOrder
  sunday?: Prisma.SortOrderInput | Prisma.SortOrder
  organizationConfiguration?: Prisma.OrganizationConfigurationOrderByWithRelationInput
}

export type ClosingTimesWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.ClosingTimesWhereInput | Prisma.ClosingTimesWhereInput[]
  OR?: Prisma.ClosingTimesWhereInput[]
  NOT?: Prisma.ClosingTimesWhereInput | Prisma.ClosingTimesWhereInput[]
  monday?: Prisma.DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
  tuesday?: Prisma.DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
  wednesday?: Prisma.DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
  thursday?: Prisma.DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
  friday?: Prisma.DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
  saturday?: Prisma.DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
  sunday?: Prisma.DateTimeNullableFilter<"ClosingTimes"> | Date | string | null
  organizationConfiguration?: Prisma.XOR<Prisma.OrganizationConfigurationNullableScalarRelationFilter, Prisma.OrganizationConfigurationWhereInput> | null
}, "id">

export type ClosingTimesOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  monday?: Prisma.SortOrderInput | Prisma.SortOrder
  tuesday?: Prisma.SortOrderInput | Prisma.SortOrder
  wednesday?: Prisma.SortOrderInput | Prisma.SortOrder
  thursday?: Prisma.SortOrderInput | Prisma.SortOrder
  friday?: Prisma.SortOrderInput | Prisma.SortOrder
  saturday?: Prisma.SortOrderInput | Prisma.SortOrder
  sunday?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.ClosingTimesCountOrderByAggregateInput
  _max?: Prisma.ClosingTimesMaxOrderByAggregateInput
  _min?: Prisma.ClosingTimesMinOrderByAggregateInput
}

export type ClosingTimesScalarWhereWithAggregatesInput = {
  AND?: Prisma.ClosingTimesScalarWhereWithAggregatesInput | Prisma.ClosingTimesScalarWhereWithAggregatesInput[]
  OR?: Prisma.ClosingTimesScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ClosingTimesScalarWhereWithAggregatesInput | Prisma.ClosingTimesScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"ClosingTimes"> | string
  monday?: Prisma.DateTimeNullableWithAggregatesFilter<"ClosingTimes"> | Date | string | null
  tuesday?: Prisma.DateTimeNullableWithAggregatesFilter<"ClosingTimes"> | Date | string | null
  wednesday?: Prisma.DateTimeNullableWithAggregatesFilter<"ClosingTimes"> | Date | string | null
  thursday?: Prisma.DateTimeNullableWithAggregatesFilter<"ClosingTimes"> | Date | string | null
  friday?: Prisma.DateTimeNullableWithAggregatesFilter<"ClosingTimes"> | Date | string | null
  saturday?: Prisma.DateTimeNullableWithAggregatesFilter<"ClosingTimes"> | Date | string | null
  sunday?: Prisma.DateTimeNullableWithAggregatesFilter<"ClosingTimes"> | Date | string | null
}

export type ClosingTimesCreateInput = {
  id?: string
  monday?: Date | string | null
  tuesday?: Date | string | null
  wednesday?: Date | string | null
  thursday?: Date | string | null
  friday?: Date | string | null
  saturday?: Date | string | null
  sunday?: Date | string | null
  organizationConfiguration?: Prisma.OrganizationConfigurationCreateNestedOneWithoutClosingTimesInput
}

export type ClosingTimesUncheckedCreateInput = {
  id?: string
  monday?: Date | string | null
  tuesday?: Date | string | null
  wednesday?: Date | string | null
  thursday?: Date | string | null
  friday?: Date | string | null
  saturday?: Date | string | null
  sunday?: Date | string | null
  organizationConfiguration?: Prisma.OrganizationConfigurationUncheckedCreateNestedOneWithoutClosingTimesInput
}

export type ClosingTimesUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  monday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  tuesday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  wednesday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  thursday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  friday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  saturday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  sunday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  organizationConfiguration?: Prisma.OrganizationConfigurationUpdateOneWithoutClosingTimesNestedInput
}

export type ClosingTimesUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  monday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  tuesday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  wednesday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  thursday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  friday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  saturday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  sunday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  organizationConfiguration?: Prisma.OrganizationConfigurationUncheckedUpdateOneWithoutClosingTimesNestedInput
}

export type ClosingTimesCreateManyInput = {
  id?: string
  monday?: Date | string | null
  tuesday?: Date | string | null
  wednesday?: Date | string | null
  thursday?: Date | string | null
  friday?: Date | string | null
  saturday?: Date | string | null
  sunday?: Date | string | null
}

export type ClosingTimesUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  monday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  tuesday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  wednesday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  thursday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  friday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  saturday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  sunday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type ClosingTimesUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  monday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  tuesday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  wednesday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  thursday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  friday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  saturday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  sunday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type ClosingTimesCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  monday?: Prisma.SortOrder
  tuesday?: Prisma.SortOrder
  wednesday?: Prisma.SortOrder
  thursday?: Prisma.SortOrder
  friday?: Prisma.SortOrder
  saturday?: Prisma.SortOrder
  sunday?: Prisma.SortOrder
}

export type ClosingTimesMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  monday?: Prisma.SortOrder
  tuesday?: Prisma.SortOrder
  wednesday?: Prisma.SortOrder
  thursday?: Prisma.SortOrder
  friday?: Prisma.SortOrder
  saturday?: Prisma.SortOrder
  sunday?: Prisma.SortOrder
}

export type ClosingTimesMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  monday?: Prisma.SortOrder
  tuesday?: Prisma.SortOrder
  wednesday?: Prisma.SortOrder
  thursday?: Prisma.SortOrder
  friday?: Prisma.SortOrder
  saturday?: Prisma.SortOrder
  sunday?: Prisma.SortOrder
}

export type ClosingTimesNullableScalarRelationFilter = {
  is?: Prisma.ClosingTimesWhereInput | null
  isNot?: Prisma.ClosingTimesWhereInput | null
}

export type ClosingTimesCreateNestedOneWithoutOrganizationConfigurationInput = {
  create?: Prisma.XOR<Prisma.ClosingTimesCreateWithoutOrganizationConfigurationInput, Prisma.ClosingTimesUncheckedCreateWithoutOrganizationConfigurationInput>
  connectOrCreate?: Prisma.ClosingTimesCreateOrConnectWithoutOrganizationConfigurationInput
  connect?: Prisma.ClosingTimesWhereUniqueInput
}

export type ClosingTimesUpdateOneWithoutOrganizationConfigurationNestedInput = {
  create?: Prisma.XOR<Prisma.ClosingTimesCreateWithoutOrganizationConfigurationInput, Prisma.ClosingTimesUncheckedCreateWithoutOrganizationConfigurationInput>
  connectOrCreate?: Prisma.ClosingTimesCreateOrConnectWithoutOrganizationConfigurationInput
  upsert?: Prisma.ClosingTimesUpsertWithoutOrganizationConfigurationInput
  disconnect?: Prisma.ClosingTimesWhereInput | boolean
  delete?: Prisma.ClosingTimesWhereInput | boolean
  connect?: Prisma.ClosingTimesWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ClosingTimesUpdateToOneWithWhereWithoutOrganizationConfigurationInput, Prisma.ClosingTimesUpdateWithoutOrganizationConfigurationInput>, Prisma.ClosingTimesUncheckedUpdateWithoutOrganizationConfigurationInput>
}

export type ClosingTimesCreateWithoutOrganizationConfigurationInput = {
  id?: string
  monday?: Date | string | null
  tuesday?: Date | string | null
  wednesday?: Date | string | null
  thursday?: Date | string | null
  friday?: Date | string | null
  saturday?: Date | string | null
  sunday?: Date | string | null
}

export type ClosingTimesUncheckedCreateWithoutOrganizationConfigurationInput = {
  id?: string
  monday?: Date | string | null
  tuesday?: Date | string | null
  wednesday?: Date | string | null
  thursday?: Date | string | null
  friday?: Date | string | null
  saturday?: Date | string | null
  sunday?: Date | string | null
}

export type ClosingTimesCreateOrConnectWithoutOrganizationConfigurationInput = {
  where: Prisma.ClosingTimesWhereUniqueInput
  create: Prisma.XOR<Prisma.ClosingTimesCreateWithoutOrganizationConfigurationInput, Prisma.ClosingTimesUncheckedCreateWithoutOrganizationConfigurationInput>
}

export type ClosingTimesUpsertWithoutOrganizationConfigurationInput = {
  update: Prisma.XOR<Prisma.ClosingTimesUpdateWithoutOrganizationConfigurationInput, Prisma.ClosingTimesUncheckedUpdateWithoutOrganizationConfigurationInput>
  create: Prisma.XOR<Prisma.ClosingTimesCreateWithoutOrganizationConfigurationInput, Prisma.ClosingTimesUncheckedCreateWithoutOrganizationConfigurationInput>
  where?: Prisma.ClosingTimesWhereInput
}

export type ClosingTimesUpdateToOneWithWhereWithoutOrganizationConfigurationInput = {
  where?: Prisma.ClosingTimesWhereInput
  data: Prisma.XOR<Prisma.ClosingTimesUpdateWithoutOrganizationConfigurationInput, Prisma.ClosingTimesUncheckedUpdateWithoutOrganizationConfigurationInput>
}

export type ClosingTimesUpdateWithoutOrganizationConfigurationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  monday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  tuesday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  wednesday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  thursday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  friday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  saturday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  sunday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type ClosingTimesUncheckedUpdateWithoutOrganizationConfigurationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  monday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  tuesday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  wednesday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  thursday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  friday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  saturday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  sunday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}



export type ClosingTimesSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  monday?: boolean
  tuesday?: boolean
  wednesday?: boolean
  thursday?: boolean
  friday?: boolean
  saturday?: boolean
  sunday?: boolean
  organizationConfiguration?: boolean | Prisma.ClosingTimes$organizationConfigurationArgs<ExtArgs>
}, ExtArgs["result"]["closingTimes"]>

export type ClosingTimesSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  monday?: boolean
  tuesday?: boolean
  wednesday?: boolean
  thursday?: boolean
  friday?: boolean
  saturday?: boolean
  sunday?: boolean
}, ExtArgs["result"]["closingTimes"]>

export type ClosingTimesSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  monday?: boolean
  tuesday?: boolean
  wednesday?: boolean
  thursday?: boolean
  friday?: boolean
  saturday?: boolean
  sunday?: boolean
}, ExtArgs["result"]["closingTimes"]>

export type ClosingTimesSelectScalar = {
  id?: boolean
  monday?: boolean
  tuesday?: boolean
  wednesday?: boolean
  thursday?: boolean
  friday?: boolean
  saturday?: boolean
  sunday?: boolean
}

export type ClosingTimesOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "monday" | "tuesday" | "wednesday" | "thursday" | "friday" | "saturday" | "sunday", ExtArgs["result"]["closingTimes"]>
export type ClosingTimesInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  organizationConfiguration?: boolean | Prisma.ClosingTimes$organizationConfigurationArgs<ExtArgs>
}
export type ClosingTimesIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type ClosingTimesIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $ClosingTimesPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ClosingTimes"
  objects: {
    organizationConfiguration: Prisma.$OrganizationConfigurationPayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    monday: Date | null
    tuesday: Date | null
    wednesday: Date | null
    thursday: Date | null
    friday: Date | null
    saturday: Date | null
    sunday: Date | null
  }, ExtArgs["result"]["closingTimes"]>
  composites: {}
}

export type ClosingTimesGetPayload<S extends boolean | null | undefined | ClosingTimesDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ClosingTimesPayload, S>

export type ClosingTimesCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ClosingTimesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ClosingTimesCountAggregateInputType | true
  }

export interface ClosingTimesDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ClosingTimes'], meta: { name: 'ClosingTimes' } }
  /**
   * Find zero or one ClosingTimes that matches the filter.
   * @param {ClosingTimesFindUniqueArgs} args - Arguments to find a ClosingTimes
   * @example
   * // Get one ClosingTimes
   * const closingTimes = await prisma.closingTimes.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ClosingTimesFindUniqueArgs>(args: Prisma.SelectSubset<T, ClosingTimesFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ClosingTimesClient<runtime.Types.Result.GetResult<Prisma.$ClosingTimesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one ClosingTimes that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ClosingTimesFindUniqueOrThrowArgs} args - Arguments to find a ClosingTimes
   * @example
   * // Get one ClosingTimes
   * const closingTimes = await prisma.closingTimes.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ClosingTimesFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ClosingTimesFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ClosingTimesClient<runtime.Types.Result.GetResult<Prisma.$ClosingTimesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ClosingTimes that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClosingTimesFindFirstArgs} args - Arguments to find a ClosingTimes
   * @example
   * // Get one ClosingTimes
   * const closingTimes = await prisma.closingTimes.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ClosingTimesFindFirstArgs>(args?: Prisma.SelectSubset<T, ClosingTimesFindFirstArgs<ExtArgs>>): Prisma.Prisma__ClosingTimesClient<runtime.Types.Result.GetResult<Prisma.$ClosingTimesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ClosingTimes that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClosingTimesFindFirstOrThrowArgs} args - Arguments to find a ClosingTimes
   * @example
   * // Get one ClosingTimes
   * const closingTimes = await prisma.closingTimes.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ClosingTimesFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ClosingTimesFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ClosingTimesClient<runtime.Types.Result.GetResult<Prisma.$ClosingTimesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more ClosingTimes that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClosingTimesFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all ClosingTimes
   * const closingTimes = await prisma.closingTimes.findMany()
   * 
   * // Get first 10 ClosingTimes
   * const closingTimes = await prisma.closingTimes.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const closingTimesWithIdOnly = await prisma.closingTimes.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ClosingTimesFindManyArgs>(args?: Prisma.SelectSubset<T, ClosingTimesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ClosingTimesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a ClosingTimes.
   * @param {ClosingTimesCreateArgs} args - Arguments to create a ClosingTimes.
   * @example
   * // Create one ClosingTimes
   * const ClosingTimes = await prisma.closingTimes.create({
   *   data: {
   *     // ... data to create a ClosingTimes
   *   }
   * })
   * 
   */
  create<T extends ClosingTimesCreateArgs>(args: Prisma.SelectSubset<T, ClosingTimesCreateArgs<ExtArgs>>): Prisma.Prisma__ClosingTimesClient<runtime.Types.Result.GetResult<Prisma.$ClosingTimesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many ClosingTimes.
   * @param {ClosingTimesCreateManyArgs} args - Arguments to create many ClosingTimes.
   * @example
   * // Create many ClosingTimes
   * const closingTimes = await prisma.closingTimes.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ClosingTimesCreateManyArgs>(args?: Prisma.SelectSubset<T, ClosingTimesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many ClosingTimes and returns the data saved in the database.
   * @param {ClosingTimesCreateManyAndReturnArgs} args - Arguments to create many ClosingTimes.
   * @example
   * // Create many ClosingTimes
   * const closingTimes = await prisma.closingTimes.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many ClosingTimes and only return the `id`
   * const closingTimesWithIdOnly = await prisma.closingTimes.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ClosingTimesCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ClosingTimesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ClosingTimesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a ClosingTimes.
   * @param {ClosingTimesDeleteArgs} args - Arguments to delete one ClosingTimes.
   * @example
   * // Delete one ClosingTimes
   * const ClosingTimes = await prisma.closingTimes.delete({
   *   where: {
   *     // ... filter to delete one ClosingTimes
   *   }
   * })
   * 
   */
  delete<T extends ClosingTimesDeleteArgs>(args: Prisma.SelectSubset<T, ClosingTimesDeleteArgs<ExtArgs>>): Prisma.Prisma__ClosingTimesClient<runtime.Types.Result.GetResult<Prisma.$ClosingTimesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one ClosingTimes.
   * @param {ClosingTimesUpdateArgs} args - Arguments to update one ClosingTimes.
   * @example
   * // Update one ClosingTimes
   * const closingTimes = await prisma.closingTimes.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ClosingTimesUpdateArgs>(args: Prisma.SelectSubset<T, ClosingTimesUpdateArgs<ExtArgs>>): Prisma.Prisma__ClosingTimesClient<runtime.Types.Result.GetResult<Prisma.$ClosingTimesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more ClosingTimes.
   * @param {ClosingTimesDeleteManyArgs} args - Arguments to filter ClosingTimes to delete.
   * @example
   * // Delete a few ClosingTimes
   * const { count } = await prisma.closingTimes.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ClosingTimesDeleteManyArgs>(args?: Prisma.SelectSubset<T, ClosingTimesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ClosingTimes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClosingTimesUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many ClosingTimes
   * const closingTimes = await prisma.closingTimes.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ClosingTimesUpdateManyArgs>(args: Prisma.SelectSubset<T, ClosingTimesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ClosingTimes and returns the data updated in the database.
   * @param {ClosingTimesUpdateManyAndReturnArgs} args - Arguments to update many ClosingTimes.
   * @example
   * // Update many ClosingTimes
   * const closingTimes = await prisma.closingTimes.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more ClosingTimes and only return the `id`
   * const closingTimesWithIdOnly = await prisma.closingTimes.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ClosingTimesUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ClosingTimesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ClosingTimesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one ClosingTimes.
   * @param {ClosingTimesUpsertArgs} args - Arguments to update or create a ClosingTimes.
   * @example
   * // Update or create a ClosingTimes
   * const closingTimes = await prisma.closingTimes.upsert({
   *   create: {
   *     // ... data to create a ClosingTimes
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the ClosingTimes we want to update
   *   }
   * })
   */
  upsert<T extends ClosingTimesUpsertArgs>(args: Prisma.SelectSubset<T, ClosingTimesUpsertArgs<ExtArgs>>): Prisma.Prisma__ClosingTimesClient<runtime.Types.Result.GetResult<Prisma.$ClosingTimesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of ClosingTimes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClosingTimesCountArgs} args - Arguments to filter ClosingTimes to count.
   * @example
   * // Count the number of ClosingTimes
   * const count = await prisma.closingTimes.count({
   *   where: {
   *     // ... the filter for the ClosingTimes we want to count
   *   }
   * })
  **/
  count<T extends ClosingTimesCountArgs>(
    args?: Prisma.Subset<T, ClosingTimesCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ClosingTimesCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a ClosingTimes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClosingTimesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ClosingTimesAggregateArgs>(args: Prisma.Subset<T, ClosingTimesAggregateArgs>): Prisma.PrismaPromise<GetClosingTimesAggregateType<T>>

  /**
   * Group by ClosingTimes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ClosingTimesGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ClosingTimesGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ClosingTimesGroupByArgs['orderBy'] }
      : { orderBy?: ClosingTimesGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ClosingTimesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetClosingTimesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ClosingTimes model
 */
readonly fields: ClosingTimesFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ClosingTimes.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ClosingTimesClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  organizationConfiguration<T extends Prisma.ClosingTimes$organizationConfigurationArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ClosingTimes$organizationConfigurationArgs<ExtArgs>>): Prisma.Prisma__OrganizationConfigurationClient<runtime.Types.Result.GetResult<Prisma.$OrganizationConfigurationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ClosingTimes model
 */
export interface ClosingTimesFieldRefs {
  readonly id: Prisma.FieldRef<"ClosingTimes", 'String'>
  readonly monday: Prisma.FieldRef<"ClosingTimes", 'DateTime'>
  readonly tuesday: Prisma.FieldRef<"ClosingTimes", 'DateTime'>
  readonly wednesday: Prisma.FieldRef<"ClosingTimes", 'DateTime'>
  readonly thursday: Prisma.FieldRef<"ClosingTimes", 'DateTime'>
  readonly friday: Prisma.FieldRef<"ClosingTimes", 'DateTime'>
  readonly saturday: Prisma.FieldRef<"ClosingTimes", 'DateTime'>
  readonly sunday: Prisma.FieldRef<"ClosingTimes", 'DateTime'>
}
    

// Custom InputTypes
/**
 * ClosingTimes findUnique
 */
export type ClosingTimesFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClosingTimes
   */
  select?: Prisma.ClosingTimesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ClosingTimes
   */
  omit?: Prisma.ClosingTimesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClosingTimesInclude<ExtArgs> | null
  /**
   * Filter, which ClosingTimes to fetch.
   */
  where: Prisma.ClosingTimesWhereUniqueInput
}

/**
 * ClosingTimes findUniqueOrThrow
 */
export type ClosingTimesFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClosingTimes
   */
  select?: Prisma.ClosingTimesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ClosingTimes
   */
  omit?: Prisma.ClosingTimesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClosingTimesInclude<ExtArgs> | null
  /**
   * Filter, which ClosingTimes to fetch.
   */
  where: Prisma.ClosingTimesWhereUniqueInput
}

/**
 * ClosingTimes findFirst
 */
export type ClosingTimesFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClosingTimes
   */
  select?: Prisma.ClosingTimesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ClosingTimes
   */
  omit?: Prisma.ClosingTimesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClosingTimesInclude<ExtArgs> | null
  /**
   * Filter, which ClosingTimes to fetch.
   */
  where?: Prisma.ClosingTimesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ClosingTimes to fetch.
   */
  orderBy?: Prisma.ClosingTimesOrderByWithRelationInput | Prisma.ClosingTimesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ClosingTimes.
   */
  cursor?: Prisma.ClosingTimesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ClosingTimes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ClosingTimes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ClosingTimes.
   */
  distinct?: Prisma.ClosingTimesScalarFieldEnum | Prisma.ClosingTimesScalarFieldEnum[]
}

/**
 * ClosingTimes findFirstOrThrow
 */
export type ClosingTimesFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClosingTimes
   */
  select?: Prisma.ClosingTimesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ClosingTimes
   */
  omit?: Prisma.ClosingTimesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClosingTimesInclude<ExtArgs> | null
  /**
   * Filter, which ClosingTimes to fetch.
   */
  where?: Prisma.ClosingTimesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ClosingTimes to fetch.
   */
  orderBy?: Prisma.ClosingTimesOrderByWithRelationInput | Prisma.ClosingTimesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ClosingTimes.
   */
  cursor?: Prisma.ClosingTimesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ClosingTimes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ClosingTimes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ClosingTimes.
   */
  distinct?: Prisma.ClosingTimesScalarFieldEnum | Prisma.ClosingTimesScalarFieldEnum[]
}

/**
 * ClosingTimes findMany
 */
export type ClosingTimesFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClosingTimes
   */
  select?: Prisma.ClosingTimesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ClosingTimes
   */
  omit?: Prisma.ClosingTimesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClosingTimesInclude<ExtArgs> | null
  /**
   * Filter, which ClosingTimes to fetch.
   */
  where?: Prisma.ClosingTimesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ClosingTimes to fetch.
   */
  orderBy?: Prisma.ClosingTimesOrderByWithRelationInput | Prisma.ClosingTimesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ClosingTimes.
   */
  cursor?: Prisma.ClosingTimesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ClosingTimes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ClosingTimes.
   */
  skip?: number
  distinct?: Prisma.ClosingTimesScalarFieldEnum | Prisma.ClosingTimesScalarFieldEnum[]
}

/**
 * ClosingTimes create
 */
export type ClosingTimesCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClosingTimes
   */
  select?: Prisma.ClosingTimesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ClosingTimes
   */
  omit?: Prisma.ClosingTimesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClosingTimesInclude<ExtArgs> | null
  /**
   * The data needed to create a ClosingTimes.
   */
  data?: Prisma.XOR<Prisma.ClosingTimesCreateInput, Prisma.ClosingTimesUncheckedCreateInput>
}

/**
 * ClosingTimes createMany
 */
export type ClosingTimesCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many ClosingTimes.
   */
  data: Prisma.ClosingTimesCreateManyInput | Prisma.ClosingTimesCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ClosingTimes createManyAndReturn
 */
export type ClosingTimesCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClosingTimes
   */
  select?: Prisma.ClosingTimesSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ClosingTimes
   */
  omit?: Prisma.ClosingTimesOmit<ExtArgs> | null
  /**
   * The data used to create many ClosingTimes.
   */
  data: Prisma.ClosingTimesCreateManyInput | Prisma.ClosingTimesCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ClosingTimes update
 */
export type ClosingTimesUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClosingTimes
   */
  select?: Prisma.ClosingTimesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ClosingTimes
   */
  omit?: Prisma.ClosingTimesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClosingTimesInclude<ExtArgs> | null
  /**
   * The data needed to update a ClosingTimes.
   */
  data: Prisma.XOR<Prisma.ClosingTimesUpdateInput, Prisma.ClosingTimesUncheckedUpdateInput>
  /**
   * Choose, which ClosingTimes to update.
   */
  where: Prisma.ClosingTimesWhereUniqueInput
}

/**
 * ClosingTimes updateMany
 */
export type ClosingTimesUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ClosingTimes.
   */
  data: Prisma.XOR<Prisma.ClosingTimesUpdateManyMutationInput, Prisma.ClosingTimesUncheckedUpdateManyInput>
  /**
   * Filter which ClosingTimes to update
   */
  where?: Prisma.ClosingTimesWhereInput
  /**
   * Limit how many ClosingTimes to update.
   */
  limit?: number
}

/**
 * ClosingTimes updateManyAndReturn
 */
export type ClosingTimesUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClosingTimes
   */
  select?: Prisma.ClosingTimesSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ClosingTimes
   */
  omit?: Prisma.ClosingTimesOmit<ExtArgs> | null
  /**
   * The data used to update ClosingTimes.
   */
  data: Prisma.XOR<Prisma.ClosingTimesUpdateManyMutationInput, Prisma.ClosingTimesUncheckedUpdateManyInput>
  /**
   * Filter which ClosingTimes to update
   */
  where?: Prisma.ClosingTimesWhereInput
  /**
   * Limit how many ClosingTimes to update.
   */
  limit?: number
}

/**
 * ClosingTimes upsert
 */
export type ClosingTimesUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClosingTimes
   */
  select?: Prisma.ClosingTimesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ClosingTimes
   */
  omit?: Prisma.ClosingTimesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClosingTimesInclude<ExtArgs> | null
  /**
   * The filter to search for the ClosingTimes to update in case it exists.
   */
  where: Prisma.ClosingTimesWhereUniqueInput
  /**
   * In case the ClosingTimes found by the `where` argument doesn't exist, create a new ClosingTimes with this data.
   */
  create: Prisma.XOR<Prisma.ClosingTimesCreateInput, Prisma.ClosingTimesUncheckedCreateInput>
  /**
   * In case the ClosingTimes was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ClosingTimesUpdateInput, Prisma.ClosingTimesUncheckedUpdateInput>
}

/**
 * ClosingTimes delete
 */
export type ClosingTimesDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClosingTimes
   */
  select?: Prisma.ClosingTimesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ClosingTimes
   */
  omit?: Prisma.ClosingTimesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClosingTimesInclude<ExtArgs> | null
  /**
   * Filter which ClosingTimes to delete.
   */
  where: Prisma.ClosingTimesWhereUniqueInput
}

/**
 * ClosingTimes deleteMany
 */
export type ClosingTimesDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ClosingTimes to delete
   */
  where?: Prisma.ClosingTimesWhereInput
  /**
   * Limit how many ClosingTimes to delete.
   */
  limit?: number
}

/**
 * ClosingTimes.organizationConfiguration
 */
export type ClosingTimes$organizationConfigurationArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrganizationConfiguration
   */
  select?: Prisma.OrganizationConfigurationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrganizationConfiguration
   */
  omit?: Prisma.OrganizationConfigurationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationConfigurationInclude<ExtArgs> | null
  where?: Prisma.OrganizationConfigurationWhereInput
}

/**
 * ClosingTimes without action
 */
export type ClosingTimesDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ClosingTimes
   */
  select?: Prisma.ClosingTimesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ClosingTimes
   */
  omit?: Prisma.ClosingTimesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ClosingTimesInclude<ExtArgs> | null
}
