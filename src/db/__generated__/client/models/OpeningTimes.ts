
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `OpeningTimes` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model OpeningTimes
 * 
 */
export type OpeningTimesModel = runtime.Types.Result.DefaultSelection<Prisma.$OpeningTimesPayload>

export type AggregateOpeningTimes = {
  _count: OpeningTimesCountAggregateOutputType | null
  _min: OpeningTimesMinAggregateOutputType | null
  _max: OpeningTimesMaxAggregateOutputType | null
}

export type OpeningTimesMinAggregateOutputType = {
  id: string | null
  monday: Date | null
  tuesday: Date | null
  wednesday: Date | null
  thursday: Date | null
  friday: Date | null
  saturday: Date | null
  sunday: Date | null
}

export type OpeningTimesMaxAggregateOutputType = {
  id: string | null
  monday: Date | null
  tuesday: Date | null
  wednesday: Date | null
  thursday: Date | null
  friday: Date | null
  saturday: Date | null
  sunday: Date | null
}

export type OpeningTimesCountAggregateOutputType = {
  id: number
  monday: number
  tuesday: number
  wednesday: number
  thursday: number
  friday: number
  saturday: number
  sunday: number
  _all: number
}


export type OpeningTimesMinAggregateInputType = {
  id?: true
  monday?: true
  tuesday?: true
  wednesday?: true
  thursday?: true
  friday?: true
  saturday?: true
  sunday?: true
}

export type OpeningTimesMaxAggregateInputType = {
  id?: true
  monday?: true
  tuesday?: true
  wednesday?: true
  thursday?: true
  friday?: true
  saturday?: true
  sunday?: true
}

export type OpeningTimesCountAggregateInputType = {
  id?: true
  monday?: true
  tuesday?: true
  wednesday?: true
  thursday?: true
  friday?: true
  saturday?: true
  sunday?: true
  _all?: true
}

export type OpeningTimesAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which OpeningTimes to aggregate.
   */
  where?: Prisma.OpeningTimesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of OpeningTimes to fetch.
   */
  orderBy?: Prisma.OpeningTimesOrderByWithRelationInput | Prisma.OpeningTimesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.OpeningTimesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` OpeningTimes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` OpeningTimes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned OpeningTimes
  **/
  _count?: true | OpeningTimesCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: OpeningTimesMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: OpeningTimesMaxAggregateInputType
}

export type GetOpeningTimesAggregateType<T extends OpeningTimesAggregateArgs> = {
      [P in keyof T & keyof AggregateOpeningTimes]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateOpeningTimes[P]>
    : Prisma.GetScalarType<T[P], AggregateOpeningTimes[P]>
}




export type OpeningTimesGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.OpeningTimesWhereInput
  orderBy?: Prisma.OpeningTimesOrderByWithAggregationInput | Prisma.OpeningTimesOrderByWithAggregationInput[]
  by: Prisma.OpeningTimesScalarFieldEnum[] | Prisma.OpeningTimesScalarFieldEnum
  having?: Prisma.OpeningTimesScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: OpeningTimesCountAggregateInputType | true
  _min?: OpeningTimesMinAggregateInputType
  _max?: OpeningTimesMaxAggregateInputType
}

export type OpeningTimesGroupByOutputType = {
  id: string
  monday: Date | null
  tuesday: Date | null
  wednesday: Date | null
  thursday: Date | null
  friday: Date | null
  saturday: Date | null
  sunday: Date | null
  _count: OpeningTimesCountAggregateOutputType | null
  _min: OpeningTimesMinAggregateOutputType | null
  _max: OpeningTimesMaxAggregateOutputType | null
}

type GetOpeningTimesGroupByPayload<T extends OpeningTimesGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<OpeningTimesGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof OpeningTimesGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], OpeningTimesGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], OpeningTimesGroupByOutputType[P]>
      }
    >
  > 



export type OpeningTimesWhereInput = {
  AND?: Prisma.OpeningTimesWhereInput | Prisma.OpeningTimesWhereInput[]
  OR?: Prisma.OpeningTimesWhereInput[]
  NOT?: Prisma.OpeningTimesWhereInput | Prisma.OpeningTimesWhereInput[]
  id?: Prisma.StringFilter<"OpeningTimes"> | string
  monday?: Prisma.DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
  tuesday?: Prisma.DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
  wednesday?: Prisma.DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
  thursday?: Prisma.DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
  friday?: Prisma.DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
  saturday?: Prisma.DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
  sunday?: Prisma.DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
  organizationConfiguration?: Prisma.XOR<Prisma.OrganizationConfigurationNullableScalarRelationFilter, Prisma.OrganizationConfigurationWhereInput> | null
}

export type OpeningTimesOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  monday?: Prisma.SortOrderInput | Prisma.SortOrder
  tuesday?: Prisma.SortOrderInput | Prisma.SortOrder
  wednesday?: Prisma.SortOrderInput | Prisma.SortOrder
  thursday?: Prisma.SortOrderInput | Prisma.SortOrder
  friday?: Prisma.SortOrderInput | Prisma.SortOrder
  saturday?: Prisma.SortOrderInput | Prisma.SortOrder
  sunday?: Prisma.SortOrderInput | Prisma.SortOrder
  organizationConfiguration?: Prisma.OrganizationConfigurationOrderByWithRelationInput
}

export type OpeningTimesWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.OpeningTimesWhereInput | Prisma.OpeningTimesWhereInput[]
  OR?: Prisma.OpeningTimesWhereInput[]
  NOT?: Prisma.OpeningTimesWhereInput | Prisma.OpeningTimesWhereInput[]
  monday?: Prisma.DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
  tuesday?: Prisma.DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
  wednesday?: Prisma.DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
  thursday?: Prisma.DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
  friday?: Prisma.DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
  saturday?: Prisma.DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
  sunday?: Prisma.DateTimeNullableFilter<"OpeningTimes"> | Date | string | null
  organizationConfiguration?: Prisma.XOR<Prisma.OrganizationConfigurationNullableScalarRelationFilter, Prisma.OrganizationConfigurationWhereInput> | null
}, "id">

export type OpeningTimesOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  monday?: Prisma.SortOrderInput | Prisma.SortOrder
  tuesday?: Prisma.SortOrderInput | Prisma.SortOrder
  wednesday?: Prisma.SortOrderInput | Prisma.SortOrder
  thursday?: Prisma.SortOrderInput | Prisma.SortOrder
  friday?: Prisma.SortOrderInput | Prisma.SortOrder
  saturday?: Prisma.SortOrderInput | Prisma.SortOrder
  sunday?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.OpeningTimesCountOrderByAggregateInput
  _max?: Prisma.OpeningTimesMaxOrderByAggregateInput
  _min?: Prisma.OpeningTimesMinOrderByAggregateInput
}

export type OpeningTimesScalarWhereWithAggregatesInput = {
  AND?: Prisma.OpeningTimesScalarWhereWithAggregatesInput | Prisma.OpeningTimesScalarWhereWithAggregatesInput[]
  OR?: Prisma.OpeningTimesScalarWhereWithAggregatesInput[]
  NOT?: Prisma.OpeningTimesScalarWhereWithAggregatesInput | Prisma.OpeningTimesScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"OpeningTimes"> | string
  monday?: Prisma.DateTimeNullableWithAggregatesFilter<"OpeningTimes"> | Date | string | null
  tuesday?: Prisma.DateTimeNullableWithAggregatesFilter<"OpeningTimes"> | Date | string | null
  wednesday?: Prisma.DateTimeNullableWithAggregatesFilter<"OpeningTimes"> | Date | string | null
  thursday?: Prisma.DateTimeNullableWithAggregatesFilter<"OpeningTimes"> | Date | string | null
  friday?: Prisma.DateTimeNullableWithAggregatesFilter<"OpeningTimes"> | Date | string | null
  saturday?: Prisma.DateTimeNullableWithAggregatesFilter<"OpeningTimes"> | Date | string | null
  sunday?: Prisma.DateTimeNullableWithAggregatesFilter<"OpeningTimes"> | Date | string | null
}

export type OpeningTimesCreateInput = {
  id?: string
  monday?: Date | string | null
  tuesday?: Date | string | null
  wednesday?: Date | string | null
  thursday?: Date | string | null
  friday?: Date | string | null
  saturday?: Date | string | null
  sunday?: Date | string | null
  organizationConfiguration?: Prisma.OrganizationConfigurationCreateNestedOneWithoutOpeningTimesInput
}

export type OpeningTimesUncheckedCreateInput = {
  id?: string
  monday?: Date | string | null
  tuesday?: Date | string | null
  wednesday?: Date | string | null
  thursday?: Date | string | null
  friday?: Date | string | null
  saturday?: Date | string | null
  sunday?: Date | string | null
  organizationConfiguration?: Prisma.OrganizationConfigurationUncheckedCreateNestedOneWithoutOpeningTimesInput
}

export type OpeningTimesUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  monday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  tuesday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  wednesday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  thursday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  friday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  saturday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  sunday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  organizationConfiguration?: Prisma.OrganizationConfigurationUpdateOneWithoutOpeningTimesNestedInput
}

export type OpeningTimesUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  monday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  tuesday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  wednesday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  thursday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  friday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  saturday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  sunday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  organizationConfiguration?: Prisma.OrganizationConfigurationUncheckedUpdateOneWithoutOpeningTimesNestedInput
}

export type OpeningTimesCreateManyInput = {
  id?: string
  monday?: Date | string | null
  tuesday?: Date | string | null
  wednesday?: Date | string | null
  thursday?: Date | string | null
  friday?: Date | string | null
  saturday?: Date | string | null
  sunday?: Date | string | null
}

export type OpeningTimesUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  monday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  tuesday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  wednesday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  thursday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  friday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  saturday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  sunday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type OpeningTimesUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  monday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  tuesday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  wednesday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  thursday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  friday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  saturday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  sunday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type OpeningTimesCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  monday?: Prisma.SortOrder
  tuesday?: Prisma.SortOrder
  wednesday?: Prisma.SortOrder
  thursday?: Prisma.SortOrder
  friday?: Prisma.SortOrder
  saturday?: Prisma.SortOrder
  sunday?: Prisma.SortOrder
}

export type OpeningTimesMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  monday?: Prisma.SortOrder
  tuesday?: Prisma.SortOrder
  wednesday?: Prisma.SortOrder
  thursday?: Prisma.SortOrder
  friday?: Prisma.SortOrder
  saturday?: Prisma.SortOrder
  sunday?: Prisma.SortOrder
}

export type OpeningTimesMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  monday?: Prisma.SortOrder
  tuesday?: Prisma.SortOrder
  wednesday?: Prisma.SortOrder
  thursday?: Prisma.SortOrder
  friday?: Prisma.SortOrder
  saturday?: Prisma.SortOrder
  sunday?: Prisma.SortOrder
}

export type OpeningTimesNullableScalarRelationFilter = {
  is?: Prisma.OpeningTimesWhereInput | null
  isNot?: Prisma.OpeningTimesWhereInput | null
}

export type OpeningTimesCreateNestedOneWithoutOrganizationConfigurationInput = {
  create?: Prisma.XOR<Prisma.OpeningTimesCreateWithoutOrganizationConfigurationInput, Prisma.OpeningTimesUncheckedCreateWithoutOrganizationConfigurationInput>
  connectOrCreate?: Prisma.OpeningTimesCreateOrConnectWithoutOrganizationConfigurationInput
  connect?: Prisma.OpeningTimesWhereUniqueInput
}

export type OpeningTimesUpdateOneWithoutOrganizationConfigurationNestedInput = {
  create?: Prisma.XOR<Prisma.OpeningTimesCreateWithoutOrganizationConfigurationInput, Prisma.OpeningTimesUncheckedCreateWithoutOrganizationConfigurationInput>
  connectOrCreate?: Prisma.OpeningTimesCreateOrConnectWithoutOrganizationConfigurationInput
  upsert?: Prisma.OpeningTimesUpsertWithoutOrganizationConfigurationInput
  disconnect?: Prisma.OpeningTimesWhereInput | boolean
  delete?: Prisma.OpeningTimesWhereInput | boolean
  connect?: Prisma.OpeningTimesWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.OpeningTimesUpdateToOneWithWhereWithoutOrganizationConfigurationInput, Prisma.OpeningTimesUpdateWithoutOrganizationConfigurationInput>, Prisma.OpeningTimesUncheckedUpdateWithoutOrganizationConfigurationInput>
}

export type OpeningTimesCreateWithoutOrganizationConfigurationInput = {
  id?: string
  monday?: Date | string | null
  tuesday?: Date | string | null
  wednesday?: Date | string | null
  thursday?: Date | string | null
  friday?: Date | string | null
  saturday?: Date | string | null
  sunday?: Date | string | null
}

export type OpeningTimesUncheckedCreateWithoutOrganizationConfigurationInput = {
  id?: string
  monday?: Date | string | null
  tuesday?: Date | string | null
  wednesday?: Date | string | null
  thursday?: Date | string | null
  friday?: Date | string | null
  saturday?: Date | string | null
  sunday?: Date | string | null
}

export type OpeningTimesCreateOrConnectWithoutOrganizationConfigurationInput = {
  where: Prisma.OpeningTimesWhereUniqueInput
  create: Prisma.XOR<Prisma.OpeningTimesCreateWithoutOrganizationConfigurationInput, Prisma.OpeningTimesUncheckedCreateWithoutOrganizationConfigurationInput>
}

export type OpeningTimesUpsertWithoutOrganizationConfigurationInput = {
  update: Prisma.XOR<Prisma.OpeningTimesUpdateWithoutOrganizationConfigurationInput, Prisma.OpeningTimesUncheckedUpdateWithoutOrganizationConfigurationInput>
  create: Prisma.XOR<Prisma.OpeningTimesCreateWithoutOrganizationConfigurationInput, Prisma.OpeningTimesUncheckedCreateWithoutOrganizationConfigurationInput>
  where?: Prisma.OpeningTimesWhereInput
}

export type OpeningTimesUpdateToOneWithWhereWithoutOrganizationConfigurationInput = {
  where?: Prisma.OpeningTimesWhereInput
  data: Prisma.XOR<Prisma.OpeningTimesUpdateWithoutOrganizationConfigurationInput, Prisma.OpeningTimesUncheckedUpdateWithoutOrganizationConfigurationInput>
}

export type OpeningTimesUpdateWithoutOrganizationConfigurationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  monday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  tuesday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  wednesday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  thursday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  friday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  saturday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  sunday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}

export type OpeningTimesUncheckedUpdateWithoutOrganizationConfigurationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  monday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  tuesday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  wednesday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  thursday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  friday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  saturday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  sunday?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
}



export type OpeningTimesSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  monday?: boolean
  tuesday?: boolean
  wednesday?: boolean
  thursday?: boolean
  friday?: boolean
  saturday?: boolean
  sunday?: boolean
  organizationConfiguration?: boolean | Prisma.OpeningTimes$organizationConfigurationArgs<ExtArgs>
}, ExtArgs["result"]["openingTimes"]>

export type OpeningTimesSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  monday?: boolean
  tuesday?: boolean
  wednesday?: boolean
  thursday?: boolean
  friday?: boolean
  saturday?: boolean
  sunday?: boolean
}, ExtArgs["result"]["openingTimes"]>

export type OpeningTimesSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  monday?: boolean
  tuesday?: boolean
  wednesday?: boolean
  thursday?: boolean
  friday?: boolean
  saturday?: boolean
  sunday?: boolean
}, ExtArgs["result"]["openingTimes"]>

export type OpeningTimesSelectScalar = {
  id?: boolean
  monday?: boolean
  tuesday?: boolean
  wednesday?: boolean
  thursday?: boolean
  friday?: boolean
  saturday?: boolean
  sunday?: boolean
}

export type OpeningTimesOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "monday" | "tuesday" | "wednesday" | "thursday" | "friday" | "saturday" | "sunday", ExtArgs["result"]["openingTimes"]>
export type OpeningTimesInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  organizationConfiguration?: boolean | Prisma.OpeningTimes$organizationConfigurationArgs<ExtArgs>
}
export type OpeningTimesIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type OpeningTimesIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $OpeningTimesPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "OpeningTimes"
  objects: {
    organizationConfiguration: Prisma.$OrganizationConfigurationPayload<ExtArgs> | null
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    monday: Date | null
    tuesday: Date | null
    wednesday: Date | null
    thursday: Date | null
    friday: Date | null
    saturday: Date | null
    sunday: Date | null
  }, ExtArgs["result"]["openingTimes"]>
  composites: {}
}

export type OpeningTimesGetPayload<S extends boolean | null | undefined | OpeningTimesDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$OpeningTimesPayload, S>

export type OpeningTimesCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<OpeningTimesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: OpeningTimesCountAggregateInputType | true
  }

export interface OpeningTimesDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OpeningTimes'], meta: { name: 'OpeningTimes' } }
  /**
   * Find zero or one OpeningTimes that matches the filter.
   * @param {OpeningTimesFindUniqueArgs} args - Arguments to find a OpeningTimes
   * @example
   * // Get one OpeningTimes
   * const openingTimes = await prisma.openingTimes.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends OpeningTimesFindUniqueArgs>(args: Prisma.SelectSubset<T, OpeningTimesFindUniqueArgs<ExtArgs>>): Prisma.Prisma__OpeningTimesClient<runtime.Types.Result.GetResult<Prisma.$OpeningTimesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one OpeningTimes that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {OpeningTimesFindUniqueOrThrowArgs} args - Arguments to find a OpeningTimes
   * @example
   * // Get one OpeningTimes
   * const openingTimes = await prisma.openingTimes.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends OpeningTimesFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, OpeningTimesFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__OpeningTimesClient<runtime.Types.Result.GetResult<Prisma.$OpeningTimesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first OpeningTimes that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OpeningTimesFindFirstArgs} args - Arguments to find a OpeningTimes
   * @example
   * // Get one OpeningTimes
   * const openingTimes = await prisma.openingTimes.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends OpeningTimesFindFirstArgs>(args?: Prisma.SelectSubset<T, OpeningTimesFindFirstArgs<ExtArgs>>): Prisma.Prisma__OpeningTimesClient<runtime.Types.Result.GetResult<Prisma.$OpeningTimesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first OpeningTimes that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OpeningTimesFindFirstOrThrowArgs} args - Arguments to find a OpeningTimes
   * @example
   * // Get one OpeningTimes
   * const openingTimes = await prisma.openingTimes.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends OpeningTimesFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, OpeningTimesFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__OpeningTimesClient<runtime.Types.Result.GetResult<Prisma.$OpeningTimesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more OpeningTimes that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OpeningTimesFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all OpeningTimes
   * const openingTimes = await prisma.openingTimes.findMany()
   * 
   * // Get first 10 OpeningTimes
   * const openingTimes = await prisma.openingTimes.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const openingTimesWithIdOnly = await prisma.openingTimes.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends OpeningTimesFindManyArgs>(args?: Prisma.SelectSubset<T, OpeningTimesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OpeningTimesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a OpeningTimes.
   * @param {OpeningTimesCreateArgs} args - Arguments to create a OpeningTimes.
   * @example
   * // Create one OpeningTimes
   * const OpeningTimes = await prisma.openingTimes.create({
   *   data: {
   *     // ... data to create a OpeningTimes
   *   }
   * })
   * 
   */
  create<T extends OpeningTimesCreateArgs>(args: Prisma.SelectSubset<T, OpeningTimesCreateArgs<ExtArgs>>): Prisma.Prisma__OpeningTimesClient<runtime.Types.Result.GetResult<Prisma.$OpeningTimesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many OpeningTimes.
   * @param {OpeningTimesCreateManyArgs} args - Arguments to create many OpeningTimes.
   * @example
   * // Create many OpeningTimes
   * const openingTimes = await prisma.openingTimes.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends OpeningTimesCreateManyArgs>(args?: Prisma.SelectSubset<T, OpeningTimesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many OpeningTimes and returns the data saved in the database.
   * @param {OpeningTimesCreateManyAndReturnArgs} args - Arguments to create many OpeningTimes.
   * @example
   * // Create many OpeningTimes
   * const openingTimes = await prisma.openingTimes.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many OpeningTimes and only return the `id`
   * const openingTimesWithIdOnly = await prisma.openingTimes.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends OpeningTimesCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, OpeningTimesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OpeningTimesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a OpeningTimes.
   * @param {OpeningTimesDeleteArgs} args - Arguments to delete one OpeningTimes.
   * @example
   * // Delete one OpeningTimes
   * const OpeningTimes = await prisma.openingTimes.delete({
   *   where: {
   *     // ... filter to delete one OpeningTimes
   *   }
   * })
   * 
   */
  delete<T extends OpeningTimesDeleteArgs>(args: Prisma.SelectSubset<T, OpeningTimesDeleteArgs<ExtArgs>>): Prisma.Prisma__OpeningTimesClient<runtime.Types.Result.GetResult<Prisma.$OpeningTimesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one OpeningTimes.
   * @param {OpeningTimesUpdateArgs} args - Arguments to update one OpeningTimes.
   * @example
   * // Update one OpeningTimes
   * const openingTimes = await prisma.openingTimes.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends OpeningTimesUpdateArgs>(args: Prisma.SelectSubset<T, OpeningTimesUpdateArgs<ExtArgs>>): Prisma.Prisma__OpeningTimesClient<runtime.Types.Result.GetResult<Prisma.$OpeningTimesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more OpeningTimes.
   * @param {OpeningTimesDeleteManyArgs} args - Arguments to filter OpeningTimes to delete.
   * @example
   * // Delete a few OpeningTimes
   * const { count } = await prisma.openingTimes.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends OpeningTimesDeleteManyArgs>(args?: Prisma.SelectSubset<T, OpeningTimesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more OpeningTimes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OpeningTimesUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many OpeningTimes
   * const openingTimes = await prisma.openingTimes.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends OpeningTimesUpdateManyArgs>(args: Prisma.SelectSubset<T, OpeningTimesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more OpeningTimes and returns the data updated in the database.
   * @param {OpeningTimesUpdateManyAndReturnArgs} args - Arguments to update many OpeningTimes.
   * @example
   * // Update many OpeningTimes
   * const openingTimes = await prisma.openingTimes.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more OpeningTimes and only return the `id`
   * const openingTimesWithIdOnly = await prisma.openingTimes.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends OpeningTimesUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, OpeningTimesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OpeningTimesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one OpeningTimes.
   * @param {OpeningTimesUpsertArgs} args - Arguments to update or create a OpeningTimes.
   * @example
   * // Update or create a OpeningTimes
   * const openingTimes = await prisma.openingTimes.upsert({
   *   create: {
   *     // ... data to create a OpeningTimes
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the OpeningTimes we want to update
   *   }
   * })
   */
  upsert<T extends OpeningTimesUpsertArgs>(args: Prisma.SelectSubset<T, OpeningTimesUpsertArgs<ExtArgs>>): Prisma.Prisma__OpeningTimesClient<runtime.Types.Result.GetResult<Prisma.$OpeningTimesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of OpeningTimes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OpeningTimesCountArgs} args - Arguments to filter OpeningTimes to count.
   * @example
   * // Count the number of OpeningTimes
   * const count = await prisma.openingTimes.count({
   *   where: {
   *     // ... the filter for the OpeningTimes we want to count
   *   }
   * })
  **/
  count<T extends OpeningTimesCountArgs>(
    args?: Prisma.Subset<T, OpeningTimesCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], OpeningTimesCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a OpeningTimes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OpeningTimesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends OpeningTimesAggregateArgs>(args: Prisma.Subset<T, OpeningTimesAggregateArgs>): Prisma.PrismaPromise<GetOpeningTimesAggregateType<T>>

  /**
   * Group by OpeningTimes.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {OpeningTimesGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends OpeningTimesGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: OpeningTimesGroupByArgs['orderBy'] }
      : { orderBy?: OpeningTimesGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, OpeningTimesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOpeningTimesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the OpeningTimes model
 */
readonly fields: OpeningTimesFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for OpeningTimes.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__OpeningTimesClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  organizationConfiguration<T extends Prisma.OpeningTimes$organizationConfigurationArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.OpeningTimes$organizationConfigurationArgs<ExtArgs>>): Prisma.Prisma__OrganizationConfigurationClient<runtime.Types.Result.GetResult<Prisma.$OrganizationConfigurationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the OpeningTimes model
 */
export interface OpeningTimesFieldRefs {
  readonly id: Prisma.FieldRef<"OpeningTimes", 'String'>
  readonly monday: Prisma.FieldRef<"OpeningTimes", 'DateTime'>
  readonly tuesday: Prisma.FieldRef<"OpeningTimes", 'DateTime'>
  readonly wednesday: Prisma.FieldRef<"OpeningTimes", 'DateTime'>
  readonly thursday: Prisma.FieldRef<"OpeningTimes", 'DateTime'>
  readonly friday: Prisma.FieldRef<"OpeningTimes", 'DateTime'>
  readonly saturday: Prisma.FieldRef<"OpeningTimes", 'DateTime'>
  readonly sunday: Prisma.FieldRef<"OpeningTimes", 'DateTime'>
}
    

// Custom InputTypes
/**
 * OpeningTimes findUnique
 */
export type OpeningTimesFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OpeningTimes
   */
  select?: Prisma.OpeningTimesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OpeningTimes
   */
  omit?: Prisma.OpeningTimesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OpeningTimesInclude<ExtArgs> | null
  /**
   * Filter, which OpeningTimes to fetch.
   */
  where: Prisma.OpeningTimesWhereUniqueInput
}

/**
 * OpeningTimes findUniqueOrThrow
 */
export type OpeningTimesFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OpeningTimes
   */
  select?: Prisma.OpeningTimesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OpeningTimes
   */
  omit?: Prisma.OpeningTimesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OpeningTimesInclude<ExtArgs> | null
  /**
   * Filter, which OpeningTimes to fetch.
   */
  where: Prisma.OpeningTimesWhereUniqueInput
}

/**
 * OpeningTimes findFirst
 */
export type OpeningTimesFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OpeningTimes
   */
  select?: Prisma.OpeningTimesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OpeningTimes
   */
  omit?: Prisma.OpeningTimesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OpeningTimesInclude<ExtArgs> | null
  /**
   * Filter, which OpeningTimes to fetch.
   */
  where?: Prisma.OpeningTimesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of OpeningTimes to fetch.
   */
  orderBy?: Prisma.OpeningTimesOrderByWithRelationInput | Prisma.OpeningTimesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for OpeningTimes.
   */
  cursor?: Prisma.OpeningTimesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` OpeningTimes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` OpeningTimes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of OpeningTimes.
   */
  distinct?: Prisma.OpeningTimesScalarFieldEnum | Prisma.OpeningTimesScalarFieldEnum[]
}

/**
 * OpeningTimes findFirstOrThrow
 */
export type OpeningTimesFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OpeningTimes
   */
  select?: Prisma.OpeningTimesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OpeningTimes
   */
  omit?: Prisma.OpeningTimesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OpeningTimesInclude<ExtArgs> | null
  /**
   * Filter, which OpeningTimes to fetch.
   */
  where?: Prisma.OpeningTimesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of OpeningTimes to fetch.
   */
  orderBy?: Prisma.OpeningTimesOrderByWithRelationInput | Prisma.OpeningTimesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for OpeningTimes.
   */
  cursor?: Prisma.OpeningTimesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` OpeningTimes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` OpeningTimes.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of OpeningTimes.
   */
  distinct?: Prisma.OpeningTimesScalarFieldEnum | Prisma.OpeningTimesScalarFieldEnum[]
}

/**
 * OpeningTimes findMany
 */
export type OpeningTimesFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OpeningTimes
   */
  select?: Prisma.OpeningTimesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OpeningTimes
   */
  omit?: Prisma.OpeningTimesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OpeningTimesInclude<ExtArgs> | null
  /**
   * Filter, which OpeningTimes to fetch.
   */
  where?: Prisma.OpeningTimesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of OpeningTimes to fetch.
   */
  orderBy?: Prisma.OpeningTimesOrderByWithRelationInput | Prisma.OpeningTimesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing OpeningTimes.
   */
  cursor?: Prisma.OpeningTimesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` OpeningTimes from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` OpeningTimes.
   */
  skip?: number
  distinct?: Prisma.OpeningTimesScalarFieldEnum | Prisma.OpeningTimesScalarFieldEnum[]
}

/**
 * OpeningTimes create
 */
export type OpeningTimesCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OpeningTimes
   */
  select?: Prisma.OpeningTimesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OpeningTimes
   */
  omit?: Prisma.OpeningTimesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OpeningTimesInclude<ExtArgs> | null
  /**
   * The data needed to create a OpeningTimes.
   */
  data?: Prisma.XOR<Prisma.OpeningTimesCreateInput, Prisma.OpeningTimesUncheckedCreateInput>
}

/**
 * OpeningTimes createMany
 */
export type OpeningTimesCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many OpeningTimes.
   */
  data: Prisma.OpeningTimesCreateManyInput | Prisma.OpeningTimesCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * OpeningTimes createManyAndReturn
 */
export type OpeningTimesCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OpeningTimes
   */
  select?: Prisma.OpeningTimesSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the OpeningTimes
   */
  omit?: Prisma.OpeningTimesOmit<ExtArgs> | null
  /**
   * The data used to create many OpeningTimes.
   */
  data: Prisma.OpeningTimesCreateManyInput | Prisma.OpeningTimesCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * OpeningTimes update
 */
export type OpeningTimesUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OpeningTimes
   */
  select?: Prisma.OpeningTimesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OpeningTimes
   */
  omit?: Prisma.OpeningTimesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OpeningTimesInclude<ExtArgs> | null
  /**
   * The data needed to update a OpeningTimes.
   */
  data: Prisma.XOR<Prisma.OpeningTimesUpdateInput, Prisma.OpeningTimesUncheckedUpdateInput>
  /**
   * Choose, which OpeningTimes to update.
   */
  where: Prisma.OpeningTimesWhereUniqueInput
}

/**
 * OpeningTimes updateMany
 */
export type OpeningTimesUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update OpeningTimes.
   */
  data: Prisma.XOR<Prisma.OpeningTimesUpdateManyMutationInput, Prisma.OpeningTimesUncheckedUpdateManyInput>
  /**
   * Filter which OpeningTimes to update
   */
  where?: Prisma.OpeningTimesWhereInput
  /**
   * Limit how many OpeningTimes to update.
   */
  limit?: number
}

/**
 * OpeningTimes updateManyAndReturn
 */
export type OpeningTimesUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OpeningTimes
   */
  select?: Prisma.OpeningTimesSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the OpeningTimes
   */
  omit?: Prisma.OpeningTimesOmit<ExtArgs> | null
  /**
   * The data used to update OpeningTimes.
   */
  data: Prisma.XOR<Prisma.OpeningTimesUpdateManyMutationInput, Prisma.OpeningTimesUncheckedUpdateManyInput>
  /**
   * Filter which OpeningTimes to update
   */
  where?: Prisma.OpeningTimesWhereInput
  /**
   * Limit how many OpeningTimes to update.
   */
  limit?: number
}

/**
 * OpeningTimes upsert
 */
export type OpeningTimesUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OpeningTimes
   */
  select?: Prisma.OpeningTimesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OpeningTimes
   */
  omit?: Prisma.OpeningTimesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OpeningTimesInclude<ExtArgs> | null
  /**
   * The filter to search for the OpeningTimes to update in case it exists.
   */
  where: Prisma.OpeningTimesWhereUniqueInput
  /**
   * In case the OpeningTimes found by the `where` argument doesn't exist, create a new OpeningTimes with this data.
   */
  create: Prisma.XOR<Prisma.OpeningTimesCreateInput, Prisma.OpeningTimesUncheckedCreateInput>
  /**
   * In case the OpeningTimes was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.OpeningTimesUpdateInput, Prisma.OpeningTimesUncheckedUpdateInput>
}

/**
 * OpeningTimes delete
 */
export type OpeningTimesDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OpeningTimes
   */
  select?: Prisma.OpeningTimesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OpeningTimes
   */
  omit?: Prisma.OpeningTimesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OpeningTimesInclude<ExtArgs> | null
  /**
   * Filter which OpeningTimes to delete.
   */
  where: Prisma.OpeningTimesWhereUniqueInput
}

/**
 * OpeningTimes deleteMany
 */
export type OpeningTimesDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which OpeningTimes to delete
   */
  where?: Prisma.OpeningTimesWhereInput
  /**
   * Limit how many OpeningTimes to delete.
   */
  limit?: number
}

/**
 * OpeningTimes.organizationConfiguration
 */
export type OpeningTimes$organizationConfigurationArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrganizationConfiguration
   */
  select?: Prisma.OrganizationConfigurationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrganizationConfiguration
   */
  omit?: Prisma.OrganizationConfigurationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationConfigurationInclude<ExtArgs> | null
  where?: Prisma.OrganizationConfigurationWhereInput
}

/**
 * OpeningTimes without action
 */
export type OpeningTimesDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OpeningTimes
   */
  select?: Prisma.OpeningTimesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OpeningTimes
   */
  omit?: Prisma.OpeningTimesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OpeningTimesInclude<ExtArgs> | null
}
