
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `ModifierGroup` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model ModifierGroup
 * 
 */
export type ModifierGroupModel = runtime.Types.Result.DefaultSelection<Prisma.$ModifierGroupPayload>

export type AggregateModifierGroup = {
  _count: ModifierGroupCountAggregateOutputType | null
  _avg: ModifierGroupAvgAggregateOutputType | null
  _sum: ModifierGroupSumAggregateOutputType | null
  _min: ModifierGroupMinAggregateOutputType | null
  _max: ModifierGroupMaxAggregateOutputType | null
}

export type ModifierGroupAvgAggregateOutputType = {
  selectMin: number | null
  selectMax: number | null
}

export type ModifierGroupSumAggregateOutputType = {
  selectMin: number | null
  selectMax: number | null
}

export type ModifierGroupMinAggregateOutputType = {
  id: string | null
  selectMin: number | null
  selectMax: number | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ModifierGroupMaxAggregateOutputType = {
  id: string | null
  selectMin: number | null
  selectMax: number | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ModifierGroupCountAggregateOutputType = {
  id: number
  selectMin: number
  selectMax: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type ModifierGroupAvgAggregateInputType = {
  selectMin?: true
  selectMax?: true
}

export type ModifierGroupSumAggregateInputType = {
  selectMin?: true
  selectMax?: true
}

export type ModifierGroupMinAggregateInputType = {
  id?: true
  selectMin?: true
  selectMax?: true
  createdAt?: true
  updatedAt?: true
}

export type ModifierGroupMaxAggregateInputType = {
  id?: true
  selectMin?: true
  selectMax?: true
  createdAt?: true
  updatedAt?: true
}

export type ModifierGroupCountAggregateInputType = {
  id?: true
  selectMin?: true
  selectMax?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type ModifierGroupAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ModifierGroup to aggregate.
   */
  where?: Prisma.ModifierGroupWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ModifierGroups to fetch.
   */
  orderBy?: Prisma.ModifierGroupOrderByWithRelationInput | Prisma.ModifierGroupOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ModifierGroupWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ModifierGroups from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ModifierGroups.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ModifierGroups
  **/
  _count?: true | ModifierGroupCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ModifierGroupAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ModifierGroupSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ModifierGroupMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ModifierGroupMaxAggregateInputType
}

export type GetModifierGroupAggregateType<T extends ModifierGroupAggregateArgs> = {
      [P in keyof T & keyof AggregateModifierGroup]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateModifierGroup[P]>
    : Prisma.GetScalarType<T[P], AggregateModifierGroup[P]>
}




export type ModifierGroupGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ModifierGroupWhereInput
  orderBy?: Prisma.ModifierGroupOrderByWithAggregationInput | Prisma.ModifierGroupOrderByWithAggregationInput[]
  by: Prisma.ModifierGroupScalarFieldEnum[] | Prisma.ModifierGroupScalarFieldEnum
  having?: Prisma.ModifierGroupScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ModifierGroupCountAggregateInputType | true
  _avg?: ModifierGroupAvgAggregateInputType
  _sum?: ModifierGroupSumAggregateInputType
  _min?: ModifierGroupMinAggregateInputType
  _max?: ModifierGroupMaxAggregateInputType
}

export type ModifierGroupGroupByOutputType = {
  id: string
  selectMin: number | null
  selectMax: number | null
  createdAt: Date
  updatedAt: Date
  _count: ModifierGroupCountAggregateOutputType | null
  _avg: ModifierGroupAvgAggregateOutputType | null
  _sum: ModifierGroupSumAggregateOutputType | null
  _min: ModifierGroupMinAggregateOutputType | null
  _max: ModifierGroupMaxAggregateOutputType | null
}

type GetModifierGroupGroupByPayload<T extends ModifierGroupGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ModifierGroupGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ModifierGroupGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ModifierGroupGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ModifierGroupGroupByOutputType[P]>
      }
    >
  > 



export type ModifierGroupWhereInput = {
  AND?: Prisma.ModifierGroupWhereInput | Prisma.ModifierGroupWhereInput[]
  OR?: Prisma.ModifierGroupWhereInput[]
  NOT?: Prisma.ModifierGroupWhereInput | Prisma.ModifierGroupWhereInput[]
  id?: Prisma.StringFilter<"ModifierGroup"> | string
  selectMin?: Prisma.IntNullableFilter<"ModifierGroup"> | number | null
  selectMax?: Prisma.IntNullableFilter<"ModifierGroup"> | number | null
  createdAt?: Prisma.DateTimeFilter<"ModifierGroup"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ModifierGroup"> | Date | string
  modifiers?: Prisma.ModifierListRelationFilter
  products?: Prisma.ProductListRelationFilter
  translations?: Prisma.ModifierGroupTranslationListRelationFilter
}

export type ModifierGroupOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  selectMin?: Prisma.SortOrderInput | Prisma.SortOrder
  selectMax?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  modifiers?: Prisma.ModifierOrderByRelationAggregateInput
  products?: Prisma.ProductOrderByRelationAggregateInput
  translations?: Prisma.ModifierGroupTranslationOrderByRelationAggregateInput
}

export type ModifierGroupWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.ModifierGroupWhereInput | Prisma.ModifierGroupWhereInput[]
  OR?: Prisma.ModifierGroupWhereInput[]
  NOT?: Prisma.ModifierGroupWhereInput | Prisma.ModifierGroupWhereInput[]
  selectMin?: Prisma.IntNullableFilter<"ModifierGroup"> | number | null
  selectMax?: Prisma.IntNullableFilter<"ModifierGroup"> | number | null
  createdAt?: Prisma.DateTimeFilter<"ModifierGroup"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ModifierGroup"> | Date | string
  modifiers?: Prisma.ModifierListRelationFilter
  products?: Prisma.ProductListRelationFilter
  translations?: Prisma.ModifierGroupTranslationListRelationFilter
}, "id">

export type ModifierGroupOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  selectMin?: Prisma.SortOrderInput | Prisma.SortOrder
  selectMax?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.ModifierGroupCountOrderByAggregateInput
  _avg?: Prisma.ModifierGroupAvgOrderByAggregateInput
  _max?: Prisma.ModifierGroupMaxOrderByAggregateInput
  _min?: Prisma.ModifierGroupMinOrderByAggregateInput
  _sum?: Prisma.ModifierGroupSumOrderByAggregateInput
}

export type ModifierGroupScalarWhereWithAggregatesInput = {
  AND?: Prisma.ModifierGroupScalarWhereWithAggregatesInput | Prisma.ModifierGroupScalarWhereWithAggregatesInput[]
  OR?: Prisma.ModifierGroupScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ModifierGroupScalarWhereWithAggregatesInput | Prisma.ModifierGroupScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"ModifierGroup"> | string
  selectMin?: Prisma.IntNullableWithAggregatesFilter<"ModifierGroup"> | number | null
  selectMax?: Prisma.IntNullableWithAggregatesFilter<"ModifierGroup"> | number | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"ModifierGroup"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"ModifierGroup"> | Date | string
}

export type ModifierGroupCreateInput = {
  id?: string
  selectMin?: number | null
  selectMax?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  modifiers?: Prisma.ModifierCreateNestedManyWithoutModifierGroupInput
  products?: Prisma.ProductCreateNestedManyWithoutModifierGroupsInput
  translations?: Prisma.ModifierGroupTranslationCreateNestedManyWithoutModifierGroupInput
}

export type ModifierGroupUncheckedCreateInput = {
  id?: string
  selectMin?: number | null
  selectMax?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  modifiers?: Prisma.ModifierUncheckedCreateNestedManyWithoutModifierGroupInput
  products?: Prisma.ProductUncheckedCreateNestedManyWithoutModifierGroupsInput
  translations?: Prisma.ModifierGroupTranslationUncheckedCreateNestedManyWithoutModifierGroupInput
}

export type ModifierGroupUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  selectMin?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  selectMax?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  modifiers?: Prisma.ModifierUpdateManyWithoutModifierGroupNestedInput
  products?: Prisma.ProductUpdateManyWithoutModifierGroupsNestedInput
  translations?: Prisma.ModifierGroupTranslationUpdateManyWithoutModifierGroupNestedInput
}

export type ModifierGroupUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  selectMin?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  selectMax?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  modifiers?: Prisma.ModifierUncheckedUpdateManyWithoutModifierGroupNestedInput
  products?: Prisma.ProductUncheckedUpdateManyWithoutModifierGroupsNestedInput
  translations?: Prisma.ModifierGroupTranslationUncheckedUpdateManyWithoutModifierGroupNestedInput
}

export type ModifierGroupCreateManyInput = {
  id?: string
  selectMin?: number | null
  selectMax?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type ModifierGroupUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  selectMin?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  selectMax?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ModifierGroupUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  selectMin?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  selectMax?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ModifierGroupListRelationFilter = {
  every?: Prisma.ModifierGroupWhereInput
  some?: Prisma.ModifierGroupWhereInput
  none?: Prisma.ModifierGroupWhereInput
}

export type ModifierGroupOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ModifierGroupCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  selectMin?: Prisma.SortOrder
  selectMax?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ModifierGroupAvgOrderByAggregateInput = {
  selectMin?: Prisma.SortOrder
  selectMax?: Prisma.SortOrder
}

export type ModifierGroupMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  selectMin?: Prisma.SortOrder
  selectMax?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ModifierGroupMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  selectMin?: Prisma.SortOrder
  selectMax?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ModifierGroupSumOrderByAggregateInput = {
  selectMin?: Prisma.SortOrder
  selectMax?: Prisma.SortOrder
}

export type ModifierGroupScalarRelationFilter = {
  is?: Prisma.ModifierGroupWhereInput
  isNot?: Prisma.ModifierGroupWhereInput
}

export type ModifierGroupCreateNestedManyWithoutProductsInput = {
  create?: Prisma.XOR<Prisma.ModifierGroupCreateWithoutProductsInput, Prisma.ModifierGroupUncheckedCreateWithoutProductsInput> | Prisma.ModifierGroupCreateWithoutProductsInput[] | Prisma.ModifierGroupUncheckedCreateWithoutProductsInput[]
  connectOrCreate?: Prisma.ModifierGroupCreateOrConnectWithoutProductsInput | Prisma.ModifierGroupCreateOrConnectWithoutProductsInput[]
  connect?: Prisma.ModifierGroupWhereUniqueInput | Prisma.ModifierGroupWhereUniqueInput[]
}

export type ModifierGroupUncheckedCreateNestedManyWithoutProductsInput = {
  create?: Prisma.XOR<Prisma.ModifierGroupCreateWithoutProductsInput, Prisma.ModifierGroupUncheckedCreateWithoutProductsInput> | Prisma.ModifierGroupCreateWithoutProductsInput[] | Prisma.ModifierGroupUncheckedCreateWithoutProductsInput[]
  connectOrCreate?: Prisma.ModifierGroupCreateOrConnectWithoutProductsInput | Prisma.ModifierGroupCreateOrConnectWithoutProductsInput[]
  connect?: Prisma.ModifierGroupWhereUniqueInput | Prisma.ModifierGroupWhereUniqueInput[]
}

export type ModifierGroupUpdateManyWithoutProductsNestedInput = {
  create?: Prisma.XOR<Prisma.ModifierGroupCreateWithoutProductsInput, Prisma.ModifierGroupUncheckedCreateWithoutProductsInput> | Prisma.ModifierGroupCreateWithoutProductsInput[] | Prisma.ModifierGroupUncheckedCreateWithoutProductsInput[]
  connectOrCreate?: Prisma.ModifierGroupCreateOrConnectWithoutProductsInput | Prisma.ModifierGroupCreateOrConnectWithoutProductsInput[]
  upsert?: Prisma.ModifierGroupUpsertWithWhereUniqueWithoutProductsInput | Prisma.ModifierGroupUpsertWithWhereUniqueWithoutProductsInput[]
  set?: Prisma.ModifierGroupWhereUniqueInput | Prisma.ModifierGroupWhereUniqueInput[]
  disconnect?: Prisma.ModifierGroupWhereUniqueInput | Prisma.ModifierGroupWhereUniqueInput[]
  delete?: Prisma.ModifierGroupWhereUniqueInput | Prisma.ModifierGroupWhereUniqueInput[]
  connect?: Prisma.ModifierGroupWhereUniqueInput | Prisma.ModifierGroupWhereUniqueInput[]
  update?: Prisma.ModifierGroupUpdateWithWhereUniqueWithoutProductsInput | Prisma.ModifierGroupUpdateWithWhereUniqueWithoutProductsInput[]
  updateMany?: Prisma.ModifierGroupUpdateManyWithWhereWithoutProductsInput | Prisma.ModifierGroupUpdateManyWithWhereWithoutProductsInput[]
  deleteMany?: Prisma.ModifierGroupScalarWhereInput | Prisma.ModifierGroupScalarWhereInput[]
}

export type ModifierGroupUncheckedUpdateManyWithoutProductsNestedInput = {
  create?: Prisma.XOR<Prisma.ModifierGroupCreateWithoutProductsInput, Prisma.ModifierGroupUncheckedCreateWithoutProductsInput> | Prisma.ModifierGroupCreateWithoutProductsInput[] | Prisma.ModifierGroupUncheckedCreateWithoutProductsInput[]
  connectOrCreate?: Prisma.ModifierGroupCreateOrConnectWithoutProductsInput | Prisma.ModifierGroupCreateOrConnectWithoutProductsInput[]
  upsert?: Prisma.ModifierGroupUpsertWithWhereUniqueWithoutProductsInput | Prisma.ModifierGroupUpsertWithWhereUniqueWithoutProductsInput[]
  set?: Prisma.ModifierGroupWhereUniqueInput | Prisma.ModifierGroupWhereUniqueInput[]
  disconnect?: Prisma.ModifierGroupWhereUniqueInput | Prisma.ModifierGroupWhereUniqueInput[]
  delete?: Prisma.ModifierGroupWhereUniqueInput | Prisma.ModifierGroupWhereUniqueInput[]
  connect?: Prisma.ModifierGroupWhereUniqueInput | Prisma.ModifierGroupWhereUniqueInput[]
  update?: Prisma.ModifierGroupUpdateWithWhereUniqueWithoutProductsInput | Prisma.ModifierGroupUpdateWithWhereUniqueWithoutProductsInput[]
  updateMany?: Prisma.ModifierGroupUpdateManyWithWhereWithoutProductsInput | Prisma.ModifierGroupUpdateManyWithWhereWithoutProductsInput[]
  deleteMany?: Prisma.ModifierGroupScalarWhereInput | Prisma.ModifierGroupScalarWhereInput[]
}

export type ModifierGroupCreateNestedOneWithoutTranslationsInput = {
  create?: Prisma.XOR<Prisma.ModifierGroupCreateWithoutTranslationsInput, Prisma.ModifierGroupUncheckedCreateWithoutTranslationsInput>
  connectOrCreate?: Prisma.ModifierGroupCreateOrConnectWithoutTranslationsInput
  connect?: Prisma.ModifierGroupWhereUniqueInput
}

export type ModifierGroupUpdateOneRequiredWithoutTranslationsNestedInput = {
  create?: Prisma.XOR<Prisma.ModifierGroupCreateWithoutTranslationsInput, Prisma.ModifierGroupUncheckedCreateWithoutTranslationsInput>
  connectOrCreate?: Prisma.ModifierGroupCreateOrConnectWithoutTranslationsInput
  upsert?: Prisma.ModifierGroupUpsertWithoutTranslationsInput
  connect?: Prisma.ModifierGroupWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ModifierGroupUpdateToOneWithWhereWithoutTranslationsInput, Prisma.ModifierGroupUpdateWithoutTranslationsInput>, Prisma.ModifierGroupUncheckedUpdateWithoutTranslationsInput>
}

export type ModifierGroupCreateNestedOneWithoutModifiersInput = {
  create?: Prisma.XOR<Prisma.ModifierGroupCreateWithoutModifiersInput, Prisma.ModifierGroupUncheckedCreateWithoutModifiersInput>
  connectOrCreate?: Prisma.ModifierGroupCreateOrConnectWithoutModifiersInput
  connect?: Prisma.ModifierGroupWhereUniqueInput
}

export type ModifierGroupUpdateOneRequiredWithoutModifiersNestedInput = {
  create?: Prisma.XOR<Prisma.ModifierGroupCreateWithoutModifiersInput, Prisma.ModifierGroupUncheckedCreateWithoutModifiersInput>
  connectOrCreate?: Prisma.ModifierGroupCreateOrConnectWithoutModifiersInput
  upsert?: Prisma.ModifierGroupUpsertWithoutModifiersInput
  connect?: Prisma.ModifierGroupWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ModifierGroupUpdateToOneWithWhereWithoutModifiersInput, Prisma.ModifierGroupUpdateWithoutModifiersInput>, Prisma.ModifierGroupUncheckedUpdateWithoutModifiersInput>
}

export type ModifierGroupCreateWithoutProductsInput = {
  id?: string
  selectMin?: number | null
  selectMax?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  modifiers?: Prisma.ModifierCreateNestedManyWithoutModifierGroupInput
  translations?: Prisma.ModifierGroupTranslationCreateNestedManyWithoutModifierGroupInput
}

export type ModifierGroupUncheckedCreateWithoutProductsInput = {
  id?: string
  selectMin?: number | null
  selectMax?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  modifiers?: Prisma.ModifierUncheckedCreateNestedManyWithoutModifierGroupInput
  translations?: Prisma.ModifierGroupTranslationUncheckedCreateNestedManyWithoutModifierGroupInput
}

export type ModifierGroupCreateOrConnectWithoutProductsInput = {
  where: Prisma.ModifierGroupWhereUniqueInput
  create: Prisma.XOR<Prisma.ModifierGroupCreateWithoutProductsInput, Prisma.ModifierGroupUncheckedCreateWithoutProductsInput>
}

export type ModifierGroupUpsertWithWhereUniqueWithoutProductsInput = {
  where: Prisma.ModifierGroupWhereUniqueInput
  update: Prisma.XOR<Prisma.ModifierGroupUpdateWithoutProductsInput, Prisma.ModifierGroupUncheckedUpdateWithoutProductsInput>
  create: Prisma.XOR<Prisma.ModifierGroupCreateWithoutProductsInput, Prisma.ModifierGroupUncheckedCreateWithoutProductsInput>
}

export type ModifierGroupUpdateWithWhereUniqueWithoutProductsInput = {
  where: Prisma.ModifierGroupWhereUniqueInput
  data: Prisma.XOR<Prisma.ModifierGroupUpdateWithoutProductsInput, Prisma.ModifierGroupUncheckedUpdateWithoutProductsInput>
}

export type ModifierGroupUpdateManyWithWhereWithoutProductsInput = {
  where: Prisma.ModifierGroupScalarWhereInput
  data: Prisma.XOR<Prisma.ModifierGroupUpdateManyMutationInput, Prisma.ModifierGroupUncheckedUpdateManyWithoutProductsInput>
}

export type ModifierGroupScalarWhereInput = {
  AND?: Prisma.ModifierGroupScalarWhereInput | Prisma.ModifierGroupScalarWhereInput[]
  OR?: Prisma.ModifierGroupScalarWhereInput[]
  NOT?: Prisma.ModifierGroupScalarWhereInput | Prisma.ModifierGroupScalarWhereInput[]
  id?: Prisma.StringFilter<"ModifierGroup"> | string
  selectMin?: Prisma.IntNullableFilter<"ModifierGroup"> | number | null
  selectMax?: Prisma.IntNullableFilter<"ModifierGroup"> | number | null
  createdAt?: Prisma.DateTimeFilter<"ModifierGroup"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ModifierGroup"> | Date | string
}

export type ModifierGroupCreateWithoutTranslationsInput = {
  id?: string
  selectMin?: number | null
  selectMax?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  modifiers?: Prisma.ModifierCreateNestedManyWithoutModifierGroupInput
  products?: Prisma.ProductCreateNestedManyWithoutModifierGroupsInput
}

export type ModifierGroupUncheckedCreateWithoutTranslationsInput = {
  id?: string
  selectMin?: number | null
  selectMax?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  modifiers?: Prisma.ModifierUncheckedCreateNestedManyWithoutModifierGroupInput
  products?: Prisma.ProductUncheckedCreateNestedManyWithoutModifierGroupsInput
}

export type ModifierGroupCreateOrConnectWithoutTranslationsInput = {
  where: Prisma.ModifierGroupWhereUniqueInput
  create: Prisma.XOR<Prisma.ModifierGroupCreateWithoutTranslationsInput, Prisma.ModifierGroupUncheckedCreateWithoutTranslationsInput>
}

export type ModifierGroupUpsertWithoutTranslationsInput = {
  update: Prisma.XOR<Prisma.ModifierGroupUpdateWithoutTranslationsInput, Prisma.ModifierGroupUncheckedUpdateWithoutTranslationsInput>
  create: Prisma.XOR<Prisma.ModifierGroupCreateWithoutTranslationsInput, Prisma.ModifierGroupUncheckedCreateWithoutTranslationsInput>
  where?: Prisma.ModifierGroupWhereInput
}

export type ModifierGroupUpdateToOneWithWhereWithoutTranslationsInput = {
  where?: Prisma.ModifierGroupWhereInput
  data: Prisma.XOR<Prisma.ModifierGroupUpdateWithoutTranslationsInput, Prisma.ModifierGroupUncheckedUpdateWithoutTranslationsInput>
}

export type ModifierGroupUpdateWithoutTranslationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  selectMin?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  selectMax?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  modifiers?: Prisma.ModifierUpdateManyWithoutModifierGroupNestedInput
  products?: Prisma.ProductUpdateManyWithoutModifierGroupsNestedInput
}

export type ModifierGroupUncheckedUpdateWithoutTranslationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  selectMin?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  selectMax?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  modifiers?: Prisma.ModifierUncheckedUpdateManyWithoutModifierGroupNestedInput
  products?: Prisma.ProductUncheckedUpdateManyWithoutModifierGroupsNestedInput
}

export type ModifierGroupCreateWithoutModifiersInput = {
  id?: string
  selectMin?: number | null
  selectMax?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  products?: Prisma.ProductCreateNestedManyWithoutModifierGroupsInput
  translations?: Prisma.ModifierGroupTranslationCreateNestedManyWithoutModifierGroupInput
}

export type ModifierGroupUncheckedCreateWithoutModifiersInput = {
  id?: string
  selectMin?: number | null
  selectMax?: number | null
  createdAt?: Date | string
  updatedAt?: Date | string
  products?: Prisma.ProductUncheckedCreateNestedManyWithoutModifierGroupsInput
  translations?: Prisma.ModifierGroupTranslationUncheckedCreateNestedManyWithoutModifierGroupInput
}

export type ModifierGroupCreateOrConnectWithoutModifiersInput = {
  where: Prisma.ModifierGroupWhereUniqueInput
  create: Prisma.XOR<Prisma.ModifierGroupCreateWithoutModifiersInput, Prisma.ModifierGroupUncheckedCreateWithoutModifiersInput>
}

export type ModifierGroupUpsertWithoutModifiersInput = {
  update: Prisma.XOR<Prisma.ModifierGroupUpdateWithoutModifiersInput, Prisma.ModifierGroupUncheckedUpdateWithoutModifiersInput>
  create: Prisma.XOR<Prisma.ModifierGroupCreateWithoutModifiersInput, Prisma.ModifierGroupUncheckedCreateWithoutModifiersInput>
  where?: Prisma.ModifierGroupWhereInput
}

export type ModifierGroupUpdateToOneWithWhereWithoutModifiersInput = {
  where?: Prisma.ModifierGroupWhereInput
  data: Prisma.XOR<Prisma.ModifierGroupUpdateWithoutModifiersInput, Prisma.ModifierGroupUncheckedUpdateWithoutModifiersInput>
}

export type ModifierGroupUpdateWithoutModifiersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  selectMin?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  selectMax?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  products?: Prisma.ProductUpdateManyWithoutModifierGroupsNestedInput
  translations?: Prisma.ModifierGroupTranslationUpdateManyWithoutModifierGroupNestedInput
}

export type ModifierGroupUncheckedUpdateWithoutModifiersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  selectMin?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  selectMax?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  products?: Prisma.ProductUncheckedUpdateManyWithoutModifierGroupsNestedInput
  translations?: Prisma.ModifierGroupTranslationUncheckedUpdateManyWithoutModifierGroupNestedInput
}

export type ModifierGroupUpdateWithoutProductsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  selectMin?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  selectMax?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  modifiers?: Prisma.ModifierUpdateManyWithoutModifierGroupNestedInput
  translations?: Prisma.ModifierGroupTranslationUpdateManyWithoutModifierGroupNestedInput
}

export type ModifierGroupUncheckedUpdateWithoutProductsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  selectMin?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  selectMax?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  modifiers?: Prisma.ModifierUncheckedUpdateManyWithoutModifierGroupNestedInput
  translations?: Prisma.ModifierGroupTranslationUncheckedUpdateManyWithoutModifierGroupNestedInput
}

export type ModifierGroupUncheckedUpdateManyWithoutProductsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  selectMin?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  selectMax?: Prisma.NullableIntFieldUpdateOperationsInput | number | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type ModifierGroupCountOutputType
 */

export type ModifierGroupCountOutputType = {
  modifiers: number
  products: number
  translations: number
}

export type ModifierGroupCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  modifiers?: boolean | ModifierGroupCountOutputTypeCountModifiersArgs
  products?: boolean | ModifierGroupCountOutputTypeCountProductsArgs
  translations?: boolean | ModifierGroupCountOutputTypeCountTranslationsArgs
}

/**
 * ModifierGroupCountOutputType without action
 */
export type ModifierGroupCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModifierGroupCountOutputType
   */
  select?: Prisma.ModifierGroupCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ModifierGroupCountOutputType without action
 */
export type ModifierGroupCountOutputTypeCountModifiersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ModifierWhereInput
}

/**
 * ModifierGroupCountOutputType without action
 */
export type ModifierGroupCountOutputTypeCountProductsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProductWhereInput
}

/**
 * ModifierGroupCountOutputType without action
 */
export type ModifierGroupCountOutputTypeCountTranslationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ModifierGroupTranslationWhereInput
}


export type ModifierGroupSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  selectMin?: boolean
  selectMax?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  modifiers?: boolean | Prisma.ModifierGroup$modifiersArgs<ExtArgs>
  products?: boolean | Prisma.ModifierGroup$productsArgs<ExtArgs>
  translations?: boolean | Prisma.ModifierGroup$translationsArgs<ExtArgs>
  _count?: boolean | Prisma.ModifierGroupCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["modifierGroup"]>

export type ModifierGroupSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  selectMin?: boolean
  selectMax?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["modifierGroup"]>

export type ModifierGroupSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  selectMin?: boolean
  selectMax?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}, ExtArgs["result"]["modifierGroup"]>

export type ModifierGroupSelectScalar = {
  id?: boolean
  selectMin?: boolean
  selectMax?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type ModifierGroupOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "selectMin" | "selectMax" | "createdAt" | "updatedAt", ExtArgs["result"]["modifierGroup"]>
export type ModifierGroupInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  modifiers?: boolean | Prisma.ModifierGroup$modifiersArgs<ExtArgs>
  products?: boolean | Prisma.ModifierGroup$productsArgs<ExtArgs>
  translations?: boolean | Prisma.ModifierGroup$translationsArgs<ExtArgs>
  _count?: boolean | Prisma.ModifierGroupCountOutputTypeDefaultArgs<ExtArgs>
}
export type ModifierGroupIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type ModifierGroupIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $ModifierGroupPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ModifierGroup"
  objects: {
    modifiers: Prisma.$ModifierPayload<ExtArgs>[]
    products: Prisma.$ProductPayload<ExtArgs>[]
    translations: Prisma.$ModifierGroupTranslationPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    selectMin: number | null
    selectMax: number | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["modifierGroup"]>
  composites: {}
}

export type ModifierGroupGetPayload<S extends boolean | null | undefined | ModifierGroupDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ModifierGroupPayload, S>

export type ModifierGroupCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ModifierGroupFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ModifierGroupCountAggregateInputType | true
  }

export interface ModifierGroupDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ModifierGroup'], meta: { name: 'ModifierGroup' } }
  /**
   * Find zero or one ModifierGroup that matches the filter.
   * @param {ModifierGroupFindUniqueArgs} args - Arguments to find a ModifierGroup
   * @example
   * // Get one ModifierGroup
   * const modifierGroup = await prisma.modifierGroup.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ModifierGroupFindUniqueArgs>(args: Prisma.SelectSubset<T, ModifierGroupFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ModifierGroupClient<runtime.Types.Result.GetResult<Prisma.$ModifierGroupPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one ModifierGroup that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ModifierGroupFindUniqueOrThrowArgs} args - Arguments to find a ModifierGroup
   * @example
   * // Get one ModifierGroup
   * const modifierGroup = await prisma.modifierGroup.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ModifierGroupFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ModifierGroupFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ModifierGroupClient<runtime.Types.Result.GetResult<Prisma.$ModifierGroupPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ModifierGroup that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ModifierGroupFindFirstArgs} args - Arguments to find a ModifierGroup
   * @example
   * // Get one ModifierGroup
   * const modifierGroup = await prisma.modifierGroup.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ModifierGroupFindFirstArgs>(args?: Prisma.SelectSubset<T, ModifierGroupFindFirstArgs<ExtArgs>>): Prisma.Prisma__ModifierGroupClient<runtime.Types.Result.GetResult<Prisma.$ModifierGroupPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ModifierGroup that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ModifierGroupFindFirstOrThrowArgs} args - Arguments to find a ModifierGroup
   * @example
   * // Get one ModifierGroup
   * const modifierGroup = await prisma.modifierGroup.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ModifierGroupFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ModifierGroupFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ModifierGroupClient<runtime.Types.Result.GetResult<Prisma.$ModifierGroupPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more ModifierGroups that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ModifierGroupFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all ModifierGroups
   * const modifierGroups = await prisma.modifierGroup.findMany()
   * 
   * // Get first 10 ModifierGroups
   * const modifierGroups = await prisma.modifierGroup.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const modifierGroupWithIdOnly = await prisma.modifierGroup.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ModifierGroupFindManyArgs>(args?: Prisma.SelectSubset<T, ModifierGroupFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ModifierGroupPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a ModifierGroup.
   * @param {ModifierGroupCreateArgs} args - Arguments to create a ModifierGroup.
   * @example
   * // Create one ModifierGroup
   * const ModifierGroup = await prisma.modifierGroup.create({
   *   data: {
   *     // ... data to create a ModifierGroup
   *   }
   * })
   * 
   */
  create<T extends ModifierGroupCreateArgs>(args: Prisma.SelectSubset<T, ModifierGroupCreateArgs<ExtArgs>>): Prisma.Prisma__ModifierGroupClient<runtime.Types.Result.GetResult<Prisma.$ModifierGroupPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many ModifierGroups.
   * @param {ModifierGroupCreateManyArgs} args - Arguments to create many ModifierGroups.
   * @example
   * // Create many ModifierGroups
   * const modifierGroup = await prisma.modifierGroup.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ModifierGroupCreateManyArgs>(args?: Prisma.SelectSubset<T, ModifierGroupCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many ModifierGroups and returns the data saved in the database.
   * @param {ModifierGroupCreateManyAndReturnArgs} args - Arguments to create many ModifierGroups.
   * @example
   * // Create many ModifierGroups
   * const modifierGroup = await prisma.modifierGroup.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many ModifierGroups and only return the `id`
   * const modifierGroupWithIdOnly = await prisma.modifierGroup.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ModifierGroupCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ModifierGroupCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ModifierGroupPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a ModifierGroup.
   * @param {ModifierGroupDeleteArgs} args - Arguments to delete one ModifierGroup.
   * @example
   * // Delete one ModifierGroup
   * const ModifierGroup = await prisma.modifierGroup.delete({
   *   where: {
   *     // ... filter to delete one ModifierGroup
   *   }
   * })
   * 
   */
  delete<T extends ModifierGroupDeleteArgs>(args: Prisma.SelectSubset<T, ModifierGroupDeleteArgs<ExtArgs>>): Prisma.Prisma__ModifierGroupClient<runtime.Types.Result.GetResult<Prisma.$ModifierGroupPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one ModifierGroup.
   * @param {ModifierGroupUpdateArgs} args - Arguments to update one ModifierGroup.
   * @example
   * // Update one ModifierGroup
   * const modifierGroup = await prisma.modifierGroup.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ModifierGroupUpdateArgs>(args: Prisma.SelectSubset<T, ModifierGroupUpdateArgs<ExtArgs>>): Prisma.Prisma__ModifierGroupClient<runtime.Types.Result.GetResult<Prisma.$ModifierGroupPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more ModifierGroups.
   * @param {ModifierGroupDeleteManyArgs} args - Arguments to filter ModifierGroups to delete.
   * @example
   * // Delete a few ModifierGroups
   * const { count } = await prisma.modifierGroup.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ModifierGroupDeleteManyArgs>(args?: Prisma.SelectSubset<T, ModifierGroupDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ModifierGroups.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ModifierGroupUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many ModifierGroups
   * const modifierGroup = await prisma.modifierGroup.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ModifierGroupUpdateManyArgs>(args: Prisma.SelectSubset<T, ModifierGroupUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ModifierGroups and returns the data updated in the database.
   * @param {ModifierGroupUpdateManyAndReturnArgs} args - Arguments to update many ModifierGroups.
   * @example
   * // Update many ModifierGroups
   * const modifierGroup = await prisma.modifierGroup.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more ModifierGroups and only return the `id`
   * const modifierGroupWithIdOnly = await prisma.modifierGroup.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ModifierGroupUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ModifierGroupUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ModifierGroupPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one ModifierGroup.
   * @param {ModifierGroupUpsertArgs} args - Arguments to update or create a ModifierGroup.
   * @example
   * // Update or create a ModifierGroup
   * const modifierGroup = await prisma.modifierGroup.upsert({
   *   create: {
   *     // ... data to create a ModifierGroup
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the ModifierGroup we want to update
   *   }
   * })
   */
  upsert<T extends ModifierGroupUpsertArgs>(args: Prisma.SelectSubset<T, ModifierGroupUpsertArgs<ExtArgs>>): Prisma.Prisma__ModifierGroupClient<runtime.Types.Result.GetResult<Prisma.$ModifierGroupPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of ModifierGroups.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ModifierGroupCountArgs} args - Arguments to filter ModifierGroups to count.
   * @example
   * // Count the number of ModifierGroups
   * const count = await prisma.modifierGroup.count({
   *   where: {
   *     // ... the filter for the ModifierGroups we want to count
   *   }
   * })
  **/
  count<T extends ModifierGroupCountArgs>(
    args?: Prisma.Subset<T, ModifierGroupCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ModifierGroupCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a ModifierGroup.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ModifierGroupAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ModifierGroupAggregateArgs>(args: Prisma.Subset<T, ModifierGroupAggregateArgs>): Prisma.PrismaPromise<GetModifierGroupAggregateType<T>>

  /**
   * Group by ModifierGroup.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ModifierGroupGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ModifierGroupGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ModifierGroupGroupByArgs['orderBy'] }
      : { orderBy?: ModifierGroupGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ModifierGroupGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetModifierGroupGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ModifierGroup model
 */
readonly fields: ModifierGroupFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ModifierGroup.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ModifierGroupClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  modifiers<T extends Prisma.ModifierGroup$modifiersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ModifierGroup$modifiersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ModifierPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  products<T extends Prisma.ModifierGroup$productsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ModifierGroup$productsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  translations<T extends Prisma.ModifierGroup$translationsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ModifierGroup$translationsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ModifierGroupTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ModifierGroup model
 */
export interface ModifierGroupFieldRefs {
  readonly id: Prisma.FieldRef<"ModifierGroup", 'String'>
  readonly selectMin: Prisma.FieldRef<"ModifierGroup", 'Int'>
  readonly selectMax: Prisma.FieldRef<"ModifierGroup", 'Int'>
  readonly createdAt: Prisma.FieldRef<"ModifierGroup", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"ModifierGroup", 'DateTime'>
}
    

// Custom InputTypes
/**
 * ModifierGroup findUnique
 */
export type ModifierGroupFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModifierGroup
   */
  select?: Prisma.ModifierGroupSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ModifierGroup
   */
  omit?: Prisma.ModifierGroupOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModifierGroupInclude<ExtArgs> | null
  /**
   * Filter, which ModifierGroup to fetch.
   */
  where: Prisma.ModifierGroupWhereUniqueInput
}

/**
 * ModifierGroup findUniqueOrThrow
 */
export type ModifierGroupFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModifierGroup
   */
  select?: Prisma.ModifierGroupSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ModifierGroup
   */
  omit?: Prisma.ModifierGroupOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModifierGroupInclude<ExtArgs> | null
  /**
   * Filter, which ModifierGroup to fetch.
   */
  where: Prisma.ModifierGroupWhereUniqueInput
}

/**
 * ModifierGroup findFirst
 */
export type ModifierGroupFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModifierGroup
   */
  select?: Prisma.ModifierGroupSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ModifierGroup
   */
  omit?: Prisma.ModifierGroupOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModifierGroupInclude<ExtArgs> | null
  /**
   * Filter, which ModifierGroup to fetch.
   */
  where?: Prisma.ModifierGroupWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ModifierGroups to fetch.
   */
  orderBy?: Prisma.ModifierGroupOrderByWithRelationInput | Prisma.ModifierGroupOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ModifierGroups.
   */
  cursor?: Prisma.ModifierGroupWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ModifierGroups from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ModifierGroups.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ModifierGroups.
   */
  distinct?: Prisma.ModifierGroupScalarFieldEnum | Prisma.ModifierGroupScalarFieldEnum[]
}

/**
 * ModifierGroup findFirstOrThrow
 */
export type ModifierGroupFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModifierGroup
   */
  select?: Prisma.ModifierGroupSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ModifierGroup
   */
  omit?: Prisma.ModifierGroupOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModifierGroupInclude<ExtArgs> | null
  /**
   * Filter, which ModifierGroup to fetch.
   */
  where?: Prisma.ModifierGroupWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ModifierGroups to fetch.
   */
  orderBy?: Prisma.ModifierGroupOrderByWithRelationInput | Prisma.ModifierGroupOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ModifierGroups.
   */
  cursor?: Prisma.ModifierGroupWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ModifierGroups from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ModifierGroups.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ModifierGroups.
   */
  distinct?: Prisma.ModifierGroupScalarFieldEnum | Prisma.ModifierGroupScalarFieldEnum[]
}

/**
 * ModifierGroup findMany
 */
export type ModifierGroupFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModifierGroup
   */
  select?: Prisma.ModifierGroupSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ModifierGroup
   */
  omit?: Prisma.ModifierGroupOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModifierGroupInclude<ExtArgs> | null
  /**
   * Filter, which ModifierGroups to fetch.
   */
  where?: Prisma.ModifierGroupWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ModifierGroups to fetch.
   */
  orderBy?: Prisma.ModifierGroupOrderByWithRelationInput | Prisma.ModifierGroupOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ModifierGroups.
   */
  cursor?: Prisma.ModifierGroupWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ModifierGroups from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ModifierGroups.
   */
  skip?: number
  distinct?: Prisma.ModifierGroupScalarFieldEnum | Prisma.ModifierGroupScalarFieldEnum[]
}

/**
 * ModifierGroup create
 */
export type ModifierGroupCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModifierGroup
   */
  select?: Prisma.ModifierGroupSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ModifierGroup
   */
  omit?: Prisma.ModifierGroupOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModifierGroupInclude<ExtArgs> | null
  /**
   * The data needed to create a ModifierGroup.
   */
  data?: Prisma.XOR<Prisma.ModifierGroupCreateInput, Prisma.ModifierGroupUncheckedCreateInput>
}

/**
 * ModifierGroup createMany
 */
export type ModifierGroupCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many ModifierGroups.
   */
  data: Prisma.ModifierGroupCreateManyInput | Prisma.ModifierGroupCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ModifierGroup createManyAndReturn
 */
export type ModifierGroupCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModifierGroup
   */
  select?: Prisma.ModifierGroupSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ModifierGroup
   */
  omit?: Prisma.ModifierGroupOmit<ExtArgs> | null
  /**
   * The data used to create many ModifierGroups.
   */
  data: Prisma.ModifierGroupCreateManyInput | Prisma.ModifierGroupCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ModifierGroup update
 */
export type ModifierGroupUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModifierGroup
   */
  select?: Prisma.ModifierGroupSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ModifierGroup
   */
  omit?: Prisma.ModifierGroupOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModifierGroupInclude<ExtArgs> | null
  /**
   * The data needed to update a ModifierGroup.
   */
  data: Prisma.XOR<Prisma.ModifierGroupUpdateInput, Prisma.ModifierGroupUncheckedUpdateInput>
  /**
   * Choose, which ModifierGroup to update.
   */
  where: Prisma.ModifierGroupWhereUniqueInput
}

/**
 * ModifierGroup updateMany
 */
export type ModifierGroupUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ModifierGroups.
   */
  data: Prisma.XOR<Prisma.ModifierGroupUpdateManyMutationInput, Prisma.ModifierGroupUncheckedUpdateManyInput>
  /**
   * Filter which ModifierGroups to update
   */
  where?: Prisma.ModifierGroupWhereInput
  /**
   * Limit how many ModifierGroups to update.
   */
  limit?: number
}

/**
 * ModifierGroup updateManyAndReturn
 */
export type ModifierGroupUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModifierGroup
   */
  select?: Prisma.ModifierGroupSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ModifierGroup
   */
  omit?: Prisma.ModifierGroupOmit<ExtArgs> | null
  /**
   * The data used to update ModifierGroups.
   */
  data: Prisma.XOR<Prisma.ModifierGroupUpdateManyMutationInput, Prisma.ModifierGroupUncheckedUpdateManyInput>
  /**
   * Filter which ModifierGroups to update
   */
  where?: Prisma.ModifierGroupWhereInput
  /**
   * Limit how many ModifierGroups to update.
   */
  limit?: number
}

/**
 * ModifierGroup upsert
 */
export type ModifierGroupUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModifierGroup
   */
  select?: Prisma.ModifierGroupSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ModifierGroup
   */
  omit?: Prisma.ModifierGroupOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModifierGroupInclude<ExtArgs> | null
  /**
   * The filter to search for the ModifierGroup to update in case it exists.
   */
  where: Prisma.ModifierGroupWhereUniqueInput
  /**
   * In case the ModifierGroup found by the `where` argument doesn't exist, create a new ModifierGroup with this data.
   */
  create: Prisma.XOR<Prisma.ModifierGroupCreateInput, Prisma.ModifierGroupUncheckedCreateInput>
  /**
   * In case the ModifierGroup was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ModifierGroupUpdateInput, Prisma.ModifierGroupUncheckedUpdateInput>
}

/**
 * ModifierGroup delete
 */
export type ModifierGroupDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModifierGroup
   */
  select?: Prisma.ModifierGroupSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ModifierGroup
   */
  omit?: Prisma.ModifierGroupOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModifierGroupInclude<ExtArgs> | null
  /**
   * Filter which ModifierGroup to delete.
   */
  where: Prisma.ModifierGroupWhereUniqueInput
}

/**
 * ModifierGroup deleteMany
 */
export type ModifierGroupDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ModifierGroups to delete
   */
  where?: Prisma.ModifierGroupWhereInput
  /**
   * Limit how many ModifierGroups to delete.
   */
  limit?: number
}

/**
 * ModifierGroup.modifiers
 */
export type ModifierGroup$modifiersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Modifier
   */
  select?: Prisma.ModifierSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Modifier
   */
  omit?: Prisma.ModifierOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModifierInclude<ExtArgs> | null
  where?: Prisma.ModifierWhereInput
  orderBy?: Prisma.ModifierOrderByWithRelationInput | Prisma.ModifierOrderByWithRelationInput[]
  cursor?: Prisma.ModifierWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ModifierScalarFieldEnum | Prisma.ModifierScalarFieldEnum[]
}

/**
 * ModifierGroup.products
 */
export type ModifierGroup$productsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Product
   */
  select?: Prisma.ProductSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Product
   */
  omit?: Prisma.ProductOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductInclude<ExtArgs> | null
  where?: Prisma.ProductWhereInput
  orderBy?: Prisma.ProductOrderByWithRelationInput | Prisma.ProductOrderByWithRelationInput[]
  cursor?: Prisma.ProductWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ProductScalarFieldEnum | Prisma.ProductScalarFieldEnum[]
}

/**
 * ModifierGroup.translations
 */
export type ModifierGroup$translationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModifierGroupTranslation
   */
  select?: Prisma.ModifierGroupTranslationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ModifierGroupTranslation
   */
  omit?: Prisma.ModifierGroupTranslationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModifierGroupTranslationInclude<ExtArgs> | null
  where?: Prisma.ModifierGroupTranslationWhereInput
  orderBy?: Prisma.ModifierGroupTranslationOrderByWithRelationInput | Prisma.ModifierGroupTranslationOrderByWithRelationInput[]
  cursor?: Prisma.ModifierGroupTranslationWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ModifierGroupTranslationScalarFieldEnum | Prisma.ModifierGroupTranslationScalarFieldEnum[]
}

/**
 * ModifierGroup without action
 */
export type ModifierGroupDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ModifierGroup
   */
  select?: Prisma.ModifierGroupSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ModifierGroup
   */
  omit?: Prisma.ModifierGroupOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ModifierGroupInclude<ExtArgs> | null
}
