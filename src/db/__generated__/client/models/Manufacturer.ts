
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `Manufacturer` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Manufacturer
 * 
 */
export type ManufacturerModel = runtime.Types.Result.DefaultSelection<Prisma.$ManufacturerPayload>

export type AggregateManufacturer = {
  _count: ManufacturerCountAggregateOutputType | null
  _min: ManufacturerMinAggregateOutputType | null
  _max: ManufacturerMaxAggregateOutputType | null
}

export type ManufacturerMinAggregateOutputType = {
  id: string | null
  name: string | null
  logoId: string | null
  organizationId: string | null
  createdAt: Date | null
  createdBy: string | null
  updatedAt: Date | null
  updatedBy: string | null
  deletedAt: Date | null
  deletedBy: string | null
}

export type ManufacturerMaxAggregateOutputType = {
  id: string | null
  name: string | null
  logoId: string | null
  organizationId: string | null
  createdAt: Date | null
  createdBy: string | null
  updatedAt: Date | null
  updatedBy: string | null
  deletedAt: Date | null
  deletedBy: string | null
}

export type ManufacturerCountAggregateOutputType = {
  id: number
  name: number
  logoId: number
  organizationId: number
  createdAt: number
  createdBy: number
  updatedAt: number
  updatedBy: number
  deletedAt: number
  deletedBy: number
  _all: number
}


export type ManufacturerMinAggregateInputType = {
  id?: true
  name?: true
  logoId?: true
  organizationId?: true
  createdAt?: true
  createdBy?: true
  updatedAt?: true
  updatedBy?: true
  deletedAt?: true
  deletedBy?: true
}

export type ManufacturerMaxAggregateInputType = {
  id?: true
  name?: true
  logoId?: true
  organizationId?: true
  createdAt?: true
  createdBy?: true
  updatedAt?: true
  updatedBy?: true
  deletedAt?: true
  deletedBy?: true
}

export type ManufacturerCountAggregateInputType = {
  id?: true
  name?: true
  logoId?: true
  organizationId?: true
  createdAt?: true
  createdBy?: true
  updatedAt?: true
  updatedBy?: true
  deletedAt?: true
  deletedBy?: true
  _all?: true
}

export type ManufacturerAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Manufacturer to aggregate.
   */
  where?: Prisma.ManufacturerWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Manufacturers to fetch.
   */
  orderBy?: Prisma.ManufacturerOrderByWithRelationInput | Prisma.ManufacturerOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ManufacturerWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Manufacturers from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Manufacturers.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Manufacturers
  **/
  _count?: true | ManufacturerCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ManufacturerMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ManufacturerMaxAggregateInputType
}

export type GetManufacturerAggregateType<T extends ManufacturerAggregateArgs> = {
      [P in keyof T & keyof AggregateManufacturer]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateManufacturer[P]>
    : Prisma.GetScalarType<T[P], AggregateManufacturer[P]>
}




export type ManufacturerGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ManufacturerWhereInput
  orderBy?: Prisma.ManufacturerOrderByWithAggregationInput | Prisma.ManufacturerOrderByWithAggregationInput[]
  by: Prisma.ManufacturerScalarFieldEnum[] | Prisma.ManufacturerScalarFieldEnum
  having?: Prisma.ManufacturerScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ManufacturerCountAggregateInputType | true
  _min?: ManufacturerMinAggregateInputType
  _max?: ManufacturerMaxAggregateInputType
}

export type ManufacturerGroupByOutputType = {
  id: string
  name: string
  logoId: string | null
  organizationId: string
  createdAt: Date
  createdBy: string | null
  updatedAt: Date
  updatedBy: string | null
  deletedAt: Date | null
  deletedBy: string | null
  _count: ManufacturerCountAggregateOutputType | null
  _min: ManufacturerMinAggregateOutputType | null
  _max: ManufacturerMaxAggregateOutputType | null
}

type GetManufacturerGroupByPayload<T extends ManufacturerGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ManufacturerGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ManufacturerGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ManufacturerGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ManufacturerGroupByOutputType[P]>
      }
    >
  > 



export type ManufacturerWhereInput = {
  AND?: Prisma.ManufacturerWhereInput | Prisma.ManufacturerWhereInput[]
  OR?: Prisma.ManufacturerWhereInput[]
  NOT?: Prisma.ManufacturerWhereInput | Prisma.ManufacturerWhereInput[]
  id?: Prisma.StringFilter<"Manufacturer"> | string
  name?: Prisma.StringFilter<"Manufacturer"> | string
  logoId?: Prisma.StringNullableFilter<"Manufacturer"> | string | null
  organizationId?: Prisma.StringFilter<"Manufacturer"> | string
  createdAt?: Prisma.DateTimeFilter<"Manufacturer"> | Date | string
  createdBy?: Prisma.StringNullableFilter<"Manufacturer"> | string | null
  updatedAt?: Prisma.DateTimeFilter<"Manufacturer"> | Date | string
  updatedBy?: Prisma.StringNullableFilter<"Manufacturer"> | string | null
  deletedAt?: Prisma.DateTimeNullableFilter<"Manufacturer"> | Date | string | null
  deletedBy?: Prisma.StringNullableFilter<"Manufacturer"> | string | null
  logo?: Prisma.XOR<Prisma.FileNullableScalarRelationFilter, Prisma.FileWhereInput> | null
  organization?: Prisma.XOR<Prisma.OrganizationScalarRelationFilter, Prisma.OrganizationWhereInput>
  products?: Prisma.ProductListRelationFilter
  translations?: Prisma.ManufacturerTranslationListRelationFilter
}

export type ManufacturerOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  logoId?: Prisma.SortOrderInput | Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  createdBy?: Prisma.SortOrderInput | Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  updatedBy?: Prisma.SortOrderInput | Prisma.SortOrder
  deletedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  deletedBy?: Prisma.SortOrderInput | Prisma.SortOrder
  logo?: Prisma.FileOrderByWithRelationInput
  organization?: Prisma.OrganizationOrderByWithRelationInput
  products?: Prisma.ProductOrderByRelationAggregateInput
  translations?: Prisma.ManufacturerTranslationOrderByRelationAggregateInput
}

export type ManufacturerWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  logoId?: string
  AND?: Prisma.ManufacturerWhereInput | Prisma.ManufacturerWhereInput[]
  OR?: Prisma.ManufacturerWhereInput[]
  NOT?: Prisma.ManufacturerWhereInput | Prisma.ManufacturerWhereInput[]
  name?: Prisma.StringFilter<"Manufacturer"> | string
  organizationId?: Prisma.StringFilter<"Manufacturer"> | string
  createdAt?: Prisma.DateTimeFilter<"Manufacturer"> | Date | string
  createdBy?: Prisma.StringNullableFilter<"Manufacturer"> | string | null
  updatedAt?: Prisma.DateTimeFilter<"Manufacturer"> | Date | string
  updatedBy?: Prisma.StringNullableFilter<"Manufacturer"> | string | null
  deletedAt?: Prisma.DateTimeNullableFilter<"Manufacturer"> | Date | string | null
  deletedBy?: Prisma.StringNullableFilter<"Manufacturer"> | string | null
  logo?: Prisma.XOR<Prisma.FileNullableScalarRelationFilter, Prisma.FileWhereInput> | null
  organization?: Prisma.XOR<Prisma.OrganizationScalarRelationFilter, Prisma.OrganizationWhereInput>
  products?: Prisma.ProductListRelationFilter
  translations?: Prisma.ManufacturerTranslationListRelationFilter
}, "id" | "logoId">

export type ManufacturerOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  logoId?: Prisma.SortOrderInput | Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  createdBy?: Prisma.SortOrderInput | Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  updatedBy?: Prisma.SortOrderInput | Prisma.SortOrder
  deletedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  deletedBy?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.ManufacturerCountOrderByAggregateInput
  _max?: Prisma.ManufacturerMaxOrderByAggregateInput
  _min?: Prisma.ManufacturerMinOrderByAggregateInput
}

export type ManufacturerScalarWhereWithAggregatesInput = {
  AND?: Prisma.ManufacturerScalarWhereWithAggregatesInput | Prisma.ManufacturerScalarWhereWithAggregatesInput[]
  OR?: Prisma.ManufacturerScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ManufacturerScalarWhereWithAggregatesInput | Prisma.ManufacturerScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Manufacturer"> | string
  name?: Prisma.StringWithAggregatesFilter<"Manufacturer"> | string
  logoId?: Prisma.StringNullableWithAggregatesFilter<"Manufacturer"> | string | null
  organizationId?: Prisma.StringWithAggregatesFilter<"Manufacturer"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Manufacturer"> | Date | string
  createdBy?: Prisma.StringNullableWithAggregatesFilter<"Manufacturer"> | string | null
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Manufacturer"> | Date | string
  updatedBy?: Prisma.StringNullableWithAggregatesFilter<"Manufacturer"> | string | null
  deletedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"Manufacturer"> | Date | string | null
  deletedBy?: Prisma.StringNullableWithAggregatesFilter<"Manufacturer"> | string | null
}

export type ManufacturerCreateInput = {
  id?: string
  name: string
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
  deletedAt?: Date | string | null
  deletedBy?: string | null
  logo?: Prisma.FileCreateNestedOneWithoutManufacturerLogoInput
  organization: Prisma.OrganizationCreateNestedOneWithoutManufacturersInput
  products?: Prisma.ProductCreateNestedManyWithoutManufacturerInput
  translations?: Prisma.ManufacturerTranslationCreateNestedManyWithoutManufacturerInput
}

export type ManufacturerUncheckedCreateInput = {
  id?: string
  name: string
  logoId?: string | null
  organizationId: string
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
  deletedAt?: Date | string | null
  deletedBy?: string | null
  products?: Prisma.ProductUncheckedCreateNestedManyWithoutManufacturerInput
  translations?: Prisma.ManufacturerTranslationUncheckedCreateNestedManyWithoutManufacturerInput
}

export type ManufacturerUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  logo?: Prisma.FileUpdateOneWithoutManufacturerLogoNestedInput
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutManufacturersNestedInput
  products?: Prisma.ProductUpdateManyWithoutManufacturerNestedInput
  translations?: Prisma.ManufacturerTranslationUpdateManyWithoutManufacturerNestedInput
}

export type ManufacturerUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  products?: Prisma.ProductUncheckedUpdateManyWithoutManufacturerNestedInput
  translations?: Prisma.ManufacturerTranslationUncheckedUpdateManyWithoutManufacturerNestedInput
}

export type ManufacturerCreateManyInput = {
  id?: string
  name: string
  logoId?: string | null
  organizationId: string
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
  deletedAt?: Date | string | null
  deletedBy?: string | null
}

export type ManufacturerUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type ManufacturerUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type ManufacturerListRelationFilter = {
  every?: Prisma.ManufacturerWhereInput
  some?: Prisma.ManufacturerWhereInput
  none?: Prisma.ManufacturerWhereInput
}

export type ManufacturerOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ManufacturerNullableScalarRelationFilter = {
  is?: Prisma.ManufacturerWhereInput | null
  isNot?: Prisma.ManufacturerWhereInput | null
}

export type ManufacturerCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  logoId?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  createdBy?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  updatedBy?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrder
  deletedBy?: Prisma.SortOrder
}

export type ManufacturerMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  logoId?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  createdBy?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  updatedBy?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrder
  deletedBy?: Prisma.SortOrder
}

export type ManufacturerMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  name?: Prisma.SortOrder
  logoId?: Prisma.SortOrder
  organizationId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  createdBy?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  updatedBy?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrder
  deletedBy?: Prisma.SortOrder
}

export type ManufacturerScalarRelationFilter = {
  is?: Prisma.ManufacturerWhereInput
  isNot?: Prisma.ManufacturerWhereInput
}

export type ManufacturerCreateNestedManyWithoutOrganizationInput = {
  create?: Prisma.XOR<Prisma.ManufacturerCreateWithoutOrganizationInput, Prisma.ManufacturerUncheckedCreateWithoutOrganizationInput> | Prisma.ManufacturerCreateWithoutOrganizationInput[] | Prisma.ManufacturerUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?: Prisma.ManufacturerCreateOrConnectWithoutOrganizationInput | Prisma.ManufacturerCreateOrConnectWithoutOrganizationInput[]
  createMany?: Prisma.ManufacturerCreateManyOrganizationInputEnvelope
  connect?: Prisma.ManufacturerWhereUniqueInput | Prisma.ManufacturerWhereUniqueInput[]
}

export type ManufacturerUncheckedCreateNestedManyWithoutOrganizationInput = {
  create?: Prisma.XOR<Prisma.ManufacturerCreateWithoutOrganizationInput, Prisma.ManufacturerUncheckedCreateWithoutOrganizationInput> | Prisma.ManufacturerCreateWithoutOrganizationInput[] | Prisma.ManufacturerUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?: Prisma.ManufacturerCreateOrConnectWithoutOrganizationInput | Prisma.ManufacturerCreateOrConnectWithoutOrganizationInput[]
  createMany?: Prisma.ManufacturerCreateManyOrganizationInputEnvelope
  connect?: Prisma.ManufacturerWhereUniqueInput | Prisma.ManufacturerWhereUniqueInput[]
}

export type ManufacturerUpdateManyWithoutOrganizationNestedInput = {
  create?: Prisma.XOR<Prisma.ManufacturerCreateWithoutOrganizationInput, Prisma.ManufacturerUncheckedCreateWithoutOrganizationInput> | Prisma.ManufacturerCreateWithoutOrganizationInput[] | Prisma.ManufacturerUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?: Prisma.ManufacturerCreateOrConnectWithoutOrganizationInput | Prisma.ManufacturerCreateOrConnectWithoutOrganizationInput[]
  upsert?: Prisma.ManufacturerUpsertWithWhereUniqueWithoutOrganizationInput | Prisma.ManufacturerUpsertWithWhereUniqueWithoutOrganizationInput[]
  createMany?: Prisma.ManufacturerCreateManyOrganizationInputEnvelope
  set?: Prisma.ManufacturerWhereUniqueInput | Prisma.ManufacturerWhereUniqueInput[]
  disconnect?: Prisma.ManufacturerWhereUniqueInput | Prisma.ManufacturerWhereUniqueInput[]
  delete?: Prisma.ManufacturerWhereUniqueInput | Prisma.ManufacturerWhereUniqueInput[]
  connect?: Prisma.ManufacturerWhereUniqueInput | Prisma.ManufacturerWhereUniqueInput[]
  update?: Prisma.ManufacturerUpdateWithWhereUniqueWithoutOrganizationInput | Prisma.ManufacturerUpdateWithWhereUniqueWithoutOrganizationInput[]
  updateMany?: Prisma.ManufacturerUpdateManyWithWhereWithoutOrganizationInput | Prisma.ManufacturerUpdateManyWithWhereWithoutOrganizationInput[]
  deleteMany?: Prisma.ManufacturerScalarWhereInput | Prisma.ManufacturerScalarWhereInput[]
}

export type ManufacturerUncheckedUpdateManyWithoutOrganizationNestedInput = {
  create?: Prisma.XOR<Prisma.ManufacturerCreateWithoutOrganizationInput, Prisma.ManufacturerUncheckedCreateWithoutOrganizationInput> | Prisma.ManufacturerCreateWithoutOrganizationInput[] | Prisma.ManufacturerUncheckedCreateWithoutOrganizationInput[]
  connectOrCreate?: Prisma.ManufacturerCreateOrConnectWithoutOrganizationInput | Prisma.ManufacturerCreateOrConnectWithoutOrganizationInput[]
  upsert?: Prisma.ManufacturerUpsertWithWhereUniqueWithoutOrganizationInput | Prisma.ManufacturerUpsertWithWhereUniqueWithoutOrganizationInput[]
  createMany?: Prisma.ManufacturerCreateManyOrganizationInputEnvelope
  set?: Prisma.ManufacturerWhereUniqueInput | Prisma.ManufacturerWhereUniqueInput[]
  disconnect?: Prisma.ManufacturerWhereUniqueInput | Prisma.ManufacturerWhereUniqueInput[]
  delete?: Prisma.ManufacturerWhereUniqueInput | Prisma.ManufacturerWhereUniqueInput[]
  connect?: Prisma.ManufacturerWhereUniqueInput | Prisma.ManufacturerWhereUniqueInput[]
  update?: Prisma.ManufacturerUpdateWithWhereUniqueWithoutOrganizationInput | Prisma.ManufacturerUpdateWithWhereUniqueWithoutOrganizationInput[]
  updateMany?: Prisma.ManufacturerUpdateManyWithWhereWithoutOrganizationInput | Prisma.ManufacturerUpdateManyWithWhereWithoutOrganizationInput[]
  deleteMany?: Prisma.ManufacturerScalarWhereInput | Prisma.ManufacturerScalarWhereInput[]
}

export type ManufacturerCreateNestedOneWithoutLogoInput = {
  create?: Prisma.XOR<Prisma.ManufacturerCreateWithoutLogoInput, Prisma.ManufacturerUncheckedCreateWithoutLogoInput>
  connectOrCreate?: Prisma.ManufacturerCreateOrConnectWithoutLogoInput
  connect?: Prisma.ManufacturerWhereUniqueInput
}

export type ManufacturerUncheckedCreateNestedOneWithoutLogoInput = {
  create?: Prisma.XOR<Prisma.ManufacturerCreateWithoutLogoInput, Prisma.ManufacturerUncheckedCreateWithoutLogoInput>
  connectOrCreate?: Prisma.ManufacturerCreateOrConnectWithoutLogoInput
  connect?: Prisma.ManufacturerWhereUniqueInput
}

export type ManufacturerUpdateOneWithoutLogoNestedInput = {
  create?: Prisma.XOR<Prisma.ManufacturerCreateWithoutLogoInput, Prisma.ManufacturerUncheckedCreateWithoutLogoInput>
  connectOrCreate?: Prisma.ManufacturerCreateOrConnectWithoutLogoInput
  upsert?: Prisma.ManufacturerUpsertWithoutLogoInput
  disconnect?: Prisma.ManufacturerWhereInput | boolean
  delete?: Prisma.ManufacturerWhereInput | boolean
  connect?: Prisma.ManufacturerWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ManufacturerUpdateToOneWithWhereWithoutLogoInput, Prisma.ManufacturerUpdateWithoutLogoInput>, Prisma.ManufacturerUncheckedUpdateWithoutLogoInput>
}

export type ManufacturerUncheckedUpdateOneWithoutLogoNestedInput = {
  create?: Prisma.XOR<Prisma.ManufacturerCreateWithoutLogoInput, Prisma.ManufacturerUncheckedCreateWithoutLogoInput>
  connectOrCreate?: Prisma.ManufacturerCreateOrConnectWithoutLogoInput
  upsert?: Prisma.ManufacturerUpsertWithoutLogoInput
  disconnect?: Prisma.ManufacturerWhereInput | boolean
  delete?: Prisma.ManufacturerWhereInput | boolean
  connect?: Prisma.ManufacturerWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ManufacturerUpdateToOneWithWhereWithoutLogoInput, Prisma.ManufacturerUpdateWithoutLogoInput>, Prisma.ManufacturerUncheckedUpdateWithoutLogoInput>
}

export type ManufacturerCreateNestedOneWithoutTranslationsInput = {
  create?: Prisma.XOR<Prisma.ManufacturerCreateWithoutTranslationsInput, Prisma.ManufacturerUncheckedCreateWithoutTranslationsInput>
  connectOrCreate?: Prisma.ManufacturerCreateOrConnectWithoutTranslationsInput
  connect?: Prisma.ManufacturerWhereUniqueInput
}

export type ManufacturerUpdateOneRequiredWithoutTranslationsNestedInput = {
  create?: Prisma.XOR<Prisma.ManufacturerCreateWithoutTranslationsInput, Prisma.ManufacturerUncheckedCreateWithoutTranslationsInput>
  connectOrCreate?: Prisma.ManufacturerCreateOrConnectWithoutTranslationsInput
  upsert?: Prisma.ManufacturerUpsertWithoutTranslationsInput
  connect?: Prisma.ManufacturerWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ManufacturerUpdateToOneWithWhereWithoutTranslationsInput, Prisma.ManufacturerUpdateWithoutTranslationsInput>, Prisma.ManufacturerUncheckedUpdateWithoutTranslationsInput>
}

export type ManufacturerCreateNestedOneWithoutProductsInput = {
  create?: Prisma.XOR<Prisma.ManufacturerCreateWithoutProductsInput, Prisma.ManufacturerUncheckedCreateWithoutProductsInput>
  connectOrCreate?: Prisma.ManufacturerCreateOrConnectWithoutProductsInput
  connect?: Prisma.ManufacturerWhereUniqueInput
}

export type ManufacturerUpdateOneWithoutProductsNestedInput = {
  create?: Prisma.XOR<Prisma.ManufacturerCreateWithoutProductsInput, Prisma.ManufacturerUncheckedCreateWithoutProductsInput>
  connectOrCreate?: Prisma.ManufacturerCreateOrConnectWithoutProductsInput
  upsert?: Prisma.ManufacturerUpsertWithoutProductsInput
  disconnect?: Prisma.ManufacturerWhereInput | boolean
  delete?: Prisma.ManufacturerWhereInput | boolean
  connect?: Prisma.ManufacturerWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ManufacturerUpdateToOneWithWhereWithoutProductsInput, Prisma.ManufacturerUpdateWithoutProductsInput>, Prisma.ManufacturerUncheckedUpdateWithoutProductsInput>
}

export type ManufacturerCreateWithoutOrganizationInput = {
  id?: string
  name: string
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
  deletedAt?: Date | string | null
  deletedBy?: string | null
  logo?: Prisma.FileCreateNestedOneWithoutManufacturerLogoInput
  products?: Prisma.ProductCreateNestedManyWithoutManufacturerInput
  translations?: Prisma.ManufacturerTranslationCreateNestedManyWithoutManufacturerInput
}

export type ManufacturerUncheckedCreateWithoutOrganizationInput = {
  id?: string
  name: string
  logoId?: string | null
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
  deletedAt?: Date | string | null
  deletedBy?: string | null
  products?: Prisma.ProductUncheckedCreateNestedManyWithoutManufacturerInput
  translations?: Prisma.ManufacturerTranslationUncheckedCreateNestedManyWithoutManufacturerInput
}

export type ManufacturerCreateOrConnectWithoutOrganizationInput = {
  where: Prisma.ManufacturerWhereUniqueInput
  create: Prisma.XOR<Prisma.ManufacturerCreateWithoutOrganizationInput, Prisma.ManufacturerUncheckedCreateWithoutOrganizationInput>
}

export type ManufacturerCreateManyOrganizationInputEnvelope = {
  data: Prisma.ManufacturerCreateManyOrganizationInput | Prisma.ManufacturerCreateManyOrganizationInput[]
  skipDuplicates?: boolean
}

export type ManufacturerUpsertWithWhereUniqueWithoutOrganizationInput = {
  where: Prisma.ManufacturerWhereUniqueInput
  update: Prisma.XOR<Prisma.ManufacturerUpdateWithoutOrganizationInput, Prisma.ManufacturerUncheckedUpdateWithoutOrganizationInput>
  create: Prisma.XOR<Prisma.ManufacturerCreateWithoutOrganizationInput, Prisma.ManufacturerUncheckedCreateWithoutOrganizationInput>
}

export type ManufacturerUpdateWithWhereUniqueWithoutOrganizationInput = {
  where: Prisma.ManufacturerWhereUniqueInput
  data: Prisma.XOR<Prisma.ManufacturerUpdateWithoutOrganizationInput, Prisma.ManufacturerUncheckedUpdateWithoutOrganizationInput>
}

export type ManufacturerUpdateManyWithWhereWithoutOrganizationInput = {
  where: Prisma.ManufacturerScalarWhereInput
  data: Prisma.XOR<Prisma.ManufacturerUpdateManyMutationInput, Prisma.ManufacturerUncheckedUpdateManyWithoutOrganizationInput>
}

export type ManufacturerScalarWhereInput = {
  AND?: Prisma.ManufacturerScalarWhereInput | Prisma.ManufacturerScalarWhereInput[]
  OR?: Prisma.ManufacturerScalarWhereInput[]
  NOT?: Prisma.ManufacturerScalarWhereInput | Prisma.ManufacturerScalarWhereInput[]
  id?: Prisma.StringFilter<"Manufacturer"> | string
  name?: Prisma.StringFilter<"Manufacturer"> | string
  logoId?: Prisma.StringNullableFilter<"Manufacturer"> | string | null
  organizationId?: Prisma.StringFilter<"Manufacturer"> | string
  createdAt?: Prisma.DateTimeFilter<"Manufacturer"> | Date | string
  createdBy?: Prisma.StringNullableFilter<"Manufacturer"> | string | null
  updatedAt?: Prisma.DateTimeFilter<"Manufacturer"> | Date | string
  updatedBy?: Prisma.StringNullableFilter<"Manufacturer"> | string | null
  deletedAt?: Prisma.DateTimeNullableFilter<"Manufacturer"> | Date | string | null
  deletedBy?: Prisma.StringNullableFilter<"Manufacturer"> | string | null
}

export type ManufacturerCreateWithoutLogoInput = {
  id?: string
  name: string
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
  deletedAt?: Date | string | null
  deletedBy?: string | null
  organization: Prisma.OrganizationCreateNestedOneWithoutManufacturersInput
  products?: Prisma.ProductCreateNestedManyWithoutManufacturerInput
  translations?: Prisma.ManufacturerTranslationCreateNestedManyWithoutManufacturerInput
}

export type ManufacturerUncheckedCreateWithoutLogoInput = {
  id?: string
  name: string
  organizationId: string
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
  deletedAt?: Date | string | null
  deletedBy?: string | null
  products?: Prisma.ProductUncheckedCreateNestedManyWithoutManufacturerInput
  translations?: Prisma.ManufacturerTranslationUncheckedCreateNestedManyWithoutManufacturerInput
}

export type ManufacturerCreateOrConnectWithoutLogoInput = {
  where: Prisma.ManufacturerWhereUniqueInput
  create: Prisma.XOR<Prisma.ManufacturerCreateWithoutLogoInput, Prisma.ManufacturerUncheckedCreateWithoutLogoInput>
}

export type ManufacturerUpsertWithoutLogoInput = {
  update: Prisma.XOR<Prisma.ManufacturerUpdateWithoutLogoInput, Prisma.ManufacturerUncheckedUpdateWithoutLogoInput>
  create: Prisma.XOR<Prisma.ManufacturerCreateWithoutLogoInput, Prisma.ManufacturerUncheckedCreateWithoutLogoInput>
  where?: Prisma.ManufacturerWhereInput
}

export type ManufacturerUpdateToOneWithWhereWithoutLogoInput = {
  where?: Prisma.ManufacturerWhereInput
  data: Prisma.XOR<Prisma.ManufacturerUpdateWithoutLogoInput, Prisma.ManufacturerUncheckedUpdateWithoutLogoInput>
}

export type ManufacturerUpdateWithoutLogoInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutManufacturersNestedInput
  products?: Prisma.ProductUpdateManyWithoutManufacturerNestedInput
  translations?: Prisma.ManufacturerTranslationUpdateManyWithoutManufacturerNestedInput
}

export type ManufacturerUncheckedUpdateWithoutLogoInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  products?: Prisma.ProductUncheckedUpdateManyWithoutManufacturerNestedInput
  translations?: Prisma.ManufacturerTranslationUncheckedUpdateManyWithoutManufacturerNestedInput
}

export type ManufacturerCreateWithoutTranslationsInput = {
  id?: string
  name: string
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
  deletedAt?: Date | string | null
  deletedBy?: string | null
  logo?: Prisma.FileCreateNestedOneWithoutManufacturerLogoInput
  organization: Prisma.OrganizationCreateNestedOneWithoutManufacturersInput
  products?: Prisma.ProductCreateNestedManyWithoutManufacturerInput
}

export type ManufacturerUncheckedCreateWithoutTranslationsInput = {
  id?: string
  name: string
  logoId?: string | null
  organizationId: string
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
  deletedAt?: Date | string | null
  deletedBy?: string | null
  products?: Prisma.ProductUncheckedCreateNestedManyWithoutManufacturerInput
}

export type ManufacturerCreateOrConnectWithoutTranslationsInput = {
  where: Prisma.ManufacturerWhereUniqueInput
  create: Prisma.XOR<Prisma.ManufacturerCreateWithoutTranslationsInput, Prisma.ManufacturerUncheckedCreateWithoutTranslationsInput>
}

export type ManufacturerUpsertWithoutTranslationsInput = {
  update: Prisma.XOR<Prisma.ManufacturerUpdateWithoutTranslationsInput, Prisma.ManufacturerUncheckedUpdateWithoutTranslationsInput>
  create: Prisma.XOR<Prisma.ManufacturerCreateWithoutTranslationsInput, Prisma.ManufacturerUncheckedCreateWithoutTranslationsInput>
  where?: Prisma.ManufacturerWhereInput
}

export type ManufacturerUpdateToOneWithWhereWithoutTranslationsInput = {
  where?: Prisma.ManufacturerWhereInput
  data: Prisma.XOR<Prisma.ManufacturerUpdateWithoutTranslationsInput, Prisma.ManufacturerUncheckedUpdateWithoutTranslationsInput>
}

export type ManufacturerUpdateWithoutTranslationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  logo?: Prisma.FileUpdateOneWithoutManufacturerLogoNestedInput
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutManufacturersNestedInput
  products?: Prisma.ProductUpdateManyWithoutManufacturerNestedInput
}

export type ManufacturerUncheckedUpdateWithoutTranslationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  products?: Prisma.ProductUncheckedUpdateManyWithoutManufacturerNestedInput
}

export type ManufacturerCreateWithoutProductsInput = {
  id?: string
  name: string
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
  deletedAt?: Date | string | null
  deletedBy?: string | null
  logo?: Prisma.FileCreateNestedOneWithoutManufacturerLogoInput
  organization: Prisma.OrganizationCreateNestedOneWithoutManufacturersInput
  translations?: Prisma.ManufacturerTranslationCreateNestedManyWithoutManufacturerInput
}

export type ManufacturerUncheckedCreateWithoutProductsInput = {
  id?: string
  name: string
  logoId?: string | null
  organizationId: string
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
  deletedAt?: Date | string | null
  deletedBy?: string | null
  translations?: Prisma.ManufacturerTranslationUncheckedCreateNestedManyWithoutManufacturerInput
}

export type ManufacturerCreateOrConnectWithoutProductsInput = {
  where: Prisma.ManufacturerWhereUniqueInput
  create: Prisma.XOR<Prisma.ManufacturerCreateWithoutProductsInput, Prisma.ManufacturerUncheckedCreateWithoutProductsInput>
}

export type ManufacturerUpsertWithoutProductsInput = {
  update: Prisma.XOR<Prisma.ManufacturerUpdateWithoutProductsInput, Prisma.ManufacturerUncheckedUpdateWithoutProductsInput>
  create: Prisma.XOR<Prisma.ManufacturerCreateWithoutProductsInput, Prisma.ManufacturerUncheckedCreateWithoutProductsInput>
  where?: Prisma.ManufacturerWhereInput
}

export type ManufacturerUpdateToOneWithWhereWithoutProductsInput = {
  where?: Prisma.ManufacturerWhereInput
  data: Prisma.XOR<Prisma.ManufacturerUpdateWithoutProductsInput, Prisma.ManufacturerUncheckedUpdateWithoutProductsInput>
}

export type ManufacturerUpdateWithoutProductsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  logo?: Prisma.FileUpdateOneWithoutManufacturerLogoNestedInput
  organization?: Prisma.OrganizationUpdateOneRequiredWithoutManufacturersNestedInput
  translations?: Prisma.ManufacturerTranslationUpdateManyWithoutManufacturerNestedInput
}

export type ManufacturerUncheckedUpdateWithoutProductsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizationId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  translations?: Prisma.ManufacturerTranslationUncheckedUpdateManyWithoutManufacturerNestedInput
}

export type ManufacturerCreateManyOrganizationInput = {
  id?: string
  name: string
  logoId?: string | null
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
  deletedAt?: Date | string | null
  deletedBy?: string | null
}

export type ManufacturerUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  logo?: Prisma.FileUpdateOneWithoutManufacturerLogoNestedInput
  products?: Prisma.ProductUpdateManyWithoutManufacturerNestedInput
  translations?: Prisma.ManufacturerTranslationUpdateManyWithoutManufacturerNestedInput
}

export type ManufacturerUncheckedUpdateWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  products?: Prisma.ProductUncheckedUpdateManyWithoutManufacturerNestedInput
  translations?: Prisma.ManufacturerTranslationUncheckedUpdateManyWithoutManufacturerNestedInput
}

export type ManufacturerUncheckedUpdateManyWithoutOrganizationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  logoId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}


/**
 * Count Type ManufacturerCountOutputType
 */

export type ManufacturerCountOutputType = {
  products: number
  translations: number
}

export type ManufacturerCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  products?: boolean | ManufacturerCountOutputTypeCountProductsArgs
  translations?: boolean | ManufacturerCountOutputTypeCountTranslationsArgs
}

/**
 * ManufacturerCountOutputType without action
 */
export type ManufacturerCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ManufacturerCountOutputType
   */
  select?: Prisma.ManufacturerCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ManufacturerCountOutputType without action
 */
export type ManufacturerCountOutputTypeCountProductsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProductWhereInput
}

/**
 * ManufacturerCountOutputType without action
 */
export type ManufacturerCountOutputTypeCountTranslationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ManufacturerTranslationWhereInput
}


export type ManufacturerSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  logoId?: boolean
  organizationId?: boolean
  createdAt?: boolean
  createdBy?: boolean
  updatedAt?: boolean
  updatedBy?: boolean
  deletedAt?: boolean
  deletedBy?: boolean
  logo?: boolean | Prisma.Manufacturer$logoArgs<ExtArgs>
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  products?: boolean | Prisma.Manufacturer$productsArgs<ExtArgs>
  translations?: boolean | Prisma.Manufacturer$translationsArgs<ExtArgs>
  _count?: boolean | Prisma.ManufacturerCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["manufacturer"]>

export type ManufacturerSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  logoId?: boolean
  organizationId?: boolean
  createdAt?: boolean
  createdBy?: boolean
  updatedAt?: boolean
  updatedBy?: boolean
  deletedAt?: boolean
  deletedBy?: boolean
  logo?: boolean | Prisma.Manufacturer$logoArgs<ExtArgs>
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
}, ExtArgs["result"]["manufacturer"]>

export type ManufacturerSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  name?: boolean
  logoId?: boolean
  organizationId?: boolean
  createdAt?: boolean
  createdBy?: boolean
  updatedAt?: boolean
  updatedBy?: boolean
  deletedAt?: boolean
  deletedBy?: boolean
  logo?: boolean | Prisma.Manufacturer$logoArgs<ExtArgs>
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
}, ExtArgs["result"]["manufacturer"]>

export type ManufacturerSelectScalar = {
  id?: boolean
  name?: boolean
  logoId?: boolean
  organizationId?: boolean
  createdAt?: boolean
  createdBy?: boolean
  updatedAt?: boolean
  updatedBy?: boolean
  deletedAt?: boolean
  deletedBy?: boolean
}

export type ManufacturerOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "name" | "logoId" | "organizationId" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["manufacturer"]>
export type ManufacturerInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  logo?: boolean | Prisma.Manufacturer$logoArgs<ExtArgs>
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
  products?: boolean | Prisma.Manufacturer$productsArgs<ExtArgs>
  translations?: boolean | Prisma.Manufacturer$translationsArgs<ExtArgs>
  _count?: boolean | Prisma.ManufacturerCountOutputTypeDefaultArgs<ExtArgs>
}
export type ManufacturerIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  logo?: boolean | Prisma.Manufacturer$logoArgs<ExtArgs>
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
}
export type ManufacturerIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  logo?: boolean | Prisma.Manufacturer$logoArgs<ExtArgs>
  organization?: boolean | Prisma.OrganizationDefaultArgs<ExtArgs>
}

export type $ManufacturerPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Manufacturer"
  objects: {
    logo: Prisma.$FilePayload<ExtArgs> | null
    organization: Prisma.$OrganizationPayload<ExtArgs>
    products: Prisma.$ProductPayload<ExtArgs>[]
    translations: Prisma.$ManufacturerTranslationPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    name: string
    logoId: string | null
    organizationId: string
    createdAt: Date
    createdBy: string | null
    updatedAt: Date
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }, ExtArgs["result"]["manufacturer"]>
  composites: {}
}

export type ManufacturerGetPayload<S extends boolean | null | undefined | ManufacturerDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ManufacturerPayload, S>

export type ManufacturerCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ManufacturerFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ManufacturerCountAggregateInputType | true
  }

export interface ManufacturerDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Manufacturer'], meta: { name: 'Manufacturer' } }
  /**
   * Find zero or one Manufacturer that matches the filter.
   * @param {ManufacturerFindUniqueArgs} args - Arguments to find a Manufacturer
   * @example
   * // Get one Manufacturer
   * const manufacturer = await prisma.manufacturer.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ManufacturerFindUniqueArgs>(args: Prisma.SelectSubset<T, ManufacturerFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ManufacturerClient<runtime.Types.Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Manufacturer that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ManufacturerFindUniqueOrThrowArgs} args - Arguments to find a Manufacturer
   * @example
   * // Get one Manufacturer
   * const manufacturer = await prisma.manufacturer.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ManufacturerFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ManufacturerFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ManufacturerClient<runtime.Types.Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Manufacturer that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ManufacturerFindFirstArgs} args - Arguments to find a Manufacturer
   * @example
   * // Get one Manufacturer
   * const manufacturer = await prisma.manufacturer.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ManufacturerFindFirstArgs>(args?: Prisma.SelectSubset<T, ManufacturerFindFirstArgs<ExtArgs>>): Prisma.Prisma__ManufacturerClient<runtime.Types.Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Manufacturer that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ManufacturerFindFirstOrThrowArgs} args - Arguments to find a Manufacturer
   * @example
   * // Get one Manufacturer
   * const manufacturer = await prisma.manufacturer.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ManufacturerFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ManufacturerFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ManufacturerClient<runtime.Types.Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Manufacturers that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ManufacturerFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Manufacturers
   * const manufacturers = await prisma.manufacturer.findMany()
   * 
   * // Get first 10 Manufacturers
   * const manufacturers = await prisma.manufacturer.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const manufacturerWithIdOnly = await prisma.manufacturer.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ManufacturerFindManyArgs>(args?: Prisma.SelectSubset<T, ManufacturerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Manufacturer.
   * @param {ManufacturerCreateArgs} args - Arguments to create a Manufacturer.
   * @example
   * // Create one Manufacturer
   * const Manufacturer = await prisma.manufacturer.create({
   *   data: {
   *     // ... data to create a Manufacturer
   *   }
   * })
   * 
   */
  create<T extends ManufacturerCreateArgs>(args: Prisma.SelectSubset<T, ManufacturerCreateArgs<ExtArgs>>): Prisma.Prisma__ManufacturerClient<runtime.Types.Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Manufacturers.
   * @param {ManufacturerCreateManyArgs} args - Arguments to create many Manufacturers.
   * @example
   * // Create many Manufacturers
   * const manufacturer = await prisma.manufacturer.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ManufacturerCreateManyArgs>(args?: Prisma.SelectSubset<T, ManufacturerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Manufacturers and returns the data saved in the database.
   * @param {ManufacturerCreateManyAndReturnArgs} args - Arguments to create many Manufacturers.
   * @example
   * // Create many Manufacturers
   * const manufacturer = await prisma.manufacturer.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Manufacturers and only return the `id`
   * const manufacturerWithIdOnly = await prisma.manufacturer.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ManufacturerCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ManufacturerCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Manufacturer.
   * @param {ManufacturerDeleteArgs} args - Arguments to delete one Manufacturer.
   * @example
   * // Delete one Manufacturer
   * const Manufacturer = await prisma.manufacturer.delete({
   *   where: {
   *     // ... filter to delete one Manufacturer
   *   }
   * })
   * 
   */
  delete<T extends ManufacturerDeleteArgs>(args: Prisma.SelectSubset<T, ManufacturerDeleteArgs<ExtArgs>>): Prisma.Prisma__ManufacturerClient<runtime.Types.Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Manufacturer.
   * @param {ManufacturerUpdateArgs} args - Arguments to update one Manufacturer.
   * @example
   * // Update one Manufacturer
   * const manufacturer = await prisma.manufacturer.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ManufacturerUpdateArgs>(args: Prisma.SelectSubset<T, ManufacturerUpdateArgs<ExtArgs>>): Prisma.Prisma__ManufacturerClient<runtime.Types.Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Manufacturers.
   * @param {ManufacturerDeleteManyArgs} args - Arguments to filter Manufacturers to delete.
   * @example
   * // Delete a few Manufacturers
   * const { count } = await prisma.manufacturer.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ManufacturerDeleteManyArgs>(args?: Prisma.SelectSubset<T, ManufacturerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Manufacturers.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ManufacturerUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Manufacturers
   * const manufacturer = await prisma.manufacturer.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ManufacturerUpdateManyArgs>(args: Prisma.SelectSubset<T, ManufacturerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Manufacturers and returns the data updated in the database.
   * @param {ManufacturerUpdateManyAndReturnArgs} args - Arguments to update many Manufacturers.
   * @example
   * // Update many Manufacturers
   * const manufacturer = await prisma.manufacturer.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Manufacturers and only return the `id`
   * const manufacturerWithIdOnly = await prisma.manufacturer.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ManufacturerUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ManufacturerUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Manufacturer.
   * @param {ManufacturerUpsertArgs} args - Arguments to update or create a Manufacturer.
   * @example
   * // Update or create a Manufacturer
   * const manufacturer = await prisma.manufacturer.upsert({
   *   create: {
   *     // ... data to create a Manufacturer
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Manufacturer we want to update
   *   }
   * })
   */
  upsert<T extends ManufacturerUpsertArgs>(args: Prisma.SelectSubset<T, ManufacturerUpsertArgs<ExtArgs>>): Prisma.Prisma__ManufacturerClient<runtime.Types.Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Manufacturers.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ManufacturerCountArgs} args - Arguments to filter Manufacturers to count.
   * @example
   * // Count the number of Manufacturers
   * const count = await prisma.manufacturer.count({
   *   where: {
   *     // ... the filter for the Manufacturers we want to count
   *   }
   * })
  **/
  count<T extends ManufacturerCountArgs>(
    args?: Prisma.Subset<T, ManufacturerCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ManufacturerCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Manufacturer.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ManufacturerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ManufacturerAggregateArgs>(args: Prisma.Subset<T, ManufacturerAggregateArgs>): Prisma.PrismaPromise<GetManufacturerAggregateType<T>>

  /**
   * Group by Manufacturer.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ManufacturerGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ManufacturerGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ManufacturerGroupByArgs['orderBy'] }
      : { orderBy?: ManufacturerGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ManufacturerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetManufacturerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Manufacturer model
 */
readonly fields: ManufacturerFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Manufacturer.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ManufacturerClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  logo<T extends Prisma.Manufacturer$logoArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Manufacturer$logoArgs<ExtArgs>>): Prisma.Prisma__FileClient<runtime.Types.Result.GetResult<Prisma.$FilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
  organization<T extends Prisma.OrganizationDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.OrganizationDefaultArgs<ExtArgs>>): Prisma.Prisma__OrganizationClient<runtime.Types.Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  products<T extends Prisma.Manufacturer$productsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Manufacturer$productsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  translations<T extends Prisma.Manufacturer$translationsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Manufacturer$translationsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ManufacturerTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Manufacturer model
 */
export interface ManufacturerFieldRefs {
  readonly id: Prisma.FieldRef<"Manufacturer", 'String'>
  readonly name: Prisma.FieldRef<"Manufacturer", 'String'>
  readonly logoId: Prisma.FieldRef<"Manufacturer", 'String'>
  readonly organizationId: Prisma.FieldRef<"Manufacturer", 'String'>
  readonly createdAt: Prisma.FieldRef<"Manufacturer", 'DateTime'>
  readonly createdBy: Prisma.FieldRef<"Manufacturer", 'String'>
  readonly updatedAt: Prisma.FieldRef<"Manufacturer", 'DateTime'>
  readonly updatedBy: Prisma.FieldRef<"Manufacturer", 'String'>
  readonly deletedAt: Prisma.FieldRef<"Manufacturer", 'DateTime'>
  readonly deletedBy: Prisma.FieldRef<"Manufacturer", 'String'>
}
    

// Custom InputTypes
/**
 * Manufacturer findUnique
 */
export type ManufacturerFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Manufacturer
   */
  select?: Prisma.ManufacturerSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Manufacturer
   */
  omit?: Prisma.ManufacturerOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ManufacturerInclude<ExtArgs> | null
  /**
   * Filter, which Manufacturer to fetch.
   */
  where: Prisma.ManufacturerWhereUniqueInput
}

/**
 * Manufacturer findUniqueOrThrow
 */
export type ManufacturerFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Manufacturer
   */
  select?: Prisma.ManufacturerSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Manufacturer
   */
  omit?: Prisma.ManufacturerOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ManufacturerInclude<ExtArgs> | null
  /**
   * Filter, which Manufacturer to fetch.
   */
  where: Prisma.ManufacturerWhereUniqueInput
}

/**
 * Manufacturer findFirst
 */
export type ManufacturerFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Manufacturer
   */
  select?: Prisma.ManufacturerSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Manufacturer
   */
  omit?: Prisma.ManufacturerOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ManufacturerInclude<ExtArgs> | null
  /**
   * Filter, which Manufacturer to fetch.
   */
  where?: Prisma.ManufacturerWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Manufacturers to fetch.
   */
  orderBy?: Prisma.ManufacturerOrderByWithRelationInput | Prisma.ManufacturerOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Manufacturers.
   */
  cursor?: Prisma.ManufacturerWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Manufacturers from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Manufacturers.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Manufacturers.
   */
  distinct?: Prisma.ManufacturerScalarFieldEnum | Prisma.ManufacturerScalarFieldEnum[]
}

/**
 * Manufacturer findFirstOrThrow
 */
export type ManufacturerFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Manufacturer
   */
  select?: Prisma.ManufacturerSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Manufacturer
   */
  omit?: Prisma.ManufacturerOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ManufacturerInclude<ExtArgs> | null
  /**
   * Filter, which Manufacturer to fetch.
   */
  where?: Prisma.ManufacturerWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Manufacturers to fetch.
   */
  orderBy?: Prisma.ManufacturerOrderByWithRelationInput | Prisma.ManufacturerOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Manufacturers.
   */
  cursor?: Prisma.ManufacturerWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Manufacturers from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Manufacturers.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Manufacturers.
   */
  distinct?: Prisma.ManufacturerScalarFieldEnum | Prisma.ManufacturerScalarFieldEnum[]
}

/**
 * Manufacturer findMany
 */
export type ManufacturerFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Manufacturer
   */
  select?: Prisma.ManufacturerSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Manufacturer
   */
  omit?: Prisma.ManufacturerOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ManufacturerInclude<ExtArgs> | null
  /**
   * Filter, which Manufacturers to fetch.
   */
  where?: Prisma.ManufacturerWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Manufacturers to fetch.
   */
  orderBy?: Prisma.ManufacturerOrderByWithRelationInput | Prisma.ManufacturerOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Manufacturers.
   */
  cursor?: Prisma.ManufacturerWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Manufacturers from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Manufacturers.
   */
  skip?: number
  distinct?: Prisma.ManufacturerScalarFieldEnum | Prisma.ManufacturerScalarFieldEnum[]
}

/**
 * Manufacturer create
 */
export type ManufacturerCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Manufacturer
   */
  select?: Prisma.ManufacturerSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Manufacturer
   */
  omit?: Prisma.ManufacturerOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ManufacturerInclude<ExtArgs> | null
  /**
   * The data needed to create a Manufacturer.
   */
  data: Prisma.XOR<Prisma.ManufacturerCreateInput, Prisma.ManufacturerUncheckedCreateInput>
}

/**
 * Manufacturer createMany
 */
export type ManufacturerCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Manufacturers.
   */
  data: Prisma.ManufacturerCreateManyInput | Prisma.ManufacturerCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Manufacturer createManyAndReturn
 */
export type ManufacturerCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Manufacturer
   */
  select?: Prisma.ManufacturerSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Manufacturer
   */
  omit?: Prisma.ManufacturerOmit<ExtArgs> | null
  /**
   * The data used to create many Manufacturers.
   */
  data: Prisma.ManufacturerCreateManyInput | Prisma.ManufacturerCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ManufacturerIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Manufacturer update
 */
export type ManufacturerUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Manufacturer
   */
  select?: Prisma.ManufacturerSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Manufacturer
   */
  omit?: Prisma.ManufacturerOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ManufacturerInclude<ExtArgs> | null
  /**
   * The data needed to update a Manufacturer.
   */
  data: Prisma.XOR<Prisma.ManufacturerUpdateInput, Prisma.ManufacturerUncheckedUpdateInput>
  /**
   * Choose, which Manufacturer to update.
   */
  where: Prisma.ManufacturerWhereUniqueInput
}

/**
 * Manufacturer updateMany
 */
export type ManufacturerUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Manufacturers.
   */
  data: Prisma.XOR<Prisma.ManufacturerUpdateManyMutationInput, Prisma.ManufacturerUncheckedUpdateManyInput>
  /**
   * Filter which Manufacturers to update
   */
  where?: Prisma.ManufacturerWhereInput
  /**
   * Limit how many Manufacturers to update.
   */
  limit?: number
}

/**
 * Manufacturer updateManyAndReturn
 */
export type ManufacturerUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Manufacturer
   */
  select?: Prisma.ManufacturerSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Manufacturer
   */
  omit?: Prisma.ManufacturerOmit<ExtArgs> | null
  /**
   * The data used to update Manufacturers.
   */
  data: Prisma.XOR<Prisma.ManufacturerUpdateManyMutationInput, Prisma.ManufacturerUncheckedUpdateManyInput>
  /**
   * Filter which Manufacturers to update
   */
  where?: Prisma.ManufacturerWhereInput
  /**
   * Limit how many Manufacturers to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ManufacturerIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Manufacturer upsert
 */
export type ManufacturerUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Manufacturer
   */
  select?: Prisma.ManufacturerSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Manufacturer
   */
  omit?: Prisma.ManufacturerOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ManufacturerInclude<ExtArgs> | null
  /**
   * The filter to search for the Manufacturer to update in case it exists.
   */
  where: Prisma.ManufacturerWhereUniqueInput
  /**
   * In case the Manufacturer found by the `where` argument doesn't exist, create a new Manufacturer with this data.
   */
  create: Prisma.XOR<Prisma.ManufacturerCreateInput, Prisma.ManufacturerUncheckedCreateInput>
  /**
   * In case the Manufacturer was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ManufacturerUpdateInput, Prisma.ManufacturerUncheckedUpdateInput>
}

/**
 * Manufacturer delete
 */
export type ManufacturerDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Manufacturer
   */
  select?: Prisma.ManufacturerSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Manufacturer
   */
  omit?: Prisma.ManufacturerOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ManufacturerInclude<ExtArgs> | null
  /**
   * Filter which Manufacturer to delete.
   */
  where: Prisma.ManufacturerWhereUniqueInput
}

/**
 * Manufacturer deleteMany
 */
export type ManufacturerDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Manufacturers to delete
   */
  where?: Prisma.ManufacturerWhereInput
  /**
   * Limit how many Manufacturers to delete.
   */
  limit?: number
}

/**
 * Manufacturer.logo
 */
export type Manufacturer$logoArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the File
   */
  select?: Prisma.FileSelect<ExtArgs> | null
  /**
   * Omit specific fields from the File
   */
  omit?: Prisma.FileOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.FileInclude<ExtArgs> | null
  where?: Prisma.FileWhereInput
}

/**
 * Manufacturer.products
 */
export type Manufacturer$productsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Product
   */
  select?: Prisma.ProductSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Product
   */
  omit?: Prisma.ProductOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductInclude<ExtArgs> | null
  where?: Prisma.ProductWhereInput
  orderBy?: Prisma.ProductOrderByWithRelationInput | Prisma.ProductOrderByWithRelationInput[]
  cursor?: Prisma.ProductWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ProductScalarFieldEnum | Prisma.ProductScalarFieldEnum[]
}

/**
 * Manufacturer.translations
 */
export type Manufacturer$translationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ManufacturerTranslation
   */
  select?: Prisma.ManufacturerTranslationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ManufacturerTranslation
   */
  omit?: Prisma.ManufacturerTranslationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ManufacturerTranslationInclude<ExtArgs> | null
  where?: Prisma.ManufacturerTranslationWhereInput
  orderBy?: Prisma.ManufacturerTranslationOrderByWithRelationInput | Prisma.ManufacturerTranslationOrderByWithRelationInput[]
  cursor?: Prisma.ManufacturerTranslationWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ManufacturerTranslationScalarFieldEnum | Prisma.ManufacturerTranslationScalarFieldEnum[]
}

/**
 * Manufacturer without action
 */
export type ManufacturerDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Manufacturer
   */
  select?: Prisma.ManufacturerSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Manufacturer
   */
  omit?: Prisma.ManufacturerOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ManufacturerInclude<ExtArgs> | null
}
