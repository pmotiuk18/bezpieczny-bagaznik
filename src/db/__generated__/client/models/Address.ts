
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `Address` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Address
 * 
 */
export type AddressModel = runtime.Types.Result.DefaultSelection<Prisma.$AddressPayload>

export type AggregateAddress = {
  _count: AddressCountAggregateOutputType | null
  _avg: AddressAvgAggregateOutputType | null
  _sum: AddressSumAggregateOutputType | null
  _min: AddressMinAggregateOutputType | null
  _max: AddressMaxAggregateOutputType | null
}

export type AddressAvgAggregateOutputType = {
  latitude: number | null
  longitude: number | null
}

export type AddressSumAggregateOutputType = {
  latitude: number | null
  longitude: number | null
}

export type AddressMinAggregateOutputType = {
  id: string | null
  firstname: string | null
  lastname: string | null
  phone: string | null
  addressLineOne: string | null
  doorNumber: string | null
  addressLineTwo: string | null
  zipCode: string | null
  placeId: string | null
  deliveryInstructions: string | null
  city: string | null
  country: string | null
  latitude: number | null
  longitude: number | null
  isDefault: boolean | null
  createdAt: Date | null
  createdBy: string | null
  updatedAt: Date | null
  updatedBy: string | null
  deletedAt: Date | null
  deletedBy: string | null
}

export type AddressMaxAggregateOutputType = {
  id: string | null
  firstname: string | null
  lastname: string | null
  phone: string | null
  addressLineOne: string | null
  doorNumber: string | null
  addressLineTwo: string | null
  zipCode: string | null
  placeId: string | null
  deliveryInstructions: string | null
  city: string | null
  country: string | null
  latitude: number | null
  longitude: number | null
  isDefault: boolean | null
  createdAt: Date | null
  createdBy: string | null
  updatedAt: Date | null
  updatedBy: string | null
  deletedAt: Date | null
  deletedBy: string | null
}

export type AddressCountAggregateOutputType = {
  id: number
  firstname: number
  lastname: number
  phone: number
  addressLineOne: number
  doorNumber: number
  addressLineTwo: number
  zipCode: number
  placeId: number
  deliveryInstructions: number
  city: number
  country: number
  latitude: number
  longitude: number
  isDefault: number
  createdAt: number
  createdBy: number
  updatedAt: number
  updatedBy: number
  deletedAt: number
  deletedBy: number
  _all: number
}


export type AddressAvgAggregateInputType = {
  latitude?: true
  longitude?: true
}

export type AddressSumAggregateInputType = {
  latitude?: true
  longitude?: true
}

export type AddressMinAggregateInputType = {
  id?: true
  firstname?: true
  lastname?: true
  phone?: true
  addressLineOne?: true
  doorNumber?: true
  addressLineTwo?: true
  zipCode?: true
  placeId?: true
  deliveryInstructions?: true
  city?: true
  country?: true
  latitude?: true
  longitude?: true
  isDefault?: true
  createdAt?: true
  createdBy?: true
  updatedAt?: true
  updatedBy?: true
  deletedAt?: true
  deletedBy?: true
}

export type AddressMaxAggregateInputType = {
  id?: true
  firstname?: true
  lastname?: true
  phone?: true
  addressLineOne?: true
  doorNumber?: true
  addressLineTwo?: true
  zipCode?: true
  placeId?: true
  deliveryInstructions?: true
  city?: true
  country?: true
  latitude?: true
  longitude?: true
  isDefault?: true
  createdAt?: true
  createdBy?: true
  updatedAt?: true
  updatedBy?: true
  deletedAt?: true
  deletedBy?: true
}

export type AddressCountAggregateInputType = {
  id?: true
  firstname?: true
  lastname?: true
  phone?: true
  addressLineOne?: true
  doorNumber?: true
  addressLineTwo?: true
  zipCode?: true
  placeId?: true
  deliveryInstructions?: true
  city?: true
  country?: true
  latitude?: true
  longitude?: true
  isDefault?: true
  createdAt?: true
  createdBy?: true
  updatedAt?: true
  updatedBy?: true
  deletedAt?: true
  deletedBy?: true
  _all?: true
}

export type AddressAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Address to aggregate.
   */
  where?: Prisma.AddressWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Addresses to fetch.
   */
  orderBy?: Prisma.AddressOrderByWithRelationInput | Prisma.AddressOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.AddressWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Addresses from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Addresses.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Addresses
  **/
  _count?: true | AddressCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: AddressAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: AddressSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: AddressMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: AddressMaxAggregateInputType
}

export type GetAddressAggregateType<T extends AddressAggregateArgs> = {
      [P in keyof T & keyof AggregateAddress]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateAddress[P]>
    : Prisma.GetScalarType<T[P], AggregateAddress[P]>
}




export type AddressGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.AddressWhereInput
  orderBy?: Prisma.AddressOrderByWithAggregationInput | Prisma.AddressOrderByWithAggregationInput[]
  by: Prisma.AddressScalarFieldEnum[] | Prisma.AddressScalarFieldEnum
  having?: Prisma.AddressScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: AddressCountAggregateInputType | true
  _avg?: AddressAvgAggregateInputType
  _sum?: AddressSumAggregateInputType
  _min?: AddressMinAggregateInputType
  _max?: AddressMaxAggregateInputType
}

export type AddressGroupByOutputType = {
  id: string
  firstname: string | null
  lastname: string | null
  phone: string | null
  addressLineOne: string
  doorNumber: string | null
  addressLineTwo: string | null
  zipCode: string | null
  placeId: string | null
  deliveryInstructions: string | null
  city: string
  country: string | null
  latitude: number | null
  longitude: number | null
  isDefault: boolean
  createdAt: Date
  createdBy: string | null
  updatedAt: Date
  updatedBy: string | null
  deletedAt: Date | null
  deletedBy: string | null
  _count: AddressCountAggregateOutputType | null
  _avg: AddressAvgAggregateOutputType | null
  _sum: AddressSumAggregateOutputType | null
  _min: AddressMinAggregateOutputType | null
  _max: AddressMaxAggregateOutputType | null
}

type GetAddressGroupByPayload<T extends AddressGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<AddressGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof AddressGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], AddressGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], AddressGroupByOutputType[P]>
      }
    >
  > 



export type AddressWhereInput = {
  AND?: Prisma.AddressWhereInput | Prisma.AddressWhereInput[]
  OR?: Prisma.AddressWhereInput[]
  NOT?: Prisma.AddressWhereInput | Prisma.AddressWhereInput[]
  id?: Prisma.StringFilter<"Address"> | string
  firstname?: Prisma.StringNullableFilter<"Address"> | string | null
  lastname?: Prisma.StringNullableFilter<"Address"> | string | null
  phone?: Prisma.StringNullableFilter<"Address"> | string | null
  addressLineOne?: Prisma.StringFilter<"Address"> | string
  doorNumber?: Prisma.StringNullableFilter<"Address"> | string | null
  addressLineTwo?: Prisma.StringNullableFilter<"Address"> | string | null
  zipCode?: Prisma.StringNullableFilter<"Address"> | string | null
  placeId?: Prisma.StringNullableFilter<"Address"> | string | null
  deliveryInstructions?: Prisma.StringNullableFilter<"Address"> | string | null
  city?: Prisma.StringFilter<"Address"> | string
  country?: Prisma.StringNullableFilter<"Address"> | string | null
  latitude?: Prisma.FloatNullableFilter<"Address"> | number | null
  longitude?: Prisma.FloatNullableFilter<"Address"> | number | null
  isDefault?: Prisma.BoolFilter<"Address"> | boolean
  createdAt?: Prisma.DateTimeFilter<"Address"> | Date | string
  createdBy?: Prisma.StringNullableFilter<"Address"> | string | null
  updatedAt?: Prisma.DateTimeFilter<"Address"> | Date | string
  updatedBy?: Prisma.StringNullableFilter<"Address"> | string | null
  deletedAt?: Prisma.DateTimeNullableFilter<"Address"> | Date | string | null
  deletedBy?: Prisma.StringNullableFilter<"Address"> | string | null
  LegalEntity?: Prisma.LegalEntityListRelationFilter
  organizations?: Prisma.OrganizationListRelationFilter
  users?: Prisma.UserListRelationFilter
  orders?: Prisma.OrderListRelationFilter
}

export type AddressOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  firstname?: Prisma.SortOrderInput | Prisma.SortOrder
  lastname?: Prisma.SortOrderInput | Prisma.SortOrder
  phone?: Prisma.SortOrderInput | Prisma.SortOrder
  addressLineOne?: Prisma.SortOrder
  doorNumber?: Prisma.SortOrderInput | Prisma.SortOrder
  addressLineTwo?: Prisma.SortOrderInput | Prisma.SortOrder
  zipCode?: Prisma.SortOrderInput | Prisma.SortOrder
  placeId?: Prisma.SortOrderInput | Prisma.SortOrder
  deliveryInstructions?: Prisma.SortOrderInput | Prisma.SortOrder
  city?: Prisma.SortOrder
  country?: Prisma.SortOrderInput | Prisma.SortOrder
  latitude?: Prisma.SortOrderInput | Prisma.SortOrder
  longitude?: Prisma.SortOrderInput | Prisma.SortOrder
  isDefault?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  createdBy?: Prisma.SortOrderInput | Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  updatedBy?: Prisma.SortOrderInput | Prisma.SortOrder
  deletedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  deletedBy?: Prisma.SortOrderInput | Prisma.SortOrder
  LegalEntity?: Prisma.LegalEntityOrderByRelationAggregateInput
  organizations?: Prisma.OrganizationOrderByRelationAggregateInput
  users?: Prisma.UserOrderByRelationAggregateInput
  orders?: Prisma.OrderOrderByRelationAggregateInput
}

export type AddressWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.AddressWhereInput | Prisma.AddressWhereInput[]
  OR?: Prisma.AddressWhereInput[]
  NOT?: Prisma.AddressWhereInput | Prisma.AddressWhereInput[]
  firstname?: Prisma.StringNullableFilter<"Address"> | string | null
  lastname?: Prisma.StringNullableFilter<"Address"> | string | null
  phone?: Prisma.StringNullableFilter<"Address"> | string | null
  addressLineOne?: Prisma.StringFilter<"Address"> | string
  doorNumber?: Prisma.StringNullableFilter<"Address"> | string | null
  addressLineTwo?: Prisma.StringNullableFilter<"Address"> | string | null
  zipCode?: Prisma.StringNullableFilter<"Address"> | string | null
  placeId?: Prisma.StringNullableFilter<"Address"> | string | null
  deliveryInstructions?: Prisma.StringNullableFilter<"Address"> | string | null
  city?: Prisma.StringFilter<"Address"> | string
  country?: Prisma.StringNullableFilter<"Address"> | string | null
  latitude?: Prisma.FloatNullableFilter<"Address"> | number | null
  longitude?: Prisma.FloatNullableFilter<"Address"> | number | null
  isDefault?: Prisma.BoolFilter<"Address"> | boolean
  createdAt?: Prisma.DateTimeFilter<"Address"> | Date | string
  createdBy?: Prisma.StringNullableFilter<"Address"> | string | null
  updatedAt?: Prisma.DateTimeFilter<"Address"> | Date | string
  updatedBy?: Prisma.StringNullableFilter<"Address"> | string | null
  deletedAt?: Prisma.DateTimeNullableFilter<"Address"> | Date | string | null
  deletedBy?: Prisma.StringNullableFilter<"Address"> | string | null
  LegalEntity?: Prisma.LegalEntityListRelationFilter
  organizations?: Prisma.OrganizationListRelationFilter
  users?: Prisma.UserListRelationFilter
  orders?: Prisma.OrderListRelationFilter
}, "id">

export type AddressOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  firstname?: Prisma.SortOrderInput | Prisma.SortOrder
  lastname?: Prisma.SortOrderInput | Prisma.SortOrder
  phone?: Prisma.SortOrderInput | Prisma.SortOrder
  addressLineOne?: Prisma.SortOrder
  doorNumber?: Prisma.SortOrderInput | Prisma.SortOrder
  addressLineTwo?: Prisma.SortOrderInput | Prisma.SortOrder
  zipCode?: Prisma.SortOrderInput | Prisma.SortOrder
  placeId?: Prisma.SortOrderInput | Prisma.SortOrder
  deliveryInstructions?: Prisma.SortOrderInput | Prisma.SortOrder
  city?: Prisma.SortOrder
  country?: Prisma.SortOrderInput | Prisma.SortOrder
  latitude?: Prisma.SortOrderInput | Prisma.SortOrder
  longitude?: Prisma.SortOrderInput | Prisma.SortOrder
  isDefault?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  createdBy?: Prisma.SortOrderInput | Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  updatedBy?: Prisma.SortOrderInput | Prisma.SortOrder
  deletedAt?: Prisma.SortOrderInput | Prisma.SortOrder
  deletedBy?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.AddressCountOrderByAggregateInput
  _avg?: Prisma.AddressAvgOrderByAggregateInput
  _max?: Prisma.AddressMaxOrderByAggregateInput
  _min?: Prisma.AddressMinOrderByAggregateInput
  _sum?: Prisma.AddressSumOrderByAggregateInput
}

export type AddressScalarWhereWithAggregatesInput = {
  AND?: Prisma.AddressScalarWhereWithAggregatesInput | Prisma.AddressScalarWhereWithAggregatesInput[]
  OR?: Prisma.AddressScalarWhereWithAggregatesInput[]
  NOT?: Prisma.AddressScalarWhereWithAggregatesInput | Prisma.AddressScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Address"> | string
  firstname?: Prisma.StringNullableWithAggregatesFilter<"Address"> | string | null
  lastname?: Prisma.StringNullableWithAggregatesFilter<"Address"> | string | null
  phone?: Prisma.StringNullableWithAggregatesFilter<"Address"> | string | null
  addressLineOne?: Prisma.StringWithAggregatesFilter<"Address"> | string
  doorNumber?: Prisma.StringNullableWithAggregatesFilter<"Address"> | string | null
  addressLineTwo?: Prisma.StringNullableWithAggregatesFilter<"Address"> | string | null
  zipCode?: Prisma.StringNullableWithAggregatesFilter<"Address"> | string | null
  placeId?: Prisma.StringNullableWithAggregatesFilter<"Address"> | string | null
  deliveryInstructions?: Prisma.StringNullableWithAggregatesFilter<"Address"> | string | null
  city?: Prisma.StringWithAggregatesFilter<"Address"> | string
  country?: Prisma.StringNullableWithAggregatesFilter<"Address"> | string | null
  latitude?: Prisma.FloatNullableWithAggregatesFilter<"Address"> | number | null
  longitude?: Prisma.FloatNullableWithAggregatesFilter<"Address"> | number | null
  isDefault?: Prisma.BoolWithAggregatesFilter<"Address"> | boolean
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Address"> | Date | string
  createdBy?: Prisma.StringNullableWithAggregatesFilter<"Address"> | string | null
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Address"> | Date | string
  updatedBy?: Prisma.StringNullableWithAggregatesFilter<"Address"> | string | null
  deletedAt?: Prisma.DateTimeNullableWithAggregatesFilter<"Address"> | Date | string | null
  deletedBy?: Prisma.StringNullableWithAggregatesFilter<"Address"> | string | null
}

export type AddressCreateInput = {
  id?: string
  firstname?: string | null
  lastname?: string | null
  phone?: string | null
  addressLineOne: string
  doorNumber?: string | null
  addressLineTwo?: string | null
  zipCode?: string | null
  placeId?: string | null
  deliveryInstructions?: string | null
  city: string
  country?: string | null
  latitude?: number | null
  longitude?: number | null
  isDefault?: boolean
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
  deletedAt?: Date | string | null
  deletedBy?: string | null
  LegalEntity?: Prisma.LegalEntityCreateNestedManyWithoutAddressInput
  organizations?: Prisma.OrganizationCreateNestedManyWithoutAddressInput
  users?: Prisma.UserCreateNestedManyWithoutShippingAddressesInput
  orders?: Prisma.OrderCreateNestedManyWithoutShippingAddressInput
}

export type AddressUncheckedCreateInput = {
  id?: string
  firstname?: string | null
  lastname?: string | null
  phone?: string | null
  addressLineOne: string
  doorNumber?: string | null
  addressLineTwo?: string | null
  zipCode?: string | null
  placeId?: string | null
  deliveryInstructions?: string | null
  city: string
  country?: string | null
  latitude?: number | null
  longitude?: number | null
  isDefault?: boolean
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
  deletedAt?: Date | string | null
  deletedBy?: string | null
  LegalEntity?: Prisma.LegalEntityUncheckedCreateNestedManyWithoutAddressInput
  organizations?: Prisma.OrganizationUncheckedCreateNestedManyWithoutAddressInput
  users?: Prisma.UserUncheckedCreateNestedManyWithoutShippingAddressesInput
  orders?: Prisma.OrderUncheckedCreateNestedManyWithoutShippingAddressInput
}

export type AddressUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  firstname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressLineOne?: Prisma.StringFieldUpdateOperationsInput | string
  doorNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressLineTwo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  zipCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  placeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deliveryInstructions?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.StringFieldUpdateOperationsInput | string
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  longitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  isDefault?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  LegalEntity?: Prisma.LegalEntityUpdateManyWithoutAddressNestedInput
  organizations?: Prisma.OrganizationUpdateManyWithoutAddressNestedInput
  users?: Prisma.UserUpdateManyWithoutShippingAddressesNestedInput
  orders?: Prisma.OrderUpdateManyWithoutShippingAddressNestedInput
}

export type AddressUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  firstname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressLineOne?: Prisma.StringFieldUpdateOperationsInput | string
  doorNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressLineTwo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  zipCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  placeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deliveryInstructions?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.StringFieldUpdateOperationsInput | string
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  longitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  isDefault?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  LegalEntity?: Prisma.LegalEntityUncheckedUpdateManyWithoutAddressNestedInput
  organizations?: Prisma.OrganizationUncheckedUpdateManyWithoutAddressNestedInput
  users?: Prisma.UserUncheckedUpdateManyWithoutShippingAddressesNestedInput
  orders?: Prisma.OrderUncheckedUpdateManyWithoutShippingAddressNestedInput
}

export type AddressCreateManyInput = {
  id?: string
  firstname?: string | null
  lastname?: string | null
  phone?: string | null
  addressLineOne: string
  doorNumber?: string | null
  addressLineTwo?: string | null
  zipCode?: string | null
  placeId?: string | null
  deliveryInstructions?: string | null
  city: string
  country?: string | null
  latitude?: number | null
  longitude?: number | null
  isDefault?: boolean
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
  deletedAt?: Date | string | null
  deletedBy?: string | null
}

export type AddressUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  firstname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressLineOne?: Prisma.StringFieldUpdateOperationsInput | string
  doorNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressLineTwo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  zipCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  placeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deliveryInstructions?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.StringFieldUpdateOperationsInput | string
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  longitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  isDefault?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type AddressUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  firstname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressLineOne?: Prisma.StringFieldUpdateOperationsInput | string
  doorNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressLineTwo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  zipCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  placeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deliveryInstructions?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.StringFieldUpdateOperationsInput | string
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  longitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  isDefault?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type AddressListRelationFilter = {
  every?: Prisma.AddressWhereInput
  some?: Prisma.AddressWhereInput
  none?: Prisma.AddressWhereInput
}

export type AddressOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type AddressScalarRelationFilter = {
  is?: Prisma.AddressWhereInput
  isNot?: Prisma.AddressWhereInput
}

export type AddressCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  firstname?: Prisma.SortOrder
  lastname?: Prisma.SortOrder
  phone?: Prisma.SortOrder
  addressLineOne?: Prisma.SortOrder
  doorNumber?: Prisma.SortOrder
  addressLineTwo?: Prisma.SortOrder
  zipCode?: Prisma.SortOrder
  placeId?: Prisma.SortOrder
  deliveryInstructions?: Prisma.SortOrder
  city?: Prisma.SortOrder
  country?: Prisma.SortOrder
  latitude?: Prisma.SortOrder
  longitude?: Prisma.SortOrder
  isDefault?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  createdBy?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  updatedBy?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrder
  deletedBy?: Prisma.SortOrder
}

export type AddressAvgOrderByAggregateInput = {
  latitude?: Prisma.SortOrder
  longitude?: Prisma.SortOrder
}

export type AddressMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  firstname?: Prisma.SortOrder
  lastname?: Prisma.SortOrder
  phone?: Prisma.SortOrder
  addressLineOne?: Prisma.SortOrder
  doorNumber?: Prisma.SortOrder
  addressLineTwo?: Prisma.SortOrder
  zipCode?: Prisma.SortOrder
  placeId?: Prisma.SortOrder
  deliveryInstructions?: Prisma.SortOrder
  city?: Prisma.SortOrder
  country?: Prisma.SortOrder
  latitude?: Prisma.SortOrder
  longitude?: Prisma.SortOrder
  isDefault?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  createdBy?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  updatedBy?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrder
  deletedBy?: Prisma.SortOrder
}

export type AddressMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  firstname?: Prisma.SortOrder
  lastname?: Prisma.SortOrder
  phone?: Prisma.SortOrder
  addressLineOne?: Prisma.SortOrder
  doorNumber?: Prisma.SortOrder
  addressLineTwo?: Prisma.SortOrder
  zipCode?: Prisma.SortOrder
  placeId?: Prisma.SortOrder
  deliveryInstructions?: Prisma.SortOrder
  city?: Prisma.SortOrder
  country?: Prisma.SortOrder
  latitude?: Prisma.SortOrder
  longitude?: Prisma.SortOrder
  isDefault?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  createdBy?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  updatedBy?: Prisma.SortOrder
  deletedAt?: Prisma.SortOrder
  deletedBy?: Prisma.SortOrder
}

export type AddressSumOrderByAggregateInput = {
  latitude?: Prisma.SortOrder
  longitude?: Prisma.SortOrder
}

export type AddressNullableScalarRelationFilter = {
  is?: Prisma.AddressWhereInput | null
  isNot?: Prisma.AddressWhereInput | null
}

export type AddressCreateNestedManyWithoutUsersInput = {
  create?: Prisma.XOR<Prisma.AddressCreateWithoutUsersInput, Prisma.AddressUncheckedCreateWithoutUsersInput> | Prisma.AddressCreateWithoutUsersInput[] | Prisma.AddressUncheckedCreateWithoutUsersInput[]
  connectOrCreate?: Prisma.AddressCreateOrConnectWithoutUsersInput | Prisma.AddressCreateOrConnectWithoutUsersInput[]
  connect?: Prisma.AddressWhereUniqueInput | Prisma.AddressWhereUniqueInput[]
}

export type AddressUncheckedCreateNestedManyWithoutUsersInput = {
  create?: Prisma.XOR<Prisma.AddressCreateWithoutUsersInput, Prisma.AddressUncheckedCreateWithoutUsersInput> | Prisma.AddressCreateWithoutUsersInput[] | Prisma.AddressUncheckedCreateWithoutUsersInput[]
  connectOrCreate?: Prisma.AddressCreateOrConnectWithoutUsersInput | Prisma.AddressCreateOrConnectWithoutUsersInput[]
  connect?: Prisma.AddressWhereUniqueInput | Prisma.AddressWhereUniqueInput[]
}

export type AddressUpdateManyWithoutUsersNestedInput = {
  create?: Prisma.XOR<Prisma.AddressCreateWithoutUsersInput, Prisma.AddressUncheckedCreateWithoutUsersInput> | Prisma.AddressCreateWithoutUsersInput[] | Prisma.AddressUncheckedCreateWithoutUsersInput[]
  connectOrCreate?: Prisma.AddressCreateOrConnectWithoutUsersInput | Prisma.AddressCreateOrConnectWithoutUsersInput[]
  upsert?: Prisma.AddressUpsertWithWhereUniqueWithoutUsersInput | Prisma.AddressUpsertWithWhereUniqueWithoutUsersInput[]
  set?: Prisma.AddressWhereUniqueInput | Prisma.AddressWhereUniqueInput[]
  disconnect?: Prisma.AddressWhereUniqueInput | Prisma.AddressWhereUniqueInput[]
  delete?: Prisma.AddressWhereUniqueInput | Prisma.AddressWhereUniqueInput[]
  connect?: Prisma.AddressWhereUniqueInput | Prisma.AddressWhereUniqueInput[]
  update?: Prisma.AddressUpdateWithWhereUniqueWithoutUsersInput | Prisma.AddressUpdateWithWhereUniqueWithoutUsersInput[]
  updateMany?: Prisma.AddressUpdateManyWithWhereWithoutUsersInput | Prisma.AddressUpdateManyWithWhereWithoutUsersInput[]
  deleteMany?: Prisma.AddressScalarWhereInput | Prisma.AddressScalarWhereInput[]
}

export type AddressUncheckedUpdateManyWithoutUsersNestedInput = {
  create?: Prisma.XOR<Prisma.AddressCreateWithoutUsersInput, Prisma.AddressUncheckedCreateWithoutUsersInput> | Prisma.AddressCreateWithoutUsersInput[] | Prisma.AddressUncheckedCreateWithoutUsersInput[]
  connectOrCreate?: Prisma.AddressCreateOrConnectWithoutUsersInput | Prisma.AddressCreateOrConnectWithoutUsersInput[]
  upsert?: Prisma.AddressUpsertWithWhereUniqueWithoutUsersInput | Prisma.AddressUpsertWithWhereUniqueWithoutUsersInput[]
  set?: Prisma.AddressWhereUniqueInput | Prisma.AddressWhereUniqueInput[]
  disconnect?: Prisma.AddressWhereUniqueInput | Prisma.AddressWhereUniqueInput[]
  delete?: Prisma.AddressWhereUniqueInput | Prisma.AddressWhereUniqueInput[]
  connect?: Prisma.AddressWhereUniqueInput | Prisma.AddressWhereUniqueInput[]
  update?: Prisma.AddressUpdateWithWhereUniqueWithoutUsersInput | Prisma.AddressUpdateWithWhereUniqueWithoutUsersInput[]
  updateMany?: Prisma.AddressUpdateManyWithWhereWithoutUsersInput | Prisma.AddressUpdateManyWithWhereWithoutUsersInput[]
  deleteMany?: Prisma.AddressScalarWhereInput | Prisma.AddressScalarWhereInput[]
}

export type AddressCreateNestedOneWithoutOrganizationsInput = {
  create?: Prisma.XOR<Prisma.AddressCreateWithoutOrganizationsInput, Prisma.AddressUncheckedCreateWithoutOrganizationsInput>
  connectOrCreate?: Prisma.AddressCreateOrConnectWithoutOrganizationsInput
  connect?: Prisma.AddressWhereUniqueInput
}

export type AddressUpdateOneRequiredWithoutOrganizationsNestedInput = {
  create?: Prisma.XOR<Prisma.AddressCreateWithoutOrganizationsInput, Prisma.AddressUncheckedCreateWithoutOrganizationsInput>
  connectOrCreate?: Prisma.AddressCreateOrConnectWithoutOrganizationsInput
  upsert?: Prisma.AddressUpsertWithoutOrganizationsInput
  connect?: Prisma.AddressWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.AddressUpdateToOneWithWhereWithoutOrganizationsInput, Prisma.AddressUpdateWithoutOrganizationsInput>, Prisma.AddressUncheckedUpdateWithoutOrganizationsInput>
}

export type NullableFloatFieldUpdateOperationsInput = {
  set?: number | null
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type AddressCreateNestedOneWithoutLegalEntityInput = {
  create?: Prisma.XOR<Prisma.AddressCreateWithoutLegalEntityInput, Prisma.AddressUncheckedCreateWithoutLegalEntityInput>
  connectOrCreate?: Prisma.AddressCreateOrConnectWithoutLegalEntityInput
  connect?: Prisma.AddressWhereUniqueInput
}

export type AddressUpdateOneRequiredWithoutLegalEntityNestedInput = {
  create?: Prisma.XOR<Prisma.AddressCreateWithoutLegalEntityInput, Prisma.AddressUncheckedCreateWithoutLegalEntityInput>
  connectOrCreate?: Prisma.AddressCreateOrConnectWithoutLegalEntityInput
  upsert?: Prisma.AddressUpsertWithoutLegalEntityInput
  connect?: Prisma.AddressWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.AddressUpdateToOneWithWhereWithoutLegalEntityInput, Prisma.AddressUpdateWithoutLegalEntityInput>, Prisma.AddressUncheckedUpdateWithoutLegalEntityInput>
}

export type AddressCreateNestedOneWithoutOrdersInput = {
  create?: Prisma.XOR<Prisma.AddressCreateWithoutOrdersInput, Prisma.AddressUncheckedCreateWithoutOrdersInput>
  connectOrCreate?: Prisma.AddressCreateOrConnectWithoutOrdersInput
  connect?: Prisma.AddressWhereUniqueInput
}

export type AddressUpdateOneWithoutOrdersNestedInput = {
  create?: Prisma.XOR<Prisma.AddressCreateWithoutOrdersInput, Prisma.AddressUncheckedCreateWithoutOrdersInput>
  connectOrCreate?: Prisma.AddressCreateOrConnectWithoutOrdersInput
  upsert?: Prisma.AddressUpsertWithoutOrdersInput
  disconnect?: Prisma.AddressWhereInput | boolean
  delete?: Prisma.AddressWhereInput | boolean
  connect?: Prisma.AddressWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.AddressUpdateToOneWithWhereWithoutOrdersInput, Prisma.AddressUpdateWithoutOrdersInput>, Prisma.AddressUncheckedUpdateWithoutOrdersInput>
}

export type AddressCreateWithoutUsersInput = {
  id?: string
  firstname?: string | null
  lastname?: string | null
  phone?: string | null
  addressLineOne: string
  doorNumber?: string | null
  addressLineTwo?: string | null
  zipCode?: string | null
  placeId?: string | null
  deliveryInstructions?: string | null
  city: string
  country?: string | null
  latitude?: number | null
  longitude?: number | null
  isDefault?: boolean
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
  deletedAt?: Date | string | null
  deletedBy?: string | null
  LegalEntity?: Prisma.LegalEntityCreateNestedManyWithoutAddressInput
  organizations?: Prisma.OrganizationCreateNestedManyWithoutAddressInput
  orders?: Prisma.OrderCreateNestedManyWithoutShippingAddressInput
}

export type AddressUncheckedCreateWithoutUsersInput = {
  id?: string
  firstname?: string | null
  lastname?: string | null
  phone?: string | null
  addressLineOne: string
  doorNumber?: string | null
  addressLineTwo?: string | null
  zipCode?: string | null
  placeId?: string | null
  deliveryInstructions?: string | null
  city: string
  country?: string | null
  latitude?: number | null
  longitude?: number | null
  isDefault?: boolean
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
  deletedAt?: Date | string | null
  deletedBy?: string | null
  LegalEntity?: Prisma.LegalEntityUncheckedCreateNestedManyWithoutAddressInput
  organizations?: Prisma.OrganizationUncheckedCreateNestedManyWithoutAddressInput
  orders?: Prisma.OrderUncheckedCreateNestedManyWithoutShippingAddressInput
}

export type AddressCreateOrConnectWithoutUsersInput = {
  where: Prisma.AddressWhereUniqueInput
  create: Prisma.XOR<Prisma.AddressCreateWithoutUsersInput, Prisma.AddressUncheckedCreateWithoutUsersInput>
}

export type AddressUpsertWithWhereUniqueWithoutUsersInput = {
  where: Prisma.AddressWhereUniqueInput
  update: Prisma.XOR<Prisma.AddressUpdateWithoutUsersInput, Prisma.AddressUncheckedUpdateWithoutUsersInput>
  create: Prisma.XOR<Prisma.AddressCreateWithoutUsersInput, Prisma.AddressUncheckedCreateWithoutUsersInput>
}

export type AddressUpdateWithWhereUniqueWithoutUsersInput = {
  where: Prisma.AddressWhereUniqueInput
  data: Prisma.XOR<Prisma.AddressUpdateWithoutUsersInput, Prisma.AddressUncheckedUpdateWithoutUsersInput>
}

export type AddressUpdateManyWithWhereWithoutUsersInput = {
  where: Prisma.AddressScalarWhereInput
  data: Prisma.XOR<Prisma.AddressUpdateManyMutationInput, Prisma.AddressUncheckedUpdateManyWithoutUsersInput>
}

export type AddressScalarWhereInput = {
  AND?: Prisma.AddressScalarWhereInput | Prisma.AddressScalarWhereInput[]
  OR?: Prisma.AddressScalarWhereInput[]
  NOT?: Prisma.AddressScalarWhereInput | Prisma.AddressScalarWhereInput[]
  id?: Prisma.StringFilter<"Address"> | string
  firstname?: Prisma.StringNullableFilter<"Address"> | string | null
  lastname?: Prisma.StringNullableFilter<"Address"> | string | null
  phone?: Prisma.StringNullableFilter<"Address"> | string | null
  addressLineOne?: Prisma.StringFilter<"Address"> | string
  doorNumber?: Prisma.StringNullableFilter<"Address"> | string | null
  addressLineTwo?: Prisma.StringNullableFilter<"Address"> | string | null
  zipCode?: Prisma.StringNullableFilter<"Address"> | string | null
  placeId?: Prisma.StringNullableFilter<"Address"> | string | null
  deliveryInstructions?: Prisma.StringNullableFilter<"Address"> | string | null
  city?: Prisma.StringFilter<"Address"> | string
  country?: Prisma.StringNullableFilter<"Address"> | string | null
  latitude?: Prisma.FloatNullableFilter<"Address"> | number | null
  longitude?: Prisma.FloatNullableFilter<"Address"> | number | null
  isDefault?: Prisma.BoolFilter<"Address"> | boolean
  createdAt?: Prisma.DateTimeFilter<"Address"> | Date | string
  createdBy?: Prisma.StringNullableFilter<"Address"> | string | null
  updatedAt?: Prisma.DateTimeFilter<"Address"> | Date | string
  updatedBy?: Prisma.StringNullableFilter<"Address"> | string | null
  deletedAt?: Prisma.DateTimeNullableFilter<"Address"> | Date | string | null
  deletedBy?: Prisma.StringNullableFilter<"Address"> | string | null
}

export type AddressCreateWithoutOrganizationsInput = {
  id?: string
  firstname?: string | null
  lastname?: string | null
  phone?: string | null
  addressLineOne: string
  doorNumber?: string | null
  addressLineTwo?: string | null
  zipCode?: string | null
  placeId?: string | null
  deliveryInstructions?: string | null
  city: string
  country?: string | null
  latitude?: number | null
  longitude?: number | null
  isDefault?: boolean
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
  deletedAt?: Date | string | null
  deletedBy?: string | null
  LegalEntity?: Prisma.LegalEntityCreateNestedManyWithoutAddressInput
  users?: Prisma.UserCreateNestedManyWithoutShippingAddressesInput
  orders?: Prisma.OrderCreateNestedManyWithoutShippingAddressInput
}

export type AddressUncheckedCreateWithoutOrganizationsInput = {
  id?: string
  firstname?: string | null
  lastname?: string | null
  phone?: string | null
  addressLineOne: string
  doorNumber?: string | null
  addressLineTwo?: string | null
  zipCode?: string | null
  placeId?: string | null
  deliveryInstructions?: string | null
  city: string
  country?: string | null
  latitude?: number | null
  longitude?: number | null
  isDefault?: boolean
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
  deletedAt?: Date | string | null
  deletedBy?: string | null
  LegalEntity?: Prisma.LegalEntityUncheckedCreateNestedManyWithoutAddressInput
  users?: Prisma.UserUncheckedCreateNestedManyWithoutShippingAddressesInput
  orders?: Prisma.OrderUncheckedCreateNestedManyWithoutShippingAddressInput
}

export type AddressCreateOrConnectWithoutOrganizationsInput = {
  where: Prisma.AddressWhereUniqueInput
  create: Prisma.XOR<Prisma.AddressCreateWithoutOrganizationsInput, Prisma.AddressUncheckedCreateWithoutOrganizationsInput>
}

export type AddressUpsertWithoutOrganizationsInput = {
  update: Prisma.XOR<Prisma.AddressUpdateWithoutOrganizationsInput, Prisma.AddressUncheckedUpdateWithoutOrganizationsInput>
  create: Prisma.XOR<Prisma.AddressCreateWithoutOrganizationsInput, Prisma.AddressUncheckedCreateWithoutOrganizationsInput>
  where?: Prisma.AddressWhereInput
}

export type AddressUpdateToOneWithWhereWithoutOrganizationsInput = {
  where?: Prisma.AddressWhereInput
  data: Prisma.XOR<Prisma.AddressUpdateWithoutOrganizationsInput, Prisma.AddressUncheckedUpdateWithoutOrganizationsInput>
}

export type AddressUpdateWithoutOrganizationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  firstname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressLineOne?: Prisma.StringFieldUpdateOperationsInput | string
  doorNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressLineTwo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  zipCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  placeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deliveryInstructions?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.StringFieldUpdateOperationsInput | string
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  longitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  isDefault?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  LegalEntity?: Prisma.LegalEntityUpdateManyWithoutAddressNestedInput
  users?: Prisma.UserUpdateManyWithoutShippingAddressesNestedInput
  orders?: Prisma.OrderUpdateManyWithoutShippingAddressNestedInput
}

export type AddressUncheckedUpdateWithoutOrganizationsInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  firstname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressLineOne?: Prisma.StringFieldUpdateOperationsInput | string
  doorNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressLineTwo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  zipCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  placeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deliveryInstructions?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.StringFieldUpdateOperationsInput | string
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  longitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  isDefault?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  LegalEntity?: Prisma.LegalEntityUncheckedUpdateManyWithoutAddressNestedInput
  users?: Prisma.UserUncheckedUpdateManyWithoutShippingAddressesNestedInput
  orders?: Prisma.OrderUncheckedUpdateManyWithoutShippingAddressNestedInput
}

export type AddressCreateWithoutLegalEntityInput = {
  id?: string
  firstname?: string | null
  lastname?: string | null
  phone?: string | null
  addressLineOne: string
  doorNumber?: string | null
  addressLineTwo?: string | null
  zipCode?: string | null
  placeId?: string | null
  deliveryInstructions?: string | null
  city: string
  country?: string | null
  latitude?: number | null
  longitude?: number | null
  isDefault?: boolean
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
  deletedAt?: Date | string | null
  deletedBy?: string | null
  organizations?: Prisma.OrganizationCreateNestedManyWithoutAddressInput
  users?: Prisma.UserCreateNestedManyWithoutShippingAddressesInput
  orders?: Prisma.OrderCreateNestedManyWithoutShippingAddressInput
}

export type AddressUncheckedCreateWithoutLegalEntityInput = {
  id?: string
  firstname?: string | null
  lastname?: string | null
  phone?: string | null
  addressLineOne: string
  doorNumber?: string | null
  addressLineTwo?: string | null
  zipCode?: string | null
  placeId?: string | null
  deliveryInstructions?: string | null
  city: string
  country?: string | null
  latitude?: number | null
  longitude?: number | null
  isDefault?: boolean
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
  deletedAt?: Date | string | null
  deletedBy?: string | null
  organizations?: Prisma.OrganizationUncheckedCreateNestedManyWithoutAddressInput
  users?: Prisma.UserUncheckedCreateNestedManyWithoutShippingAddressesInput
  orders?: Prisma.OrderUncheckedCreateNestedManyWithoutShippingAddressInput
}

export type AddressCreateOrConnectWithoutLegalEntityInput = {
  where: Prisma.AddressWhereUniqueInput
  create: Prisma.XOR<Prisma.AddressCreateWithoutLegalEntityInput, Prisma.AddressUncheckedCreateWithoutLegalEntityInput>
}

export type AddressUpsertWithoutLegalEntityInput = {
  update: Prisma.XOR<Prisma.AddressUpdateWithoutLegalEntityInput, Prisma.AddressUncheckedUpdateWithoutLegalEntityInput>
  create: Prisma.XOR<Prisma.AddressCreateWithoutLegalEntityInput, Prisma.AddressUncheckedCreateWithoutLegalEntityInput>
  where?: Prisma.AddressWhereInput
}

export type AddressUpdateToOneWithWhereWithoutLegalEntityInput = {
  where?: Prisma.AddressWhereInput
  data: Prisma.XOR<Prisma.AddressUpdateWithoutLegalEntityInput, Prisma.AddressUncheckedUpdateWithoutLegalEntityInput>
}

export type AddressUpdateWithoutLegalEntityInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  firstname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressLineOne?: Prisma.StringFieldUpdateOperationsInput | string
  doorNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressLineTwo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  zipCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  placeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deliveryInstructions?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.StringFieldUpdateOperationsInput | string
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  longitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  isDefault?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizations?: Prisma.OrganizationUpdateManyWithoutAddressNestedInput
  users?: Prisma.UserUpdateManyWithoutShippingAddressesNestedInput
  orders?: Prisma.OrderUpdateManyWithoutShippingAddressNestedInput
}

export type AddressUncheckedUpdateWithoutLegalEntityInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  firstname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressLineOne?: Prisma.StringFieldUpdateOperationsInput | string
  doorNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressLineTwo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  zipCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  placeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deliveryInstructions?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.StringFieldUpdateOperationsInput | string
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  longitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  isDefault?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  organizations?: Prisma.OrganizationUncheckedUpdateManyWithoutAddressNestedInput
  users?: Prisma.UserUncheckedUpdateManyWithoutShippingAddressesNestedInput
  orders?: Prisma.OrderUncheckedUpdateManyWithoutShippingAddressNestedInput
}

export type AddressCreateWithoutOrdersInput = {
  id?: string
  firstname?: string | null
  lastname?: string | null
  phone?: string | null
  addressLineOne: string
  doorNumber?: string | null
  addressLineTwo?: string | null
  zipCode?: string | null
  placeId?: string | null
  deliveryInstructions?: string | null
  city: string
  country?: string | null
  latitude?: number | null
  longitude?: number | null
  isDefault?: boolean
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
  deletedAt?: Date | string | null
  deletedBy?: string | null
  LegalEntity?: Prisma.LegalEntityCreateNestedManyWithoutAddressInput
  organizations?: Prisma.OrganizationCreateNestedManyWithoutAddressInput
  users?: Prisma.UserCreateNestedManyWithoutShippingAddressesInput
}

export type AddressUncheckedCreateWithoutOrdersInput = {
  id?: string
  firstname?: string | null
  lastname?: string | null
  phone?: string | null
  addressLineOne: string
  doorNumber?: string | null
  addressLineTwo?: string | null
  zipCode?: string | null
  placeId?: string | null
  deliveryInstructions?: string | null
  city: string
  country?: string | null
  latitude?: number | null
  longitude?: number | null
  isDefault?: boolean
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
  deletedAt?: Date | string | null
  deletedBy?: string | null
  LegalEntity?: Prisma.LegalEntityUncheckedCreateNestedManyWithoutAddressInput
  organizations?: Prisma.OrganizationUncheckedCreateNestedManyWithoutAddressInput
  users?: Prisma.UserUncheckedCreateNestedManyWithoutShippingAddressesInput
}

export type AddressCreateOrConnectWithoutOrdersInput = {
  where: Prisma.AddressWhereUniqueInput
  create: Prisma.XOR<Prisma.AddressCreateWithoutOrdersInput, Prisma.AddressUncheckedCreateWithoutOrdersInput>
}

export type AddressUpsertWithoutOrdersInput = {
  update: Prisma.XOR<Prisma.AddressUpdateWithoutOrdersInput, Prisma.AddressUncheckedUpdateWithoutOrdersInput>
  create: Prisma.XOR<Prisma.AddressCreateWithoutOrdersInput, Prisma.AddressUncheckedCreateWithoutOrdersInput>
  where?: Prisma.AddressWhereInput
}

export type AddressUpdateToOneWithWhereWithoutOrdersInput = {
  where?: Prisma.AddressWhereInput
  data: Prisma.XOR<Prisma.AddressUpdateWithoutOrdersInput, Prisma.AddressUncheckedUpdateWithoutOrdersInput>
}

export type AddressUpdateWithoutOrdersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  firstname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressLineOne?: Prisma.StringFieldUpdateOperationsInput | string
  doorNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressLineTwo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  zipCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  placeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deliveryInstructions?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.StringFieldUpdateOperationsInput | string
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  longitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  isDefault?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  LegalEntity?: Prisma.LegalEntityUpdateManyWithoutAddressNestedInput
  organizations?: Prisma.OrganizationUpdateManyWithoutAddressNestedInput
  users?: Prisma.UserUpdateManyWithoutShippingAddressesNestedInput
}

export type AddressUncheckedUpdateWithoutOrdersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  firstname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressLineOne?: Prisma.StringFieldUpdateOperationsInput | string
  doorNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressLineTwo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  zipCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  placeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deliveryInstructions?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.StringFieldUpdateOperationsInput | string
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  longitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  isDefault?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  LegalEntity?: Prisma.LegalEntityUncheckedUpdateManyWithoutAddressNestedInput
  organizations?: Prisma.OrganizationUncheckedUpdateManyWithoutAddressNestedInput
  users?: Prisma.UserUncheckedUpdateManyWithoutShippingAddressesNestedInput
}

export type AddressUpdateWithoutUsersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  firstname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressLineOne?: Prisma.StringFieldUpdateOperationsInput | string
  doorNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressLineTwo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  zipCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  placeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deliveryInstructions?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.StringFieldUpdateOperationsInput | string
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  longitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  isDefault?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  LegalEntity?: Prisma.LegalEntityUpdateManyWithoutAddressNestedInput
  organizations?: Prisma.OrganizationUpdateManyWithoutAddressNestedInput
  orders?: Prisma.OrderUpdateManyWithoutShippingAddressNestedInput
}

export type AddressUncheckedUpdateWithoutUsersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  firstname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressLineOne?: Prisma.StringFieldUpdateOperationsInput | string
  doorNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressLineTwo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  zipCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  placeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deliveryInstructions?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.StringFieldUpdateOperationsInput | string
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  longitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  isDefault?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  LegalEntity?: Prisma.LegalEntityUncheckedUpdateManyWithoutAddressNestedInput
  organizations?: Prisma.OrganizationUncheckedUpdateManyWithoutAddressNestedInput
  orders?: Prisma.OrderUncheckedUpdateManyWithoutShippingAddressNestedInput
}

export type AddressUncheckedUpdateManyWithoutUsersInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  firstname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  lastname?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  phone?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressLineOne?: Prisma.StringFieldUpdateOperationsInput | string
  doorNumber?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  addressLineTwo?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  zipCode?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  placeId?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deliveryInstructions?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  city?: Prisma.StringFieldUpdateOperationsInput | string
  country?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  latitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  longitude?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  isDefault?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  deletedAt?: Prisma.NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  deletedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}


/**
 * Count Type AddressCountOutputType
 */

export type AddressCountOutputType = {
  LegalEntity: number
  organizations: number
  users: number
  orders: number
}

export type AddressCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  LegalEntity?: boolean | AddressCountOutputTypeCountLegalEntityArgs
  organizations?: boolean | AddressCountOutputTypeCountOrganizationsArgs
  users?: boolean | AddressCountOutputTypeCountUsersArgs
  orders?: boolean | AddressCountOutputTypeCountOrdersArgs
}

/**
 * AddressCountOutputType without action
 */
export type AddressCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the AddressCountOutputType
   */
  select?: Prisma.AddressCountOutputTypeSelect<ExtArgs> | null
}

/**
 * AddressCountOutputType without action
 */
export type AddressCountOutputTypeCountLegalEntityArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.LegalEntityWhereInput
}

/**
 * AddressCountOutputType without action
 */
export type AddressCountOutputTypeCountOrganizationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.OrganizationWhereInput
}

/**
 * AddressCountOutputType without action
 */
export type AddressCountOutputTypeCountUsersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.UserWhereInput
}

/**
 * AddressCountOutputType without action
 */
export type AddressCountOutputTypeCountOrdersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.OrderWhereInput
}


export type AddressSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  firstname?: boolean
  lastname?: boolean
  phone?: boolean
  addressLineOne?: boolean
  doorNumber?: boolean
  addressLineTwo?: boolean
  zipCode?: boolean
  placeId?: boolean
  deliveryInstructions?: boolean
  city?: boolean
  country?: boolean
  latitude?: boolean
  longitude?: boolean
  isDefault?: boolean
  createdAt?: boolean
  createdBy?: boolean
  updatedAt?: boolean
  updatedBy?: boolean
  deletedAt?: boolean
  deletedBy?: boolean
  LegalEntity?: boolean | Prisma.Address$LegalEntityArgs<ExtArgs>
  organizations?: boolean | Prisma.Address$organizationsArgs<ExtArgs>
  users?: boolean | Prisma.Address$usersArgs<ExtArgs>
  orders?: boolean | Prisma.Address$ordersArgs<ExtArgs>
  _count?: boolean | Prisma.AddressCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["address"]>

export type AddressSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  firstname?: boolean
  lastname?: boolean
  phone?: boolean
  addressLineOne?: boolean
  doorNumber?: boolean
  addressLineTwo?: boolean
  zipCode?: boolean
  placeId?: boolean
  deliveryInstructions?: boolean
  city?: boolean
  country?: boolean
  latitude?: boolean
  longitude?: boolean
  isDefault?: boolean
  createdAt?: boolean
  createdBy?: boolean
  updatedAt?: boolean
  updatedBy?: boolean
  deletedAt?: boolean
  deletedBy?: boolean
}, ExtArgs["result"]["address"]>

export type AddressSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  firstname?: boolean
  lastname?: boolean
  phone?: boolean
  addressLineOne?: boolean
  doorNumber?: boolean
  addressLineTwo?: boolean
  zipCode?: boolean
  placeId?: boolean
  deliveryInstructions?: boolean
  city?: boolean
  country?: boolean
  latitude?: boolean
  longitude?: boolean
  isDefault?: boolean
  createdAt?: boolean
  createdBy?: boolean
  updatedAt?: boolean
  updatedBy?: boolean
  deletedAt?: boolean
  deletedBy?: boolean
}, ExtArgs["result"]["address"]>

export type AddressSelectScalar = {
  id?: boolean
  firstname?: boolean
  lastname?: boolean
  phone?: boolean
  addressLineOne?: boolean
  doorNumber?: boolean
  addressLineTwo?: boolean
  zipCode?: boolean
  placeId?: boolean
  deliveryInstructions?: boolean
  city?: boolean
  country?: boolean
  latitude?: boolean
  longitude?: boolean
  isDefault?: boolean
  createdAt?: boolean
  createdBy?: boolean
  updatedAt?: boolean
  updatedBy?: boolean
  deletedAt?: boolean
  deletedBy?: boolean
}

export type AddressOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "firstname" | "lastname" | "phone" | "addressLineOne" | "doorNumber" | "addressLineTwo" | "zipCode" | "placeId" | "deliveryInstructions" | "city" | "country" | "latitude" | "longitude" | "isDefault" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy" | "deletedAt" | "deletedBy", ExtArgs["result"]["address"]>
export type AddressInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  LegalEntity?: boolean | Prisma.Address$LegalEntityArgs<ExtArgs>
  organizations?: boolean | Prisma.Address$organizationsArgs<ExtArgs>
  users?: boolean | Prisma.Address$usersArgs<ExtArgs>
  orders?: boolean | Prisma.Address$ordersArgs<ExtArgs>
  _count?: boolean | Prisma.AddressCountOutputTypeDefaultArgs<ExtArgs>
}
export type AddressIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}
export type AddressIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {}

export type $AddressPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Address"
  objects: {
    LegalEntity: Prisma.$LegalEntityPayload<ExtArgs>[]
    organizations: Prisma.$OrganizationPayload<ExtArgs>[]
    users: Prisma.$UserPayload<ExtArgs>[]
    orders: Prisma.$OrderPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    firstname: string | null
    lastname: string | null
    phone: string | null
    addressLineOne: string
    doorNumber: string | null
    addressLineTwo: string | null
    zipCode: string | null
    placeId: string | null
    deliveryInstructions: string | null
    city: string
    country: string | null
    latitude: number | null
    longitude: number | null
    isDefault: boolean
    createdAt: Date
    createdBy: string | null
    updatedAt: Date
    updatedBy: string | null
    deletedAt: Date | null
    deletedBy: string | null
  }, ExtArgs["result"]["address"]>
  composites: {}
}

export type AddressGetPayload<S extends boolean | null | undefined | AddressDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$AddressPayload, S>

export type AddressCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<AddressFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: AddressCountAggregateInputType | true
  }

export interface AddressDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Address'], meta: { name: 'Address' } }
  /**
   * Find zero or one Address that matches the filter.
   * @param {AddressFindUniqueArgs} args - Arguments to find a Address
   * @example
   * // Get one Address
   * const address = await prisma.address.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends AddressFindUniqueArgs>(args: Prisma.SelectSubset<T, AddressFindUniqueArgs<ExtArgs>>): Prisma.Prisma__AddressClient<runtime.Types.Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Address that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {AddressFindUniqueOrThrowArgs} args - Arguments to find a Address
   * @example
   * // Get one Address
   * const address = await prisma.address.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends AddressFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, AddressFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__AddressClient<runtime.Types.Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Address that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AddressFindFirstArgs} args - Arguments to find a Address
   * @example
   * // Get one Address
   * const address = await prisma.address.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends AddressFindFirstArgs>(args?: Prisma.SelectSubset<T, AddressFindFirstArgs<ExtArgs>>): Prisma.Prisma__AddressClient<runtime.Types.Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Address that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AddressFindFirstOrThrowArgs} args - Arguments to find a Address
   * @example
   * // Get one Address
   * const address = await prisma.address.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends AddressFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, AddressFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__AddressClient<runtime.Types.Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Addresses that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AddressFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Addresses
   * const addresses = await prisma.address.findMany()
   * 
   * // Get first 10 Addresses
   * const addresses = await prisma.address.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const addressWithIdOnly = await prisma.address.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends AddressFindManyArgs>(args?: Prisma.SelectSubset<T, AddressFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Address.
   * @param {AddressCreateArgs} args - Arguments to create a Address.
   * @example
   * // Create one Address
   * const Address = await prisma.address.create({
   *   data: {
   *     // ... data to create a Address
   *   }
   * })
   * 
   */
  create<T extends AddressCreateArgs>(args: Prisma.SelectSubset<T, AddressCreateArgs<ExtArgs>>): Prisma.Prisma__AddressClient<runtime.Types.Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Addresses.
   * @param {AddressCreateManyArgs} args - Arguments to create many Addresses.
   * @example
   * // Create many Addresses
   * const address = await prisma.address.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends AddressCreateManyArgs>(args?: Prisma.SelectSubset<T, AddressCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Addresses and returns the data saved in the database.
   * @param {AddressCreateManyAndReturnArgs} args - Arguments to create many Addresses.
   * @example
   * // Create many Addresses
   * const address = await prisma.address.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Addresses and only return the `id`
   * const addressWithIdOnly = await prisma.address.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends AddressCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, AddressCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Address.
   * @param {AddressDeleteArgs} args - Arguments to delete one Address.
   * @example
   * // Delete one Address
   * const Address = await prisma.address.delete({
   *   where: {
   *     // ... filter to delete one Address
   *   }
   * })
   * 
   */
  delete<T extends AddressDeleteArgs>(args: Prisma.SelectSubset<T, AddressDeleteArgs<ExtArgs>>): Prisma.Prisma__AddressClient<runtime.Types.Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Address.
   * @param {AddressUpdateArgs} args - Arguments to update one Address.
   * @example
   * // Update one Address
   * const address = await prisma.address.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends AddressUpdateArgs>(args: Prisma.SelectSubset<T, AddressUpdateArgs<ExtArgs>>): Prisma.Prisma__AddressClient<runtime.Types.Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Addresses.
   * @param {AddressDeleteManyArgs} args - Arguments to filter Addresses to delete.
   * @example
   * // Delete a few Addresses
   * const { count } = await prisma.address.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends AddressDeleteManyArgs>(args?: Prisma.SelectSubset<T, AddressDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Addresses.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AddressUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Addresses
   * const address = await prisma.address.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends AddressUpdateManyArgs>(args: Prisma.SelectSubset<T, AddressUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Addresses and returns the data updated in the database.
   * @param {AddressUpdateManyAndReturnArgs} args - Arguments to update many Addresses.
   * @example
   * // Update many Addresses
   * const address = await prisma.address.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Addresses and only return the `id`
   * const addressWithIdOnly = await prisma.address.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends AddressUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, AddressUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Address.
   * @param {AddressUpsertArgs} args - Arguments to update or create a Address.
   * @example
   * // Update or create a Address
   * const address = await prisma.address.upsert({
   *   create: {
   *     // ... data to create a Address
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Address we want to update
   *   }
   * })
   */
  upsert<T extends AddressUpsertArgs>(args: Prisma.SelectSubset<T, AddressUpsertArgs<ExtArgs>>): Prisma.Prisma__AddressClient<runtime.Types.Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Addresses.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AddressCountArgs} args - Arguments to filter Addresses to count.
   * @example
   * // Count the number of Addresses
   * const count = await prisma.address.count({
   *   where: {
   *     // ... the filter for the Addresses we want to count
   *   }
   * })
  **/
  count<T extends AddressCountArgs>(
    args?: Prisma.Subset<T, AddressCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], AddressCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Address.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AddressAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends AddressAggregateArgs>(args: Prisma.Subset<T, AddressAggregateArgs>): Prisma.PrismaPromise<GetAddressAggregateType<T>>

  /**
   * Group by Address.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {AddressGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends AddressGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: AddressGroupByArgs['orderBy'] }
      : { orderBy?: AddressGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, AddressGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAddressGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Address model
 */
readonly fields: AddressFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Address.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__AddressClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  LegalEntity<T extends Prisma.Address$LegalEntityArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Address$LegalEntityArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$LegalEntityPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  organizations<T extends Prisma.Address$organizationsArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Address$organizationsArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OrganizationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  users<T extends Prisma.Address$usersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Address$usersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  orders<T extends Prisma.Address$ordersArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Address$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Address model
 */
export interface AddressFieldRefs {
  readonly id: Prisma.FieldRef<"Address", 'String'>
  readonly firstname: Prisma.FieldRef<"Address", 'String'>
  readonly lastname: Prisma.FieldRef<"Address", 'String'>
  readonly phone: Prisma.FieldRef<"Address", 'String'>
  readonly addressLineOne: Prisma.FieldRef<"Address", 'String'>
  readonly doorNumber: Prisma.FieldRef<"Address", 'String'>
  readonly addressLineTwo: Prisma.FieldRef<"Address", 'String'>
  readonly zipCode: Prisma.FieldRef<"Address", 'String'>
  readonly placeId: Prisma.FieldRef<"Address", 'String'>
  readonly deliveryInstructions: Prisma.FieldRef<"Address", 'String'>
  readonly city: Prisma.FieldRef<"Address", 'String'>
  readonly country: Prisma.FieldRef<"Address", 'String'>
  readonly latitude: Prisma.FieldRef<"Address", 'Float'>
  readonly longitude: Prisma.FieldRef<"Address", 'Float'>
  readonly isDefault: Prisma.FieldRef<"Address", 'Boolean'>
  readonly createdAt: Prisma.FieldRef<"Address", 'DateTime'>
  readonly createdBy: Prisma.FieldRef<"Address", 'String'>
  readonly updatedAt: Prisma.FieldRef<"Address", 'DateTime'>
  readonly updatedBy: Prisma.FieldRef<"Address", 'String'>
  readonly deletedAt: Prisma.FieldRef<"Address", 'DateTime'>
  readonly deletedBy: Prisma.FieldRef<"Address", 'String'>
}
    

// Custom InputTypes
/**
 * Address findUnique
 */
export type AddressFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Address
   */
  select?: Prisma.AddressSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Address
   */
  omit?: Prisma.AddressOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AddressInclude<ExtArgs> | null
  /**
   * Filter, which Address to fetch.
   */
  where: Prisma.AddressWhereUniqueInput
}

/**
 * Address findUniqueOrThrow
 */
export type AddressFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Address
   */
  select?: Prisma.AddressSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Address
   */
  omit?: Prisma.AddressOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AddressInclude<ExtArgs> | null
  /**
   * Filter, which Address to fetch.
   */
  where: Prisma.AddressWhereUniqueInput
}

/**
 * Address findFirst
 */
export type AddressFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Address
   */
  select?: Prisma.AddressSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Address
   */
  omit?: Prisma.AddressOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AddressInclude<ExtArgs> | null
  /**
   * Filter, which Address to fetch.
   */
  where?: Prisma.AddressWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Addresses to fetch.
   */
  orderBy?: Prisma.AddressOrderByWithRelationInput | Prisma.AddressOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Addresses.
   */
  cursor?: Prisma.AddressWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Addresses from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Addresses.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Addresses.
   */
  distinct?: Prisma.AddressScalarFieldEnum | Prisma.AddressScalarFieldEnum[]
}

/**
 * Address findFirstOrThrow
 */
export type AddressFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Address
   */
  select?: Prisma.AddressSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Address
   */
  omit?: Prisma.AddressOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AddressInclude<ExtArgs> | null
  /**
   * Filter, which Address to fetch.
   */
  where?: Prisma.AddressWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Addresses to fetch.
   */
  orderBy?: Prisma.AddressOrderByWithRelationInput | Prisma.AddressOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Addresses.
   */
  cursor?: Prisma.AddressWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Addresses from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Addresses.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Addresses.
   */
  distinct?: Prisma.AddressScalarFieldEnum | Prisma.AddressScalarFieldEnum[]
}

/**
 * Address findMany
 */
export type AddressFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Address
   */
  select?: Prisma.AddressSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Address
   */
  omit?: Prisma.AddressOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AddressInclude<ExtArgs> | null
  /**
   * Filter, which Addresses to fetch.
   */
  where?: Prisma.AddressWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Addresses to fetch.
   */
  orderBy?: Prisma.AddressOrderByWithRelationInput | Prisma.AddressOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Addresses.
   */
  cursor?: Prisma.AddressWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Addresses from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Addresses.
   */
  skip?: number
  distinct?: Prisma.AddressScalarFieldEnum | Prisma.AddressScalarFieldEnum[]
}

/**
 * Address create
 */
export type AddressCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Address
   */
  select?: Prisma.AddressSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Address
   */
  omit?: Prisma.AddressOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AddressInclude<ExtArgs> | null
  /**
   * The data needed to create a Address.
   */
  data: Prisma.XOR<Prisma.AddressCreateInput, Prisma.AddressUncheckedCreateInput>
}

/**
 * Address createMany
 */
export type AddressCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Addresses.
   */
  data: Prisma.AddressCreateManyInput | Prisma.AddressCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Address createManyAndReturn
 */
export type AddressCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Address
   */
  select?: Prisma.AddressSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Address
   */
  omit?: Prisma.AddressOmit<ExtArgs> | null
  /**
   * The data used to create many Addresses.
   */
  data: Prisma.AddressCreateManyInput | Prisma.AddressCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Address update
 */
export type AddressUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Address
   */
  select?: Prisma.AddressSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Address
   */
  omit?: Prisma.AddressOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AddressInclude<ExtArgs> | null
  /**
   * The data needed to update a Address.
   */
  data: Prisma.XOR<Prisma.AddressUpdateInput, Prisma.AddressUncheckedUpdateInput>
  /**
   * Choose, which Address to update.
   */
  where: Prisma.AddressWhereUniqueInput
}

/**
 * Address updateMany
 */
export type AddressUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Addresses.
   */
  data: Prisma.XOR<Prisma.AddressUpdateManyMutationInput, Prisma.AddressUncheckedUpdateManyInput>
  /**
   * Filter which Addresses to update
   */
  where?: Prisma.AddressWhereInput
  /**
   * Limit how many Addresses to update.
   */
  limit?: number
}

/**
 * Address updateManyAndReturn
 */
export type AddressUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Address
   */
  select?: Prisma.AddressSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Address
   */
  omit?: Prisma.AddressOmit<ExtArgs> | null
  /**
   * The data used to update Addresses.
   */
  data: Prisma.XOR<Prisma.AddressUpdateManyMutationInput, Prisma.AddressUncheckedUpdateManyInput>
  /**
   * Filter which Addresses to update
   */
  where?: Prisma.AddressWhereInput
  /**
   * Limit how many Addresses to update.
   */
  limit?: number
}

/**
 * Address upsert
 */
export type AddressUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Address
   */
  select?: Prisma.AddressSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Address
   */
  omit?: Prisma.AddressOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AddressInclude<ExtArgs> | null
  /**
   * The filter to search for the Address to update in case it exists.
   */
  where: Prisma.AddressWhereUniqueInput
  /**
   * In case the Address found by the `where` argument doesn't exist, create a new Address with this data.
   */
  create: Prisma.XOR<Prisma.AddressCreateInput, Prisma.AddressUncheckedCreateInput>
  /**
   * In case the Address was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.AddressUpdateInput, Prisma.AddressUncheckedUpdateInput>
}

/**
 * Address delete
 */
export type AddressDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Address
   */
  select?: Prisma.AddressSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Address
   */
  omit?: Prisma.AddressOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AddressInclude<ExtArgs> | null
  /**
   * Filter which Address to delete.
   */
  where: Prisma.AddressWhereUniqueInput
}

/**
 * Address deleteMany
 */
export type AddressDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Addresses to delete
   */
  where?: Prisma.AddressWhereInput
  /**
   * Limit how many Addresses to delete.
   */
  limit?: number
}

/**
 * Address.LegalEntity
 */
export type Address$LegalEntityArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the LegalEntity
   */
  select?: Prisma.LegalEntitySelect<ExtArgs> | null
  /**
   * Omit specific fields from the LegalEntity
   */
  omit?: Prisma.LegalEntityOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LegalEntityInclude<ExtArgs> | null
  where?: Prisma.LegalEntityWhereInput
  orderBy?: Prisma.LegalEntityOrderByWithRelationInput | Prisma.LegalEntityOrderByWithRelationInput[]
  cursor?: Prisma.LegalEntityWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.LegalEntityScalarFieldEnum | Prisma.LegalEntityScalarFieldEnum[]
}

/**
 * Address.organizations
 */
export type Address$organizationsArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Organization
   */
  select?: Prisma.OrganizationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Organization
   */
  omit?: Prisma.OrganizationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrganizationInclude<ExtArgs> | null
  where?: Prisma.OrganizationWhereInput
  orderBy?: Prisma.OrganizationOrderByWithRelationInput | Prisma.OrganizationOrderByWithRelationInput[]
  cursor?: Prisma.OrganizationWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.OrganizationScalarFieldEnum | Prisma.OrganizationScalarFieldEnum[]
}

/**
 * Address.users
 */
export type Address$usersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the User
   */
  select?: Prisma.UserSelect<ExtArgs> | null
  /**
   * Omit specific fields from the User
   */
  omit?: Prisma.UserOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.UserInclude<ExtArgs> | null
  where?: Prisma.UserWhereInput
  orderBy?: Prisma.UserOrderByWithRelationInput | Prisma.UserOrderByWithRelationInput[]
  cursor?: Prisma.UserWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.UserScalarFieldEnum | Prisma.UserScalarFieldEnum[]
}

/**
 * Address.orders
 */
export type Address$ordersArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Order
   */
  select?: Prisma.OrderSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Order
   */
  omit?: Prisma.OrderOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrderInclude<ExtArgs> | null
  where?: Prisma.OrderWhereInput
  orderBy?: Prisma.OrderOrderByWithRelationInput | Prisma.OrderOrderByWithRelationInput[]
  cursor?: Prisma.OrderWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.OrderScalarFieldEnum | Prisma.OrderScalarFieldEnum[]
}

/**
 * Address without action
 */
export type AddressDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Address
   */
  select?: Prisma.AddressSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Address
   */
  omit?: Prisma.AddressOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.AddressInclude<ExtArgs> | null
}
