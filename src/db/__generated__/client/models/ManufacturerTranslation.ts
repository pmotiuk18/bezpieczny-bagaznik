
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `ManufacturerTranslation` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model ManufacturerTranslation
 * 
 */
export type ManufacturerTranslationModel = runtime.Types.Result.DefaultSelection<Prisma.$ManufacturerTranslationPayload>

export type AggregateManufacturerTranslation = {
  _count: ManufacturerTranslationCountAggregateOutputType | null
  _min: ManufacturerTranslationMinAggregateOutputType | null
  _max: ManufacturerTranslationMaxAggregateOutputType | null
}

export type ManufacturerTranslationMinAggregateOutputType = {
  id: string | null
  locale: string | null
  about: string | null
  manufacturerId: string | null
  createdAt: Date | null
  createdBy: string | null
  updatedAt: Date | null
  updatedBy: string | null
}

export type ManufacturerTranslationMaxAggregateOutputType = {
  id: string | null
  locale: string | null
  about: string | null
  manufacturerId: string | null
  createdAt: Date | null
  createdBy: string | null
  updatedAt: Date | null
  updatedBy: string | null
}

export type ManufacturerTranslationCountAggregateOutputType = {
  id: number
  locale: number
  about: number
  manufacturerId: number
  createdAt: number
  createdBy: number
  updatedAt: number
  updatedBy: number
  _all: number
}


export type ManufacturerTranslationMinAggregateInputType = {
  id?: true
  locale?: true
  about?: true
  manufacturerId?: true
  createdAt?: true
  createdBy?: true
  updatedAt?: true
  updatedBy?: true
}

export type ManufacturerTranslationMaxAggregateInputType = {
  id?: true
  locale?: true
  about?: true
  manufacturerId?: true
  createdAt?: true
  createdBy?: true
  updatedAt?: true
  updatedBy?: true
}

export type ManufacturerTranslationCountAggregateInputType = {
  id?: true
  locale?: true
  about?: true
  manufacturerId?: true
  createdAt?: true
  createdBy?: true
  updatedAt?: true
  updatedBy?: true
  _all?: true
}

export type ManufacturerTranslationAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ManufacturerTranslation to aggregate.
   */
  where?: Prisma.ManufacturerTranslationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ManufacturerTranslations to fetch.
   */
  orderBy?: Prisma.ManufacturerTranslationOrderByWithRelationInput | Prisma.ManufacturerTranslationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ManufacturerTranslationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ManufacturerTranslations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ManufacturerTranslations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ManufacturerTranslations
  **/
  _count?: true | ManufacturerTranslationCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ManufacturerTranslationMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ManufacturerTranslationMaxAggregateInputType
}

export type GetManufacturerTranslationAggregateType<T extends ManufacturerTranslationAggregateArgs> = {
      [P in keyof T & keyof AggregateManufacturerTranslation]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateManufacturerTranslation[P]>
    : Prisma.GetScalarType<T[P], AggregateManufacturerTranslation[P]>
}




export type ManufacturerTranslationGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ManufacturerTranslationWhereInput
  orderBy?: Prisma.ManufacturerTranslationOrderByWithAggregationInput | Prisma.ManufacturerTranslationOrderByWithAggregationInput[]
  by: Prisma.ManufacturerTranslationScalarFieldEnum[] | Prisma.ManufacturerTranslationScalarFieldEnum
  having?: Prisma.ManufacturerTranslationScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ManufacturerTranslationCountAggregateInputType | true
  _min?: ManufacturerTranslationMinAggregateInputType
  _max?: ManufacturerTranslationMaxAggregateInputType
}

export type ManufacturerTranslationGroupByOutputType = {
  id: string
  locale: string
  about: string | null
  manufacturerId: string
  createdAt: Date
  createdBy: string | null
  updatedAt: Date
  updatedBy: string | null
  _count: ManufacturerTranslationCountAggregateOutputType | null
  _min: ManufacturerTranslationMinAggregateOutputType | null
  _max: ManufacturerTranslationMaxAggregateOutputType | null
}

type GetManufacturerTranslationGroupByPayload<T extends ManufacturerTranslationGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ManufacturerTranslationGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ManufacturerTranslationGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ManufacturerTranslationGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ManufacturerTranslationGroupByOutputType[P]>
      }
    >
  > 



export type ManufacturerTranslationWhereInput = {
  AND?: Prisma.ManufacturerTranslationWhereInput | Prisma.ManufacturerTranslationWhereInput[]
  OR?: Prisma.ManufacturerTranslationWhereInput[]
  NOT?: Prisma.ManufacturerTranslationWhereInput | Prisma.ManufacturerTranslationWhereInput[]
  id?: Prisma.StringFilter<"ManufacturerTranslation"> | string
  locale?: Prisma.StringFilter<"ManufacturerTranslation"> | string
  about?: Prisma.StringNullableFilter<"ManufacturerTranslation"> | string | null
  manufacturerId?: Prisma.StringFilter<"ManufacturerTranslation"> | string
  createdAt?: Prisma.DateTimeFilter<"ManufacturerTranslation"> | Date | string
  createdBy?: Prisma.StringNullableFilter<"ManufacturerTranslation"> | string | null
  updatedAt?: Prisma.DateTimeFilter<"ManufacturerTranslation"> | Date | string
  updatedBy?: Prisma.StringNullableFilter<"ManufacturerTranslation"> | string | null
  manufacturer?: Prisma.XOR<Prisma.ManufacturerScalarRelationFilter, Prisma.ManufacturerWhereInput>
}

export type ManufacturerTranslationOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  locale?: Prisma.SortOrder
  about?: Prisma.SortOrderInput | Prisma.SortOrder
  manufacturerId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  createdBy?: Prisma.SortOrderInput | Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  updatedBy?: Prisma.SortOrderInput | Prisma.SortOrder
  manufacturer?: Prisma.ManufacturerOrderByWithRelationInput
}

export type ManufacturerTranslationWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  locale_manufacturerId?: Prisma.ManufacturerTranslationLocaleManufacturerIdCompoundUniqueInput
  AND?: Prisma.ManufacturerTranslationWhereInput | Prisma.ManufacturerTranslationWhereInput[]
  OR?: Prisma.ManufacturerTranslationWhereInput[]
  NOT?: Prisma.ManufacturerTranslationWhereInput | Prisma.ManufacturerTranslationWhereInput[]
  locale?: Prisma.StringFilter<"ManufacturerTranslation"> | string
  about?: Prisma.StringNullableFilter<"ManufacturerTranslation"> | string | null
  manufacturerId?: Prisma.StringFilter<"ManufacturerTranslation"> | string
  createdAt?: Prisma.DateTimeFilter<"ManufacturerTranslation"> | Date | string
  createdBy?: Prisma.StringNullableFilter<"ManufacturerTranslation"> | string | null
  updatedAt?: Prisma.DateTimeFilter<"ManufacturerTranslation"> | Date | string
  updatedBy?: Prisma.StringNullableFilter<"ManufacturerTranslation"> | string | null
  manufacturer?: Prisma.XOR<Prisma.ManufacturerScalarRelationFilter, Prisma.ManufacturerWhereInput>
}, "id" | "locale_manufacturerId">

export type ManufacturerTranslationOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  locale?: Prisma.SortOrder
  about?: Prisma.SortOrderInput | Prisma.SortOrder
  manufacturerId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  createdBy?: Prisma.SortOrderInput | Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  updatedBy?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.ManufacturerTranslationCountOrderByAggregateInput
  _max?: Prisma.ManufacturerTranslationMaxOrderByAggregateInput
  _min?: Prisma.ManufacturerTranslationMinOrderByAggregateInput
}

export type ManufacturerTranslationScalarWhereWithAggregatesInput = {
  AND?: Prisma.ManufacturerTranslationScalarWhereWithAggregatesInput | Prisma.ManufacturerTranslationScalarWhereWithAggregatesInput[]
  OR?: Prisma.ManufacturerTranslationScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ManufacturerTranslationScalarWhereWithAggregatesInput | Prisma.ManufacturerTranslationScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"ManufacturerTranslation"> | string
  locale?: Prisma.StringWithAggregatesFilter<"ManufacturerTranslation"> | string
  about?: Prisma.StringNullableWithAggregatesFilter<"ManufacturerTranslation"> | string | null
  manufacturerId?: Prisma.StringWithAggregatesFilter<"ManufacturerTranslation"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"ManufacturerTranslation"> | Date | string
  createdBy?: Prisma.StringNullableWithAggregatesFilter<"ManufacturerTranslation"> | string | null
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"ManufacturerTranslation"> | Date | string
  updatedBy?: Prisma.StringNullableWithAggregatesFilter<"ManufacturerTranslation"> | string | null
}

export type ManufacturerTranslationCreateInput = {
  id?: string
  locale: string
  about?: string | null
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
  manufacturer: Prisma.ManufacturerCreateNestedOneWithoutTranslationsInput
}

export type ManufacturerTranslationUncheckedCreateInput = {
  id?: string
  locale: string
  about?: string | null
  manufacturerId: string
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
}

export type ManufacturerTranslationUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  locale?: Prisma.StringFieldUpdateOperationsInput | string
  about?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  manufacturer?: Prisma.ManufacturerUpdateOneRequiredWithoutTranslationsNestedInput
}

export type ManufacturerTranslationUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  locale?: Prisma.StringFieldUpdateOperationsInput | string
  about?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  manufacturerId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type ManufacturerTranslationCreateManyInput = {
  id?: string
  locale: string
  about?: string | null
  manufacturerId: string
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
}

export type ManufacturerTranslationUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  locale?: Prisma.StringFieldUpdateOperationsInput | string
  about?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type ManufacturerTranslationUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  locale?: Prisma.StringFieldUpdateOperationsInput | string
  about?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  manufacturerId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type ManufacturerTranslationListRelationFilter = {
  every?: Prisma.ManufacturerTranslationWhereInput
  some?: Prisma.ManufacturerTranslationWhereInput
  none?: Prisma.ManufacturerTranslationWhereInput
}

export type ManufacturerTranslationOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ManufacturerTranslationLocaleManufacturerIdCompoundUniqueInput = {
  locale: string
  manufacturerId: string
}

export type ManufacturerTranslationCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  locale?: Prisma.SortOrder
  about?: Prisma.SortOrder
  manufacturerId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  createdBy?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  updatedBy?: Prisma.SortOrder
}

export type ManufacturerTranslationMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  locale?: Prisma.SortOrder
  about?: Prisma.SortOrder
  manufacturerId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  createdBy?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  updatedBy?: Prisma.SortOrder
}

export type ManufacturerTranslationMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  locale?: Prisma.SortOrder
  about?: Prisma.SortOrder
  manufacturerId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  createdBy?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  updatedBy?: Prisma.SortOrder
}

export type ManufacturerTranslationCreateNestedManyWithoutManufacturerInput = {
  create?: Prisma.XOR<Prisma.ManufacturerTranslationCreateWithoutManufacturerInput, Prisma.ManufacturerTranslationUncheckedCreateWithoutManufacturerInput> | Prisma.ManufacturerTranslationCreateWithoutManufacturerInput[] | Prisma.ManufacturerTranslationUncheckedCreateWithoutManufacturerInput[]
  connectOrCreate?: Prisma.ManufacturerTranslationCreateOrConnectWithoutManufacturerInput | Prisma.ManufacturerTranslationCreateOrConnectWithoutManufacturerInput[]
  createMany?: Prisma.ManufacturerTranslationCreateManyManufacturerInputEnvelope
  connect?: Prisma.ManufacturerTranslationWhereUniqueInput | Prisma.ManufacturerTranslationWhereUniqueInput[]
}

export type ManufacturerTranslationUncheckedCreateNestedManyWithoutManufacturerInput = {
  create?: Prisma.XOR<Prisma.ManufacturerTranslationCreateWithoutManufacturerInput, Prisma.ManufacturerTranslationUncheckedCreateWithoutManufacturerInput> | Prisma.ManufacturerTranslationCreateWithoutManufacturerInput[] | Prisma.ManufacturerTranslationUncheckedCreateWithoutManufacturerInput[]
  connectOrCreate?: Prisma.ManufacturerTranslationCreateOrConnectWithoutManufacturerInput | Prisma.ManufacturerTranslationCreateOrConnectWithoutManufacturerInput[]
  createMany?: Prisma.ManufacturerTranslationCreateManyManufacturerInputEnvelope
  connect?: Prisma.ManufacturerTranslationWhereUniqueInput | Prisma.ManufacturerTranslationWhereUniqueInput[]
}

export type ManufacturerTranslationUpdateManyWithoutManufacturerNestedInput = {
  create?: Prisma.XOR<Prisma.ManufacturerTranslationCreateWithoutManufacturerInput, Prisma.ManufacturerTranslationUncheckedCreateWithoutManufacturerInput> | Prisma.ManufacturerTranslationCreateWithoutManufacturerInput[] | Prisma.ManufacturerTranslationUncheckedCreateWithoutManufacturerInput[]
  connectOrCreate?: Prisma.ManufacturerTranslationCreateOrConnectWithoutManufacturerInput | Prisma.ManufacturerTranslationCreateOrConnectWithoutManufacturerInput[]
  upsert?: Prisma.ManufacturerTranslationUpsertWithWhereUniqueWithoutManufacturerInput | Prisma.ManufacturerTranslationUpsertWithWhereUniqueWithoutManufacturerInput[]
  createMany?: Prisma.ManufacturerTranslationCreateManyManufacturerInputEnvelope
  set?: Prisma.ManufacturerTranslationWhereUniqueInput | Prisma.ManufacturerTranslationWhereUniqueInput[]
  disconnect?: Prisma.ManufacturerTranslationWhereUniqueInput | Prisma.ManufacturerTranslationWhereUniqueInput[]
  delete?: Prisma.ManufacturerTranslationWhereUniqueInput | Prisma.ManufacturerTranslationWhereUniqueInput[]
  connect?: Prisma.ManufacturerTranslationWhereUniqueInput | Prisma.ManufacturerTranslationWhereUniqueInput[]
  update?: Prisma.ManufacturerTranslationUpdateWithWhereUniqueWithoutManufacturerInput | Prisma.ManufacturerTranslationUpdateWithWhereUniqueWithoutManufacturerInput[]
  updateMany?: Prisma.ManufacturerTranslationUpdateManyWithWhereWithoutManufacturerInput | Prisma.ManufacturerTranslationUpdateManyWithWhereWithoutManufacturerInput[]
  deleteMany?: Prisma.ManufacturerTranslationScalarWhereInput | Prisma.ManufacturerTranslationScalarWhereInput[]
}

export type ManufacturerTranslationUncheckedUpdateManyWithoutManufacturerNestedInput = {
  create?: Prisma.XOR<Prisma.ManufacturerTranslationCreateWithoutManufacturerInput, Prisma.ManufacturerTranslationUncheckedCreateWithoutManufacturerInput> | Prisma.ManufacturerTranslationCreateWithoutManufacturerInput[] | Prisma.ManufacturerTranslationUncheckedCreateWithoutManufacturerInput[]
  connectOrCreate?: Prisma.ManufacturerTranslationCreateOrConnectWithoutManufacturerInput | Prisma.ManufacturerTranslationCreateOrConnectWithoutManufacturerInput[]
  upsert?: Prisma.ManufacturerTranslationUpsertWithWhereUniqueWithoutManufacturerInput | Prisma.ManufacturerTranslationUpsertWithWhereUniqueWithoutManufacturerInput[]
  createMany?: Prisma.ManufacturerTranslationCreateManyManufacturerInputEnvelope
  set?: Prisma.ManufacturerTranslationWhereUniqueInput | Prisma.ManufacturerTranslationWhereUniqueInput[]
  disconnect?: Prisma.ManufacturerTranslationWhereUniqueInput | Prisma.ManufacturerTranslationWhereUniqueInput[]
  delete?: Prisma.ManufacturerTranslationWhereUniqueInput | Prisma.ManufacturerTranslationWhereUniqueInput[]
  connect?: Prisma.ManufacturerTranslationWhereUniqueInput | Prisma.ManufacturerTranslationWhereUniqueInput[]
  update?: Prisma.ManufacturerTranslationUpdateWithWhereUniqueWithoutManufacturerInput | Prisma.ManufacturerTranslationUpdateWithWhereUniqueWithoutManufacturerInput[]
  updateMany?: Prisma.ManufacturerTranslationUpdateManyWithWhereWithoutManufacturerInput | Prisma.ManufacturerTranslationUpdateManyWithWhereWithoutManufacturerInput[]
  deleteMany?: Prisma.ManufacturerTranslationScalarWhereInput | Prisma.ManufacturerTranslationScalarWhereInput[]
}

export type ManufacturerTranslationCreateWithoutManufacturerInput = {
  id?: string
  locale: string
  about?: string | null
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
}

export type ManufacturerTranslationUncheckedCreateWithoutManufacturerInput = {
  id?: string
  locale: string
  about?: string | null
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
}

export type ManufacturerTranslationCreateOrConnectWithoutManufacturerInput = {
  where: Prisma.ManufacturerTranslationWhereUniqueInput
  create: Prisma.XOR<Prisma.ManufacturerTranslationCreateWithoutManufacturerInput, Prisma.ManufacturerTranslationUncheckedCreateWithoutManufacturerInput>
}

export type ManufacturerTranslationCreateManyManufacturerInputEnvelope = {
  data: Prisma.ManufacturerTranslationCreateManyManufacturerInput | Prisma.ManufacturerTranslationCreateManyManufacturerInput[]
  skipDuplicates?: boolean
}

export type ManufacturerTranslationUpsertWithWhereUniqueWithoutManufacturerInput = {
  where: Prisma.ManufacturerTranslationWhereUniqueInput
  update: Prisma.XOR<Prisma.ManufacturerTranslationUpdateWithoutManufacturerInput, Prisma.ManufacturerTranslationUncheckedUpdateWithoutManufacturerInput>
  create: Prisma.XOR<Prisma.ManufacturerTranslationCreateWithoutManufacturerInput, Prisma.ManufacturerTranslationUncheckedCreateWithoutManufacturerInput>
}

export type ManufacturerTranslationUpdateWithWhereUniqueWithoutManufacturerInput = {
  where: Prisma.ManufacturerTranslationWhereUniqueInput
  data: Prisma.XOR<Prisma.ManufacturerTranslationUpdateWithoutManufacturerInput, Prisma.ManufacturerTranslationUncheckedUpdateWithoutManufacturerInput>
}

export type ManufacturerTranslationUpdateManyWithWhereWithoutManufacturerInput = {
  where: Prisma.ManufacturerTranslationScalarWhereInput
  data: Prisma.XOR<Prisma.ManufacturerTranslationUpdateManyMutationInput, Prisma.ManufacturerTranslationUncheckedUpdateManyWithoutManufacturerInput>
}

export type ManufacturerTranslationScalarWhereInput = {
  AND?: Prisma.ManufacturerTranslationScalarWhereInput | Prisma.ManufacturerTranslationScalarWhereInput[]
  OR?: Prisma.ManufacturerTranslationScalarWhereInput[]
  NOT?: Prisma.ManufacturerTranslationScalarWhereInput | Prisma.ManufacturerTranslationScalarWhereInput[]
  id?: Prisma.StringFilter<"ManufacturerTranslation"> | string
  locale?: Prisma.StringFilter<"ManufacturerTranslation"> | string
  about?: Prisma.StringNullableFilter<"ManufacturerTranslation"> | string | null
  manufacturerId?: Prisma.StringFilter<"ManufacturerTranslation"> | string
  createdAt?: Prisma.DateTimeFilter<"ManufacturerTranslation"> | Date | string
  createdBy?: Prisma.StringNullableFilter<"ManufacturerTranslation"> | string | null
  updatedAt?: Prisma.DateTimeFilter<"ManufacturerTranslation"> | Date | string
  updatedBy?: Prisma.StringNullableFilter<"ManufacturerTranslation"> | string | null
}

export type ManufacturerTranslationCreateManyManufacturerInput = {
  id?: string
  locale: string
  about?: string | null
  createdAt?: Date | string
  createdBy?: string | null
  updatedAt?: Date | string
  updatedBy?: string | null
}

export type ManufacturerTranslationUpdateWithoutManufacturerInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  locale?: Prisma.StringFieldUpdateOperationsInput | string
  about?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type ManufacturerTranslationUncheckedUpdateWithoutManufacturerInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  locale?: Prisma.StringFieldUpdateOperationsInput | string
  about?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type ManufacturerTranslationUncheckedUpdateManyWithoutManufacturerInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  locale?: Prisma.StringFieldUpdateOperationsInput | string
  about?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  createdBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedBy?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}



export type ManufacturerTranslationSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  locale?: boolean
  about?: boolean
  manufacturerId?: boolean
  createdAt?: boolean
  createdBy?: boolean
  updatedAt?: boolean
  updatedBy?: boolean
  manufacturer?: boolean | Prisma.ManufacturerDefaultArgs<ExtArgs>
}, ExtArgs["result"]["manufacturerTranslation"]>

export type ManufacturerTranslationSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  locale?: boolean
  about?: boolean
  manufacturerId?: boolean
  createdAt?: boolean
  createdBy?: boolean
  updatedAt?: boolean
  updatedBy?: boolean
  manufacturer?: boolean | Prisma.ManufacturerDefaultArgs<ExtArgs>
}, ExtArgs["result"]["manufacturerTranslation"]>

export type ManufacturerTranslationSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  locale?: boolean
  about?: boolean
  manufacturerId?: boolean
  createdAt?: boolean
  createdBy?: boolean
  updatedAt?: boolean
  updatedBy?: boolean
  manufacturer?: boolean | Prisma.ManufacturerDefaultArgs<ExtArgs>
}, ExtArgs["result"]["manufacturerTranslation"]>

export type ManufacturerTranslationSelectScalar = {
  id?: boolean
  locale?: boolean
  about?: boolean
  manufacturerId?: boolean
  createdAt?: boolean
  createdBy?: boolean
  updatedAt?: boolean
  updatedBy?: boolean
}

export type ManufacturerTranslationOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "locale" | "about" | "manufacturerId" | "createdAt" | "createdBy" | "updatedAt" | "updatedBy", ExtArgs["result"]["manufacturerTranslation"]>
export type ManufacturerTranslationInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  manufacturer?: boolean | Prisma.ManufacturerDefaultArgs<ExtArgs>
}
export type ManufacturerTranslationIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  manufacturer?: boolean | Prisma.ManufacturerDefaultArgs<ExtArgs>
}
export type ManufacturerTranslationIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  manufacturer?: boolean | Prisma.ManufacturerDefaultArgs<ExtArgs>
}

export type $ManufacturerTranslationPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ManufacturerTranslation"
  objects: {
    manufacturer: Prisma.$ManufacturerPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    locale: string
    about: string | null
    manufacturerId: string
    createdAt: Date
    createdBy: string | null
    updatedAt: Date
    updatedBy: string | null
  }, ExtArgs["result"]["manufacturerTranslation"]>
  composites: {}
}

export type ManufacturerTranslationGetPayload<S extends boolean | null | undefined | ManufacturerTranslationDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ManufacturerTranslationPayload, S>

export type ManufacturerTranslationCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ManufacturerTranslationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ManufacturerTranslationCountAggregateInputType | true
  }

export interface ManufacturerTranslationDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ManufacturerTranslation'], meta: { name: 'ManufacturerTranslation' } }
  /**
   * Find zero or one ManufacturerTranslation that matches the filter.
   * @param {ManufacturerTranslationFindUniqueArgs} args - Arguments to find a ManufacturerTranslation
   * @example
   * // Get one ManufacturerTranslation
   * const manufacturerTranslation = await prisma.manufacturerTranslation.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ManufacturerTranslationFindUniqueArgs>(args: Prisma.SelectSubset<T, ManufacturerTranslationFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ManufacturerTranslationClient<runtime.Types.Result.GetResult<Prisma.$ManufacturerTranslationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one ManufacturerTranslation that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ManufacturerTranslationFindUniqueOrThrowArgs} args - Arguments to find a ManufacturerTranslation
   * @example
   * // Get one ManufacturerTranslation
   * const manufacturerTranslation = await prisma.manufacturerTranslation.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ManufacturerTranslationFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ManufacturerTranslationFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ManufacturerTranslationClient<runtime.Types.Result.GetResult<Prisma.$ManufacturerTranslationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ManufacturerTranslation that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ManufacturerTranslationFindFirstArgs} args - Arguments to find a ManufacturerTranslation
   * @example
   * // Get one ManufacturerTranslation
   * const manufacturerTranslation = await prisma.manufacturerTranslation.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ManufacturerTranslationFindFirstArgs>(args?: Prisma.SelectSubset<T, ManufacturerTranslationFindFirstArgs<ExtArgs>>): Prisma.Prisma__ManufacturerTranslationClient<runtime.Types.Result.GetResult<Prisma.$ManufacturerTranslationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ManufacturerTranslation that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ManufacturerTranslationFindFirstOrThrowArgs} args - Arguments to find a ManufacturerTranslation
   * @example
   * // Get one ManufacturerTranslation
   * const manufacturerTranslation = await prisma.manufacturerTranslation.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ManufacturerTranslationFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ManufacturerTranslationFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ManufacturerTranslationClient<runtime.Types.Result.GetResult<Prisma.$ManufacturerTranslationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more ManufacturerTranslations that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ManufacturerTranslationFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all ManufacturerTranslations
   * const manufacturerTranslations = await prisma.manufacturerTranslation.findMany()
   * 
   * // Get first 10 ManufacturerTranslations
   * const manufacturerTranslations = await prisma.manufacturerTranslation.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const manufacturerTranslationWithIdOnly = await prisma.manufacturerTranslation.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ManufacturerTranslationFindManyArgs>(args?: Prisma.SelectSubset<T, ManufacturerTranslationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ManufacturerTranslationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a ManufacturerTranslation.
   * @param {ManufacturerTranslationCreateArgs} args - Arguments to create a ManufacturerTranslation.
   * @example
   * // Create one ManufacturerTranslation
   * const ManufacturerTranslation = await prisma.manufacturerTranslation.create({
   *   data: {
   *     // ... data to create a ManufacturerTranslation
   *   }
   * })
   * 
   */
  create<T extends ManufacturerTranslationCreateArgs>(args: Prisma.SelectSubset<T, ManufacturerTranslationCreateArgs<ExtArgs>>): Prisma.Prisma__ManufacturerTranslationClient<runtime.Types.Result.GetResult<Prisma.$ManufacturerTranslationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many ManufacturerTranslations.
   * @param {ManufacturerTranslationCreateManyArgs} args - Arguments to create many ManufacturerTranslations.
   * @example
   * // Create many ManufacturerTranslations
   * const manufacturerTranslation = await prisma.manufacturerTranslation.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ManufacturerTranslationCreateManyArgs>(args?: Prisma.SelectSubset<T, ManufacturerTranslationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many ManufacturerTranslations and returns the data saved in the database.
   * @param {ManufacturerTranslationCreateManyAndReturnArgs} args - Arguments to create many ManufacturerTranslations.
   * @example
   * // Create many ManufacturerTranslations
   * const manufacturerTranslation = await prisma.manufacturerTranslation.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many ManufacturerTranslations and only return the `id`
   * const manufacturerTranslationWithIdOnly = await prisma.manufacturerTranslation.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ManufacturerTranslationCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ManufacturerTranslationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ManufacturerTranslationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a ManufacturerTranslation.
   * @param {ManufacturerTranslationDeleteArgs} args - Arguments to delete one ManufacturerTranslation.
   * @example
   * // Delete one ManufacturerTranslation
   * const ManufacturerTranslation = await prisma.manufacturerTranslation.delete({
   *   where: {
   *     // ... filter to delete one ManufacturerTranslation
   *   }
   * })
   * 
   */
  delete<T extends ManufacturerTranslationDeleteArgs>(args: Prisma.SelectSubset<T, ManufacturerTranslationDeleteArgs<ExtArgs>>): Prisma.Prisma__ManufacturerTranslationClient<runtime.Types.Result.GetResult<Prisma.$ManufacturerTranslationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one ManufacturerTranslation.
   * @param {ManufacturerTranslationUpdateArgs} args - Arguments to update one ManufacturerTranslation.
   * @example
   * // Update one ManufacturerTranslation
   * const manufacturerTranslation = await prisma.manufacturerTranslation.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ManufacturerTranslationUpdateArgs>(args: Prisma.SelectSubset<T, ManufacturerTranslationUpdateArgs<ExtArgs>>): Prisma.Prisma__ManufacturerTranslationClient<runtime.Types.Result.GetResult<Prisma.$ManufacturerTranslationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more ManufacturerTranslations.
   * @param {ManufacturerTranslationDeleteManyArgs} args - Arguments to filter ManufacturerTranslations to delete.
   * @example
   * // Delete a few ManufacturerTranslations
   * const { count } = await prisma.manufacturerTranslation.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ManufacturerTranslationDeleteManyArgs>(args?: Prisma.SelectSubset<T, ManufacturerTranslationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ManufacturerTranslations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ManufacturerTranslationUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many ManufacturerTranslations
   * const manufacturerTranslation = await prisma.manufacturerTranslation.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ManufacturerTranslationUpdateManyArgs>(args: Prisma.SelectSubset<T, ManufacturerTranslationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ManufacturerTranslations and returns the data updated in the database.
   * @param {ManufacturerTranslationUpdateManyAndReturnArgs} args - Arguments to update many ManufacturerTranslations.
   * @example
   * // Update many ManufacturerTranslations
   * const manufacturerTranslation = await prisma.manufacturerTranslation.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more ManufacturerTranslations and only return the `id`
   * const manufacturerTranslationWithIdOnly = await prisma.manufacturerTranslation.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ManufacturerTranslationUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ManufacturerTranslationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ManufacturerTranslationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one ManufacturerTranslation.
   * @param {ManufacturerTranslationUpsertArgs} args - Arguments to update or create a ManufacturerTranslation.
   * @example
   * // Update or create a ManufacturerTranslation
   * const manufacturerTranslation = await prisma.manufacturerTranslation.upsert({
   *   create: {
   *     // ... data to create a ManufacturerTranslation
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the ManufacturerTranslation we want to update
   *   }
   * })
   */
  upsert<T extends ManufacturerTranslationUpsertArgs>(args: Prisma.SelectSubset<T, ManufacturerTranslationUpsertArgs<ExtArgs>>): Prisma.Prisma__ManufacturerTranslationClient<runtime.Types.Result.GetResult<Prisma.$ManufacturerTranslationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of ManufacturerTranslations.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ManufacturerTranslationCountArgs} args - Arguments to filter ManufacturerTranslations to count.
   * @example
   * // Count the number of ManufacturerTranslations
   * const count = await prisma.manufacturerTranslation.count({
   *   where: {
   *     // ... the filter for the ManufacturerTranslations we want to count
   *   }
   * })
  **/
  count<T extends ManufacturerTranslationCountArgs>(
    args?: Prisma.Subset<T, ManufacturerTranslationCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ManufacturerTranslationCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a ManufacturerTranslation.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ManufacturerTranslationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ManufacturerTranslationAggregateArgs>(args: Prisma.Subset<T, ManufacturerTranslationAggregateArgs>): Prisma.PrismaPromise<GetManufacturerTranslationAggregateType<T>>

  /**
   * Group by ManufacturerTranslation.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ManufacturerTranslationGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ManufacturerTranslationGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ManufacturerTranslationGroupByArgs['orderBy'] }
      : { orderBy?: ManufacturerTranslationGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ManufacturerTranslationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetManufacturerTranslationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ManufacturerTranslation model
 */
readonly fields: ManufacturerTranslationFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ManufacturerTranslation.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ManufacturerTranslationClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  manufacturer<T extends Prisma.ManufacturerDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ManufacturerDefaultArgs<ExtArgs>>): Prisma.Prisma__ManufacturerClient<runtime.Types.Result.GetResult<Prisma.$ManufacturerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ManufacturerTranslation model
 */
export interface ManufacturerTranslationFieldRefs {
  readonly id: Prisma.FieldRef<"ManufacturerTranslation", 'String'>
  readonly locale: Prisma.FieldRef<"ManufacturerTranslation", 'String'>
  readonly about: Prisma.FieldRef<"ManufacturerTranslation", 'String'>
  readonly manufacturerId: Prisma.FieldRef<"ManufacturerTranslation", 'String'>
  readonly createdAt: Prisma.FieldRef<"ManufacturerTranslation", 'DateTime'>
  readonly createdBy: Prisma.FieldRef<"ManufacturerTranslation", 'String'>
  readonly updatedAt: Prisma.FieldRef<"ManufacturerTranslation", 'DateTime'>
  readonly updatedBy: Prisma.FieldRef<"ManufacturerTranslation", 'String'>
}
    

// Custom InputTypes
/**
 * ManufacturerTranslation findUnique
 */
export type ManufacturerTranslationFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ManufacturerTranslation
   */
  select?: Prisma.ManufacturerTranslationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ManufacturerTranslation
   */
  omit?: Prisma.ManufacturerTranslationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ManufacturerTranslationInclude<ExtArgs> | null
  /**
   * Filter, which ManufacturerTranslation to fetch.
   */
  where: Prisma.ManufacturerTranslationWhereUniqueInput
}

/**
 * ManufacturerTranslation findUniqueOrThrow
 */
export type ManufacturerTranslationFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ManufacturerTranslation
   */
  select?: Prisma.ManufacturerTranslationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ManufacturerTranslation
   */
  omit?: Prisma.ManufacturerTranslationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ManufacturerTranslationInclude<ExtArgs> | null
  /**
   * Filter, which ManufacturerTranslation to fetch.
   */
  where: Prisma.ManufacturerTranslationWhereUniqueInput
}

/**
 * ManufacturerTranslation findFirst
 */
export type ManufacturerTranslationFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ManufacturerTranslation
   */
  select?: Prisma.ManufacturerTranslationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ManufacturerTranslation
   */
  omit?: Prisma.ManufacturerTranslationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ManufacturerTranslationInclude<ExtArgs> | null
  /**
   * Filter, which ManufacturerTranslation to fetch.
   */
  where?: Prisma.ManufacturerTranslationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ManufacturerTranslations to fetch.
   */
  orderBy?: Prisma.ManufacturerTranslationOrderByWithRelationInput | Prisma.ManufacturerTranslationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ManufacturerTranslations.
   */
  cursor?: Prisma.ManufacturerTranslationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ManufacturerTranslations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ManufacturerTranslations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ManufacturerTranslations.
   */
  distinct?: Prisma.ManufacturerTranslationScalarFieldEnum | Prisma.ManufacturerTranslationScalarFieldEnum[]
}

/**
 * ManufacturerTranslation findFirstOrThrow
 */
export type ManufacturerTranslationFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ManufacturerTranslation
   */
  select?: Prisma.ManufacturerTranslationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ManufacturerTranslation
   */
  omit?: Prisma.ManufacturerTranslationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ManufacturerTranslationInclude<ExtArgs> | null
  /**
   * Filter, which ManufacturerTranslation to fetch.
   */
  where?: Prisma.ManufacturerTranslationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ManufacturerTranslations to fetch.
   */
  orderBy?: Prisma.ManufacturerTranslationOrderByWithRelationInput | Prisma.ManufacturerTranslationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ManufacturerTranslations.
   */
  cursor?: Prisma.ManufacturerTranslationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ManufacturerTranslations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ManufacturerTranslations.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ManufacturerTranslations.
   */
  distinct?: Prisma.ManufacturerTranslationScalarFieldEnum | Prisma.ManufacturerTranslationScalarFieldEnum[]
}

/**
 * ManufacturerTranslation findMany
 */
export type ManufacturerTranslationFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ManufacturerTranslation
   */
  select?: Prisma.ManufacturerTranslationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ManufacturerTranslation
   */
  omit?: Prisma.ManufacturerTranslationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ManufacturerTranslationInclude<ExtArgs> | null
  /**
   * Filter, which ManufacturerTranslations to fetch.
   */
  where?: Prisma.ManufacturerTranslationWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ManufacturerTranslations to fetch.
   */
  orderBy?: Prisma.ManufacturerTranslationOrderByWithRelationInput | Prisma.ManufacturerTranslationOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ManufacturerTranslations.
   */
  cursor?: Prisma.ManufacturerTranslationWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ManufacturerTranslations from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ManufacturerTranslations.
   */
  skip?: number
  distinct?: Prisma.ManufacturerTranslationScalarFieldEnum | Prisma.ManufacturerTranslationScalarFieldEnum[]
}

/**
 * ManufacturerTranslation create
 */
export type ManufacturerTranslationCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ManufacturerTranslation
   */
  select?: Prisma.ManufacturerTranslationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ManufacturerTranslation
   */
  omit?: Prisma.ManufacturerTranslationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ManufacturerTranslationInclude<ExtArgs> | null
  /**
   * The data needed to create a ManufacturerTranslation.
   */
  data: Prisma.XOR<Prisma.ManufacturerTranslationCreateInput, Prisma.ManufacturerTranslationUncheckedCreateInput>
}

/**
 * ManufacturerTranslation createMany
 */
export type ManufacturerTranslationCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many ManufacturerTranslations.
   */
  data: Prisma.ManufacturerTranslationCreateManyInput | Prisma.ManufacturerTranslationCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ManufacturerTranslation createManyAndReturn
 */
export type ManufacturerTranslationCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ManufacturerTranslation
   */
  select?: Prisma.ManufacturerTranslationSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ManufacturerTranslation
   */
  omit?: Prisma.ManufacturerTranslationOmit<ExtArgs> | null
  /**
   * The data used to create many ManufacturerTranslations.
   */
  data: Prisma.ManufacturerTranslationCreateManyInput | Prisma.ManufacturerTranslationCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ManufacturerTranslationIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * ManufacturerTranslation update
 */
export type ManufacturerTranslationUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ManufacturerTranslation
   */
  select?: Prisma.ManufacturerTranslationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ManufacturerTranslation
   */
  omit?: Prisma.ManufacturerTranslationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ManufacturerTranslationInclude<ExtArgs> | null
  /**
   * The data needed to update a ManufacturerTranslation.
   */
  data: Prisma.XOR<Prisma.ManufacturerTranslationUpdateInput, Prisma.ManufacturerTranslationUncheckedUpdateInput>
  /**
   * Choose, which ManufacturerTranslation to update.
   */
  where: Prisma.ManufacturerTranslationWhereUniqueInput
}

/**
 * ManufacturerTranslation updateMany
 */
export type ManufacturerTranslationUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ManufacturerTranslations.
   */
  data: Prisma.XOR<Prisma.ManufacturerTranslationUpdateManyMutationInput, Prisma.ManufacturerTranslationUncheckedUpdateManyInput>
  /**
   * Filter which ManufacturerTranslations to update
   */
  where?: Prisma.ManufacturerTranslationWhereInput
  /**
   * Limit how many ManufacturerTranslations to update.
   */
  limit?: number
}

/**
 * ManufacturerTranslation updateManyAndReturn
 */
export type ManufacturerTranslationUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ManufacturerTranslation
   */
  select?: Prisma.ManufacturerTranslationSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ManufacturerTranslation
   */
  omit?: Prisma.ManufacturerTranslationOmit<ExtArgs> | null
  /**
   * The data used to update ManufacturerTranslations.
   */
  data: Prisma.XOR<Prisma.ManufacturerTranslationUpdateManyMutationInput, Prisma.ManufacturerTranslationUncheckedUpdateManyInput>
  /**
   * Filter which ManufacturerTranslations to update
   */
  where?: Prisma.ManufacturerTranslationWhereInput
  /**
   * Limit how many ManufacturerTranslations to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ManufacturerTranslationIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * ManufacturerTranslation upsert
 */
export type ManufacturerTranslationUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ManufacturerTranslation
   */
  select?: Prisma.ManufacturerTranslationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ManufacturerTranslation
   */
  omit?: Prisma.ManufacturerTranslationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ManufacturerTranslationInclude<ExtArgs> | null
  /**
   * The filter to search for the ManufacturerTranslation to update in case it exists.
   */
  where: Prisma.ManufacturerTranslationWhereUniqueInput
  /**
   * In case the ManufacturerTranslation found by the `where` argument doesn't exist, create a new ManufacturerTranslation with this data.
   */
  create: Prisma.XOR<Prisma.ManufacturerTranslationCreateInput, Prisma.ManufacturerTranslationUncheckedCreateInput>
  /**
   * In case the ManufacturerTranslation was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ManufacturerTranslationUpdateInput, Prisma.ManufacturerTranslationUncheckedUpdateInput>
}

/**
 * ManufacturerTranslation delete
 */
export type ManufacturerTranslationDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ManufacturerTranslation
   */
  select?: Prisma.ManufacturerTranslationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ManufacturerTranslation
   */
  omit?: Prisma.ManufacturerTranslationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ManufacturerTranslationInclude<ExtArgs> | null
  /**
   * Filter which ManufacturerTranslation to delete.
   */
  where: Prisma.ManufacturerTranslationWhereUniqueInput
}

/**
 * ManufacturerTranslation deleteMany
 */
export type ManufacturerTranslationDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ManufacturerTranslations to delete
   */
  where?: Prisma.ManufacturerTranslationWhereInput
  /**
   * Limit how many ManufacturerTranslations to delete.
   */
  limit?: number
}

/**
 * ManufacturerTranslation without action
 */
export type ManufacturerTranslationDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ManufacturerTranslation
   */
  select?: Prisma.ManufacturerTranslationSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ManufacturerTranslation
   */
  omit?: Prisma.ManufacturerTranslationOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ManufacturerTranslationInclude<ExtArgs> | null
}
